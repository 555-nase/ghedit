{"version":3,"sources":["vs/workbench/services/history/browser/history.ts"],"names":[],"mappings":"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","file":"vs/workbench/services/history/browser/history.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport errors = require('vs/base/common/errors');\nimport platform = require('vs/base/common/platform');\nimport nls = require('vs/nls');\nimport {EventType} from 'vs/base/common/events';\nimport {IEditorSelection} from 'vs/editor/common/editorCommon';\nimport {IEditor as IBaseEditor} from 'vs/platform/editor/common/editor';\nimport {TextEditorOptions, EditorInput} from 'vs/workbench/common/editor';\nimport {BaseTextEditor} from 'vs/workbench/browser/parts/editor/textEditor';\nimport {EditorEvent, TextEditorSelectionEvent, EventType as WorkbenchEventType, EditorInputEvent} from 'vs/workbench/common/events';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IHistoryService} from 'vs/workbench/services/history/common/history';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {Position, IEditorInput} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\n/**\n * Stores the selection & view state of an editor and allows to compare it to other selection states.\n */\nexport class EditorState {\n\n\tprivate static EDITOR_SELECTION_THRESHOLD = 5; // number of lines to move in editor to justify for new state\n\n\tconstructor(private _editorInput: IEditorInput, private _selection: IEditorSelection) {\n\t\t//\n\t}\n\n\tpublic get editorInput(): IEditorInput {\n\t\treturn this._editorInput;\n\t}\n\n\tpublic get selection(): IEditorSelection {\n\t\treturn this._selection;\n\t}\n\n\tpublic justifiesNewPushState(other: EditorState): boolean {\n\t\tif (!this._editorInput.matches(other._editorInput)) {\n\t\t\t// push different editor inputs\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!Selection.isISelection(this._selection) || !Selection.isISelection(other._selection)) {\n\t\t\t// unknown selections\n\t\t\treturn true;\n\t\t}\n\n\t\tlet liftedSelection = Selection.liftSelection(this._selection);\n\t\tlet liftedOtherSelection = Selection.liftSelection(other._selection);\n\n\t\tif (Math.abs(liftedSelection.getStartPosition().lineNumber - liftedOtherSelection.getStartPosition().lineNumber) < EditorState.EDITOR_SELECTION_THRESHOLD) {\n\t\t\t// ignore selection changes in the range of EditorState.EDITOR_SELECTION_THRESHOLD lines\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\ninterface IInputWithPath {\n\tgetPath?: () => string;\n}\n\nexport abstract class BaseHistoryService {\n\tprotected toUnbind: { (): void; }[];\n\n\tconstructor(\n\t\tprivate eventService: IEventService,\n\t\tprotected editorService: IWorkbenchEditorService,\n\t\tprotected contextService: IWorkspaceContextService\n\t) {\n\t\tthis.toUnbind = [];\n\n\t\t// Window Title\n\t\twindow.document.title = this.getWindowTitle(null);\n\n\t\t// Editor Input Changes\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.EDITOR_INPUT_CHANGED, (e: EditorEvent) => this.onEditorInputChanged(e)));\n\n\t\t// Editor Input State Changes\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.EDITOR_INPUT_STATE_CHANGED, (e: EditorInputEvent) => this.onEditorInputStateChanged(e.editorInput)));\n\n\t\t// Text Editor Selection Changes\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.TEXT_EDITOR_SELECTION_CHANGED, (event: TextEditorSelectionEvent) => this.onTextEditorSelectionChanged(event)));\n\t}\n\n\tprivate onEditorInputStateChanged(input: IEditorInput): void {\n\n\t\t// If an active editor is set, but is different from the one from the event, prevent update because the editor is not active.\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor && !input.matches(activeEditor.input)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Calculate New Window Title\n\t\tthis.updateWindowTitle(input);\n\t}\n\n\tprivate onTextEditorSelectionChanged(event: TextEditorSelectionEvent): void {\n\n\t\t// If an active editor is set, but is different from the one from the event, prevent update because the editor is not active.\n\t\tlet editor = event.editor;\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor && editor && activeEditor !== editor) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Delegate to implementors\n\t\tthis.handleEditorSelectionChangeEvent(event.editor);\n\t}\n\n\tprivate onEditorInputChanged(event: EditorEvent): void {\n\t\tthis.onEditorEvent(event.editor);\n\t}\n\n\tprivate onEditorEvent(editor: IBaseEditor): void {\n\t\tlet input = editor ? editor.input : null;\n\n\t\t// If an active editor is set, but is different from the one from the event, prevent update because the editor is not active.\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor && editor && activeEditor !== editor) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Calculate New Window Title\n\t\tthis.updateWindowTitle(input);\n\n\t\t// Delegate to implementors\n\t\tthis.handleEditorInputChangeEvent(editor);\n\t}\n\n\tprivate updateWindowTitle(input?: IEditorInput): void {\n\t\tlet windowTitle: string = null;\n\t\tif (input && input.getName()) {\n\t\t\twindowTitle = this.getWindowTitle(input);\n\t\t} else {\n\t\t\twindowTitle = this.getWindowTitle(null);\n\t\t}\n\n\t\twindow.document.title = windowTitle;\n\t}\n\n\tprotected abstract handleEditorSelectionChangeEvent(editor?: IBaseEditor): void;\n\n\tprotected abstract handleEditorInputChangeEvent(editor?: IBaseEditor): void;\n\n\tprotected getWindowTitle(input?: IEditorInput): string {\n\t\tlet title = this.doGetWindowTitle(input);\n\n\t\t// Extension Development Host gets a special title to identify itself\n\t\tif (this.contextService.getConfiguration().env.extensionDevelopmentPath) {\n\t\t\treturn nls.localize('devExtensionWindowTitle', \"[Extension Development Host] - {0}\", title);\n\t\t}\n\n\t\treturn title;\n\t}\n\n\tprivate doGetWindowTitle(input?: IEditorInput): string {\n\t\tconst appName = this.contextService.getConfiguration().env.appName;\n\n\t\tlet prefix = input && input.getName();\n\t\tif (prefix && input) {\n\t\t\tlet status = (<EditorInput>input).getStatus();\n\t\t\tif (status && status.decoration && !platform.isMacintosh /* Mac has its own decoration in window */) {\n\t\t\t\tprefix = nls.localize('prefixDecoration', \"{0} {1}\", status.decoration, prefix);\n\t\t\t}\n\t\t}\n\n\t\tlet workspace = this.contextService.getWorkspace();\n\t\tif (workspace) {\n\t\t\tlet wsName = workspace.name;\n\n\t\t\tif (prefix) {\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\treturn nls.localize('prefixWorkspaceTitleMac', \"{0} - {1}\", prefix, wsName); // Mac: do not append base title\n\t\t\t\t}\n\n\t\t\t\treturn nls.localize('prefixWorkspaceTitle', \"{0} - {1} - {2}\", prefix, wsName, appName);\n\t\t\t}\n\n\t\t\tif (platform.isMacintosh) {\n\t\t\t\treturn wsName; // Mac: do not append base title\n\t\t\t}\n\n\t\t\treturn nls.localize('workspaceTitle', \"{0} - {1}\", wsName, appName);\n\t\t}\n\n\t\tif (prefix) {\n\t\t\tif (platform.isMacintosh) {\n\t\t\t\treturn prefix; // Mac: do not append base title\n\t\t\t}\n\n\t\t\treturn nls.localize('prefixTitle', \"{0} - {1}\", prefix, appName);\n\t\t}\n\n\t\treturn appName;\n\t}\n\n\tprotected findVisibleEditorPosition(input: IEditorInput): Position {\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor && input.matches(activeEditor.input)) {\n\t\t\treturn activeEditor.position;\n\t\t}\n\n\t\tlet editors = this.editorService.getVisibleEditors();\n\t\tfor (let i = 0; i < editors.length; i++) {\n\t\t\tlet editor = editors[i];\n\t\t\tif (editor !== activeEditor && input.matches(editor.input)) {\n\t\t\t\treturn editor.position;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\twhile (this.toUnbind.length) {\n\t\t\tthis.toUnbind.pop()();\n\t\t}\n\t}\n}\n\ninterface IStackEntry {\n\tinput: IEditorInput;\n\toptions?: TextEditorOptions;\n}\n\nexport class HistoryService extends BaseHistoryService implements IHistoryService {\n\n\tpublic serviceId = IHistoryService;\n\n\tprivate static MAX_HISTORY_ITEMS = 200;\n\n\tprivate _stack: IStackEntry[];\n\tprivate index: number;\n\tprivate blockEditorEvent: boolean;\n\tprivate currentFileEditorState: EditorState;\n\tprivate quickOpenService: IQuickOpenService;\n\n\tconstructor(\n\t\teventService: IEventService,\n\t\teditorService: IWorkbenchEditorService,\n\t\tcontextService: IWorkspaceContextService,\n\t\tquickOpenService: IQuickOpenService\n\t) {\n\t\tsuper(eventService, editorService, contextService);\n\n\t\tthis.quickOpenService = quickOpenService;\n\n\t\tthis.index = -1;\n\t}\n\n\tprivate get stack(): IStackEntry[] {\n\n\t\t// Seed our stack from the persisted editor history\n\t\tif (!this._stack) {\n\t\t\tthis._stack = [];\n\t\t\tlet history = this.quickOpenService.getEditorHistory();\n\n\t\t\tfor (let i = history.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addToStack(history[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn this._stack;\n\t}\n\n\tpublic forward(): void {\n\t\tif (this.stack.length > this.index + 1) {\n\t\t\tthis.index++;\n\t\t\tthis.navigate();\n\t\t}\n\t}\n\n\tpublic back(): void {\n\t\tif (this.index > 0) {\n\t\t\tthis.index--;\n\t\t\tthis.navigate();\n\t\t}\n\t}\n\n\tprivate navigate(): void {\n\t\tlet state = this.stack[this.index];\n\n\t\tthis.blockEditorEvent = true;\n\t\tthis.editorService.openEditor(state.input, state.options, this.findVisibleEditorPosition(state.input)).done(() => {\n\t\t\tthis.blockEditorEvent = false;\n\t\t}, (error) => {\n\t\t\tthis.blockEditorEvent = false;\n\t\t\terrors.onUnexpectedError(error);\n\t\t});\n\t}\n\n\tprotected handleEditorSelectionChangeEvent(editor?: IBaseEditor): void {\n\t\tthis.handleEditorEvent(editor, true);\n\t}\n\n\tprotected handleEditorInputChangeEvent(editor?: IBaseEditor): void {\n\t\tthis.handleEditorEvent(editor, false);\n\t}\n\n\tprivate handleEditorEvent(editor: IBaseEditor, storeSelection: boolean): void {\n\t\tif (this.blockEditorEvent) {\n\t\t\treturn; // while we open an editor due to a navigation, we do not want to update our stack\n\t\t}\n\n\t\tif (editor instanceof BaseTextEditor && editor.input) {\n\t\t\tthis.handleTextEditorEvent(<BaseTextEditor>editor, storeSelection);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentFileEditorState = null; // at this time we have no active file editor view state\n\n\t\tif (editor && editor.input) {\n\t\t\tthis.handleNonTextEditorEvent(editor);\n\t\t}\n\t}\n\n\tprivate handleTextEditorEvent(editor: BaseTextEditor, storeSelection: boolean): void {\n\t\tlet stateCandidate = new EditorState(editor.input, editor.getSelection());\n\t\tif (!this.currentFileEditorState || this.currentFileEditorState.justifiesNewPushState(stateCandidate)) {\n\t\t\tthis.currentFileEditorState = stateCandidate;\n\n\t\t\tlet options: TextEditorOptions;\n\t\t\tif (storeSelection) {\n\t\t\t\toptions = new TextEditorOptions();\n\t\t\t\toptions.selection(editor.getSelection().startLineNumber, editor.getSelection().startColumn);\n\t\t\t}\n\n\t\t\tthis.addToStack(editor.input, options);\n\t\t}\n\t}\n\n\tprivate handleNonTextEditorEvent(editor: IBaseEditor): void {\n\t\tlet currentStack = this.stack[this.index];\n\t\tif (currentStack && currentStack.input.matches(editor.input)) {\n\t\t\treturn; // do not push same editor input again\n\t\t}\n\n\t\tthis.addToStack(editor.input);\n\t}\n\n\tprivate addToStack(input: IEditorInput, options?: TextEditorOptions): void {\n\n\t\t// Overwrite an entry in the stack if we have a matching input that comes\n\t\t// with editor options to indicate that this entry is more specific.\n\t\tlet replace = false;\n\t\tif (this.stack[this.index]) {\n\t\t\tlet currentEntry = this.stack[this.index];\n\t\t\tif (currentEntry.input.matches(input) && !currentEntry.options) {\n\t\t\t\treplace = true;\n\t\t\t}\n\t\t}\n\n\t\tlet entry = {\n\t\t\tinput: input,\n\t\t\toptions: options\n\t\t};\n\n\t\t// Replace at current position\n\t\tif (replace) {\n\t\t\tthis.stack[this.index] = entry;\n\t\t}\n\n\t\t// Add to stack at current position\n\t\telse {\n\t\t\tthis.index++;\n\t\t\tthis.stack.splice(this.index, 0, entry);\n\n\t\t\t// Check for limit\n\t\t\tif (this.stack.length > HistoryService.MAX_HISTORY_ITEMS) {\n\t\t\t\tthis.stack.shift(); // remove first\n\t\t\t\tif (this.index > 0) {\n\t\t\t\t\tthis.index--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Take out on dispose\n\t\tinput.addOneTimeListener(EventType.DISPOSE, () => {\n\t\t\tthis.stack.forEach((e, i) => {\n\t\t\t\tif (e.input.matches(input)) {\n\t\t\t\t\tthis.stack.splice(i, 1);\n\t\t\t\t\tif (this.index >= i) {\n\t\t\t\t\t\tthis.index--; // reduce index if the element is before index\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}"]}