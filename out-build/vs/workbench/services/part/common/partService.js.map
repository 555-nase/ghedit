{"version":3,"file":"vs/workbench/services/part/common/partService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/part/common/partService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb,WAAY,KAAK;QAChB,yDAAgB,CAAA;QAChB,iDAAY,CAAA;QACZ,6CAAU,CAAA;QACV,+CAAW,CAAA;QACX,qDAAc,CAAA;IACf,CAAC,EANW,aAAK,KAAL,aAAK,QAMhB;IAND,IAAY,KAAK,GAAL,aAMX,CAAA;IAED,WAAY,QAAQ;QACnB,uCAAI,CAAA;QACJ,yCAAK,CAAA;IACN,CAAC,EAHW,gBAAQ,KAAR,gBAAQ,QAGnB;IAHD,IAAY,QAAQ,GAAR,gBAGX,CAAA;IAEU,oBAAY,GAAG,+BAAe,CAAe,aAAa,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport enum Parts {\n\tACTIVITYBAR_PART,\n\tSIDEBAR_PART,\n\tPANEL_PART,\n\tEDITOR_PART,\n\tSTATUSBAR_PART\n}\n\nexport enum Position {\n\tLEFT,\n\tRIGHT\n}\n\nexport var IPartService = createDecorator<IPartService>('partService');\n\nexport interface IPartService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Asks the part service to layout all parts.\n\t */\n\tlayout(): void;\n\n\t/**\n\t * Asks the part service to if all parts have been created.\n\t */\n\tisCreated(): boolean;\n\n\t/**\n\t * Promise is complete when all parts have been created.\n\t */\n\tjoinCreation(): TPromise<boolean>;\n\n\t/**\n\t * Returns whether the given part has the keyboard focus or not.\n\t */\n\thasFocus(part: Parts): boolean;\n\n\t/**\n\t * Returns iff the part is visible.\n\t */\n\tisVisible(part: Parts): boolean;\n\n\t/**\n\t * Checks if the sidebar is currently hidden or not\n\t */\n\tisSideBarHidden(): boolean;\n\n\t/**\n\t * Set sidebar hidden or not\n\t */\n\tsetSideBarHidden(hidden: boolean): void;\n\n\t/**\n\t * Checks if the panel part is currently hidden or not\n\t */\n\tisPanelHidden(): boolean;\n\n\t/**\n\t * Set panel part hidden or not\n\t */\n\tsetPanelHidden(hidden: boolean): void;\n\n\t/**\n\t * Gets the current side bar position. Note that the sidebar can be hidden too.\n\t */\n\tgetSideBarPosition(): Position;\n\n\t/**\n\t * Sets the side bar position. If the side bar is hidden, the side bar will\n\t * also be made visible.\n\t */\n\tsetSideBarPosition(position: Position): void;\n\n\t/**\n\t * Adds a class to the workbench part.\n\t */\n\taddClass(clazz: string): void;\n\n\t/**\n\t * Removes a class from the workbench part.\n\t */\n\tremoveClass(clazz: string): void;\n}"]}