{"version":3,"file":"vs/workbench/services/lifecycle/electron-browser/lifecycleService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/lifecycle/electron-browser/lifecycleService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport errors = require('vs/base/common/errors');\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {BaseLifecycleService} from 'vs/platform/lifecycle/common/baseLifecycleService';\nimport {IWindowService} from 'vs/workbench/services/window/electron-browser/windowService';\nimport severity from 'vs/base/common/severity';\n\nimport {ipcRenderer as ipc} from 'electron';\n\nexport class LifecycleService extends BaseLifecycleService {\n\n\tconstructor(\n\t\tprivate messageService: IMessageService,\n\t\tprivate windowService: IWindowService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tlet windowId = this.windowService.getWindowId();\n\n\t\t// Main side indicates that window is about to unload, check for vetos\n\t\tipc.on('vscode:beforeUnload', (event, reply: { okChannel: string, cancelChannel: string }) => {\n\t\t\tlet veto = this.beforeUnload();\n\n\t\t\tif (typeof veto === 'boolean') {\n\t\t\t\tipc.send(veto ? reply.cancelChannel : reply.okChannel, windowId);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tveto.done(v => ipc.send(v ? reply.cancelChannel : reply.okChannel, windowId));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate beforeUnload(): boolean|TPromise<boolean> {\n\t\tlet veto = this.vetoShutdown();\n\n\t\tif (typeof veto === 'boolean') {\n\t\t\treturn this.handleVeto(veto);\n\t\t}\n\n\t\telse {\n\t\t\treturn veto.then(v => this.handleVeto(v));\n\t\t}\n\t}\n\n\tprivate handleVeto(veto: boolean): boolean {\n\t\tif (!veto) {\n\t\t\ttry {\n\t\t\t\tthis.fireShutdown();\n\t\t\t} catch (error) {\n\t\t\t\terrors.onUnexpectedError(error); // unexpected program error and we cause shutdown to cancel in this case\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn veto;\n\t}\n\n\tprivate vetoShutdown(): boolean|TPromise<boolean> {\n\t\tlet participants = this.beforeShutdownParticipants;\n\t\tlet vetoPromises: TPromise<void>[] = [];\n\t\tlet hasPromiseWithVeto = false;\n\n\t\tfor (let i = 0; i < participants.length; i++) {\n\t\t\tlet participantVeto = participants[i].beforeShutdown();\n\t\t\tif (participantVeto === true) {\n\t\t\t\treturn true; // return directly when any veto was provided\n\t\t\t}\n\n\t\t\telse if (participantVeto === false) {\n\t\t\t\tcontinue; // skip\n\t\t\t}\n\n\t\t\t// We have a promise\n\t\t\tlet vetoPromise = (<TPromise<boolean>>participantVeto).then(veto => {\n\t\t\t\tif (veto) {\n\t\t\t\t\thasPromiseWithVeto = true;\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\thasPromiseWithVeto = true;\n\t\t\t\tthis.messageService.show(severity.Error, errors.toErrorMessage(error));\n\t\t\t});\n\n\t\t\tvetoPromises.push(vetoPromise);\n\t\t}\n\n\t\tif (vetoPromises.length === 0) {\n\t\t\treturn false; // return directly when no veto was provided\n\t\t}\n\n\t\treturn TPromise.join(vetoPromises).then(() => hasPromiseWithVeto);\n\t}\n}"]}