{"version":3,"file":"vs/workbench/services/files/test/node/watcher.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/files/test/node/watcher.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport assert = require('assert');\n\nimport platform = require('vs/base/common/platform');\nimport {FileChangeType, EventType, FileChangesEvent} from 'vs/platform/files/common/files';\nimport uri from 'vs/base/common/uri';\nimport utils = require('vs/workbench/services/files/test/node/utils');\nimport {IRawFileChange, toFileChangesEvent, normalize} from 'vs/workbench/services/files/node/watcher/common';\nimport {IEventService} from 'vs/platform/event/common/event';\n\nclass TestFileWatcher {\n\tprivate eventEmitter: IEventService;\n\n\tconstructor(events: IEventService) {\n\t\tthis.eventEmitter = events;\n\t}\n\n\tpublic report(changes: IRawFileChange[]): void {\n\t\tthis.onRawFileEvents(changes);\n\t}\n\n\tprivate onRawFileEvents(events: IRawFileChange[]): void {\n\n\t\t// Normalize\n\t\tlet normalizedEvents = normalize(events);\n\n\t\t// Emit through broadcast service\n\t\tif (normalizedEvents.length > 0) {\n\t\t\tthis.eventEmitter.emit(EventType.FILE_CHANGES, toFileChangesEvent(normalizedEvents));\n\t\t}\n\t}\n}\n\nenum Path {\n\tUNIX,\n\tWINDOWS,\n\tUNC\n};\n\nsuite('Watcher', () => {\n\n\ttest('watching - simple add/update/delete', function (done: () => void) {\n\t\tvar events = new utils.TestEventService();\n\t\tvar watch = new TestFileWatcher(events);\n\n\t\tvar added = uri.file('/users/data/src/added.txt');\n\t\tvar updated = uri.file('/users/data/src/updated.txt');\n\t\tvar deleted = uri.file('/users/data/src/deleted.txt');\n\n\t\tvar raw: IRawFileChange[] = [\n\t\t\t{ path: added.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t];\n\n\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\tassert.ok(e);\n\t\t\tassert.equal(e.changes.length, 3);\n\t\t\tassert.ok(e.contains(added, FileChangeType.ADDED));\n\t\t\tassert.ok(e.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.DELETED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\tlet pathSpecs = platform.isWindows ? [Path.WINDOWS, Path.UNC] : [Path.UNIX];\n\tpathSpecs.forEach((p) => {\n\t\ttest('watching - delete only reported for top level folder (' + p + ')', function (done: () => void) {\n\t\t\tvar events = new utils.TestEventService();\n\t\t\tvar watch = new TestFileWatcher(events);\n\n\t\t\tvar deletedFolderA = uri.file(p === Path.UNIX ? '/users/data/src/todelete1' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete1' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete1');\n\t\t\tvar deletedFolderB = uri.file(p === Path.UNIX ? '/users/data/src/todelete2' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2');\n\t\t\tvar deletedFolderBF1 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/file.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\file.txt');\n\t\t\tvar deletedFolderBF2 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/more/test.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\more\\\\test.txt');\n\t\t\tvar deletedFolderBF3 = uri.file(p === Path.UNIX ? '/users/data/src/todelete2/super/bar/foo.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\todelete2\\\\super\\\\bar\\\\foo.txt');\n\t\t\tvar deletedFileA = uri.file(p === Path.UNIX ? '/users/data/src/deleteme.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\deleteme.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\deleteme.txt');\n\n\t\t\tvar addedFile = uri.file(p === Path.UNIX ? '/users/data/src/added.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\added.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\added.txt');\n\t\t\tvar updatedFile = uri.file(p === Path.UNIX ? '/users/data/src/updated.txt' : p === Path.WINDOWS ? 'C:\\\\users\\\\data\\\\src\\\\updated.txt' : '\\\\\\\\localhost\\\\users\\\\data\\\\src\\\\updated.txt');\n\n\t\t\tvar raw: IRawFileChange[] = [\n\t\t\t\t{ path: deletedFolderA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderB.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF1.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF2.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFolderBF3.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: deletedFileA.fsPath, type: FileChangeType.DELETED },\n\t\t\t\t{ path: addedFile.fsPath, type: FileChangeType.ADDED },\n\t\t\t\t{ path: updatedFile.fsPath, type: FileChangeType.UPDATED }\n\t\t\t];\n\n\t\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\t\tassert.ok(e);\n\t\t\t\tassert.equal(e.changes.length, 5);\n\n\t\t\t\tassert.ok(e.contains(deletedFolderA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(deletedFolderB, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(deletedFileA, FileChangeType.DELETED));\n\t\t\t\tassert.ok(e.contains(addedFile, FileChangeType.ADDED));\n\t\t\t\tassert.ok(e.contains(updatedFile, FileChangeType.UPDATED));\n\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\twatch.report(raw);\n\t\t});\n\t});\n\n\ttest('watching - event normalization: ignore CREATE followed by DELETE', function (done: () => void) {\n\t\tvar events = new utils.TestEventService();\n\t\tvar watch = new TestFileWatcher(events);\n\n\t\tvar created = uri.file('/users/data/src/related');\n\t\tvar deleted = uri.file('/users/data/src/related');\n\t\tvar unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tvar raw: IRawFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\tassert.ok(e);\n\t\t\tassert.equal(e.changes.length, 1);\n\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('watching - event normalization: flatten DELETE followed by CREATE into CHANGE', function (done: () => void) {\n\t\tvar events = new utils.TestEventService();\n\t\tvar watch = new TestFileWatcher(events);\n\n\t\tvar deleted = uri.file('/users/data/src/related');\n\t\tvar created = uri.file('/users/data/src/related');\n\t\tvar unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tvar raw: IRawFileChange[] = [\n\t\t\t{ path: deleted.fsPath, type: FileChangeType.DELETED },\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\tassert.ok(e);\n\t\t\tassert.equal(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('watching - event normalization: ignore UPDATE when CREATE received', function (done: () => void) {\n\t\tvar events = new utils.TestEventService();\n\t\tvar watch = new TestFileWatcher(events);\n\n\t\tvar created = uri.file('/users/data/src/related');\n\t\tvar updated = uri.file('/users/data/src/related');\n\t\tvar unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tvar raw: IRawFileChange[] = [\n\t\t\t{ path: created.fsPath, type: FileChangeType.ADDED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t];\n\n\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\tassert.ok(e);\n\t\t\tassert.equal(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(created, FileChangeType.ADDED));\n\t\t\tassert.ok(!e.contains(created, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n\n\ttest('watching - event normalization: apply DELETE', function (done: () => void) {\n\t\tvar events = new utils.TestEventService();\n\t\tvar watch = new TestFileWatcher(events);\n\n\t\tvar updated = uri.file('/users/data/src/related');\n\t\tvar updated2 = uri.file('/users/data/src/related');\n\t\tvar deleted = uri.file('/users/data/src/related');\n\t\tvar unrelated = uri.file('/users/data/src/unrelated');\n\n\t\tvar raw: IRawFileChange[] = [\n\t\t\t{ path: updated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated2.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: unrelated.fsPath, type: FileChangeType.UPDATED },\n\t\t\t{ path: updated.fsPath, type: FileChangeType.DELETED }\n\t\t];\n\n\t\tevents.on(EventType.FILE_CHANGES, (e: FileChangesEvent) => {\n\t\t\tassert.ok(e);\n\t\t\tassert.equal(e.changes.length, 2);\n\n\t\t\tassert.ok(e.contains(deleted, FileChangeType.DELETED));\n\t\t\tassert.ok(!e.contains(updated, FileChangeType.UPDATED));\n\t\t\tassert.ok(e.contains(unrelated, FileChangeType.UPDATED));\n\n\t\t\tdone();\n\t\t});\n\n\t\twatch.report(raw);\n\t});\n});"]}