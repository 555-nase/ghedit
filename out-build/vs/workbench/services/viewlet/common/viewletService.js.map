{"version":3,"file":"vs/workbench/services/viewlet/common/viewletService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/viewlet/common/viewletService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMF,uBAAe,GAAG,+BAAe,CAAkB,gBAAgB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IViewlet} from 'vs/workbench/common/viewlet';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IViewletService = createDecorator<IViewletService>('viewletService');\n\nexport interface IViewletService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Opens a viewlet with the given identifier and pass keyboard focus to it if specified.\n\t */\n\topenViewlet(id: string, focus?: boolean): TPromise<IViewlet>;\n\n\t/**\n\t * Returns the current active viewlet or null if none\n\t */\n\tgetActiveViewlet(): IViewlet;\n}"]}