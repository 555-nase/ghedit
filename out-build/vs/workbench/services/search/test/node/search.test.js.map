{"version":3,"file":"vs/workbench/services/search/test/node/search.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/search/test/node/search.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport path = require('path');\nimport assert = require('assert');\n\nimport {join, normalize} from 'vs/base/common/paths';\nimport {LineMatch} from 'vs/platform/search/common/search';\n\nimport {FileWalker, Engine as FileSearchEngine} from 'vs/workbench/services/search/node/fileSearch';\nimport {Engine as TextSearchEngine} from 'vs/workbench/services/search/node/textSearch';\n\nfunction count(lineMatches: LineMatch[]): number {\n\tlet count = 0;\n\tif (lineMatches) {\n\t\tfor (let i = 0; i < lineMatches.length; i++) {\n\t\t\tlet line = lineMatches[i];\n\t\t\tlet wordMatches = line.offsetAndLengths;\n\t\t\tcount += wordMatches.length;\n\t\t}\n\t}\n\n\treturn count;\n}\n\nfunction rootfolders() {\n\treturn [path.normalize(require.toUrl('./fixtures'))];\n}\n\nsuite('Search', () => {\n\n\ttest('Files: *.js', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.js'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 4);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: examples/com*', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: normalize(join('examples', 'com*'), true)\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: examples (fuzzy)', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: 'xl'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 6);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: NPE (CamelCase)', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: 'NullPE'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.*', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 12);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.as', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.as'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 0);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.* without derived', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: 'site.*',\n\t\t\texcludePattern: { '**/*.css': { 'when': '$(basename).less' } }\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.ok(path.basename(res.path) === 'site.less');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.* exclude folder without wildcard', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\texcludePattern: { 'examples': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 7);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.* exclude folder with leading wildcard', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\texcludePattern: { '**/examples': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 7);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.* exclude folder with trailing wildcard', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\texcludePattern: { 'examples/**': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 7);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: *.* exclude with unicode', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\texcludePattern: { '**/üm laut汉语': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 11);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: Unicode and Spaces', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '汉语'\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.equal(path.basename(res.path), '汉语.txt');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: no results', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: 'nofilematch'\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 0);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: absolute path to file ignores excludes', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: path.normalize(path.join(require.toUrl('./fixtures'), 'site.css')),\n\t\t\texcludePattern: { '**/*.css': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.equal(path.basename(res.path), 'site.css');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: relative path to file ignores excludes', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: path.normalize(path.join('examples', 'company.js')),\n\t\t\texcludePattern: { '**/*.js': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.equal(path.basename(res.path), 'company.js');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: extraFiles only', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: [],\n\t\t\textraFiles: [\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'site.css')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'examples', 'company.js')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'index.html'))\n\t\t\t],\n\t\t\tfilePattern: '*.js'\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.equal(path.basename(res.path), 'company.js');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: extraFiles only (with include)', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: [],\n\t\t\textraFiles: [\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'site.css')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'examples', 'company.js')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'index.html'))\n\t\t\t],\n\t\t\tfilePattern: '*.*',\n\t\t\tincludePattern: { '**/*.css': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tlet res;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tres = result;\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 1);\n\t\t\tassert.equal(path.basename(res.path), 'site.css');\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Files: extraFiles only (with exclude)', function (done: () => void) {\n\t\tlet engine = new FileSearchEngine({\n\t\t\trootFolders: [],\n\t\t\textraFiles: [\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'site.css')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'examples', 'company.js')),\n\t\t\t\tpath.normalize(path.join(require.toUrl('./fixtures'), 'index.html'))\n\t\t\t],\n\t\t\tfilePattern: '*.*',\n\t\t\texcludePattern: { '**/*.css': true }\n\t\t});\n\n\t\tlet count = 0;\n\t\tengine.search((result) => {\n\t\t\tif (result) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(count, 2);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: GameOfLife', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.js',\n\t\t\tcontentPattern: { pattern: 'GameOfLife', modifiers: 'i' }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 4);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: GameOfLife (RegExp)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.js',\n\t\t\tcontentPattern: { pattern: 'Game.?fL\\\\w?fe', isRegExp: true }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 4);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: GameOfLife (Word Match, Case Sensitive)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.js',\n\t\t\tcontentPattern: { pattern: 'GameOfLife', isWordMatch: true, isCaseSensitive: true }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 4);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: Helvetica (UTF 16)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.css',\n\t\t\tcontentPattern: { pattern: 'Helvetica', modifiers: 'i' }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, () => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 2);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: e', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'e', modifiers: 'i' }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 748);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: e (with excludes)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config: any = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'e', modifiers: 'i' },\n\t\t\texcludePattern: { '**/examples': true }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 366);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: e (with includes)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config: any = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'e', modifiers: 'i' },\n\t\t\tincludePattern: { '**/examples/**': true }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 382);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: e (with includes and exclude)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config: any = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'e', modifiers: 'i' },\n\t\t\tincludePattern: { '**/examples/**': true },\n\t\t\texcludePattern: { '**/examples/small.js': true }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 361);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: a (capped)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'a', modifiers: 'i' },\n\t\t\tmaxResults: 520\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 520);\n\t\t\tdone();\n\t\t});\n\t});\n\n\ttest('Text: a (no results)', function (done: () => void) {\n\t\tlet c = 0;\n\t\tlet config = {\n\t\t\trootFolders: rootfolders(),\n\t\t\tfilePattern: '*.*',\n\t\t\tcontentPattern: { pattern: 'ahsogehtdas', modifiers: 'i' }\n\t\t};\n\n\t\tlet engine = new TextSearchEngine(config, new FileWalker(config));\n\n\t\tengine.search((result) => {\n\t\t\tif (result && result.lineMatches) {\n\t\t\t\tc += count(result.lineMatches);\n\t\t\t}\n\t\t}, (result) => { }, (error) => {\n\t\t\tassert.ok(!error);\n\t\t\tassert.equal(c, 0);\n\t\t\tdone();\n\t\t});\n\t});\n});"]}