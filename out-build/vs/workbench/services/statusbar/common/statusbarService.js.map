{"version":3,"file":"vs/workbench/services/statusbar/common/statusbarService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/statusbar/common/statusbarService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAKF,yBAAiB,GAAG,+BAAe,CAAoB,kBAAkB,CAAC,CAAC;IAEtF,WAAY,kBAAkB;QAC7B,2DAAI,CAAA;QAAE,6DAAK,CAAA;IACZ,CAAC,EAFW,0BAAkB,KAAlB,0BAAkB,QAE7B;IAFD,IAAY,kBAAkB,GAAlB,0BAEX,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\nimport {IDisposable} from 'vs/base/common/lifecycle';\n\nexport var IStatusbarService = createDecorator<IStatusbarService>('statusbarService');\n\nexport enum StatusbarAlignment {\n\tLEFT, RIGHT\n}\n\n/**\n * A declarative way of describing a status bar entry\n */\nexport interface IStatusbarEntry {\n\n\t/**\n\t * The text to show for the entry. You can embed icons in the text by leveraging the syntax:\n\t *\n\t * `My text ${icon name} contains icons like ${icon name} this one.`\n\t */\n\ttext: string;\n\n\t/**\n\t * An optional tooltip text to show when you hover over the entry\n\t */\n\ttooltip?: string;\n\n\t/**\n\t * An optional color to use for the entry\n\t */\n\tcolor?: string;\n\n\t/**\n\t * An optional id of a command that is known to the workbench to execute on click\n\t */\n\tcommand?: string;\n}\n\nexport interface IStatusbarService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Adds an entry to the statusbar with the given alignment and priority. Use the returned IDisposable\n\t * to remove the statusbar entry.\n\t */\n\taddEntry(entry: IStatusbarEntry, alignment: StatusbarAlignment, priority?: number): IDisposable;\n}"]}