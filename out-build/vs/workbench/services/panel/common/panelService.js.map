{"version":3,"file":"panelService.js","sourceRoot":"","sources":["../../../../../../src/vs/workbench/services/panel/common/panelService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;IAMrF,qBAAa,GAAG,+BAAe,CAAgB,cAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IPanel} from 'vs/workbench/common/panel';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport var IPanelService = createDecorator<IPanelService>('panelService');\n\nexport interface IPanelService {\n\tserviceId : ServiceIdentifier<any>;\n\n\t/**\n\t * Opens a panel with the given identifier and pass keyboard focus to it if specified.\n\t */\n\topenPanel(id: string, focus?: boolean): TPromise<IPanel>;\n\n\t/**\n\t * Returns the current active panel or null if none\n\t */\n\tgetActivePanel(): IPanel;\n}\n"]}