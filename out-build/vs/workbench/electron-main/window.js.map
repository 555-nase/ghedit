{"version":3,"file":"vs/workbench/electron-main/window.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/electron-main/window.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAyBb,WAAY,UAAU;QACrB,qDAAS,CAAA;QACT,+CAAM,CAAA;QACN,qDAAS,CAAA;IACV,CAAC,EAJW,kBAAU,KAAV,kBAAU,QAIrB;IAJD,IAAY,UAAU,GAAV,kBAIX,CAAA;IAEY,0BAAkB,GAAG,UAAU,IAAwB;QAAxB,oBAAwB,GAAxB,OAAO,UAAU,CAAC,MAAM;QACnE,MAAM,CAAC;YACN,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,IAAI;SACV,CAAC;IACH,CAAC,CAAC;IAEF,WAAY,UAAU;QAErB;;WAEG;QACH,2CAAI,CAAA;QAEJ;;WAEG;QACH,iDAAO,CAAA;QAEP;;WAEG;QACH,uDAAU,CAAA;QAEV;;WAEG;QACH,6CAAK,CAAA;IACN,CAAC,EArBW,kBAAU,KAAV,kBAAU,QAqBrB;IArBD,IAAY,UAAU,GAAV,kBAqBX,CAAA;IAqED;QAsBC,sBAAY,MAA8B;YACzC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC;YACnC,IAAI,CAAC,yBAAyB,GAAG,MAAM,CAAC,wBAAwB,CAAC;YACjE,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAE7B,oBAAoB;YACpB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAEtC,gEAAgE;YAChE,IAAM,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAS,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC;YAC7F,IAAI,YAAY,GAAG,IAAI,CAAC,CAAC,gGAAgG;YACzH,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC1C,CAAC;YAED,IAAI,OAAO,GAAkC;gBAC5C,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;gBAC7B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;gBAC/B,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACrB,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACrB,eAAe,EAAE,cAAc,GAAG,SAAS,GAAG,QAAQ,CAAC,WAAW,GAAG,SAAS,GAAG,SAAS;gBAC1F,QAAQ,EAAE,YAAY,CAAC,SAAS;gBAChC,SAAS,EAAE,YAAY,CAAC,UAAU;gBAClC,IAAI,EAAE,YAAY,IAAI,IAAI,CAAC,iBAAiB,KAAK,UAAU,CAAC,SAAS;gBACrE,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;aAC3B,CAAC;YAEF,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtB,4DAA4D;gBAC5D,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;YACnE,CAAC;YAED,6BAA6B;YAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,wBAAa,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,iBAAiB,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;gBAEpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,0FAA0F;gBAC5G,CAAC;YACF,CAAC;YAED,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,iEAAiE;YAC9G,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAU,YAAY,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,yCAAyC;YAC5E,CAAC;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC;QAED,sBAAW,iDAAuB;iBAAlC;gBACC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC;YACzC,CAAC;;;WAAA;QAED,sBAAW,kDAAwB;iBAAnC;gBACC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC;YACvC,CAAC;;;WAAA;QAED,sBAAW,gCAAM;iBAAjB;gBACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;YAC3B,CAAC;;;WAAA;QAED,sBAAW,4BAAE;iBAAb;gBACC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YACjB,CAAC;;;WAAA;QAED,sBAAW,6BAAG;iBAAd;gBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;YAClB,CAAC;;;WAAA;QAEM,4BAAK,GAAZ;YACC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC;YACR,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC;YAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACnB,CAAC;QAED,sBAAW,uCAAa;iBAAxB;gBACC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;YAC5B,CAAC;;;WAAA;QAED,sBAAW,6CAAmB;iBAA9B;gBACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;YACzC,CAAC;;;WAAA;QAED,sBAAW,wCAAc;iBAAzB;gBACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAC1H,CAAC;;;WAAA;QAEM,+BAAQ,GAAf;YACC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC;YAEpC,oDAAoD;YACpD,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC;gBACvC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;YACrC,CAAC;QACF,CAAC;QAEM,4BAAK,GAAZ;YAAA,iBASC;YARA,MAAM,CAAC,IAAI,qBAAQ,CAAe,UAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3C,MAAM,CAAC,CAAC,CAAC,KAAI,CAAC,CAAC;gBAChB,CAAC;gBAED,kDAAkD;gBAClD,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,sBAAW,oCAAU;iBAArB;gBACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;YACzB,CAAC;;;WAAA;QAEO,wCAAiB,GAAzB;YAAA,iBAqEC;YAnEA,0BAA0B;YAC1B,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,iBAAiB,EAAE;gBAC3C,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC;gBAEtC,yDAAyD;gBACzD,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,iBAAiB,CAAC;oBAE5C,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC/B,CAAC;gBAED,iHAAiH;gBACjH,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;wBACxB,MAAM,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;oBAC1C,CAAC;oBAED,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;wBACrD,KAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;oBACrB,CAAC;oBAED,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;oBACjB,CAAC;gBACF,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,uBAAuB;YACvB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,CAAC,EAAE,GAAG;gBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC1C,MAAM,CAAC,CAAC,uBAAuB;gBAChC,CAAC;gBAED,2CAA2C;gBAC3C,EAAE,CAAC,CAAC,GAAG,KAAK,kBAAkB,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,+BAA+B,CAAC,CAAC;gBAChE,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,iBAAiB,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,kCAAkC,CAAC,CAAC;gBACnE,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,uCAAuC;YACvC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,KAAY,EAAE,GAAW;gBAChE,KAAK,CAAC,cAAc,EAAE,CAAC;gBAEvB,gBAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAEH,eAAe;YACf,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE;gBACrB,KAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YAC5C,CAAC,CAAC,CAAC;YAEH,wBAAwB;YACxB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,KAAY,EAAE,SAAiB,EAAE,gBAAwB;gBACnG,OAAO,CAAC,IAAI,CAAC,kCAAkC,EAAE,gBAAgB,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;YAEH,wDAAwD;YACxD,uFAAuF;YACvF,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,eAAe,EAAE,UAAC,KAAY;oBACtD,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACX,KAAK,CAAC,cAAc,EAAE,CAAC;oBACxB,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAEM,2BAAI,GAAX,UAAY,MAA4B;YAAxC,iBA8BC;YA5BA,yEAAyE;YACzE,wEAAwE;YACxE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC7B,CAAC;YAMD,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC;YAC1C,CAAC;YAED,WAAW;YACX,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAEvC,sFAAsF;YACtF,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;oBACnC,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;wBACrE,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;wBACjB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;wBAClB,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;oBACtC,CAAC;gBACF,CAAC,EAAE,KAAK,CAAC,CAAC;YACX,CAAC;QACF,CAAC;QAEM,6BAAM,GAAb,UAAc,GAA+B;YAE5C,gDAAgD;YAChD,IAAI,aAAa,GAAyB,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAChF,OAAO,aAAa,CAAC,WAAW,CAAC;YACjC,OAAO,aAAa,CAAC,aAAa,CAAC;YACnC,OAAO,aAAa,CAAC,WAAW,CAAC;YACjC,OAAO,aAAa,CAAC,mBAAmB,CAAC;YAEzC,qFAAqF;YACrF,yEAAyE;YACzE,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,IAAI,GAAG,CAAC,CAAC,CAAC;gBACzC,aAAa,CAAC,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;gBAClD,aAAa,CAAC,6BAA6B,GAAG,GAAG,CAAC,6BAA6B,CAAC;gBAChF,aAAa,CAAC,sBAAsB,GAAG,GAAG,CAAC,sBAAsB,CAAC;gBAClE,aAAa,CAAC,qBAAqB,GAAG,GAAG,CAAC,qBAAqB,CAAC;gBAChE,aAAa,CAAC,kBAAkB,GAAG,GAAG,CAAC,kBAAkB,CAAC;YAC3D,CAAC;YAED,cAAc;YACd,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1B,CAAC;QAEO,6BAAM,GAAd,UAAe,MAA4B;YAC1C,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;YAEpE,SAAS;YACT,GAAG,IAAI,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YAE/D,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;QAEM,2CAAoB,GAA3B;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,0BAAkB,EAAE,CAAC,CAAC,2DAA2D;YACzF,CAAC;YAED,IAAI,KAAK,GAAiB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,IAAgB,CAAC;YAErB,kBAAkB;YAClB,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;gBACnC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;YAC1B,CAAC;YAED,kEAAkE;YAClE,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnC,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC1C,KAAK,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC;YAChC,CAAC;YAED,4CAA4C;YAC5C,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM,IAAI,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjE,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;gBACjC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBAE9B,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;gBACtB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,CAAC;YAED,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAEO,yCAAkB,GAA1B,UAA2B,KAAoB;YAC9C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC;oBACJ,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;gBACzC,CAAE;gBAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACd,GAAG,CAAC,GAAG,CAAC,+CAA6C,GAAG,UAAK,GAAG,CAAC,KAAO,CAAC,CAAC,CAAC,+DAA+D;gBAC3I,CAAC;YACF,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,KAAK,GAAG,0BAAkB,EAAE,CAAC;YAC9B,CAAC;YAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAChD,CAAC;QAEO,0CAAmB,GAA3B,UAA4B,KAAmB;YAC9C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,CAAC,KAAK,QAAQ,EAArB,CAAqB,CAAC,CAAC,CAAC,CAAC;gBACpF,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAED,IAAI,QAAQ,GAAG,iBAAM,CAAC,cAAc,EAAE,CAAC;YAEvC,kDAAkD;YAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;gBAEvC,iEAAiE;gBACjE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,IAAI,aAAa,CAAC,KAAK,GAAG,CAAC,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,8DAA8D,CAAC,CAAC,CAAC;oBAC/J,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,4DAA4D;oBACxF,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,2DAA2D;oBACvF,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACvD,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,6DAA6D;oBACzF,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;wBACxD,KAAK,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,8DAA8D;oBAC1F,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;wBACvC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,qDAAqD;oBACzF,CAAC;oBAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;wBACzC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,sDAAsD;oBAC5F,CAAC;gBACF,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,0BAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,kFAAkF;gBACpI,CAAC;gBAED,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,6DAA6D;YAC7D,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC;YAClF,IAAI,OAAO,GAAG,iBAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1H,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACzC,IAAI,QAAQ,GAAG,0BAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,kFAAkF;oBAC3I,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,kFAAkF;oBACxG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;oBAErB,MAAM,CAAC,QAAQ,CAAC;gBACjB,CAAC;gBAED,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,gCAAS,GAAhB;YACC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACjC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YAEnC,MAAM,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5E,CAAC;QAEM,uCAAgB,GAAvB;YACC,IAAI,gBAAgB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YAEhD,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAEzC,4FAA4F;YAC5F,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5C,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAU,YAAY,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,wBAAwB;gBACrH,CAAC;YACF,CAAC;QACF,CAAC;QAEM,2CAAoB,GAA3B,UAA4B,OAAgB;YAC3C,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC;QAEM,oCAAa,GAApB,UAAqB,OAAe;YAApC,iBAIC;YAJqC,cAAc;iBAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;gBAAd,6BAAc;;YACnD,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;gBACjB,KAAI,CAAC,IAAI,OAAT,KAAI,GAAM,OAAO,SAAK,IAAI,EAAC,CAAC;YAC7B,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,2BAAI,GAAX,UAAY,OAAe;YAAE,cAAc;iBAAd,WAAc,CAAd,sBAAc,CAAd,IAAc;gBAAd,6BAAc;;YAC1C,MAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,IAAI,YAAC,OAAO,SAAK,IAAI,EAAC,CAAC;;QAC9C,CAAC;QAEM,8BAAO,GAAd;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC5B,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACtC,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,6DAA6D;QAChF,CAAC;QAhca,6BAAgB,GAAG,eAAe,CAAC;QACnC,4BAAe,GAAG,OAAO,CAAC;QAEzB,sBAAS,GAAG,GAAG,CAAC;QAChB,uBAAU,GAAG,GAAG,CAAC;QA6bjC,mBAAC;IAAD,CAAC,AAncD,IAmcC;IAncY,oBAAY,eAmcxB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport path = require('path');\n\nimport {shell, screen, BrowserWindow} from 'electron';\n\nimport {TPromise, TValueCallback} from 'vs/base/common/winjs.base';\nimport platform = require('vs/base/common/platform');\nimport objects = require('vs/base/common/objects');\nimport env = require('vs/workbench/electron-main/env');\nimport storage = require('vs/workbench/electron-main/storage');\n\nexport interface IWindowState {\n\twidth?: number;\n\theight?: number;\n\tx?: number;\n\ty?: number;\n\tmode?: WindowMode;\n}\n\nexport interface IWindowCreationOptions {\n\tstate: IWindowState;\n\textensionDevelopmentPath?: string;\n}\n\nexport enum WindowMode {\n\tMaximized,\n\tNormal,\n\tMinimized\n}\n\nexport const defaultWindowState = function (mode = WindowMode.Normal): IWindowState {\n\treturn {\n\t\twidth: 1024,\n\t\theight: 768,\n\t\tmode: mode\n\t};\n};\n\nexport enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport interface IPath {\n\n\t// the workspace spath for a VSCode instance which can be null\n\tworkspacePath?: string;\n\n\t// the file path to open within a VSCode instance\n\tfilePath?: string;\n\n\t// the line number in the file path to open\n\tlineNumber?: number;\n\n\t// the column number in the file path to open\n\tcolumnNumber?: number;\n\n\t// indicator to create the file path in the VSCode instance\n\tcreateFilePath?: boolean;\n\n\t// indicator to install the extension (path to .vsix) in the VSCode instance\n\tinstallExtensionPath?: boolean;\n}\n\nexport interface IWindowConfiguration extends env.ICommandLineArguments {\n\texecPath: string;\n\tversion: string;\n\tappName: string;\n\tapplicationName: string;\n\tdarwinBundleIdentifier: string;\n\tappSettingsHome: string;\n\tappSettingsPath: string;\n\tappKeybindingsPath: string;\n\tuserExtensionsHome: string;\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\tappRoot: string;\n\tisBuilt: boolean;\n\tcommitHash: string;\n\tupdateFeedUrl: string;\n\tupdateChannel: string;\n\trecentFiles: string[];\n\trecentFolders: string[];\n\tworkspacePath?: string;\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n\textensionsToInstall: string[];\n\tcrashReporter: Electron.CrashReporterStartOptions;\n\textensionsGallery: {\n\t\tserviceUrl: string;\n\t\titemUrl: string;\n\t};\n\textensionTips: { [id: string]: string; };\n\twelcomePage: string;\n\treleaseNotesUrl: string;\n\tlicenseUrl: string;\n\tproductDownloadUrl: string;\n\tenableTelemetry: boolean;\n\tuserEnv: env.IProcessEnvironment;\n\taiConfig: {\n\t\tkey: string;\n\t\tasimovKey: string;\n\t};\n\tsendASmile: {\n\t\treportIssueUrl: string,\n\t\trequestFeatureUrl: string\n\t};\n}\n\nexport class VSCodeWindow {\n\n\tpublic static menuBarHiddenKey = 'menuBarHidden';\n\tpublic static themeStorageKey = 'theme';\n\n\tprivate static MIN_WIDTH = 200;\n\tprivate static MIN_HEIGHT = 120;\n\n\tprivate showTimeoutHandle: any;\n\tprivate _id: number;\n\tprivate _win: Electron.BrowserWindow;\n\tprivate _lastFocusTime: number;\n\tprivate _readyState: ReadyState;\n\tprivate _extensionDevelopmentPath: string;\n\tprivate windowState: IWindowState;\n\tprivate currentWindowMode: WindowMode;\n\n\tprivate whenReadyCallbacks: TValueCallback<VSCodeWindow>[];\n\n\tprivate currentConfig: IWindowConfiguration;\n\tprivate pendingLoadConfig: IWindowConfiguration;\n\n\tconstructor(config: IWindowCreationOptions) {\n\t\tthis._lastFocusTime = -1;\n\t\tthis._readyState = ReadyState.NONE;\n\t\tthis._extensionDevelopmentPath = config.extensionDevelopmentPath;\n\t\tthis.whenReadyCallbacks = [];\n\n\t\t// Load window state\n\t\tthis.restoreWindowState(config.state);\n\n\t\t// For VS theme we can show directly because background is white\n\t\tconst usesLightTheme = /vs($| )/.test(storage.getItem<string>(VSCodeWindow.themeStorageKey));\n\t\tlet showDirectly = true; // set to false to prevent background color flash (flash should be fixed for Electron >= 0.37.x)\n\t\tif (showDirectly && !global.windowShow) {\n\t\t\tglobal.windowShow = new Date().getTime();\n\t\t}\n\n\t\tlet options: Electron.BrowserWindowOptions = {\n\t\t\twidth: this.windowState.width,\n\t\t\theight: this.windowState.height,\n\t\t\tx: this.windowState.x,\n\t\t\ty: this.windowState.y,\n\t\t\tbackgroundColor: usesLightTheme ? '#FFFFFF' : platform.isMacintosh ? '#171717' : '#1E1E1E', // https://github.com/electron/electron/issues/5150\n\t\t\tminWidth: VSCodeWindow.MIN_WIDTH,\n\t\t\tminHeight: VSCodeWindow.MIN_HEIGHT,\n\t\t\tshow: showDirectly && this.currentWindowMode !== WindowMode.Maximized, // in case we are maximized, only show later after the call to maximize (see below)\n\t\t\ttitle: env.product.nameLong\n\t\t};\n\n\t\tif (platform.isLinux) {\n\t\t\t// Windows and Mac are better off using the embedded icon(s)\n\t\t\toptions.icon = path.join(env.appRoot, 'resources/linux/code.png');\n\t\t}\n\n\t\t// Create the browser window.\n\t\tthis._win = new BrowserWindow(options);\n\t\tthis._id = this._win.id;\n\n\t\tif (showDirectly && this.currentWindowMode === WindowMode.Maximized) {\n\t\t\tthis.win.maximize();\n\n\t\t\tif (!this.win.isVisible()) {\n\t\t\t\tthis.win.show(); // to reduce flicker from the default window size to maximize, we only show after maximize\n\t\t\t}\n\t\t}\n\n\t\tif (showDirectly) {\n\t\t\tthis._lastFocusTime = new Date().getTime(); // since we show directly, we need to set the last focus time too\n\t\t}\n\n\t\tif (storage.getItem<boolean>(VSCodeWindow.menuBarHiddenKey, false)) {\n\t\t\tthis.setMenuBarVisibility(false); // respect configured menu bar visibility\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tpublic get isPluginDevelopmentHost(): boolean {\n\t\treturn !!this._extensionDevelopmentPath;\n\t}\n\n\tpublic get extensionDevelopmentPath(): string {\n\t\treturn this._extensionDevelopmentPath;\n\t}\n\n\tpublic get config(): IWindowConfiguration {\n\t\treturn this.currentConfig;\n\t}\n\n\tpublic get id(): number {\n\t\treturn this._id;\n\t}\n\n\tpublic get win(): Electron.BrowserWindow {\n\t\treturn this._win;\n\t}\n\n\tpublic focus(): void {\n\t\tif (!this._win) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._win.isMinimized()) {\n\t\t\tthis._win.restore();\n\t\t}\n\n\t\tthis._win.focus();\n\t}\n\n\tpublic get lastFocusTime(): number {\n\t\treturn this._lastFocusTime;\n\t}\n\n\tpublic get openedWorkspacePath(): string {\n\t\treturn this.currentConfig.workspacePath;\n\t}\n\n\tpublic get openedFilePath(): string {\n\t\treturn this.currentConfig.filesToOpen && this.currentConfig.filesToOpen[0] && this.currentConfig.filesToOpen[0].filePath;\n\t}\n\n\tpublic setReady(): void {\n\t\tthis._readyState = ReadyState.READY;\n\n\t\t// inform all waiting promises that we are ready now\n\t\twhile (this.whenReadyCallbacks.length) {\n\t\t\tthis.whenReadyCallbacks.pop()(this);\n\t\t}\n\t}\n\n\tpublic ready(): TPromise<VSCodeWindow> {\n\t\treturn new TPromise<VSCodeWindow>((c) => {\n\t\t\tif (this._readyState === ReadyState.READY) {\n\t\t\t\treturn c(this);\n\t\t\t}\n\n\t\t\t// otherwise keep and call later when we are ready\n\t\t\tthis.whenReadyCallbacks.push(c);\n\t\t});\n\t}\n\n\tpublic get readyState(): ReadyState {\n\t\treturn this._readyState;\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Remember that we loaded\n\t\tthis._win.webContents.on('did-finish-load', () => {\n\t\t\tthis._readyState = ReadyState.LOADING;\n\n\t\t\t// Associate properties from the load request if provided\n\t\t\tif (this.pendingLoadConfig) {\n\t\t\t\tthis.currentConfig = this.pendingLoadConfig;\n\n\t\t\t\tthis.pendingLoadConfig = null;\n\t\t\t}\n\n\t\t\t// To prevent flashing, we set the window visible after the page has finished to load but before VSCode is loaded\n\t\t\tif (!this.win.isVisible()) {\n\t\t\t\tif (!global.windowShow) {\n\t\t\t\t\tglobal.windowShow = new Date().getTime();\n\t\t\t\t}\n\n\t\t\t\tif (this.currentWindowMode === WindowMode.Maximized) {\n\t\t\t\t\tthis.win.maximize();\n\t\t\t\t}\n\n\t\t\t\tif (!this.win.isVisible()) { // maximize also makes visible\n\t\t\t\t\tthis.win.show();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// App commands support\n\t\tthis._win.on('app-command', (e, cmd) => {\n\t\t\tif (this.readyState !== ReadyState.READY) {\n\t\t\t\treturn; // window must be ready\n\t\t\t}\n\n\t\t\t// Support navigation via mouse buttons 4/5\n\t\t\tif (cmd === 'browser-backward') {\n\t\t\t\tthis.send('vscode:runAction', 'workbench.action.navigateBack');\n\t\t\t} else if (cmd === 'browser-forward') {\n\t\t\t\tthis.send('vscode:runAction', 'workbench.action.navigateForward');\n\t\t\t}\n\t\t});\n\n\t\t// Handle code that wants to open links\n\t\tthis._win.webContents.on('new-window', (event: Event, url: string) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tshell.openExternal(url);\n\t\t});\n\n\t\t// Window Focus\n\t\tthis._win.on('focus', () => {\n\t\t\tthis._lastFocusTime = new Date().getTime();\n\t\t});\n\n\t\t// Window Failed to load\n\t\tthis._win.webContents.on('did-fail-load', (event: Event, errorCode: string, errorDescription: string) => {\n\t\t\tconsole.warn('[electron event]: fail to load, ', errorDescription);\n\t\t});\n\n\t\t// Prevent any kind of navigation triggered by the user!\n\t\t// But do not touch this in dev version because it will prevent \"Reload\" from dev tools\n\t\tif (env.isBuilt) {\n\t\t\tthis._win.webContents.on('will-navigate', (event: Event) => {\n\t\t\t\tif (event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic load(config: IWindowConfiguration): void {\n\n\t\t// If this is the first time the window is loaded, we associate the paths\n\t\t// directly with the window because we assume the loading will just work\n\t\tif (this.readyState === ReadyState.NONE) {\n\t\t\tthis.currentConfig = config;\n\t\t}\n\n\t\t// Otherwise, the window is currently showing a folder and if there is an\n\t\t// unload handler preventing the load, we cannot just associate the paths\n\t\t// because the loading might be vetoed. Instead we associate it later when\n\t\t// the window load event has fired.\n\t\telse {\n\t\t\tthis.pendingLoadConfig = config;\n\t\t\tthis._readyState = ReadyState.NAVIGATING;\n\t\t}\n\n\t\t// Load URL\n\t\tthis._win.loadURL(this.getUrl(config));\n\n\t\t// Make window visible if it did not open in N seconds because this indicates an error\n\t\tif (!config.isBuilt) {\n\t\t\tthis.showTimeoutHandle = setTimeout(() => {\n\t\t\t\tif (this._win && !this._win.isVisible() && !this._win.isMinimized()) {\n\t\t\t\t\tthis._win.show();\n\t\t\t\t\tthis._win.focus();\n\t\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t\t}\n\t\t\t}, 10000);\n\t\t}\n\t}\n\n\tpublic reload(cli?: env.ICommandLineArguments): void {\n\n\t\t// Inherit current properties but overwrite some\n\t\tlet configuration: IWindowConfiguration = objects.mixin({}, this.currentConfig);\n\t\tdelete configuration.filesToOpen;\n\t\tdelete configuration.filesToCreate;\n\t\tdelete configuration.filesToDiff;\n\t\tdelete configuration.extensionsToInstall;\n\n\t\t// Some configuration things get inherited if the window is being reloaded and we are\n\t\t// in plugin development mode. These options are all development related.\n\t\tif (this.isPluginDevelopmentHost && cli) {\n\t\t\tconfiguration.verboseLogging = cli.verboseLogging;\n\t\t\tconfiguration.logExtensionHostCommunication = cli.logExtensionHostCommunication;\n\t\t\tconfiguration.debugExtensionHostPort = cli.debugExtensionHostPort;\n\t\t\tconfiguration.debugBrkExtensionHost = cli.debugBrkExtensionHost;\n\t\t\tconfiguration.extensionsHomePath = cli.extensionsHomePath;\n\t\t}\n\n\t\t// Load config\n\t\tthis.load(configuration);\n\t}\n\n\tprivate getUrl(config: IWindowConfiguration): string {\n\t\tlet url = require.toUrl('vs/workbench/electron-browser/index.html');\n\n\t\t// Config\n\t\turl += '?config=' + encodeURIComponent(JSON.stringify(config));\n\n\t\treturn url;\n\t}\n\n\tpublic serializeWindowState(): IWindowState {\n\t\tif (this.win.isFullScreen()) {\n\t\t\treturn defaultWindowState(); // ignore state when in fullscreen mode and return defaults\n\t\t}\n\n\t\tlet state: IWindowState = Object.create(null);\n\t\tlet mode: WindowMode;\n\n\t\t// get window mode\n\t\tif (!platform.isMacintosh && this.win.isMaximized()) {\n\t\t\tmode = WindowMode.Maximized;\n\t\t} else if (this.win.isMinimized()) {\n\t\t\tmode = WindowMode.Minimized;\n\t\t} else {\n\t\t\tmode = WindowMode.Normal;\n\t\t}\n\n\t\t// we don't want to save minimized state, only maximized or normal\n\t\tif (mode === WindowMode.Maximized) {\n\t\t\tstate.mode = WindowMode.Maximized;\n\t\t} else if (mode !== WindowMode.Minimized) {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\t// only consider non-minimized window states\n\t\tif (mode === WindowMode.Normal || mode === WindowMode.Maximized) {\n\t\t\tlet pos = this.win.getPosition();\n\t\t\tlet size = this.win.getSize();\n\n\t\t\tstate.x = pos[0];\n\t\t\tstate.y = pos[1];\n\t\t\tstate.width = size[0];\n\t\t\tstate.height = size[1];\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate restoreWindowState(state?: IWindowState): void {\n\t\tif (state) {\n\t\t\ttry {\n\t\t\t\tstate = this.validateWindowState(state);\n\t\t\t} catch (err) {\n\t\t\t\tenv.log(`Unexpected error validating window state: ${err}\\n${err.stack}`); // somehow display API can be picky about the state to validate\n\t\t\t}\n\t\t}\n\n\t\tif (!state) {\n\t\t\tstate = defaultWindowState();\n\t\t}\n\n\t\tthis.windowState = state;\n\t\tthis.currentWindowMode = this.windowState.mode;\n\t}\n\n\tprivate validateWindowState(state: IWindowState): IWindowState {\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ([state.x, state.y, state.width, state.height].some(n => typeof n !== 'number')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (state.width <= 0 || state.height <= 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet displays = screen.getAllDisplays();\n\n\t\t// Single Monitor: be strict about x/y positioning\n\t\tif (displays.length === 1) {\n\t\t\tlet displayBounds = displays[0].bounds;\n\n\t\t\t// Careful with maximized: in that mode x/y can well be negative!\n\t\t\tif (state.mode !== WindowMode.Maximized && displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t\t}\n\n\t\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t\t}\n\n\t\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t\t}\n\n\t\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t\t}\n\n\t\t\t\tif (state.width > displayBounds.width) {\n\t\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t\t}\n\n\t\t\t\tif (state.height > displayBounds.height) {\n\t\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.mode === WindowMode.Maximized) {\n\t\t\t\treturn defaultWindowState(WindowMode.Maximized); // when maximized, make sure we have good values when the user restores the window\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\t// Multi Monitor: be less strict because metrics can be crazy\n\t\tlet bounds = { x: state.x, y: state.y, width: state.width, height: state.height };\n\t\tlet display = screen.getDisplayMatching(bounds);\n\t\tif (display && display.bounds.x + display.bounds.width > bounds.x && display.bounds.y + display.bounds.height > bounds.y) {\n\t\t\tif (state.mode === WindowMode.Maximized) {\n\t\t\t\tlet defaults = defaultWindowState(WindowMode.Maximized); // when maximized, make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = state.x; // carefull to keep x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = state.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getBounds(): Electron.Bounds {\n\t\tlet pos = this.win.getPosition();\n\t\tlet dimension = this.win.getSize();\n\n\t\treturn { x: pos[0], y: pos[1], width: dimension[0], height: dimension[1] };\n\t}\n\n\tpublic toggleFullScreen(): void {\n\t\tlet willBeFullScreen = !this.win.isFullScreen();\n\n\t\tthis.win.setFullScreen(willBeFullScreen);\n\n\t\t// Windows & Linux: Hide the menu bar but still allow to bring it up by pressing the Alt key\n\t\tif (platform.isWindows || platform.isLinux) {\n\t\t\tif (willBeFullScreen) {\n\t\t\t\tthis.setMenuBarVisibility(false);\n\t\t\t} else {\n\t\t\t\tthis.setMenuBarVisibility(!storage.getItem<boolean>(VSCodeWindow.menuBarHiddenKey, false)); // restore as configured\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setMenuBarVisibility(visible: boolean): void {\n\t\tthis.win.setMenuBarVisibility(visible);\n\t\tthis.win.setAutoHideMenuBar(!visible);\n\t}\n\n\tpublic sendWhenReady(channel: string, ...args: any[]): void {\n\t\tthis.ready().then(() => {\n\t\t\tthis.send(channel, ...args);\n\t\t});\n\t}\n\n\tpublic send(channel: string, ...args: any[]): void {\n\t\tthis._win.webContents.send(channel, ...args);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.showTimeoutHandle) {\n\t\t\tclearTimeout(this.showTimeoutHandle);\n\t\t}\n\n\t\tthis._win = null; // Important to dereference the window object to allow for GC\n\t}\n}"]}