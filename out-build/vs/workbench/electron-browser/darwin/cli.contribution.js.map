{"version":3,"sources":["vs/workbench/electron-browser/darwin/cli.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/electron-browser/darwin/cli.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as cp from 'child_process';\nimport * as pfs from 'vs/base/node/pfs';\nimport { nfcall } from 'vs/base/common/async';\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport { Action } from 'vs/base/common/actions';\nimport { IWorkbenchActionRegistry, Extensions as ActionExtensions } from 'vs/workbench/common/actionRegistry';\nimport { IWorkbenchContributionsRegistry, IWorkbenchContribution, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { Registry } from 'vs/platform/platform';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\nimport { IMessageService, Severity } from 'vs/platform/message/common/message';\nimport { IEditorService } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\n\ninterface ILegacyUse {\n\tfile: string;\n\tlineNumber: number;\n}\n\nfunction ignore<T>(code: string, value: T = null): (err: any) => TPromise<T> {\n\treturn err => err.code === code ? TPromise.as<T>(value) : TPromise.wrapError<T>(err);\n}\n\nfunction readOrEmpty(name: string): TPromise<string> {\n\treturn pfs.readFile(name, 'utf8').then(null, ignore('ENOENT', ''));\n}\n\nconst root = URI.parse(require.toUrl('')).fsPath;\nconst source = path.resolve(root, '..', 'bin', 'code');\nconst isAvailable = fs.existsSync(source);\n\nclass InstallAction extends Action {\n\n\tstatic ID = 'workbench.action.installCommandLine';\n\tstatic LABEL = nls.localize('install', \"Install 'code' command in PATH\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IEditorService private editorService: IEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tget applicationName(): string {\n\t\treturn this.contextService.getConfiguration().env.applicationName;\n\t}\n\n\tprivate get target(): string {\n\t\treturn `/usr/local/bin/${ this.applicationName }`;\n\t}\n\n\trun(): TPromise<void> {\n\t\treturn this.checkLegacy()\n\t\t\t.then(uses => {\n\t\t\t\tif (uses.length > 0) {\n\t\t\t\t\tconst { file, lineNumber } = uses[0];\n\t\t\t\t\tconst resource = URI.create('file', null, file);\n\t\t\t\t\tconst env = this.contextService.getConfiguration().env;\n\t\t\t\t\tconst message = nls.localize('exists', \"Please remove the alias referencing '{0}' in '{1}' (line {2}) and retry this action.\", env.darwinBundleIdentifier, file, lineNumber);\n\t\t\t\t\tconst input = { resource, mime: 'text/x-shellscript' };\n\t\t\t\t\tconst actions = [\n\t\t\t\t\t\tnew Action('inlineEdit', nls.localize('editFile', \"Edit '{0}'\", file), '', true, () => {\n\t\t\t\t\t\t\treturn this.editorService.openEditor(input).then(() => {\n\t\t\t\t\t\t\t\tconst message = nls.localize('again', \"Please remove the '{0}' alias from '{1}' before continuing.\", this.applicationName, file);\n\t\t\t\t\t\t\t\tconst actions = [\n\t\t\t\t\t\t\t\t\tnew Action('cancel', nls.localize('cancel', \"Cancel\")),\n\t\t\t\t\t\t\t\t\tnew Action('continue', nls.localize('continue', \"Continue\"), '', true, () => this.run())\n\t\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t\tthis.messageService.show(Severity.Info, { message, actions });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t];\n\n\t\t\t\t\tthis.messageService.show(Severity.Warning, { message, actions });\n\t\t\t\t\treturn TPromise.as(null);\n\t\t\t\t}\n\n\t\t\t\treturn this.isInstalled()\n\t\t\t\t\t.then(isInstalled => {\n\t\t\t\t\t\tif (!isAvailable || isInstalled) {\n\t\t\t\t\t\t\treturn TPromise.as(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst createSymlink = () => {\n\t\t\t\t\t\t\t\treturn pfs.unlink(this.target)\n\t\t\t\t\t\t\t\t\t.then(null, ignore('ENOENT'))\n\t\t\t\t\t\t\t\t\t.then(() => pfs.symlink(source, this.target));\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn createSymlink().then(null, err => {\n\t\t\t\t\t\t\t\tif (err.code === 'EACCES' || err.code === 'ENOENT') {\n\t\t\t\t\t\t\t\t\treturn this.createBinFolder()\n\t\t\t\t\t\t\t\t\t\t.then(() => createSymlink());\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn TPromise.wrapError(err);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => this.messageService.show(Severity.Info, nls.localize('successIn', \"Shell command '{0}' successfully installed in PATH.\", this.applicationName)));\n\t\t\t});\n\t}\n\n\tprivate isInstalled(): TPromise<boolean> {\n\t\treturn pfs.lstat(this.target)\n\t\t\t.then(stat => stat.isSymbolicLink())\n\t\t\t.then(() => pfs.readlink(this.target))\n\t\t\t.then(link => link === source)\n\t\t\t.then(null, ignore('ENOENT', false));\n\t}\n\n\tprivate createBinFolder(): TPromise<void> {\n\t\treturn new TPromise<void>((c, e) => {\n\t\t\tconst message = nls.localize('warnEscalation', \"Code will now prompt with 'osascript' for Administrator privileges to install the shell command.\");\n\t\t\tconst actions = [\n\t\t\t\tnew Action('cancel2', nls.localize('cancel2', \"Cancel\"), '', true, () => { e(new Error(nls.localize('aborted', \"Aborted\"))); return null; }),\n\t\t\t\tnew Action('ok', nls.localize('ok', \"OK\"), '', true, () => {\n\t\t\t\t\tconst command = 'osascript -e \"do shell script \\\\\"mkdir -p /usr/local/bin && chown \\\\\" & (do shell script (\\\\\"whoami\\\\\")) & \\\\\" /usr/local/bin\\\\\" with administrator privileges\"';\n\n\t\t\t\t\tnfcall(cp.exec, command, {})\n\t\t\t\t\t\t.then(null, _ => TPromise.wrapError(new Error(nls.localize('cantCreateBinFolder', \"Unable to create '/usr/local/bin'.\"))))\n\t\t\t\t\t\t.done(c, e);\n\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t];\n\n\t\t\tthis.messageService.show(Severity.Info, { message, actions });\n\t\t});\n\t}\n\n\tcheckLegacy(): TPromise<ILegacyUse[]> {\n\t\tconst files = [\n\t\t\tpath.join(os.homedir(), '.bash_profile'),\n\t\t\tpath.join(os.homedir(), '.bashrc'),\n\t\t\tpath.join(os.homedir(), '.zshrc')\n\t\t];\n\n\t\treturn TPromise.join(files.map(f => readOrEmpty(f))).then(result => {\n\t\t\treturn result.reduce((result, contents, index) => {\n\t\t\t\tconst file = files[index];\n\t\t\t\tconst env = this.contextService.getConfiguration().env;\n\t\t\t\tconst lines = contents.split(/\\r?\\n/);\n\n\t\t\t\tlines.some((line, index) => {\n\t\t\t\t\tif (line.indexOf(env.darwinBundleIdentifier) > -1 && !/^\\s*#/.test(line)) {\n\t\t\t\t\t\tresult.push({ file, lineNumber: index + 1 });\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t}, [] as ILegacyUse[]);\n\t\t});\n\t}\n}\n\nclass UninstallAction extends Action {\n\n\tstatic ID = 'workbench.action.uninstallCommandLine';\n\tstatic LABEL = nls.localize('uninstall', \"Uninstall 'code' command from PATH\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IMessageService private messageService: IMessageService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tprivate get applicationName(): string {\n\t\treturn this.contextService.getConfiguration().env.applicationName;\n\t}\n\n\tprivate get target(): string {\n\t\treturn `/usr/local/bin/${ this.applicationName }`;\n\t}\n\n\trun(): TPromise<void> {\n\t\treturn pfs.unlink(this.target)\n\t\t\t.then(null, ignore('ENOENT'))\n\t\t\t.then(() => this.messageService.show(Severity.Info, nls.localize('successFrom', \"Shell command '{0}' successfully uninstalled from PATH.\", this.applicationName)));\n\t}\n}\n\nclass DarwinCLIHelper implements IWorkbenchContribution {\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMessageService messageService: IMessageService\n\t) {\n\t\tconst installAction = instantiationService.createInstance(InstallAction, InstallAction.ID, InstallAction.LABEL);\n\n\t\tinstallAction.checkLegacy().done(files => {\n\t\t\tif (files.length > 0) {\n\t\t\t\tconst message = nls.localize('update', \"Code needs to change the '{0}' shell command. Would you like to do this now?\", installAction.applicationName);\n\t\t\t\tconst now = new Action('changeNow', nls.localize('changeNow', \"Change Now\"), '', true, () => installAction.run());\n\t\t\t\tconst later = new Action('later', nls.localize('later', \"Later\"), '', true, () => {\n\t\t\t\t\tmessageService.show(Severity.Info, nls.localize('laterInfo', \"Remember you can always run the '{0}' action from the Command Palette.\", installAction.label));\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t\tconst actions = [later, now];\n\n\t\t\t\tmessageService.show(Severity.Info, { message, actions });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetId(): string {\n\t\treturn 'darwin.cli';\n\t}\n}\n\nif (isAvailable && process.platform === 'darwin') {\n\tconst category = nls.localize('shellCommand', \"Shell Command\");\n\n\tconst workbenchActionsRegistry = <IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(InstallAction, InstallAction.ID, InstallAction.LABEL), category);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(UninstallAction, UninstallAction.ID, UninstallAction.LABEL), category);\n\n\tconst workbenchRegistry = <IWorkbenchContributionsRegistry>Registry.as(WorkbenchExtensions.Workbench);\n\tworkbenchRegistry.registerWorkbenchContribution(DarwinCLIHelper);\n}\n"]}