{"version":3,"sources":["vs/workbench/electron-browser/crashReporter.ts"],"names":[],"mappings":";;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAYb,IAAI,oBAAoB,GAAG,WAAW,CAAC;IAEvC,IAAI,qBAAqB,GAA2B,mBAAQ,CAAC,EAAE,CAAC,kCAAU,CAAC,aAAa,CAAC,CAAC;IAC1F,qBAAqB,CAAC,qBAAqB,CAAC;QAC3C,IAAI,EAAE,oBAAoB;QAC1B,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA6B,EAAE,IAAyB,CAAC;QAC/E,YAAY,EAAE;YACb,+BAA+B,EAAE;gBAChC,MAAM,EAAE,SAAS;gBACjB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgC,EAAE,IAAkG,CAAC;gBACjK,SAAS,EAAE,IAAI;aACf;SACD;KACD,CAAC,CAAC;IAEH;QAOC,uBAAY,OAAe,EAAE,MAAc,EACf,gBAA0D,EACtD,oBAA2C;YADvD,gCAAkE,GAAlE,mDAAkE;YAA1D,qBAAgB,GAAhB,gBAAgB,CAA0C;YACtD,yBAAoB,GAApB,oBAAoB,CAAuB;YAE1E,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;YACjD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAErB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,CAAC;QAEM,6BAAK,GAAZ,UAAa,gBAAmD;YAAhE,iBAoBC;YAnBA,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAErB,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS;sBAC5B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAA/B,CAA+B,CAAC;sBACtF,qBAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBAE1B,SAAS,CAAC,IAAI,CAAC;oBACd,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBAClB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;wBAC/E,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;4BACpD,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;oBACF,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;4BACrC,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;wBAChC,CAAC;oBACF,CAAC;gBACF,CAAC,EAAE,0BAAiB,CAAC,CAAC;YACvB,CAAC;QACF,CAAC;QAEO,+BAAO,GAAf,UAAgB,gBAAmD;YAClE,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAEtD,wBAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAE5B,qDAAqD;YACrD,sBAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,MAAM,CAAC,CAAC;QAC/C,CAAC;QAEO,uCAAe,GAAvB,UAAwB,gBAAmD;YAA3E,iBAgBC;YAfA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,UAAC,GAAG,EAAE,KAAK;gBAC7D,EAAE,CAAC,CAAC,KAAK,KAAK,cAAc,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC;gBACvB,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;oBAC5B,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC;gBACrB,CAAC;gBAED,EAAE,CAAC,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;oBAC3B,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC;gBACpB,CAAC;gBAED,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QA3DA;uBAAC,6BAAiB;uBACjB,qCAAqB;yBADJ;QA4DpB,oBAAC;IAAD,CApEA,AAoEC,IAAA;IApEY,qBAAa,gBAoEzB,CAAA","file":"vs/workbench/electron-browser/crashReporter.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {IConfigurationRegistry, Extensions} from 'vs/platform/configuration/common/configurationRegistry';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {ITelemetryService, NullTelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {Registry} from 'vs/platform/platform';\n\nimport {ipcRenderer as ipc, crashReporter} from 'electron';\n\nlet TELEMETRY_SECTION_ID = 'telemetry';\n\nlet configurationRegistry = <IConfigurationRegistry>Registry.as(Extensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 20,\n\t'type': 'object',\n\t'title': nls.localize('telemetryConfigurationTitle', \"Telemetry configuration\"),\n\t'properties': {\n\t\t'telemetry.enableCrashReporter': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': nls.localize('telemetry.enableCrashReporting', \"Enable crash reports to be sent to Microsoft.\\n\\t// This option requires restart to take effect.\"),\n\t\t\t'default': true\n\t\t}\n\t}\n});\n\nexport class CrashReporter {\n\tprivate isStarted: boolean;\n\tprivate config: any;\n\tprivate version: string;\n\tprivate commit: string;\n\tprivate sessionId: string;\n\n\tconstructor(version: string, commit: string,\n\t\t@ITelemetryService private telemetryService: ITelemetryService = NullTelemetryService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tthis.configurationService = configurationService;\n\t\tthis.telemetryService = telemetryService;\n\t\tthis.version = version;\n\t\tthis.commit = commit;\n\n\t\tthis.isStarted = false;\n\t\tthis.config = null;\n\t}\n\n\tpublic start(rawConfiguration:Electron.CrashReporterStartOptions): void {\n\t\tif (!this.isStarted) {\n\n\t\t\tlet sessionId = !this.sessionId\n\t\t\t\t? this.telemetryService.getTelemetryInfo().then(info => this.sessionId = info.sessionId)\n\t\t\t\t: TPromise.as(undefined);\n\n\t\t\tsessionId.then(() => {\n\t\t\t\tif (!this.config) {\n\t\t\t\t\tthis.config = this.configurationService.getConfiguration(TELEMETRY_SECTION_ID);\n\t\t\t\t\tif (this.config && this.config.enableCrashReporter) {\n\t\t\t\t\t\tthis.doStart(rawConfiguration);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.config.enableCrashReporter) {\n\t\t\t\t\t\tthis.doStart(rawConfiguration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate doStart(rawConfiguration:Electron.CrashReporterStartOptions): void {\n\t\tconst config = this.toConfiguration(rawConfiguration);\n\n\t\tcrashReporter.start(config);\n\n\t\t//notify the main process to start the crash reporter\n\t\tipc.send('vscode:startCrashReporter', config);\n\t}\n\n\tprivate toConfiguration(rawConfiguration:Electron.CrashReporterStartOptions): Electron.CrashReporterStartOptions {\n\t\treturn JSON.parse(JSON.stringify(rawConfiguration, (key, value) => {\n\t\t\tif (value === '$(sessionId)') {\n\t\t\t\treturn this.sessionId;\n\t\t\t}\n\n\t\t\tif (value === '$(version)') {\n\t\t\t\treturn this.version;\n\t\t\t}\n\n\t\t\tif (value === '$(commit)') {\n\t\t\t\treturn this.commit;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}));\n\t}\n}"]}