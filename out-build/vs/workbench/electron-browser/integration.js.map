{"version":3,"sources":["vs/workbench/electron-browser/integration.ts"],"names":[],"mappings":"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","file":"vs/workbench/electron-browser/integration.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport errors = require('vs/base/common/errors');\nimport arrays = require('vs/base/common/arrays');\nimport Severity from 'vs/base/common/severity';\nimport {Separator} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {IAction, Action} from 'vs/base/common/actions';\nimport {IPartService} from 'vs/workbench/services/part/common/partService';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IContextMenuService} from 'vs/platform/contextview/browser/contextView';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {IWorkspaceContextService}from 'vs/workbench/services/workspace/common/contextService';\nimport {IWindowService}from 'vs/workbench/services/window/electron-browser/windowService';\nimport {IWindowConfiguration} from 'vs/workbench/electron-browser/window';\nimport {IConfigurationService, IConfigurationServiceEvent, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\n\nimport win = require('vs/workbench/electron-browser/window');\n\nimport {ipcRenderer as ipc, webFrame, remote} from 'electron';\n\nconst currentWindow = remote.getCurrentWindow();\n\nconst TextInputActions: IAction[] = [\n\tnew Action('undo', nls.localize('undo', \"Undo\"), null, true, () => document.execCommand('undo') && TPromise.as(true)),\n\tnew Action('redo', nls.localize('redo', \"Redo\"), null, true, () => document.execCommand('redo') && TPromise.as(true)),\n\tnew Separator(),\n\tnew Action('editor.action.clipboardCutAction', nls.localize('cut', \"Cut\"), null, true, () => document.execCommand('cut') && TPromise.as(true)),\n\tnew Action('editor.action.clipboardCopyAction', nls.localize('copy', \"Copy\"), null, true, () => document.execCommand('copy') && TPromise.as(true)),\n\tnew Action('editor.action.clipboardPasteAction', nls.localize('paste', \"Paste\"), null, true, () => document.execCommand('paste') && TPromise.as(true)),\n\tnew Separator(),\n\tnew Action('editor.action.selectAll', nls.localize('selectAll', \"Select All\"), null, true, () => document.execCommand('selectAll') && TPromise.as(true))\n];\n\nexport class ElectronIntegration {\n\n\tconstructor(\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWindowService private windowService: IWindowService,\n\t\t@IPartService private partService: IPartService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@ITelemetryService private telemetryService: ITelemetryService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService\n\t) {\n\t}\n\n\tpublic integrate(shellContainer: HTMLElement): void {\n\n\t\t// Register the active window\n\t\tlet activeWindow = this.instantiationService.createInstance(win.ElectronWindow, currentWindow, shellContainer);\n\t\tthis.windowService.registerWindow(activeWindow);\n\n\t\t// Support runAction event\n\t\tipc.on('vscode:runAction', (event, actionId: string) => {\n\t\t\tthis.keybindingService.executeCommand(actionId, { from: 'menu' }).done(undefined, err => this.messageService.show(Severity.Error, err));\n\t\t});\n\n\t\t// Support options change\n\t\tipc.on('vscode:optionsChange', (event, options: string) => {\n\t\t\tlet optionsData = JSON.parse(options);\n\t\t\tfor (let key in optionsData) {\n\t\t\t\tif (optionsData.hasOwnProperty(key)) {\n\t\t\t\t\tlet value = optionsData[key];\n\t\t\t\t\tthis.contextService.updateOptions(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Support resolve keybindings event\n\t\tipc.on('vscode:resolveKeybindings', (event, rawActionIds: string) => {\n\t\t\tlet actionIds: string[] = [];\n\t\t\ttry {\n\t\t\t\tactionIds = JSON.parse(rawActionIds);\n\t\t\t} catch (error) {\n\t\t\t\t// should not happen\n\t\t\t}\n\n\t\t\t// Resolve keys using the keybinding service and send back to browser process\n\t\t\tthis.resolveKeybindings(actionIds).done((keybindings) => {\n\t\t\t\tif (keybindings.length) {\n\t\t\t\t\tipc.send('vscode:keybindingsResolved', JSON.stringify(keybindings));\n\t\t\t\t}\n\t\t\t}, () => errors.onUnexpectedError);\n\t\t});\n\n\t\tipc.on('vscode:telemetry', (event, { eventName, data }) => {\n\t\t\tthis.telemetryService.publicLog(eventName, data);\n\t\t});\n\n\t\tipc.on('vscode:reportError', (event, error) => {\n\t\t\tif (error) {\n\t\t\t\tlet errorParsed = JSON.parse(error);\n\t\t\t\terrorParsed.mainProcess = true;\n\t\t\t\terrors.onUnexpectedError(errorParsed);\n\t\t\t}\n\t\t});\n\n\t\t// Emit event when vscode has loaded\n\t\tthis.partService.joinCreation().then(() => {\n\t\t\tipc.send('vscode:workbenchLoaded', this.windowService.getWindowId());\n\t\t});\n\n\t\t// Message support\n\t\tipc.on('vscode:showInfoMessage', (event, message: string) => {\n\t\t\tthis.messageService.show(Severity.Info, message);\n\t\t});\n\n\t\t// Configuration changes\n\t\tlet previousConfiguredZoomLevel: number;\n\t\tthis.configurationService.addListener(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => {\n\t\t\tlet windowConfig: IWindowConfiguration = e.config;\n\n\t\t\tlet newZoomLevel = 0;\n\t\t\tif (windowConfig.window && typeof windowConfig.window.zoomLevel === 'number') {\n\t\t\t\tnewZoomLevel = windowConfig.window.zoomLevel;\n\n\t\t\t\t// Leave early if the configured zoom level did not change (https://github.com/Microsoft/vscode/issues/1536)\n\t\t\t\tif (previousConfiguredZoomLevel === newZoomLevel) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tpreviousConfiguredZoomLevel = newZoomLevel;\n\t\t\t}\n\n\t\t\tif (webFrame.getZoomLevel() !== newZoomLevel) {\n\t\t\t\twebFrame.setZoomLevel(newZoomLevel);\n\t\t\t}\n\t\t});\n\n\t\t// Context menu support in input/textarea\n\t\twindow.document.addEventListener('contextmenu', (e) => {\n\t\t\tif (e.target instanceof HTMLElement) {\n\t\t\t\tconst target = <HTMLElement>e.target;\n\t\t\t\tif (target.nodeName && (target.nodeName.toLowerCase() === 'input' || target.nodeName.toLowerCase() === 'textarea')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tthis.contextMenuService.showContextMenu({\n\t\t\t\t\t\tgetAnchor: () => target,\n\t\t\t\t\t\tgetActions: () => TPromise.as(TextInputActions),\n\t\t\t\t\t\tgetKeyBinding: (action) => {\n\t\t\t\t\t\t\tvar opts = this.keybindingService.lookupKeybindings(action.id);\n\t\t\t\t\t\t\tif (opts.length > 0) {\n\t\t\t\t\t\t\t\treturn opts[0]; // only take the first one\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate resolveKeybindings(actionIds: string[]): TPromise<{ id: string; binding: number; }[]> {\n\t\treturn this.partService.joinCreation().then(() => {\n\t\t\treturn arrays.coalesce(actionIds.map((id) => {\n\t\t\t\tlet bindings = this.keybindingService.lookupKeybindings(id);\n\n\t\t\t\t// return the first binding that can be represented by electron\n\t\t\t\tfor (let i = 0; i < bindings.length; i++) {\n\t\t\t\t\tlet binding = bindings[i];\n\t\t\t\t\tlet electronAccelerator = this.keybindingService.getElectronAcceleratorFor(binding);\n\t\t\t\t\tif (electronAccelerator) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\tbinding: binding.value\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t}));\n\t\t});\n\t}\n}"]}