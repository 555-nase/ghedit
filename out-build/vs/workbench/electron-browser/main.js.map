{"version":3,"file":"vs/workbench/electron-browser/main.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/electron-browser/main.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport {WorkbenchShell} from 'vs/workbench/electron-browser/shell';\nimport {IOptions, IGlobalSettings} from 'vs/workbench/common/options';\nimport errors = require('vs/base/common/errors');\nimport platform = require('vs/base/common/platform');\nimport paths = require('vs/base/common/paths');\nimport timer = require('vs/base/common/timer');\nimport {assign} from 'vs/base/common/objects';\nimport uri from 'vs/base/common/uri';\nimport strings = require('vs/base/common/strings');\nimport {IResourceInput} from 'vs/platform/editor/common/editor';\nimport {IEnv} from 'vs/base/node/env';\nimport {EventService} from 'vs/platform/event/common/eventService';\nimport {WorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IWorkspace, IConfiguration, IEnvironment} from 'vs/platform/workspace/common/workspace';\nimport {ConfigurationService} from 'vs/workbench/services/configuration/node/configurationService';\n\nimport path = require('path');\nimport fs = require('fs');\n\nimport gracefulFs = require('graceful-fs');\ngracefulFs.gracefulify(fs);\n\nconst timers = (<any>window).MonacoEnvironment.timers;\nconst domContentLoaded: Function = (<any>winjs).Utilities.ready;\n\nexport interface IPath {\n\tfilePath: string;\n\tlineNumber?: number;\n\tcolumnNumber?: number;\n}\n\nexport interface IMainEnvironment extends IEnvironment {\n\tworkspacePath?: string;\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n\textensionsToInstall?: string[];\n\tuserEnv: IEnv;\n}\n\nexport function startup(environment: IMainEnvironment, globalSettings: IGlobalSettings): winjs.TPromise<void> {\n\n\t// Inherit the user environment\n\tassign(process.env, environment.userEnv);\n\n\t// Shell Configuration\n\tlet shellConfiguration: IConfiguration = {\n\t\tenv: environment\n\t};\n\n\t// Shell Options\n\tlet filesToOpen = environment.filesToOpen && environment.filesToOpen.length ? toInputs(environment.filesToOpen) : null;\n\tlet filesToCreate = environment.filesToCreate && environment.filesToCreate.length ? toInputs(environment.filesToCreate) : null;\n\tlet filesToDiff = environment.filesToDiff && environment.filesToDiff.length ? toInputs(environment.filesToDiff) : null;\n\tlet shellOptions: IOptions = {\n\t\tsingleFileMode: !environment.workspacePath,\n\t\tfilesToOpen: filesToOpen,\n\t\tfilesToCreate: filesToCreate,\n\t\tfilesToDiff: filesToDiff,\n\t\textensionsToInstall: environment.extensionsToInstall,\n\t\tglobalSettings: globalSettings\n\t};\n\n\tif (environment.enablePerformance) {\n\t\ttimer.ENABLE_TIMER = true;\n\t}\n\n\t// Open workbench\n\treturn openWorkbench(getWorkspace(environment), shellConfiguration, shellOptions);\n}\n\nfunction toInputs(paths: IPath[]): IResourceInput[] {\n\treturn paths.map(p => {\n\t\tlet input = <IResourceInput>{\n\t\t\tresource: uri.file(p.filePath)\n\t\t};\n\n\t\tif (p.lineNumber) {\n\t\t\tinput.options = {\n\t\t\t\tselection: {\n\t\t\t\t\tstartLineNumber: p.lineNumber,\n\t\t\t\t\tstartColumn: p.columnNumber\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\treturn input;\n\t});\n}\n\nfunction getWorkspace(environment: IMainEnvironment): IWorkspace {\n\tif (!environment.workspacePath) {\n\t\treturn null;\n\t}\n\n\tlet realWorkspacePath = path.normalize(fs.realpathSync(environment.workspacePath));\n\tif (paths.isUNC(realWorkspacePath) && strings.endsWith(realWorkspacePath, paths.nativeSep)) {\n\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t// we never ever want trailing slashes as our workspace path unless\n\t\t// someone opens root (\"/\").\n\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\trealWorkspacePath = strings.rtrim(realWorkspacePath, paths.nativeSep);\n\t}\n\n\tlet workspaceResource = uri.file(realWorkspacePath);\n\tlet folderName = path.basename(realWorkspacePath) || realWorkspacePath;\n\tlet folderStat = fs.statSync(realWorkspacePath);\n\n\tlet workspace: IWorkspace = {\n\t\t'resource': workspaceResource,\n\t\t'id': platform.isLinux ? realWorkspacePath : realWorkspacePath.toLowerCase(),\n\t\t'name': folderName,\n\t\t'uid': platform.isLinux ? folderStat.ino : folderStat.birthtime.getTime(), // On Linux, birthtime is ctime, so we cannot use it! We use the ino instead!\n\t\t'mtime': folderStat.mtime.getTime()\n\t};\n\n\treturn workspace;\n}\n\nfunction openWorkbench(workspace: IWorkspace, configuration: IConfiguration, options: IOptions): winjs.TPromise<void> {\n\tlet eventService = new EventService();\n\tlet contextService = new WorkspaceContextService(eventService, workspace, configuration, options);\n\tlet configurationService = new ConfigurationService(contextService, eventService);\n\n\t// Since the configuration service is one of the core services that is used in so many places, we initialize it\n\t// right before startup of the workbench shell to have its data ready for consumers\n\treturn configurationService.initialize().then(() => {\n\t\ttimers.beforeReady = new Date();\n\n\t\treturn domContentLoaded(() => {\n\t\t\ttimers.afterReady = new Date();\n\n\t\t\t// Open Shell\n\t\t\tlet beforeOpen = new Date();\n\t\t\tlet shell = new WorkbenchShell(document.body, workspace, {\n\t\t\t\tconfigurationService,\n\t\t\t\teventService,\n\t\t\t\tcontextService\n\t\t\t}, configuration, options);\n\t\t\tshell.open();\n\n\t\t\tshell.joinCreation().then(() => {\n\t\t\t\ttimer.start(timer.Topic.STARTUP, 'Open Shell, Viewlet & Editor', beforeOpen, 'Workbench has opened after this event with viewlet and editor restored').stop();\n\t\t\t});\n\n\t\t\t// Inform user about loading issues from the loader\n\t\t\t(<any>self).require.config({\n\t\t\t\tonError: (err: any) => {\n\t\t\t\t\tif (err.errorCode === 'load') {\n\t\t\t\t\t\tshell.onUnexpectedError(errors.loaderError(err));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, true);\n\t});\n}"]}