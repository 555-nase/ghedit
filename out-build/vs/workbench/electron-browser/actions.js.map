{"version":3,"sources":["vs/workbench/electron-browser/actions.ts"],"names":[],"mappings":"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","file":"vs/workbench/electron-browser/actions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport timer = require('vs/base/common/timer');\nimport paths = require('vs/base/common/paths');\nimport {Action} from 'vs/base/common/actions';\nimport {IWindowService} from 'vs/workbench/services/window/electron-browser/windowService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport nls = require('vs/nls');\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\nimport {IWindowConfiguration} from 'vs/workbench/electron-browser/window';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\n\nimport {ipcRenderer as ipc, webFrame, remote} from 'electron';\n\n// --- actions\n\nexport class CloseEditorAction extends Action {\n\n\tpublic static ID = 'workbench.action.closeActiveEditor';\n\tpublic static LABEL = nls.localize('closeActiveEditor', \"Close Editor\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IWindowService private windowService: IWindowService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<any> {\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor) {\n\t\t\treturn this.editorService.closeEditor(activeEditor);\n\t\t}\n\n\t\tthis.windowService.getWindow().close();\n\n\t\treturn TPromise.as(false);\n\t}\n}\n\nexport class CloseWindowAction extends Action {\n\n\tpublic static ID = 'workbench.action.closeWindow';\n\tpublic static LABEL = nls.localize('closeWindow', \"Close Window\");\n\n\tconstructor(id: string, label: string, @IWindowService private windowService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tthis.windowService.getWindow().close();\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class CloseFolderAction extends Action {\n\n\tpublic static ID = 'workbench.action.closeFolder';\n\tpublic static LABEL = nls.localize('closeFolder', \"Close Folder\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IWindowService private windowService: IWindowService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tif (this.contextService.getWorkspace()) {\n\t\t\tipc.send('vscode:closeFolder', this.windowService.getWindowId()); // handled from browser process\n\t\t} else {\n\t\t\tthis.messageService.show(Severity.Info, nls.localize('noFolderOpened', \"There is currently no folder opened in this instance to close.\"));\n\t\t}\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class NewWindowAction extends Action {\n\n\tpublic static ID = 'workbench.action.newWindow';\n\tpublic static LABEL = nls.localize('newWindow', \"New Window\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWindowService private windowService: IWindowService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tthis.windowService.getWindow().openNew();\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ToggleFullScreenAction extends Action {\n\n\tpublic static ID = 'workbench.action.toggleFullScreen';\n\tpublic static LABEL = nls.localize('toggleFullScreen', \"Toggle Full Screen\");\n\n\tconstructor(id: string, label: string, @IWindowService private windowService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tipc.send('vscode:toggleFullScreen', this.windowService.getWindowId());\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ToggleMenuBarAction extends Action {\n\n\tpublic static ID = 'workbench.action.toggleMenuBar';\n\tpublic static LABEL = nls.localize('toggleMenuBar', \"Toggle Menu Bar\");\n\n\tconstructor(id: string, label: string, @IWindowService private windowService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tipc.send('vscode:toggleMenuBar', this.windowService.getWindowId());\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ToggleDevToolsAction extends Action {\n\n\tpublic static ID = 'workbench.action.toggleDevTools';\n\tpublic static LABEL = nls.localize('toggleDevTools', \"Toggle Developer Tools\");\n\n\tconstructor(id: string, label: string, @IWindowService private windowService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tipc.send('vscode:toggleDevTools', this.windowService.getWindowId());\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ZoomInAction extends Action {\n\n\tpublic static ID = 'workbench.action.zoomIn';\n\tpublic static LABEL = nls.localize('zoomIn', \"Zoom in\");\n\n\tconstructor(id: string, label: string) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\twebFrame.setZoomLevel(webFrame.getZoomLevel() + 1);\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport abstract class BaseZoomAction extends Action {\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\treturn TPromise.as(false); // Subclass to implement\n\t}\n\n\tprotected getConfiguredZoomLevel(): number {\n\t\tconst windowConfig = this.configurationService.getConfiguration<IWindowConfiguration>();\n\t\tif (windowConfig.window && typeof windowConfig.window.zoomLevel === 'number') {\n\t\t\treturn windowConfig.window.zoomLevel;\n\t\t}\n\n\t\treturn 0; // default\n\t}\n}\n\nexport class ZoomOutAction extends BaseZoomAction {\n\n\tpublic static ID = 'workbench.action.zoomOut';\n\tpublic static LABEL = nls.localize('zoomOut', \"Zoom out\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, configurationService);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tconst level = this.getConfiguredZoomLevel();\n\n\t\tlet newZoomLevelCandiate = webFrame.getZoomLevel() - 1;\n\t\tif (newZoomLevelCandiate < 0 && newZoomLevelCandiate < level) {\n\t\t\tnewZoomLevelCandiate = Math.min(level, 0); // do not zoom below configured level or below 0\n\t\t}\n\n\t\twebFrame.setZoomLevel(newZoomLevelCandiate);\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ZoomResetAction extends BaseZoomAction {\n\n\tpublic static ID = 'workbench.action.zoomReset';\n\tpublic static LABEL = nls.localize('zoomReset', \"Reset Zoom\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(id, label, configurationService);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tconst level = this.getConfiguredZoomLevel();\n\t\twebFrame.setZoomLevel(level);\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\n/* Copied from loader.ts */\nenum LoaderEventType {\n\tLoaderAvailable = 1,\n\n\tBeginLoadingScript = 10,\n\tEndLoadingScriptOK = 11,\n\tEndLoadingScriptError = 12,\n\n\tBeginInvokeFactory = 21,\n\tEndInvokeFactory = 22,\n\n\tNodeBeginEvaluatingScript = 31,\n\tNodeEndEvaluatingScript = 32,\n\n\tNodeBeginNativeRequire = 33,\n\tNodeEndNativeRequire = 34\n}\ninterface ILoaderEvent {\n\ttype: LoaderEventType;\n\ttimestamp: number;\n\tdetail: string;\n}\nexport class ShowStartupPerformance extends Action {\n\n\tpublic static ID = 'workbench.action.appPerf';\n\tpublic static LABEL = nls.localize('appPerf', \"Startup Performance\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWindowService private windowService: IWindowService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(id, label);\n\n\t\tthis.enabled = contextService.getConfiguration().env.enablePerformance;\n\t}\n\n\tprivate _analyzeLoaderTimes(): any[] {\n\t\tlet stats = <ILoaderEvent[]>(<any>require).getStats();\n\t\tlet result = [];\n\n\t\tlet total = 0;\n\n\t\tfor (let i = 0, len = stats.length; i < len; i++) {\n\t\t\tif (stats[i].type === LoaderEventType.NodeEndNativeRequire) {\n\t\t\t\tif (stats[i - 1].type === LoaderEventType.NodeBeginNativeRequire && stats[i - 1].detail === stats[i].detail) {\n\t\t\t\t\tlet entry: any = {};\n\t\t\t\t\tentry['Event'] = 'nodeRequire ' + stats[i].detail;\n\t\t\t\t\tentry['Took (ms)'] = (stats[i].timestamp - stats[i - 1].timestamp);\n\t\t\t\t\ttotal += (stats[i].timestamp - stats[i - 1].timestamp);\n\t\t\t\t\tentry['Start (ms)'] = '**' + stats[i - 1].timestamp;\n\t\t\t\t\tentry['End (ms)'] = '**' + stats[i - 1].timestamp;\n\t\t\t\t\tresult.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (total > 0) {\n\t\t\tlet entry: any = {};\n\t\t\tentry['Event'] = '===nodeRequire TOTAL';\n\t\t\tentry['Took (ms)'] = total;\n\t\t\tentry['Start (ms)'] = '**';\n\t\t\tentry['End (ms)'] = '**';\n\t\t\tresult.push(entry);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet table: any[] = [];\n\t\ttable.push(...this._analyzeLoaderTimes());\n\n\t\tlet start = Math.round(remote.getGlobal('programStart') || remote.getGlobal('vscodeStart'));\n\t\tlet windowShowTime = Math.round(remote.getGlobal('windowShow'));\n\n\t\tlet lastEvent: timer.ITimerEvent;\n\t\tlet events = timer.getTimeKeeper().getCollectedEvents();\n\t\tevents.forEach((e) => {\n\t\t\tif (e.topic === 'Startup') {\n\t\t\t\tlastEvent = e;\n\t\t\t\tlet entry: any = {};\n\n\t\t\t\tentry['Event'] = e.name;\n\t\t\t\tentry['Took (ms)'] = e.stopTime.getTime() - e.startTime.getTime();\n\t\t\t\tentry['Start (ms)'] = Math.max(e.startTime.getTime() - start, 0);\n\t\t\t\tentry['End (ms)'] = e.stopTime.getTime() - start;\n\n\t\t\t\ttable.push(entry);\n\t\t\t}\n\t\t});\n\n\t\ttable.push({ Event: '---------------------------' });\n\n\t\tlet windowShowEvent: any = {};\n\t\twindowShowEvent['Event'] = 'Show Window at';\n\t\twindowShowEvent['Start (ms)'] = windowShowTime - start;\n\t\ttable.push(windowShowEvent);\n\n\t\tlet sum: any = {};\n\t\tsum['Event'] = 'Total';\n\t\tsum['Took (ms)'] = lastEvent.stopTime.getTime() - start;\n\t\ttable.push(sum);\n\n\n\t\t// Show dev tools\n\t\tthis.windowService.getWindow().openDevTools();\n\n\t\t// Print to console\n\t\tsetTimeout(() => {\n\t\t\tconsole.warn('Run the action again if you do not see the numbers!');\n\t\t\t(<any>console).table(table);\n\t\t}, 1000);\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ReloadWindowAction extends Action {\n\n\tpublic static ID = 'workbench.action.reloadWindow';\n\tpublic static LABEL = nls.localize('reloadWindow', \"Reload Window\");\n\n\tconstructor(id: string, label: string, @IWindowService private windowService: IWindowService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tthis.windowService.getWindow().reload();\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class OpenRecentAction extends Action {\n\n\tpublic static ID = 'workbench.action.openRecent';\n\tpublic static LABEL = nls.localize('openRecent', \"Open Recent\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IQuickOpenService private quickOpenService: IQuickOpenService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tconst recentFolders = this.contextService.getConfiguration().env.recentFolders;\n\t\tconst recentFiles = this.contextService.getConfiguration().env.recentFiles;\n\n\t\tlet folderPicks = recentFolders.map((p, index) => {\n\t\t\treturn {\n\t\t\t\tlabel: paths.basename(p),\n\t\t\t\tdescription: paths.dirname(p),\n\t\t\t\tpath: p,\n\t\t\t\tseparator: index === 0 ? { label: nls.localize('folders', \"folders\") } : void 0\n\t\t\t};\n\t\t});\n\n\t\tlet filePicks = recentFiles.map((p, index) => {\n\t\t\treturn {\n\t\t\t\tlabel: paths.basename(p),\n\t\t\t\tdescription: paths.dirname(p),\n\t\t\t\tpath: p,\n\t\t\t\tseparator: index === 0 ? { label: nls.localize('files', \"files\"), border: true } : void 0\n\t\t\t};\n\t\t});\n\n\t\tconst hasWorkspace = !!this.contextService.getWorkspace();\n\n\t\treturn this.quickOpenService.pick(folderPicks.concat(...filePicks), {\n\t\t\tautoFocus: { autoFocusFirstEntry: !hasWorkspace, autoFocusSecondEntry: hasWorkspace },\n\t\t\tplaceHolder: nls.localize('openRecentPlaceHolder', \"Select a path to open\"),\n\t\t\tmatchOnDescription: true\n\t\t}).then(p => {\n\t\t\tif (p) {\n\t\t\t\tipc.send('vscode:windowOpen', [p.path]);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n}\n\nexport class CloseMessagesAction extends Action {\n\n\tpublic static ID = 'workbench.action.closeMessages';\n\tpublic static LABEL = nls.localize('closeMessages', \"Close Notification Messages\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\n\t\t// Close any Message if visible\n\t\tthis.messageService.hideAll();\n\n\t\t// Restore focus if we got an editor\n\t\tconst editor = this.editorService.getActiveEditor();\n\t\tif (editor) {\n\t\t\teditor.focus();\n\t\t}\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\n// --- commands\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: '_workbench.ipc',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(0),\n\thandler(accessor: ServicesAccessor, args: [string, any[]]) {\n\t\tconst ipcMessage = args[0];\n\t\tconst ipcArgs = args[1];\n\n\t\tif (ipcMessage && Array.isArray(ipcArgs)) {\n\t\t\tipc.send(ipcMessage, ...ipcArgs);\n\t\t} else {\n\t\t\tipc.send(ipcMessage);\n\t\t}\n\t},\n\tcontext: undefined,\n\tprimary: undefined\n});"]}