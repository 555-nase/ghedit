{"version":3,"sources":["vs/workbench/browser/parts/activitybar/activitybarPart.ts"],"names":[],"mappings":"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","file":"vs/workbench/browser/parts/activitybar/activitybarPart.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/activityBarPart';\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Builder, $} from 'vs/base/browser/builder';\nimport {Action} from 'vs/base/common/actions';\nimport errors = require('vs/base/common/errors');\nimport {ActionsOrientation, ActionBar, IActionItem} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {ToolBar} from 'vs/base/browser/ui/toolbar/toolbar';\nimport {Registry} from 'vs/platform/platform';\nimport {CompositeEvent, EventType} from 'vs/workbench/common/events';\nimport {ViewletDescriptor, ViewletRegistry, Extensions as ViewletExtensions} from 'vs/workbench/browser/viewlet';\nimport {Part} from 'vs/workbench/browser/part';\nimport {ActivityAction, ActivityActionItem} from 'vs/workbench/browser/parts/activitybar/activityAction';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IActivityService, IBadge} from 'vs/workbench/services/activity/common/activityService';\nimport {IPartService} from 'vs/workbench/services/part/common/partService';\nimport {IContextMenuService} from 'vs/platform/contextview/browser/contextView';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\n\nexport class ActivitybarPart extends Part implements IActivityService {\n\tpublic serviceId = IActivityService;\n\tprivate viewletSwitcherBar: ActionBar;\n\tprivate globalToolBar: ToolBar;\n\tprivate activityActionItems: { [actionId: string]: IActionItem; };\n\tprivate viewletIdToActions: { [viewletId: string]: ActivityAction; };\n\tprivate instantiationService: IInstantiationService;\n\n\tconstructor(\n\t\tprivate viewletService: IViewletService,\n\t\tprivate messageService: IMessageService,\n\t\tprivate telemetryService: ITelemetryService,\n\t\tprivate eventService: IEventService,\n\t\tprivate contextMenuService: IContextMenuService,\n\t\tprivate keybindingService: IKeybindingService,\n\t\tid: string\n\t) {\n\t\tsuper(id);\n\n\t\tthis.activityActionItems = {};\n\t\tthis.viewletIdToActions = {};\n\n\t\tthis.registerListeners();\n\t}\n\n\tpublic setInstantiationService(service: IInstantiationService): void {\n\t\tthis.instantiationService = service;\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Activate viewlet action on opening of a viewlet\n\t\tthis.toUnbind.push(this.eventService.addListener(EventType.COMPOSITE_OPENING, (e: CompositeEvent) => this.onCompositeOpening(e)));\n\n\t\t// Deactivate viewlet action on close\n\t\tthis.toUnbind.push(this.eventService.addListener(EventType.COMPOSITE_CLOSED, (e: CompositeEvent) => this.onCompositeClosed(e)));\n\t}\n\n\tprivate onCompositeOpening(e: CompositeEvent): void {\n\t\tif (this.viewletIdToActions[e.compositeId]) {\n\t\t\tthis.viewletIdToActions[e.compositeId].activate();\n\n\t\t\t// There can only be one active viewlet action\n\t\t\tfor (let key in this.viewletIdToActions) {\n\t\t\t\tif (this.viewletIdToActions.hasOwnProperty(key) && key !== e.compositeId) {\n\t\t\t\t\tthis.viewletIdToActions[key].deactivate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onCompositeClosed(e: CompositeEvent): void {\n\t\tif (this.viewletIdToActions[e.compositeId]) {\n\t\t\tthis.viewletIdToActions[e.compositeId].deactivate();\n\t\t}\n\t}\n\n\tpublic showActivity(viewletId: string, badge: IBadge, clazz?: string): void {\n\t\tlet action = this.viewletIdToActions[viewletId];\n\t\tif (action) {\n\t\t\taction.setBadge(badge);\n\t\t\tif (clazz) {\n\t\t\t\taction.class = clazz;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clearActivity(viewletId: string): void {\n\t\tthis.showActivity(viewletId, null);\n\t}\n\n\tpublic createContentArea(parent: Builder): Builder {\n\t\tlet $el = $(parent);\n\t\tlet $result = $('.content').appendTo($el);\n\n\t\t// Top Actionbar with action items for each viewlet action\n\t\tthis.createViewletSwitcher($result.clone());\n\n\t\t// Bottom Toolbar with action items for global actions\n\t\t// this.createGlobalToolBarArea($result.clone()); // not used currently\n\n\t\treturn $result;\n\t}\n\n\tprivate createViewletSwitcher(div: Builder): void {\n\n\t\t// Viewlet switcher is on top\n\t\tthis.viewletSwitcherBar = new ActionBar(div, {\n\t\t\tactionItemProvider: (action: Action) => this.activityActionItems[action.id],\n\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\tariaLabel: nls.localize('activityBarAriaLabel', \"Active View Switcher\")\n\t\t});\n\t\tthis.viewletSwitcherBar.getContainer().addClass('position-top');\n\n\t\t// Build Viewlet Actions in correct order\n\t\tlet activeViewlet = this.viewletService.getActiveViewlet();\n\t\tlet registry = (<ViewletRegistry>Registry.as(ViewletExtensions.Viewlets));\n\t\tlet viewletActions: Action[] = registry.getViewlets()\n\t\t\t.sort((v1: ViewletDescriptor, v2: ViewletDescriptor) => v1.order - v2.order)\n\t\t\t.map((viewlet: ViewletDescriptor) => {\n\t\t\t\tlet action = this.instantiationService.createInstance(ViewletActivityAction, viewlet.id + '.activity-bar-action', viewlet);\n\n\t\t\t\tlet keybinding: string = null;\n\t\t\t\tlet keys = this.keybindingService.lookupKeybindings(viewlet.id).map(k => this.keybindingService.getLabelFor(k));\n\t\t\t\tif (keys && keys.length) {\n\t\t\t\t\tkeybinding = keys[0];\n\t\t\t\t}\n\n\t\t\t\tthis.activityActionItems[action.id] = new ActivityActionItem(action, viewlet.name, keybinding);\n\t\t\t\tthis.viewletIdToActions[viewlet.id] = action;\n\n\t\t\t\t// Mark active viewlet action as active\n\t\t\t\tif (activeViewlet && activeViewlet.getId() === viewlet.id) {\n\t\t\t\t\taction.activate();\n\t\t\t\t}\n\n\t\t\t\treturn action;\n\t\t\t}\n\t\t\t\t);\n\n\t\t// Add to viewlet switcher\n\t\tthis.viewletSwitcherBar.push(viewletActions, { label: true, icon: true });\n\t}\n\n\t// private createGlobalToolBarArea(div: Builder): void {\n\n\t// \t// Global action bar is on the bottom\n\t// \tthis.globalToolBar = new ToolBar(div.getHTMLElement(), this.contextMenuService, {\n\t// \t\tactionItemProvider: (action: Action) => this.activityActionItems[action.id],\n\t// \t\torientation: ActionsOrientation.VERTICAL\n\t// \t});\n\t// \tthis.globalToolBar.getContainer().addClass('global');\n\n\t// \tthis.globalToolBar.actionRunner.addListener(events.EventType.RUN, (e: any) => {\n\n\t// \t\t// Check for Error\n\t// \t\tif (e.error && !errors.isPromiseCanceledError(e.error)) {\n\t// \t\t\tthis.messageService.show(Severity.Error, e.error);\n\t// \t\t}\n\n\t// \t\t// Log in telemetry\n\t// \t\tif (this.telemetryService) {\n\t// \t\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: e.action.id, from: 'activityBar' });\n\t// \t\t}\n\t// \t});\n\n\t// \t// Build Global Actions in correct order\n\t// \tlet primaryActions = this.getGlobalActions(true);\n\t// \tlet secondaryActions = this.getGlobalActions(false);\n\n\t// \tif (primaryActions.length + secondaryActions.length > 0) {\n\t// \t\tthis.globalToolBar.getContainer().addClass('position-bottom');\n\t// \t}\n\n\t// \t// Add to global action bar\n\t// \tthis.globalToolBar.setActions(prepareActions(primaryActions), prepareActions(secondaryActions))();\n\t// }\n\n\t// private getGlobalActions(primary: boolean): IAction[] {\n\t// \tlet actionBarRegistry = <IActionBarRegistry>Registry.as(ActionBarExtensions.Actionbar);\n\n\t// \t// Collect actions from actionbar contributor\n\t// \tlet actions: IAction[];\n\t// \tif (primary) {\n\t// \t\tactions = actionBarRegistry.getActionBarActionsForContext(Scope.GLOBAL, CONTEXT);\n\t// \t} else {\n\t// \t\tactions = actionBarRegistry.getSecondaryActionBarActionsForContext(Scope.GLOBAL, CONTEXT);\n\t// \t}\n\n\t// \treturn actions.map((action: Action) => {\n\t// \t\tif (primary) {\n\t// \t\t\tlet keybinding: string = null;\n\t// \t\t\tlet keys = this.keybindingService.lookupKeybindings(action.id).map(k => this.keybindingService.getLabelFor(k));\n\t// \t\t\tif (keys && keys.length) {\n\t// \t\t\t\tkeybinding = keys[0];\n\t// \t\t\t}\n\n\t// \t\t\tlet actionItem = actionBarRegistry.getActionItemForContext(Scope.GLOBAL, CONTEXT, action);\n\n\t// \t\t\tif (!actionItem) {\n\t// \t\t\t\tactionItem = new ActivityActionItem(action, action.label, keybinding);\n\t// \t\t\t}\n\n\t// \t\t\tif (actionItem instanceof ActivityActionItem) {\n\t// \t\t\t\t(<ActivityActionItem> actionItem).keybinding = keybinding;\n\t// \t\t\t}\n\n\t// \t\t\tthis.activityActionItems[action.id] = actionItem;\n\t// \t\t}\n\n\t// \t\treturn action;\n\t// \t});\n\t// }\n\n\tpublic dispose(): void {\n\t\tif (this.viewletSwitcherBar) {\n\t\t\tthis.viewletSwitcherBar.dispose();\n\t\t\tthis.viewletSwitcherBar = null;\n\t\t}\n\n\t\tif (this.globalToolBar) {\n\t\t\tthis.globalToolBar.dispose();\n\t\t\tthis.globalToolBar = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nclass ViewletActivityAction extends ActivityAction {\n\tprivate static preventDoubleClickDelay = 300;\n\tprivate static lastRun: number = 0;\n\n\tprivate viewlet: ViewletDescriptor;\n\n\tconstructor(\n\t\tid: string, viewlet: ViewletDescriptor,\n\t\t@IViewletService private viewletService: IViewletService,\n\t\t@IPartService private partService: IPartService\n\t) {\n\t\tsuper(id, viewlet.name, viewlet.cssClass);\n\n\t\tthis.viewlet = viewlet;\n\t}\n\n\tpublic run(): TPromise<any> {\n\n\t\t// cheap trick to prevent accident trigger on a doubleclick (to help nervous people)\n\t\tlet now = new Date().getTime();\n\t\tif (now - ViewletActivityAction.lastRun < ViewletActivityAction.preventDoubleClickDelay) {\n\t\t\treturn TPromise.as(true);\n\t\t}\n\t\tViewletActivityAction.lastRun = now;\n\n\t\tlet sideBarHidden = this.partService.isSideBarHidden();\n\t\tlet activeViewlet = this.viewletService.getActiveViewlet();\n\n\t\t// Hide sidebar if selected viewlet already visible\n\t\tif (!sideBarHidden && activeViewlet && activeViewlet.getId() === this.viewlet.id) {\n\t\t\tthis.partService.setSideBarHidden(true);\n\t\t}\n\n\t\t// Open viewlet and focus it\n\t\telse {\n\t\t\tthis.viewletService.openViewlet(this.viewlet.id, true).done(null, errors.onUnexpectedError);\n\t\t\tthis.activate();\n\t\t}\n\n\t\treturn TPromise.as(true);\n\t}\n}"]}