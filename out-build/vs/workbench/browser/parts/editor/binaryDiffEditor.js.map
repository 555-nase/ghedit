{"version":3,"sources":["vs/workbench/browser/parts/editor/binaryDiffEditor.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;;IAEhG,YAAY,CAAC;IAmBb;;OAEG;IACH;QAA8C,4CAAU;QAiBvD,kCACoB,gBAAmC,EACrB,aAAsC;YAEvE,kBAAM,wBAAwB,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;YAFpB,kBAAa,GAAb,aAAa,CAAyB;QAGxE,CAAC;QAEM,2CAAQ,GAAf;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAoB,CAAC,CAAC;QAC7G,CAAC;QAEM,+CAAY,GAAnB,UAAoB,MAAe;YAAnC,iBAgCC;YA9BA,4BAA4B;YAC5B,IAAI,0BAA0B,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/D,0BAA0B,CAAC,SAAS,GAAG,kBAAkB,CAAC;YAC1D,IAAI,CAAC,mBAAmB,GAAG,WAAC,CAAC,0BAA0B,CAAC,CAAC;YACzD,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,4DAA4D;YAElG,yBAAyB;YACzB,IAAI,CAAC,cAAc,GAAG,IAAI,qCAAiB,CAAC,0BAA0B,CAAC,CAAC;YACxE,IAAI,CAAC,aAAa,GAAG,IAAI,yCAAiB,CAAC,0BAA0B,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC1I,MAAM,CAAC,cAAc,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;YACrE,WAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAE/D,OAAO;YACP,IAAI,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAC,CAAa,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAlB,CAAkB,CAAC,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,CAAC,CAAC;YACzD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;YAEzD,6BAA6B;YAC7B,IAAI,2BAA2B,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChE,2BAA2B,CAAC,SAAS,GAAG,kBAAkB,CAAC;YAC3D,IAAI,CAAC,oBAAoB,GAAG,WAAC,CAAC,2BAA2B,CAAC,CAAC;YAC3D,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,4DAA4D;YAEnG,0BAA0B;YAC1B,IAAI,CAAC,eAAe,GAAG,IAAI,qCAAiB,CAAC,2BAA2B,CAAC,CAAC;YAC1E,IAAI,CAAC,cAAc,GAAG,IAAI,yCAAiB,CAAC,2BAA2B,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;YAC7I,MAAM,CAAC,cAAc,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC;YACtE,WAAC,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAClE,CAAC;QAEM,2CAAQ,GAAf,UAAgB,KAAkB,EAAE,OAAsB;YAA1D,iBAiCC;YAhCA,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC/B,gBAAK,CAAC,QAAQ,YAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YAE/B,iBAAiB;YACjB,IAAI,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC;YAE7C,aAAa;YACb,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC3C,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAO,IAAI,CAAC,CAAC;YAChC,CAAC;YAED,2BAA2B;YAC3B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,UAAC,aAA8B;gBAE1G,wBAAwB;gBACxB,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,aAAa,YAAY,qCAAiB,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,aAAa,YAAY,qCAAiB,CAAC,CAAC,CAAC,CAAC;oBAChI,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAO,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAuE,CAAC,CAAC,CAAC;gBAClJ,CAAC;gBAED,8JAA8J;gBAC9J,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,EAAE,IAAI,KAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC;oBACnD,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAED,kBAAkB;gBAClB,IAAI,QAAQ,GAAsB,aAAa,CAAC,aAAa,CAAC;gBAC9D,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;gBAEnE,kBAAkB;gBAClB,IAAI,QAAQ,GAAsB,aAAa,CAAC,aAAa,CAAC;gBAC9D,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,8CAAW,GAAnB,UAAoB,IAAY,EAAE,QAAa,EAAE,UAAmB;YAEnE,8CAA8C;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,kBAAkB,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;gBACnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACpB,CAAC;YAED,yBAAyB;YACzB,IAAI,SAAS,GAAG,UAAU,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,oBAAoB,CAAC;YAClF,IAAI,UAAU,GAAG,UAAU,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;YAEzE,+BAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAC5D,CAAC;QAEM,6CAAU,GAAjB;YAEC,uBAAuB;YACvB,WAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;YACpC,WAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;YAErC,gBAAK,CAAC,UAAU,WAAE,CAAC;QACpB,CAAC;QAEM,yCAAM,GAAb,UAAc,SAAoB;YACjC,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAE3B,uFAAuF;YACvF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,SAAS,GAAG,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;gBAC7D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;YAC5D,CAAC;YAED,mBAAmB;YACnB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YAEnB,8CAA8C;YAC9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC;QAEO,mDAAgB,GAAxB;YAEC,sBAAsB;YACtB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC9E,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,oBAAoB,EAAE,CAAC;YAE3C,uBAAuB;YACvB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACtG,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC;YAC1C,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;QAC7C,CAAC;QAEO,kDAAe,GAAvB;YACC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QACxD,CAAC;QAEO,6CAAU,GAAlB,UAAmB,CAAa;YAE/B,yEAAyE;YACzE,IAAI,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC;YACjF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;YACxG,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,kBAAkB,GAAG,wBAAwB,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACnG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,wBAAwB,CAAC,mBAAmB,CAAC;YAC/F,CAAC;YAED,8CAA8C;YAC9C,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC;QAEO,gDAAa,GAArB;YACC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC;QAEO,8CAAW,GAAnB;YACC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YACnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC;QAEM,qDAAkB,GAAzB,UAA0B,IAAU;YACnC,MAAM,CAAC,CAAC,CAAC;QACV,CAAC;QAEM,sDAAmB,GAA1B,UAA2B,IAAU;YACpC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAChC,CAAC;QAEM,wDAAqB,GAA5B,UAA6B,IAAU;YACtC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC9B,CAAC;QAEM,wCAAK,GAAZ;YACC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QACtC,CAAC;QAEM,0CAAO,GAAd;YAEC,OAAO;YACP,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAEpB,oBAAoB;YACpB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAE/B,oBAAoB;YACpB,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YAEpC,gBAAK,CAAC,OAAO,WAAE,CAAC;QACjB,CAAC;QAnNa,2BAAE,GAAG,4CAA4C,CAAC;QAEjD,4CAAmB,GAAG,GAAG,CAAC;QAcxC;uBAAC,6BAAiB;uBACjB,uCAAuB;oCADN;QAoMpB,+BAAC;IAAD,CAtNA,AAsNC,CAtN6C,uBAAU,GAsNvD;IAtNY,gCAAwB,2BAsNpC,CAAA","file":"vs/workbench/browser/parts/editor/binaryDiffEditor.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/binarydiffeditor';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport URI from 'vs/base/common/uri';\nimport {Sash, ISashEvent, IVerticalSashLayoutProvider} from 'vs/base/browser/ui/sash/sash';\nimport {Dimension, Builder, $} from 'vs/base/browser/builder';\nimport {ResourceViewer} from 'vs/base/browser/ui/resourceviewer/resourceViewer';\nimport {IScrollableElement} from 'vs/base/browser/ui/scrollbar/scrollableElement';\nimport {ScrollableElement} from 'vs/base/browser/ui/scrollbar/scrollableElementImpl';\nimport {BaseEditor} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {EditorInput, EditorOptions} from 'vs/workbench/common/editor';\nimport {BinaryEditorModel} from 'vs/workbench/common/editor/binaryEditorModel';\nimport {DiffEditorModel} from 'vs/workbench/common/editor/diffEditorModel';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {DomNodeScrollable} from 'vs/base/browser/ui/scrollbar/domNodeScrollable';\n\n/**\n * An implementation of editor for diffing binary files like images or videos.\n */\nexport class BinaryResourceDiffEditor extends BaseEditor implements IVerticalSashLayoutProvider {\n\n\tpublic static ID = 'workbench.editors.binaryResourceDiffEditor';\n\n\tprivate static MIN_CONTAINER_WIDTH = 100;\n\n\tprivate leftBinaryContainer: Builder;\n\tprivate leftScrollable: DomNodeScrollable;\n\tprivate leftScrollbar: IScrollableElement;\n\tprivate rightBinaryContainer: Builder;\n\tprivate rightScrollable: DomNodeScrollable;\n\tprivate rightScrollbar: IScrollableElement;\n\tprivate sash: Sash;\n\tprivate dimension: Dimension;\n\tprivate leftContainerWidth: number;\n\tprivate startLeftContainerWidth: number;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper(BinaryResourceDiffEditor.ID, telemetryService);\n\t}\n\n\tpublic getTitle(): string {\n\t\treturn this.getInput() ? this.getInput().getName() : nls.localize('binaryDiffEditor', \"Binary Diff Viewer\");\n\t}\n\n\tpublic createEditor(parent: Builder): void {\n\n\t\t// Left Container for Binary\n\t\tlet leftBinaryContainerElement = document.createElement('div');\n\t\tleftBinaryContainerElement.className = 'binary-container';\n\t\tthis.leftBinaryContainer = $(leftBinaryContainerElement);\n\t\tthis.leftBinaryContainer.tabindex(0); // enable focus support from the editor part (do not remove)\n\n\t\t// Left Custom Scrollbars\n\t\tthis.leftScrollable = new DomNodeScrollable(leftBinaryContainerElement);\n\t\tthis.leftScrollbar = new ScrollableElement(leftBinaryContainerElement, this.leftScrollable, { horizontal: 'hidden', vertical: 'hidden' });\n\t\tparent.getHTMLElement().appendChild(this.leftScrollbar.getDomNode());\n\t\t$(this.leftScrollbar.getDomNode()).addClass('binarydiff-left');\n\n\t\t// Sash\n\t\tthis.sash = new Sash(parent.getHTMLElement(), this);\n\t\tthis.sash.addListener('start', () => this.onSashDragStart());\n\t\tthis.sash.addListener('change', (e: ISashEvent) => this.onSashDrag(e));\n\t\tthis.sash.addListener('end', () => this.onSashDragEnd());\n\t\tthis.sash.addListener('reset', () => this.onSashReset());\n\n\t\t// Right Container for Binary\n\t\tlet rightBinaryContainerElement = document.createElement('div');\n\t\trightBinaryContainerElement.className = 'binary-container';\n\t\tthis.rightBinaryContainer = $(rightBinaryContainerElement);\n\t\tthis.rightBinaryContainer.tabindex(0); // enable focus support from the editor part (do not remove)\n\n\t\t// Right Custom Scrollbars\n\t\tthis.rightScrollable = new DomNodeScrollable(rightBinaryContainerElement);\n\t\tthis.rightScrollbar = new ScrollableElement(rightBinaryContainerElement, this.rightScrollable, { horizontal: 'hidden', vertical: 'hidden' });\n\t\tparent.getHTMLElement().appendChild(this.rightScrollbar.getDomNode());\n\t\t$(this.rightScrollbar.getDomNode()).addClass('binarydiff-right');\n\t}\n\n\tpublic setInput(input: EditorInput, options: EditorOptions): TPromise<void> {\n\t\tlet oldInput = this.getInput();\n\t\tsuper.setInput(input, options);\n\n\t\t// Detect options\n\t\tlet forceOpen = options && options.forceOpen;\n\n\t\t// Same Input\n\t\tif (!forceOpen && input.matches(oldInput)) {\n\t\t\treturn TPromise.as<void>(null);\n\t\t}\n\n\t\t// Different Input (Reload)\n\t\treturn this.editorService.resolveEditorModel(input, true /* Reload */).then((resolvedModel: DiffEditorModel) => {\n\n\t\t\t// Assert model instance\n\t\t\tif (!(resolvedModel.originalModel instanceof BinaryEditorModel) || !(resolvedModel.modifiedModel instanceof BinaryEditorModel)) {\n\t\t\t\treturn TPromise.wrapError<void>(nls.localize('cannotDiffTextToBinary', \"Comparing binary files to non binary files is currently not supported\"));\n\t\t\t}\n\n\t\t\t// Assert that the current input is still the one we expect. This prevents a race condition when loading a diff takes long and another input was set meanwhile\n\t\t\tif (!this.getInput() || this.getInput() !== input) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Render original\n\t\t\tlet original = <BinaryEditorModel>resolvedModel.originalModel;\n\t\t\tthis.renderInput(original.getName(), original.getResource(), true);\n\n\t\t\t// Render modified\n\t\t\tlet modified = <BinaryEditorModel>resolvedModel.modifiedModel;\n\t\t\tthis.renderInput(modified.getName(), modified.getResource(), false);\n\t\t});\n\t}\n\n\tprivate renderInput(name: string, resource: URI, isOriginal: boolean): void {\n\n\t\t// Reset Sash to default 50/50 ratio if needed\n\t\tif (this.leftContainerWidth && this.dimension && this.leftContainerWidth !== this.dimension.width / 2) {\n\t\t\tthis.leftContainerWidth = this.dimension.width / 2;\n\t\t\tthis.layoutContainers();\n\t\t\tthis.sash.layout();\n\t\t}\n\n\t\t// Pass to ResourceViewer\n\t\tlet container = isOriginal ? this.leftBinaryContainer : this.rightBinaryContainer;\n\t\tlet scrollable = isOriginal ? this.leftScrollable : this.rightScrollable;\n\n\t\tResourceViewer.show(name, resource, container, scrollable);\n\t}\n\n\tpublic clearInput(): void {\n\n\t\t// Empty HTML Container\n\t\t$(this.leftBinaryContainer).empty();\n\t\t$(this.rightBinaryContainer).empty();\n\n\t\tsuper.clearInput();\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tlet oldDimension = this.dimension;\n\t\tthis.dimension = dimension;\n\n\t\t// Calculate left hand container width based on sash move or fallback to 50% by default\n\t\tif (!this.leftContainerWidth || !oldDimension) {\n\t\t\tthis.leftContainerWidth = this.dimension.width / 2;\n\t\t} else {\n\t\t\tlet sashRatio = this.leftContainerWidth / oldDimension.width;\n\t\t\tthis.leftContainerWidth = this.dimension.width * sashRatio;\n\t\t}\n\n\t\t// Sash positioning\n\t\tthis.sash.layout();\n\n\t\t// Pass on to Binary Containers and Scrollbars\n\t\tthis.layoutContainers();\n\t}\n\n\tprivate layoutContainers(): void {\n\n\t\t// Size left container\n\t\tthis.leftBinaryContainer.size(this.leftContainerWidth, this.dimension.height);\n\t\tthis.leftScrollbar.onElementDimensions();\n\t\tthis.leftScrollable.onContentsDimensions();\n\n\t\t// Size right container\n\t\tthis.rightBinaryContainer.size(this.dimension.width - this.leftContainerWidth, this.dimension.height);\n\t\tthis.rightScrollbar.onElementDimensions();\n\t\tthis.rightScrollable.onContentsDimensions();\n\t}\n\n\tprivate onSashDragStart(): void {\n\t\tthis.startLeftContainerWidth = this.leftContainerWidth;\n\t}\n\n\tprivate onSashDrag(e: ISashEvent): void {\n\n\t\t// Update Widths and keep in bounds of MIN_CONTAINER_WIDTH for both sides\n\t\tlet newLeftContainerWidth = this.startLeftContainerWidth + e.currentX - e.startX;\n\t\tthis.leftContainerWidth = Math.max(BinaryResourceDiffEditor.MIN_CONTAINER_WIDTH, newLeftContainerWidth);\n\t\tif (this.dimension.width - this.leftContainerWidth < BinaryResourceDiffEditor.MIN_CONTAINER_WIDTH) {\n\t\t\tthis.leftContainerWidth = this.dimension.width - BinaryResourceDiffEditor.MIN_CONTAINER_WIDTH;\n\t\t}\n\n\t\t// Pass on to Binary Containers and Scrollbars\n\t\tthis.layoutContainers();\n\t}\n\n\tprivate onSashDragEnd(): void {\n\t\tthis.sash.layout();\n\t}\n\n\tprivate onSashReset(): void {\n\t\tthis.leftContainerWidth = this.dimension.width / 2;\n\t\tthis.layoutContainers();\n\t\tthis.sash.layout();\n\t}\n\n\tpublic getVerticalSashTop(sash: Sash): number {\n\t\treturn 0;\n\t}\n\n\tpublic getVerticalSashLeft(sash: Sash): number {\n\t\treturn this.leftContainerWidth;\n\t}\n\n\tpublic getVerticalSashHeight(sash: Sash): number {\n\t\treturn this.dimension.height;\n\t}\n\n\tpublic focus(): void {\n\t\tthis.rightBinaryContainer.domFocus();\n\t}\n\n\tpublic dispose(): void {\n\n\t\t// Sash\n\t\tthis.sash.dispose();\n\n\t\t// Dispose Scrollbar\n\t\tthis.leftScrollbar.dispose();\n\t\tthis.leftScrollable.dispose();\n\t\tthis.rightScrollbar.dispose();\n\t\tthis.rightScrollable.dispose();\n\n\t\t// Destroy Container\n\t\tthis.leftBinaryContainer.destroy();\n\t\tthis.rightBinaryContainer.destroy();\n\n\t\tsuper.dispose();\n\t}\n}"]}