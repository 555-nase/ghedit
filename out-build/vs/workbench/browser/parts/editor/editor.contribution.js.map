{"version":3,"sources":["vs/workbench/browser/parts/editor/editor.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/browser/parts/editor/editor.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Registry} from 'vs/platform/platform';\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {StatusbarItemDescriptor, StatusbarAlignment, IStatusbarRegistry, Extensions as StatusExtensions} from 'vs/workbench/browser/parts/statusbar/statusbar';\nimport {EditorDescriptor, IEditorRegistry, Extensions as EditorExtensions, IEditorInputActionContext, IEditorInputAction, EditorInputActionContributor, EditorInputAction} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {StringEditorInput} from 'vs/workbench/common/editor/stringEditorInput';\nimport {StringEditor} from 'vs/workbench/browser/parts/editor/stringEditor';\nimport {DiffEditorInput} from 'vs/workbench/common/editor/diffEditorInput';\nimport {UntitledEditorInput} from 'vs/workbench/common/editor/untitledEditorInput';\nimport {ResourceEditorInput} from 'vs/workbench/common/editor/resourceEditorInput';\nimport {IInstantiationService, ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {KbExpr} from 'vs/platform/keybinding/common/keybindingService';\nimport {TextDiffEditor} from 'vs/workbench/browser/parts/editor/textDiffEditor';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {BinaryResourceDiffEditor} from 'vs/workbench/browser/parts/editor/binaryDiffEditor';\nimport {IFrameEditor} from 'vs/workbench/browser/parts/editor/iframeEditor';\nimport {IFrameEditorInput} from 'vs/workbench/common/editor/iframeEditorInput';\nimport {ChangeEncodingAction, ChangeEOLAction, ChangeModeAction, EditorStatus} from 'vs/workbench/browser/parts/editor/editorStatus';\nimport {IWorkbenchActionRegistry, Extensions as ActionExtensions} from 'vs/workbench/common/actionRegistry';\nimport {Scope, IActionBarRegistry, Extensions as ActionBarExtensions} from 'vs/workbench/browser/actionBarRegistry';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {SyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\n\n// Register String Editor\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditor(\n\tnew EditorDescriptor(\n\t\tStringEditor.ID,\n\t\tnls.localize('textEditor', \"Text Editor\"),\n\t\t'vs/workbench/browser/parts/editor/stringEditor',\n\t\t'StringEditor'\n\t),\n\t[\n\t\tnew SyncDescriptor(StringEditorInput),\n\t\tnew SyncDescriptor(UntitledEditorInput),\n\t\tnew SyncDescriptor(ResourceEditorInput)\n\t]\n);\n\n// Register Text Diff Editor\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditor(\n\tnew EditorDescriptor(\n\t\tTextDiffEditor.ID,\n\t\tnls.localize('textDiffEditor', \"Text Diff Editor\"),\n\t\t'vs/workbench/browser/parts/editor/textDiffEditor',\n\t\t'TextDiffEditor'\n\t),\n\t[\n\t\tnew SyncDescriptor(DiffEditorInput)\n\t]\n);\n\n// Register Binary Resource Diff Editor\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditor(\n\tnew EditorDescriptor(\n\t\tBinaryResourceDiffEditor.ID,\n\t\tnls.localize('binaryDiffEditor', \"Binary Diff Editor\"),\n\t\t'vs/workbench/browser/parts/editor/binaryDiffEditor',\n\t\t'BinaryResourceDiffEditor'\n\t),\n\t[\n\t\tnew SyncDescriptor(DiffEditorInput)\n\t]\n);\n\n// Register IFrame Editor\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditor(\n\tnew EditorDescriptor(\n\t\tIFrameEditor.ID,\n\t\tnls.localize('iframeEditor', \"IFrame Editor\"),\n\t\t'vs/workbench/browser/parts/editor/iframeEditor',\n\t\t'IFrameEditor'\n\t),\n\t[\n\t\tnew SyncDescriptor(IFrameEditorInput)\n\t]\n);\n\n// Register Editor Status\nlet statusBar = (<IStatusbarRegistry>Registry.as(StatusExtensions.Statusbar));\nstatusBar.registerStatusbarItem(new StatusbarItemDescriptor(EditorStatus, StatusbarAlignment.RIGHT, 100 /* High Priority */));\n\n// Register Actions\nlet registry = <IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ChangeModeAction, ChangeModeAction.ID, ChangeModeAction.LABEL, { primary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_M) }));\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ChangeEOLAction, ChangeEOLAction.ID, ChangeEOLAction.LABEL));\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ChangeEncodingAction, ChangeEncodingAction.ID, ChangeEncodingAction.LABEL));\n\n\nexport class ViewSourceEditorInputAction extends EditorInputAction {\n\n\tconstructor(\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService\n\t) {\n\t\tsuper('workbench.files.action.viewSourceFromEditor', nls.localize('viewSource', \"View Source\"), 'iframe-editor-action view-source');\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet iFrameEditorInput = <IFrameEditorInput>this.input;\n\t\tlet sideBySide = !!(event && (event.ctrlKey || event.metaKey));\n\n\t\treturn this.editorService.openEditor({\n\t\t\tresource: iFrameEditorInput.getResource()\n\t\t}, sideBySide);\n\t}\n}\n\nexport class RefreshIFrameEditorInputAction extends EditorInputAction {\n\n\tconstructor(@IWorkbenchEditorService private editorService: IWorkbenchEditorService) {\n\t\tsuper('workbench.files.action.refreshIFrameEditor', nls.localize('reload', \"Reload\"), 'iframe-editor-action refresh');\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet editor = this.editorService.getActiveEditor();\n\t\tif (editor instanceof IFrameEditor) {\n\t\t\t(<IFrameEditor>editor).reload(true);\n\t\t\t(<IFrameEditor>editor).focus();\n\t\t}\n\n\t\treturn TPromise.as(null);\n\t}\n}\n\nlet actionBarRegistry = <IActionBarRegistry>Registry.as(ActionBarExtensions.Actionbar);\nclass IFrameEditorActionContributor extends EditorInputActionContributor {\n\n\tconstructor( @IInstantiationService private instantiationService: IInstantiationService) {\n\t\tsuper();\n\t}\n\n\tpublic hasActionsForEditorInput(context: IEditorInputActionContext): boolean {\n\t\treturn context.input instanceof IFrameEditorInput;\n\t}\n\n\tpublic getActionsForEditorInput(context: IEditorInputActionContext): IEditorInputAction[] {\n\t\treturn [\n\t\t\tthis.instantiationService.createInstance(RefreshIFrameEditorInputAction),\n\t\t\tthis.instantiationService.createInstance(ViewSourceEditorInputAction)\n\t\t];\n\t}\n}\n\n// Contribute to IFrame Editor Inputs\nactionBarRegistry.registerActionBarContributor(Scope.EDITOR, IFrameEditorActionContributor);\n\n// Register keybinding for \"Next Change\" & \"Previous Change\" in visible diff editor\nKeybindingsRegistry.registerCommandDesc({\n\tid: 'workbench.action.compareEditor.nextChange',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(),\n\tcontext: KbExpr.has('textCompareEditorVisible'),\n\tprimary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.RightArrow),\n\thandler: accessor => navigateInDiffEditor(accessor, true)\n});\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: 'workbench.action.compareEditor.previousChange',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(),\n\tcontext: KbExpr.has('textCompareEditorVisible'),\n\tprimary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.LeftArrow),\n\thandler: accessor => navigateInDiffEditor(accessor, false)\n});\n\nfunction navigateInDiffEditor(accessor: ServicesAccessor, next: boolean): void {\n\tlet editorService = accessor.get(IWorkbenchEditorService);\n\tconst candidates = [editorService.getActiveEditor(), ...editorService.getVisibleEditors()].filter(e => e instanceof TextDiffEditor);\n\n\tif (candidates.length > 0) {\n\t\tnext ? (<TextDiffEditor>candidates[0]).getDiffNavigator().next() : (<TextDiffEditor>candidates[0]).getDiffNavigator().previous();\n\t}\n}"]}