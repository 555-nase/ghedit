{"version":3,"file":"editorHistoryModel.js","sourceRoot":"","sources":["../../../../../../src/vs/workbench/browser/parts/quickopen/editorHistoryModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport {Registry} from 'vs/platform/platform';\nimport filters = require('vs/base/common/filters');\nimport types = require('vs/base/common/types');\nimport paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\nimport labels = require('vs/base/common/labels');\nimport {EventType} from 'vs/base/common/events';\nimport {Mode, IContext} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenEntry, QuickOpenModel, IHighlight} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {EditorInput, getUntitledOrFileResource} from 'vs/workbench/common/editor';\nimport {IEditorRegistry, Extensions} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {EditorQuickOpenEntry} from 'vs/workbench/browser/quickopen';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\nconst MAX_ENTRIES = 200;\n\nexport class EditorHistoryEntry extends EditorQuickOpenEntry {\n\tprivate input: EditorInput;\n\tprivate model: EditorHistoryModel;\n\tprivate resource: URI;\n\n\tconstructor(\n\t\teditorService: IWorkbenchEditorService,\n\t\tprivate contextService: IWorkspaceContextService,\n\t\tinput: EditorInput,\n\t\tlabelHighlights: IHighlight[],\n\t\tdescriptionHighlights: IHighlight[],\n\t\tmodel: EditorHistoryModel\n\t) {\n\t\tsuper(editorService);\n\n\t\tthis.input = input;\n\t\tthis.model = model;\n\t\tthis.resource = getUntitledOrFileResource(input);\n\n\t\tthis.setHighlights(labelHighlights, descriptionHighlights);\n\t}\n\n\tpublic clone(labelHighlights: IHighlight[], descriptionHighlights?: IHighlight[]): EditorHistoryEntry {\n\t\treturn new EditorHistoryEntry(this.editorService, this.contextService, this.input, labelHighlights, descriptionHighlights, this.model);\n\t}\n\n\tpublic getPrefix(): string {\n\t\tlet status = this.input.getStatus();\n\t\tif (status && status.decoration) {\n\t\t\treturn `${status.decoration} `;\n\t\t}\n\n\t\treturn void 0;\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.input.getName();\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, recently opened\", this.getLabel());\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.input.getDescription();\n\t}\n\n\tpublic getResource(): URI {\n\t\treturn this.resource;\n\t}\n\n\tpublic getInput(): EditorInput {\n\t\treturn this.input;\n\t}\n\n\tpublic matches(input: EditorInput): boolean {\n\t\treturn this.input.matches(input);\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\tlet event = context.event;\n\t\t\tlet sideBySide = !context.quickNavigateConfiguration && (event && (event.ctrlKey || event.metaKey || (event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey))));\n\t\t\tthis.editorService.openEditor(this.input, null, sideBySide).done(() => {\n\n\t\t\t\t// Automatically clean up stale history entries when the input can not be opened\n\t\t\t\tif (!this.input.matches(this.editorService.getActiveEditorInput())) {\n\t\t\t\t\tthis.model.remove(this.input);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\ninterface ISerializedEditorInput {\n\tid: string;\n\tvalue: string;\n}\n\nexport class EditorHistoryModel extends QuickOpenModel {\n\n\tconstructor(\n\t\tprivate editorService: IWorkbenchEditorService,\n\t\tprivate instantiationService: IInstantiationService,\n\t\tprivate contextService: IWorkspaceContextService\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic add(entry: EditorInput): void {\n\n\t\t// Ensure we have at least a name to show\n\t\tif (!entry.getName()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove on Dispose\n\t\tlet unbind = entry.addListener(EventType.DISPOSE, () => {\n\t\t\tthis.remove(entry);\n\t\t\tunbind();\n\t\t});\n\n\t\t// Remove any existing entry and add to the beginning\n\t\tthis.remove(entry);\n\t\tthis.entries.unshift(new EditorHistoryEntry(this.editorService, this.contextService, entry, null, null, this));\n\n\t\t// Respect max entries setting\n\t\tif (this.entries.length > MAX_ENTRIES) {\n\t\t\tthis.entries = this.entries.slice(0, MAX_ENTRIES);\n\t\t}\n\t}\n\n\tpublic remove(entry: EditorInput): void {\n\t\tlet index = this.indexOf(entry);\n\t\tif (index >= 0) {\n\t\t\tthis.entries.splice(index, 1);\n\t\t}\n\t}\n\n\tprivate indexOf(entryToFind: EditorInput): number {\n\t\tfor (let i = 0; i < this.entries.length; i++) {\n\t\t\tlet entry = this.entries[i];\n\t\t\tif ((<EditorHistoryEntry>entry).matches(entryToFind)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tpublic saveTo(memento: any): void {\n\t\tlet registry = (<IEditorRegistry>Registry.as(Extensions.Editors));\n\t\tlet entries: ISerializedEditorInput[] = [];\n\t\tfor (let i = this.entries.length - 1; i >= 0; i--) {\n\t\t\tlet entry = this.entries[i];\n\t\t\tlet input = (<EditorHistoryEntry>entry).getInput();\n\n\t\t\tlet factory = registry.getEditorInputFactory(input.getId());\n\t\t\tif (factory) {\n\t\t\t\tlet value = factory.serialize(input);\n\t\t\t\tif (types.isString(value)) {\n\t\t\t\t\tentries.push({\n\t\t\t\t\t\tid: input.getId(),\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (entries.length > 0) {\n\t\t\tmemento.entries = entries;\n\t\t}\n\t}\n\n\tpublic loadFrom(memento: any): void {\n\t\tlet registry = (<IEditorRegistry>Registry.as(Extensions.Editors));\n\t\tlet entries: ISerializedEditorInput[] = memento.entries;\n\t\tif (entries && entries.length > 0) {\n\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\tlet entry = entries[i];\n\n\t\t\t\tlet factory = registry.getEditorInputFactory(entry.id);\n\t\t\t\tif (factory && types.isString(entry.value)) {\n\t\t\t\t\tlet input = factory.deserialize(this.instantiationService, entry.value);\n\t\t\t\t\tif (input) {\n\t\t\t\t\t\tthis.add(input);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getEntries(): EditorHistoryEntry[] {\n\t\treturn <EditorHistoryEntry[]>this.entries.slice(0);\n\t}\n\n\tpublic getResults(searchValue: string): QuickOpenEntry[] {\n\t\tsearchValue = searchValue.trim();\n\t\tconst searchInPath = searchValue.indexOf(paths.nativeSep) >= 0;\n\n\t\tlet results: QuickOpenEntry[] = [];\n\t\tfor (let i = 0; i < this.entries.length; i++) {\n\t\t\tlet entry = <EditorHistoryEntry>this.entries[i];\n\t\t\tif (!entry.getResource()) {\n\t\t\t\tcontinue; //For now, only support to match on inputs that provide resource information\n\t\t\t}\n\n\t\t\t// Check if this entry is a match for the search value\n\t\t\tlet targetToMatch = searchInPath ? labels.getPathLabel(entry.getResource(), this.contextService) : entry.getLabel();\n\t\t\tif (!filters.matchesFuzzy(searchValue, targetToMatch)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Apply highlights\n\t\t\tconst {labelHighlights, descriptionHighlights} = QuickOpenEntry.highlight(entry, searchValue);\n\t\t\tresults.push(entry.clone(labelHighlights, descriptionHighlights));\n\t\t}\n\n\t\t// Sort\n\t\treturn results.sort((elementA: EditorHistoryEntry, elementB: EditorHistoryEntry) => QuickOpenEntry.compare(elementA, elementB, searchValue));\n\t}\n}\n"]}