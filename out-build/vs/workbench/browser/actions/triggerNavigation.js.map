{"version":3,"sources":["vs/workbench/browser/actions/triggerNavigation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAWb,IAAM,mBAAmB,GAAG,kCAAkC,CAAC;IAC/D,IAAM,sBAAsB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAc,EAAE,IAAY,CAAC,CAAC;IAE1E;QAA2C,yCAAM;QAEhD,+BAAY,EAAU,EAAE,KAAa,EAA2B,cAA+B;YAC9F,kBAAM,EAAE,EAAE,KAAK,CAAC,CAAC;YAD8C,mBAAc,GAAd,cAAc,CAAiB;QAE/F,CAAC;QAEM,mCAAG,GAAV;YACC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;YAE9B,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QARsC;uBAAC,yBAAe;iCAAA;QASxD,4BAAC;IAAD,CAXA,AAWC,CAX0C,gBAAM,GAWhD;IAXY,6BAAqB,wBAWjC,CAAA;IAED,IAAM,qBAAqB,GAAG,+BAA+B,CAAC;IAC9D,IAAM,wBAAwB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAS,CAAC,CAAC;IAE7E;QAA6C,2CAAM;QAElD,iCAAY,EAAU,EAAE,KAAa,EAA2B,cAA+B;YAC9F,kBAAM,EAAE,EAAE,KAAK,CAAC,CAAC;YAD8C,mBAAc,GAAd,cAAc,CAAiB;QAE/F,CAAC;QAEM,qCAAG,GAAV;YACC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAE3B,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;QARsC;uBAAC,yBAAe;mCAAA;QASxD,8BAAC;IAAD,CAXA,AAWC,CAX4C,gBAAM,GAWlD;IAXY,+BAAuB,0BAWnC,CAAA;IAED,IAAI,QAAQ,GAA6B,mBAAQ,CAAC,EAAE,CAAC,2BAAU,CAAC,gBAAgB,CAAC,CAAC;IAClF,QAAQ,CAAC,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,qBAAqB,EAAE,mBAAmB,EAAE,sBAAsB,EAAE;QAC7H,OAAO,EAAE,IAAI;QACb,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,GAAG,GAAG,kBAAO,CAAC,UAAU,EAAE;QACjD,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,KAAK,GAAG,kBAAO,CAAC,QAAQ,EAAE;QAClE,KAAK,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,KAAK,GAAG,kBAAO,CAAC,QAAQ,EAAE;KACpE,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,uBAAuB,CAAC,IAAI,8BAAoB,CAAC,uBAAuB,EAAE,qBAAqB,EAAE,wBAAwB,EAAE;QACnI,OAAO,EAAE,IAAI;QACb,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,GAAG,GAAG,kBAAO,CAAC,SAAS,EAAE;QAChD,GAAG,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,kBAAO,CAAC,QAAQ,EAAE;QACnD,KAAK,EAAE,EAAE,OAAO,EAAE,iBAAM,CAAC,OAAO,GAAG,iBAAM,CAAC,GAAG,GAAG,kBAAO,CAAC,QAAQ,EAAE;KAClE,CAAC,CAAC,CAAC","file":"vs/workbench/browser/actions/triggerNavigation.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport {Registry} from 'vs/platform/platform';\nimport {Action} from 'vs/base/common/actions';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {IWorkbenchActionRegistry, Extensions} from 'vs/workbench/common/actionRegistry';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\nimport {IHistoryService} from 'vs/workbench/services/history/common/history';\n\nconst NAVIGATE_FORWARD_ID = 'workbench.action.navigateForward';\nconst NAVIGATE_FORWARD_LABEL = nls.localize('navigateNext', \"Go Forward\");\n\nexport class NavigateForwardAction extends Action {\n\n\tconstructor(id: string, label: string, @IHistoryService private historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<any> {\n\t\tthis.historyService.forward();\n\n\t\treturn TPromise.as(null);\n\t}\n}\n\nconst NAVIGATE_BACKWARDS_ID = 'workbench.action.navigateBack';\nconst NAVIGATE_BACKWARDS_LABEL = nls.localize('navigatePrevious', \"Go Back\");\n\nexport class NavigateBackwardsAction extends Action {\n\n\tconstructor(id: string, label: string, @IHistoryService private historyService: IHistoryService) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): TPromise<any> {\n\t\tthis.historyService.back();\n\n\t\treturn TPromise.as(null);\n\t}\n}\n\nlet registry = <IWorkbenchActionRegistry>Registry.as(Extensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateForwardAction, NAVIGATE_FORWARD_ID, NAVIGATE_FORWARD_LABEL, {\n\tprimary: null,\n\twin: { primary: KeyMod.Alt | KeyCode.RightArrow },\n\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.US_MINUS },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.US_MINUS }\n}));\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(NavigateBackwardsAction, NAVIGATE_BACKWARDS_ID, NAVIGATE_BACKWARDS_LABEL, {\n\tprimary: null,\n\twin: { primary: KeyMod.Alt | KeyCode.LeftArrow },\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.US_MINUS },\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.US_MINUS }\n}));"]}