{"version":3,"file":"viewlet.js","sourceRoot":"","sources":["../../../../src/vs/workbench/browser/viewlet.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport DOM = require('vs/base/browser/dom');\nimport errors = require('vs/base/common/errors');\nimport {Registry} from 'vs/platform/platform';\nimport {Dimension, Builder, $} from 'vs/base/browser/builder';\nimport {IAction, IActionRunner, Action} from 'vs/base/common/actions';\nimport {IActionItem, ActionsOrientation} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {ITree, IFocusEvent, ISelectionEvent} from 'vs/base/parts/tree/browser/tree';\nimport {prepareActions} from 'vs/workbench/browser/actionBarRegistry';\nimport {ToolBar} from 'vs/base/browser/ui/toolbar/toolbar';\nimport {DelayedDragHandler} from 'vs/base/browser/dnd';\nimport {dispose, IDisposable} from 'vs/base/common/lifecycle';\nimport {CollapsibleView, CollapsibleState, FixedCollapsibleView, IView} from 'vs/base/browser/ui/splitview/splitview';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IViewlet} from 'vs/workbench/common/viewlet';\nimport {Composite, CompositeDescriptor, CompositeRegistry} from 'vs/workbench/browser/composite';\nimport {IContextMenuService} from 'vs/platform/contextview/browser/contextView';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {StructuredSelection} from 'vs/platform/selection/common/selection';\n\nexport abstract class Viewlet extends Composite implements IViewlet {\n\tpublic getOptimalWidth(): number {\n\t\treturn null;\n\t}\n}\n\n/**\n * Helper subtype of viewlet for those that use a tree inside.\n */\nexport abstract class ViewerViewlet extends Viewlet {\n\n\tprotected viewer: ITree;\n\n\tprivate viewerContainer: Builder;\n\tprivate wasLayouted: boolean;\n\n\tpublic create(parent: Builder): TPromise<void> {\n\t\tsuper.create(parent);\n\n\t\t// Container for Viewer\n\t\tthis.viewerContainer = parent.div();\n\n\t\t// Viewer\n\t\tthis.viewer = this.createViewer(this.viewerContainer);\n\n\t\t// Eventing\n\t\tthis.toUnbind.push(this.viewer.addListener('selection', (e: ISelectionEvent) => this.onSelection(e)));\n\t\tthis.toUnbind.push(this.viewer.addListener('focus', (e: IFocusEvent) => this.onFocus(e)));\n\n\t\treturn TPromise.as(null);\n\t}\n\n\t/**\n\t * Called when an element in the viewer receives selection.\n\t */\n\tpublic abstract onSelection(e: ISelectionEvent): void;\n\n\t/**\n\t * Called when an element in the viewer receives focus.\n\t */\n\tpublic abstract onFocus(e: IFocusEvent): void;\n\n\t/**\n\t * Returns true if this viewlet is currently visible and false otherwise.\n\t */\n\tpublic abstract createViewer(viewerContainer: Builder): ITree;\n\n\t/**\n\t * Returns the viewer that is contained in this viewlet.\n\t */\n\tpublic getViewer(): ITree {\n\t\treturn this.viewer;\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\tlet promise: TPromise<void>;\n\n\t\tif (visible) {\n\t\t\tpromise = super.setVisible(visible);\n\t\t\tthis.getViewer().onVisible();\n\t\t} else {\n\t\t\tthis.getViewer().onHidden();\n\t\t\tpromise = super.setVisible(visible);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n\tpublic focus(): void {\n\t\tif (!this.viewer) {\n\t\t\treturn; // return early if viewlet has not yet been created\n\t\t}\n\n\t\t// Make sure the current selected element is revealed\n\t\tlet selection = this.viewer.getSelection();\n\t\tif (selection.length > 0) {\n\t\t\tthis.reveal(selection[0], 0.5).done(null, errors.onUnexpectedError);\n\t\t}\n\n\t\t// Pass Focus to Viewer\n\t\tthis.viewer.DOMFocus();\n\t}\n\n\tpublic reveal(element: any, relativeTop?: number): TPromise<void> {\n\t\tif (!this.viewer) {\n\t\t\treturn TPromise.as(null); // return early if viewlet has not yet been created\n\t\t}\n\n\t\t// The viewer cannot properly reveal without being layed out, so force it if not yet done\n\t\tif (!this.wasLayouted) {\n\t\t\tthis.viewer.layout();\n\t\t}\n\n\t\t// Now reveal\n\t\treturn this.viewer.reveal(element, relativeTop);\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tif (!this.viewer) {\n\t\t\treturn; // return early if viewlet has not yet been created\n\t\t}\n\n\t\t// Pass on to Viewer\n\t\tthis.wasLayouted = true;\n\t\tthis.viewer.layout(dimension.height);\n\t}\n\n\tpublic getControl(): ITree {\n\t\treturn this.viewer;\n\t}\n\n\tpublic getSelection(): StructuredSelection {\n\t\tif (!this.viewer) {\n\t\t\treturn new StructuredSelection([]); // return early if viewlet has not yet been created\n\t\t}\n\n\t\treturn new StructuredSelection(this.viewer.getSelection());\n\t}\n\n\tpublic dispose(): void {\n\n\t\t// Dispose Viewer\n\t\tif (this.viewer) {\n\t\t\tthis.viewer.dispose();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * A viewlet descriptor is a leightweight descriptor of a viewlet in the monaco workbench.\n */\nexport class ViewletDescriptor extends CompositeDescriptor<Viewlet> { }\n\nexport const Extensions = {\n\tViewlets: 'workbench.contributions.viewlets'\n};\n\nexport class ViewletRegistry extends CompositeRegistry<Viewlet> {\n\tprivate defaultViewletId: string;\n\n\t/**\n\t * Registers a viewlet to the platform.\n\t */\n\tpublic registerViewlet(descriptor: ViewletDescriptor): void {\n\t\tsuper.registerComposite(descriptor);\n\t}\n\n\t/**\n\t * Returns the viewlet descriptor for the given id or null if none.\n\t */\n\tpublic getViewlet(id: string): ViewletDescriptor {\n\t\treturn this.getComposite(id);\n\t}\n\n\t/**\n\t * Returns an array of registered viewlets known to the platform.\n\t */\n\tpublic getViewlets(): ViewletDescriptor[] {\n\t\treturn this.getComposits();\n\t}\n\n\t/**\n\t * Sets the id of the viewlet that should open on startup by default.\n\t */\n\tpublic setDefaultViewletId(id: string): void {\n\t\tthis.defaultViewletId = id;\n\t}\n\n\t/**\n\t * Gets the id of the viewlet that should open on startup by default.\n\t */\n\tpublic getDefaultViewletId(): string {\n\t\treturn this.defaultViewletId;\n\t}\n}\n\nRegistry.add(Extensions.Viewlets, new ViewletRegistry());\n\n/**\n * A reusable action to toggle a viewlet with a specific id.\n */\nexport class ToggleViewletAction extends Action {\n\tprivate viewletId: string;\n\n\tconstructor(\n\t\tid: string,\n\t\tname: string,\n\t\tviewletId: string,\n\t\t@IViewletService private viewletService: IViewletService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper(id, name);\n\n\t\tthis.viewletId = viewletId;\n\t\tthis.enabled = !!this.viewletService && !!this.editorService;\n\t}\n\n\tpublic run(): TPromise<any> {\n\n\t\t// Pass focus to viewlet if not open or focussed\n\t\tif (this.otherViewletShowing() || !this.sidebarHasFocus()) {\n\t\t\treturn this.viewletService.openViewlet(this.viewletId, true);\n\t\t}\n\n\t\t// Otherwise pass focus to editor if possible\n\t\tlet editor = this.editorService.getActiveEditor();\n\t\tif (editor) {\n\t\t\teditor.focus();\n\t\t}\n\n\t\treturn TPromise.as(true);\n\t}\n\n\tprivate otherViewletShowing(): boolean {\n\t\tlet activeViewlet = this.viewletService.getActiveViewlet();\n\n\t\treturn !activeViewlet || activeViewlet.getId() !== this.viewletId;\n\t}\n\n\tprivate sidebarHasFocus(): boolean {\n\t\tlet activeViewlet = this.viewletService.getActiveViewlet();\n\t\tlet activeElement = document.activeElement;\n\n\t\treturn activeViewlet && activeElement && DOM.isAncestor(activeElement, (<Viewlet>activeViewlet).getContainer().getHTMLElement());\n\t}\n}\n\n// Collapse All action\nexport class CollapseAction extends Action {\n\n\tconstructor(viewer: ITree, enabled: boolean, clazz: string) {\n\t\tsuper('workbench.action.collapse', nls.localize('collapse', \"Collapse All\"), clazz, enabled, (context: any) => {\n\t\t\tif (viewer.getHighlight()) {\n\t\t\t\treturn TPromise.as(null); // Global action disabled if user is in edit mode from another action\n\t\t\t}\n\n\t\t\tviewer.collapseAll();\n\t\t\tviewer.clearSelection();\n\t\t\tviewer.clearFocus();\n\t\t\tviewer.DOMFocus();\n\t\t\tviewer.focusFirst();\n\n\t\t\treturn TPromise.as(null);\n\t\t});\n\t}\n}\n\nexport interface IViewletView extends IView {\n\tcreate(): TPromise<void>;\n\tsetVisible(visible: boolean): TPromise<void>;\n\tgetActions(): IAction[];\n\tgetSecondaryActions(): IAction[];\n\tgetActionItem(action: IAction): IActionItem;\n\tshutdown(): void;\n\tfocusBody(): void;\n\tisExpanded(): boolean;\n}\n\n/**\n * The AdaptiveCollapsibleViewletView can grow with the content inside dynamically.\n */\nexport abstract class AdaptiveCollapsibleViewletView extends FixedCollapsibleView implements IViewletView {\n\tprotected treeContainer: HTMLElement;\n\tprotected tree: ITree;\n\tprotected toDispose: IDisposable[];\n\tprotected isVisible: boolean;\n\tprotected toolBar: ToolBar;\n\tprotected actionRunner: IActionRunner;\n\tprotected isDisposed: boolean;\n\n\tprivate dragHandler: DelayedDragHandler;\n\n\tconstructor(\n\t\tactionRunner: IActionRunner,\n\t\tinitialBodySize: number,\n\t\tcollapsed: boolean,\n\t\tprivate viewName: string,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService\n\t) {\n\t\tsuper({\n\t\t\texpandedBodySize: initialBodySize,\n\t\t\theaderSize: 22,\n\t\t\tinitialState: collapsed ? CollapsibleState.COLLAPSED : CollapsibleState.EXPANDED,\n\t\t\tariaHeaderLabel: viewName\n\t\t});\n\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.toDispose = [];\n\t}\n\n\tpublic create(): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic renderHeader(container: HTMLElement): void {\n\n\t\t// Tool bar\n\t\tthis.toolBar = new ToolBar($('div.actions').appendTo(container).getHTMLElement(), this.contextMenuService, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactionItemProvider: (action) => { return this.getActionItem(action); },\n\t\t\tariaLabel: nls.localize('viewToolbarAriaLabel', \"{0} actions\", this.viewName)\n\t\t});\n\t\tthis.toolBar.actionRunner = this.actionRunner;\n\t\tthis.toolBar.setActions(prepareActions(this.getActions()), prepareActions(this.getSecondaryActions()))();\n\n\t\t// Expand on drag over\n\t\tthis.dragHandler = new DelayedDragHandler(container, () => {\n\t\t\tif (!this.isExpanded()) {\n\t\t\t\tthis.expand();\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected changeState(state: CollapsibleState): void {\n\t\tupdateTreeVisibility(this.tree, state === CollapsibleState.EXPANDED);\n\n\t\tsuper.changeState(state);\n\t}\n\n\tprotected renderViewTree(container: HTMLElement): HTMLElement {\n\t\treturn renderViewTree(container);\n\t}\n\n\tpublic getViewer(): ITree {\n\t\treturn this.tree;\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\tthis.isVisible = visible;\n\n\t\tupdateTreeVisibility(this.tree, visible && this.state === CollapsibleState.EXPANDED);\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic focusBody(): void {\n\t\tfocus(this.tree);\n\t}\n\n\tpublic getSelection(): StructuredSelection {\n\t\treturn new StructuredSelection(this.tree.getSelection());\n\t}\n\n\tprotected reveal(element: any, relativeTop?: number): TPromise<void> {\n\t\treturn reveal(this.tree, element, relativeTop);\n\t}\n\n\tprotected layoutBody(size: number): void {\n\t\tthis.treeContainer.style.height = size + 'px';\n\t\tthis.tree.layout(size);\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getSecondaryActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getActionItem(action: IAction): IActionItem {\n\t\treturn null;\n\t}\n\n\tpublic shutdown(): void {\n\t\t// Subclass to implement\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.isDisposed = true;\n\t\tthis.treeContainer = null;\n\t\tthis.tree.dispose();\n\n\t\tthis.dragHandler.dispose();\n\n\t\tthis.toDispose = dispose(this.toDispose);\n\n\t\tif (this.toolBar) {\n\t\t\tthis.toolBar.dispose();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport abstract class CollapsibleViewletView extends CollapsibleView implements IViewletView {\n\tprotected treeContainer: HTMLElement;\n\tprotected tree: ITree;\n\tprotected toDispose: IDisposable[];\n\tprotected isVisible: boolean;\n\tprotected toolBar: ToolBar;\n\tprotected actionRunner: IActionRunner;\n\tprotected isDisposed: boolean;\n\n\tprivate dragHandler: DelayedDragHandler;\n\n\tconstructor(\n\t\tactionRunner: IActionRunner,\n\t\tcollapsed: boolean,\n\t\tprivate viewName: string,\n\t\t@IMessageService protected messageService: IMessageService,\n\t\t@IContextMenuService protected contextMenuService: IContextMenuService\n\t) {\n\t\tsuper({\n\t\t\tminimumSize: 2 * 22,\n\t\t\tinitialState: collapsed ? CollapsibleState.COLLAPSED : CollapsibleState.EXPANDED,\n\t\t\tariaHeaderLabel: viewName\n\t\t});\n\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.toDispose = [];\n\t}\n\n\tprotected changeState(state: CollapsibleState): void {\n\t\tupdateTreeVisibility(this.tree, state === CollapsibleState.EXPANDED);\n\n\t\tsuper.changeState(state);\n\t}\n\n\tpublic create(): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic renderHeader(container: HTMLElement): void {\n\n\t\t// Tool bar\n\t\tthis.toolBar = new ToolBar($('div.actions').appendTo(container).getHTMLElement(), this.contextMenuService, {\n\t\t\torientation: ActionsOrientation.HORIZONTAL,\n\t\t\tactionItemProvider: (action) => { return this.getActionItem(action); },\n\t\t\tariaLabel: nls.localize('viewToolbarAriaLabel', \"{0} actions\", this.viewName)\n\t\t});\n\t\tthis.toolBar.actionRunner = this.actionRunner;\n\t\tthis.toolBar.setActions(prepareActions(this.getActions()), prepareActions(this.getSecondaryActions()))();\n\n\t\t// Expand on drag over\n\t\tthis.dragHandler = new DelayedDragHandler(container, () => {\n\t\t\tif (!this.isExpanded()) {\n\t\t\t\tthis.expand();\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected renderViewTree(container: HTMLElement): HTMLElement {\n\t\treturn renderViewTree(container);\n\t}\n\n\tpublic getViewer(): ITree {\n\t\treturn this.tree;\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\tthis.isVisible = visible;\n\n\t\tupdateTreeVisibility(this.tree, visible && this.state === CollapsibleState.EXPANDED);\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic focusBody(): void {\n\t\tfocus(this.tree);\n\t}\n\n\tpublic getSelection(): StructuredSelection {\n\t\treturn new StructuredSelection(this.tree.getSelection());\n\t}\n\n\tprotected reveal(element: any, relativeTop?: number): TPromise<void> {\n\t\treturn reveal(this.tree, element, relativeTop);\n\t}\n\n\tpublic layoutBody(size: number): void {\n\t\tthis.treeContainer.style.height = size + 'px';\n\t\tthis.tree.layout(size);\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getSecondaryActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getActionItem(action: IAction): IActionItem {\n\t\treturn null;\n\t}\n\n\tpublic shutdown(): void {\n\t\t// Subclass to implement\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.isDisposed = true;\n\t\tthis.treeContainer = null;\n\t\tthis.tree.dispose();\n\n\t\tthis.dragHandler.dispose();\n\n\t\tthis.toDispose = dispose(this.toDispose);\n\n\t\tif (this.toolBar) {\n\t\t\tthis.toolBar.dispose();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nfunction renderViewTree(container: HTMLElement): HTMLElement {\n\tlet treeContainer = document.createElement('div');\n\tcontainer.appendChild(treeContainer);\n\n\treturn treeContainer;\n}\n\nfunction updateTreeVisibility(tree: ITree, isVisible: boolean): void {\n\tif (!tree) {\n\t\treturn;\n\t}\n\n\tif (isVisible) {\n\t\t$(tree.getHTMLElement()).show();\n\t} else {\n\t\t$(tree.getHTMLElement()).hide(); // make sure the tree goes out of the tabindex world by hiding it\n\t}\n\n\tif (isVisible) {\n\t\ttree.onVisible();\n\t} else {\n\t\ttree.onHidden();\n\t}\n}\n\nfunction focus(tree: ITree): void {\n\tif (!tree) {\n\t\treturn; // return early if viewlet has not yet been created\n\t}\n\n\t// Make sure the current selected element is revealed\n\tlet selection = tree.getSelection();\n\tif (selection.length > 0) {\n\t\treveal(tree, selection[0], 0.5).done(null, errors.onUnexpectedError);\n\t}\n\n\t// Pass Focus to Viewer\n\ttree.DOMFocus();\n}\n\nfunction reveal(tree: ITree, element: any, relativeTop?: number): TPromise<void> {\n\tif (!tree) {\n\t\treturn TPromise.as(null); // return early if viewlet has not yet been created\n\t}\n\n\treturn tree.reveal(element, relativeTop);\n}"]}