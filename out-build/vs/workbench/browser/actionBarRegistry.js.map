{"version":3,"file":"actionBarRegistry.js","sourceRoot":"","sources":["../../../../src/vs/workbench/browser/actionBarRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Registry} from 'vs/platform/platform';\nimport types = require('vs/base/common/types');\nimport collections = require('vs/base/common/collections');\nimport {Action, IAction} from 'vs/base/common/actions';\nimport {BaseActionItem, Separator} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {IActionProvider} from 'vs/base/parts/tree/browser/actionsRenderer';\nimport {ITree} from 'vs/base/parts/tree/browser/tree';\nimport {IInstantiationService, IConstructorSignature0} from 'vs/platform/instantiation/common/instantiation';\n\n/**\n * The action bar contributor allows to add actions to an actionbar in a given context.\n */\nexport class ActionBarContributor {\n\n\t/**\n\t * Returns true if this contributor has actions for the given context.\n\t */\n\tpublic hasActions(context: any): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns an array of primary actions in the given context.\n\t */\n\tpublic getActions(context: any): IAction[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Returns true if this contributor has secondary actions for the given context.\n\t */\n\tpublic hasSecondaryActions(context: any): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns an array of secondary actions in the given context.\n\t */\n\tpublic getSecondaryActions(context: any): IAction[] {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Can return a specific IActionItem to render the given action.\n\t */\n\tpublic getActionItem(context: any, action: Action): BaseActionItem {\n\t\treturn null;\n\t}\n}\n\n/**\n * Some predefined scopes to contribute actions to\n */\nexport const Scope = {\n\n\t/**\n\t * Actions inside the global activity bar (DEPRECATED)\n\t */\n\tGLOBAL: 'global',\n\n\t/**\n\t * Actions inside viewlets.\n\t */\n\tVIEWLET: 'viewlet',\n\n\t/**\n\t * Actions inside panels.\n\t */\n\tPANEL: 'panel',\n\n\t/**\n\t * Actions inside editors.\n\t */\n\tEDITOR: 'editor',\n\n\t/**\n\t * Actions inside tree widgets.\n\t */\n\tVIEWER: 'viewer'\n};\n\n/**\n * The ContributableActionProvider leverages the actionbar contribution model to find actions.\n */\nexport class ContributableActionProvider implements IActionProvider {\n\tprivate registry: IActionBarRegistry;\n\n\tconstructor() {\n\t\tthis.registry = (<IActionBarRegistry> Registry.as(Extensions.Actionbar));\n\t}\n\n\tprivate toContext(tree: ITree, element: any): any {\n\t\treturn {\n\t\t\tviewer: tree,\n\t\t\telement: element\n\t\t};\n\t}\n\n\tpublic hasActions(tree: ITree, element: any): boolean {\n\t\tlet context = this.toContext(tree, element);\n\n\t\tlet contributors = this.registry.getActionBarContributors(Scope.VIEWER);\n\t\tfor (let i = 0; i < contributors.length; i++) {\n\t\t\tlet contributor = contributors[i];\n\t\t\tif (contributor.hasActions(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getActions(tree: ITree, element: any): TPromise<IAction[]> {\n\t\tlet actions: IAction[] = [];\n\t\tlet context = this.toContext(tree, element);\n\n\t\t// Collect Actions\n\t\tlet contributors = this.registry.getActionBarContributors(Scope.VIEWER);\n\t\tfor (let i = 0; i < contributors.length; i++) {\n\t\t\tlet contributor = contributors[i];\n\t\t\tif (contributor.hasActions(context)) {\n\t\t\t\tactions.push(...contributor.getActions(context));\n\t\t\t}\n\t\t}\n\n\t\treturn TPromise.as(prepareActions(actions));\n\t}\n\n\tpublic hasSecondaryActions(tree: ITree, element: any): boolean {\n\t\tlet context = this.toContext(tree, element);\n\n\t\tlet contributors = this.registry.getActionBarContributors(Scope.VIEWER);\n\t\tfor (let i = 0; i < contributors.length; i++) {\n\t\t\tlet contributor = contributors[i];\n\t\t\tif (contributor.hasSecondaryActions(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getSecondaryActions(tree: ITree, element: any): TPromise<IAction[]> {\n\t\tlet actions: IAction[] = [];\n\t\tlet context = this.toContext(tree, element);\n\n\t\t// Collect Actions\n\t\tlet contributors = this.registry.getActionBarContributors(Scope.VIEWER);\n\t\tfor (let i = 0; i < contributors.length; i++) {\n\t\t\tlet contributor = contributors[i];\n\t\t\tif (contributor.hasSecondaryActions(context)) {\n\t\t\t\tactions.push(...contributor.getSecondaryActions(context));\n\t\t\t}\n\t\t}\n\n\t\treturn TPromise.as(prepareActions(actions));\n\t}\n\n\tpublic getActionItem(tree: ITree, element: any, action: Action): BaseActionItem {\n\t\tlet contributors = this.registry.getActionBarContributors(Scope.VIEWER);\n\t\tlet context = this.toContext(tree, element);\n\n\t\tfor (let i = contributors.length - 1; i >= 0; i--) {\n\t\t\tlet contributor = contributors[i];\n\n\t\t\tlet itemProvider = contributor.getActionItem(context, action);\n\t\t\tif (itemProvider) {\n\t\t\t\treturn itemProvider;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n// Helper function used in parts to massage actions before showing in action areas\nexport function prepareActions(actions: IAction[]): IAction[] {\n\n\t// Patch order if not provided\n\tfor (let l = 0; l < actions.length; l++) {\n\t\tlet a = <any> actions[l];\n\t\tif (types.isUndefinedOrNull(a.order)) {\n\t\t\ta.order = l;\n\t\t}\n\t}\n\n\t// Sort by order\n\tactions = actions.sort((first: Action, second: Action) => {\n\t\tlet firstOrder = first.order;\n\t\tlet secondOrder = second.order;\n\n\t\treturn firstOrder < secondOrder ? -1 : 1;\n\t});\n\n\t// Clean up leading separators\n\tlet firstIndexOfAction = -1;\n\tfor (let i = 0; i < actions.length; i++) {\n\t\tif (actions[i].id === Separator.ID) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfirstIndexOfAction = i;\n\t\tbreak;\n\t}\n\n\tif (firstIndexOfAction === -1) {\n\t\treturn [];\n\t}\n\n\tactions = actions.slice(firstIndexOfAction);\n\n\t// Clean up trailing separators\n\tfor (let h = actions.length - 1; h >= 0; h--) {\n\t\tlet isSeparator = actions[h].id === Separator.ID;\n\t\tif (isSeparator) {\n\t\t\tactions.splice(h, 1);\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Clean up separator duplicates\n\tlet foundAction = false;\n\tfor (let k = actions.length - 1; k >= 0; k--) {\n\t\tlet isSeparator = actions[k].id === Separator.ID;\n\t\tif (isSeparator && !foundAction) {\n\t\t\tactions.splice(k, 1);\n\t\t} else if (!isSeparator) {\n\t\t\tfoundAction = true;\n\t\t} else if (isSeparator) {\n\t\t\tfoundAction = false;\n\t\t}\n\t}\n\n\treturn actions;\n}\n\nexport const Extensions = {\n\tActionbar: 'workbench.contributions.actionbar'\n};\n\nexport interface IActionBarRegistry {\n\n\t/**\n\t * Goes through all action bar contributors and asks them for contributed actions for\n\t * the provided scope and context. Supports primary actions.\n\t */\n\tgetActionBarActionsForContext(scope: string, context: any): IAction[];\n\n\t/**\n\t * Goes through all action bar contributors and asks them for contributed actions for\n\t * the provided scope and context. Supports secondary actions.\n\t */\n\tgetSecondaryActionBarActionsForContext(scope: string, context: any): IAction[];\n\n\t/**\n\t * Goes through all action bar contributors and asks them for contributed action item for\n\t * the provided scope and context.\n\t */\n\tgetActionItemForContext(scope: string, context: any, action: Action): BaseActionItem;\n\n\t/**\n\t * Registers an Actionbar contributor. It will be called to contribute actions to all the action bars\n\t * that are used in the Monaco Workbench in the given scope.\n\t */\n\tregisterActionBarContributor(scope: string, ctor: IConstructorSignature0<ActionBarContributor>): void;\n\n\t/**\n\t * Returns an array of registered action bar contributors known to the workbench for the given scope.\n\t */\n\tgetActionBarContributors(scope: string): ActionBarContributor[];\n\n\tsetInstantiationService(service: IInstantiationService): void;\n}\n\nclass ActionBarRegistry implements IActionBarRegistry {\n\tprivate actionBarContributorConstructors: { scope: string; ctor: IConstructorSignature0<ActionBarContributor>; }[] = [];\n\tprivate actionBarContributorInstances: { [scope: string]: ActionBarContributor[] } = {};\n\tprivate instantiationService: IInstantiationService;\n\n\tpublic setInstantiationService(service: IInstantiationService): void {\n\t\tthis.instantiationService = service;\n\n\t\twhile (this.actionBarContributorConstructors.length > 0) {\n\t\t\tlet entry = this.actionBarContributorConstructors.shift();\n\t\t\tthis.createActionBarContributor(entry.scope, entry.ctor);\n\t\t}\n\t}\n\n\tprivate createActionBarContributor(scope: string, ctor: IConstructorSignature0<ActionBarContributor>): void {\n\t\tlet instance = this.instantiationService.createInstance(ctor);\n\t\tlet target = <ActionBarContributor[]> collections.lookupOrInsert(this.actionBarContributorInstances, scope, []);\n\t\ttarget.push(instance);\n\t}\n\n\tprivate getContributors(scope: string): ActionBarContributor[] {\n\t\treturn collections.lookup(this.actionBarContributorInstances, scope, []);\n\t}\n\n\tpublic getActionBarActionsForContext(scope: string, context: any): IAction[] {\n\t\tlet actions: IAction[] = [];\n\n\t\t// Go through contributors for scope\n\t\tthis.getContributors(scope).forEach((contributor: ActionBarContributor) => {\n\n\t\t\t// Primary Actions\n\t\t\tif (contributor.hasActions(context)) {\n\t\t\t\tactions.push(...contributor.getActions(context));\n\t\t\t}\n\t\t});\n\n\t\treturn actions;\n\t}\n\n\tpublic getSecondaryActionBarActionsForContext(scope: string, context: any): IAction[] {\n\t\tlet actions: IAction[] = [];\n\n\t\t// Go through contributors\n\t\tthis.getContributors(scope).forEach((contributor: ActionBarContributor) => {\n\n\t\t\t// Secondary Actions\n\t\t\tif (contributor.hasSecondaryActions(context)) {\n\t\t\t\tactions.push(...contributor.getSecondaryActions(context));\n\t\t\t}\n\t\t});\n\n\t\treturn actions;\n\t}\n\n\tpublic getActionItemForContext(scope: string, context: any, action: Action): BaseActionItem {\n\t\tlet contributors = this.getContributors(scope);\n\t\tfor (let i = 0; i < contributors.length; i++) {\n\t\t\tlet contributor = contributors[i];\n\t\t\tlet item = contributor.getActionItem(context, action);\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic registerActionBarContributor(scope: string, ctor: IConstructorSignature0<ActionBarContributor>): void {\n\t\tif (!this.instantiationService) {\n\t\t\tthis.actionBarContributorConstructors.push({\n\t\t\t\tscope: scope,\n\t\t\t\tctor: ctor\n\t\t\t});\n\t\t} else {\n\t\t\tthis.createActionBarContributor(scope, ctor);\n\t\t}\n\t}\n\n\tpublic getActionBarContributors(scope: string): ActionBarContributor[] {\n\t\treturn this.getContributors(scope).slice(0);\n\t}\n}\n\nRegistry.add(Extensions.Actionbar, new ActionBarRegistry());"]}