{"version":3,"file":"vs/workbench/api/node/extHostLanguages.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/api/node/extHostLanguages.ts"],"names":[],"mappings":";;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb;QAIC,0BACiB,aAA6B;YAE7C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAC/D,CAAC;QAED,uCAAY,GAAZ;YACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;QACpC,CAAC;QAPA;uBAAC,uBAAc;4BAAA;QAQjB,uBAAC;IAAD,CAAC,AAbD,IAaC;IAbY,wBAAgB,mBAa5B,CAAA;IAGD;QAIC,6BACe,WAAyB;YAEvC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QACjC,CAAC;QAED,2CAAa,GAAb;YACC,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,CAAC,CAAC;QAC5D,CAAC;QAbF;YAAC,kBAAS,CAAC,WAAW,CAAC,qBAAqB,CAAC;uBAM1C,0BAAY;+BAN8B;QAc7C,0BAAC;IAAD,CAAC,AAbD,IAaC;IAbY,2BAAmB,sBAa/B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IModeService} from 'vs/editor/common/services/modeService';\n\nexport class ExtHostLanguages {\n\n\tprivate _proxy: MainThreadLanguages;\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadLanguages);\n\t}\n\n\tgetLanguages(): TPromise<string[]> {\n\t\treturn this._proxy._getLanguages();\n\t}\n}\n\n@Remotable.MainContext('MainThreadLanguages')\nexport class MainThreadLanguages {\n\n\tprivate _modeService: IModeService;\n\n\tconstructor(\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tthis._modeService = modeService;\n\t}\n\n\t_getLanguages(): TPromise<string[]> {\n\t\treturn TPromise.as(this._modeService.getRegisteredModes());\n\t}\n}\n"]}