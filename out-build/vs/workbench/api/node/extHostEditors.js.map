{"version":3,"file":"vs/workbench/api/node/extHostEditors.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/api/node/extHostEditors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {ExtHostModelService, ExtHostDocumentData} from 'vs/workbench/api/node/extHostDocuments';\nimport {Selection, Range, Position, EditorOptions, EndOfLine} from './extHostTypes';\nimport {ISingleEditOperation, ISelection, IRange, IEditor, EditorType, ICommonCodeEditor, ICommonDiffEditor, IDecorationRenderOptions, IRangeWithMessage} from 'vs/editor/common/editorCommon';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {Position as EditorPosition} from 'vs/platform/editor/common/editor';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {MainThreadEditorsTracker, TextEditorRevealType, MainThreadTextEditor, ITextEditorConfigurationUpdate, IResolvedTextEditorConfiguration} from 'vs/workbench/api/node/mainThreadEditors';\nimport * as TypeConverters from './extHostTypeConverters';\nimport {TextDocument, TextEditorSelectionChangeEvent, TextEditorOptionsChangeEvent, TextEditorOptions, TextEditorViewColumnChangeEvent, ViewColumn} from 'vscode';\nimport {EventType} from 'vs/workbench/common/events';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {equals as arrayEquals} from 'vs/base/common/arrays';\nimport {equals as objectEquals} from 'vs/base/common/objects';\n\nexport interface ITextEditorAddData {\n\tid: string;\n\tdocument: URI;\n\toptions: IResolvedTextEditorConfiguration;\n\tselections: ISelection[];\n\teditorPosition: EditorPosition;\n}\n\nexport interface ITextEditorPositionData {\n\t[id: string]: EditorPosition;\n}\n\n@Remotable.ExtHostContext('ExtHostEditors')\nexport class ExtHostEditors {\n\n\tpublic onDidChangeTextEditorSelection: Event<TextEditorSelectionChangeEvent>;\n\tprivate _onDidChangeTextEditorSelection: Emitter<TextEditorSelectionChangeEvent>;\n\n\tpublic onDidChangeTextEditorOptions: Event<TextEditorOptionsChangeEvent>;\n\tprivate _onDidChangeTextEditorOptions: Emitter<TextEditorOptionsChangeEvent>;\n\n\tpublic onDidChangeTextEditorViewColumn: Event<TextEditorViewColumnChangeEvent>;\n\tprivate _onDidChangeTextEditorViewColumn: Emitter<TextEditorViewColumnChangeEvent>;\n\n\tprivate _editors: { [id: string]: ExtHostTextEditor };\n\tprivate _proxy: MainThreadEditors;\n\tprivate _onDidChangeActiveTextEditor: Emitter<vscode.TextEditor>;\n\tprivate _modelService: ExtHostModelService;\n\tprivate _activeEditorId: string;\n\tprivate _visibleEditorIds: string[];\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tthis._onDidChangeTextEditorSelection = new Emitter<TextEditorSelectionChangeEvent>();\n\t\tthis.onDidChangeTextEditorSelection = this._onDidChangeTextEditorSelection.event;\n\n\t\tthis._onDidChangeTextEditorOptions = new Emitter<TextEditorOptionsChangeEvent>();\n\t\tthis.onDidChangeTextEditorOptions = this._onDidChangeTextEditorOptions.event;\n\n\t\tthis._onDidChangeTextEditorViewColumn = new Emitter<TextEditorViewColumnChangeEvent>();\n\t\tthis.onDidChangeTextEditorViewColumn = this._onDidChangeTextEditorViewColumn.event;\n\n\t\tthis._modelService = threadService.getRemotable(ExtHostModelService);\n\t\tthis._proxy = threadService.getRemotable(MainThreadEditors);\n\t\tthis._onDidChangeActiveTextEditor = new Emitter<vscode.TextEditor>();\n\t\tthis._editors = Object.create(null);\n\n\t\tthis._visibleEditorIds = [];\n\t}\n\n\tgetActiveTextEditor(): vscode.TextEditor {\n\t\treturn this._editors[this._activeEditorId];\n\t}\n\n\tgetVisibleTextEditors(): vscode.TextEditor[] {\n\t\treturn this._visibleEditorIds.map(id => this._editors[id]);\n\t}\n\n\tget onDidChangeActiveTextEditor(): Event<vscode.TextEditor> {\n\t\treturn this._onDidChangeActiveTextEditor && this._onDidChangeActiveTextEditor.event;\n\t}\n\n\tshowTextDocument(document: TextDocument, column: ViewColumn, preserveFocus: boolean): TPromise<vscode.TextEditor> {\n\t\treturn this._proxy._tryShowTextDocument(<URI> document.uri, TypeConverters.fromViewColumn(column), preserveFocus).then(id => {\n\t\t\tlet editor = this._editors[id];\n\t\t\tif (editor) {\n\t\t\t\treturn editor;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Failed to show text document ${document.uri.toString()}, should show in editor #${id}`);\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateTextEditorDecorationType(options: vscode.DecorationRenderOptions): vscode.TextEditorDecorationType {\n\t\treturn new TextEditorDecorationType(this._proxy, options);\n\t}\n\n\t// --- called from main thread\n\n\t_acceptTextEditorAdd(data: ITextEditorAddData): void {\n\t\tlet document = this._modelService.getDocumentData(data.document);\n\t\tlet newEditor = new ExtHostTextEditor(this._proxy, data.id, document, data.selections.map(TypeConverters.toSelection), data.options, TypeConverters.toViewColumn(data.editorPosition));\n\t\tthis._editors[data.id] = newEditor;\n\t}\n\n\t_acceptOptionsChanged(id: string, opts: IResolvedTextEditorConfiguration): void {\n\t\tlet editor = this._editors[id];\n\t\teditor._acceptOptions(opts);\n\t\tthis._onDidChangeTextEditorOptions.fire({\n\t\t\ttextEditor: editor,\n\t\t\toptions: opts\n\t\t});\n\t}\n\n\t_acceptSelectionsChanged(id: string, _selections: ISelection[]): void {\n\t\tlet selections = _selections.map(TypeConverters.toSelection);\n\t\tlet editor = this._editors[id];\n\t\teditor._acceptSelections(selections);\n\t\tthis._onDidChangeTextEditorSelection.fire({\n\t\t\ttextEditor: editor,\n\t\t\tselections: selections\n\t\t});\n\t}\n\n\t_acceptActiveEditorAndVisibleEditors(id: string, visibleIds: string[]): void {\n\t\tthis._visibleEditorIds = visibleIds;\n\n\t\tif (this._activeEditorId === id) {\n\t\t\t// nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._activeEditorId = id;\n\t\tthis._onDidChangeActiveTextEditor.fire(this.getActiveTextEditor());\n\t}\n\n\t_acceptEditorPositionData(data: ITextEditorPositionData): void {\n\t\tfor (let id in data) {\n\t\t\tlet textEditor = this._editors[id];\n\t\t\tlet viewColumn = TypeConverters.toViewColumn(data[id]);\n\t\t\tif (textEditor.viewColumn !== viewColumn) {\n\t\t\t\ttextEditor._acceptViewColumn(viewColumn);\n\t\t\t\tthis._onDidChangeTextEditorViewColumn.fire({ textEditor, viewColumn });\n\t\t\t}\n\t\t}\n\t}\n\n\t_acceptTextEditorRemove(id: string): void {\n\t\t// make sure the removed editor is not visible\n\t\tlet newVisibleEditors = this._visibleEditorIds.filter(visibleEditorId => visibleEditorId !== id);\n\n\t\tif (this._activeEditorId === id) {\n\t\t\t// removing the current active editor\n\t\t\tthis._acceptActiveEditorAndVisibleEditors(undefined, newVisibleEditors);\n\t\t} else {\n\t\t\tthis._acceptActiveEditorAndVisibleEditors(this._activeEditorId, newVisibleEditors);\n\t\t}\n\n\t\tlet editor = this._editors[id];\n\t\teditor.dispose();\n\t\tdelete this._editors[id];\n\t}\n}\n\nclass TextEditorDecorationType implements vscode.TextEditorDecorationType {\n\n\tprivate static LAST_ID: number = 0;\n\n\tprivate _proxy: MainThreadEditors;\n\tpublic key: string;\n\n\tconstructor(proxy: MainThreadEditors, options: vscode.DecorationRenderOptions) {\n\t\tthis.key = 'TextEditorDecorationType' + (++TextEditorDecorationType.LAST_ID);\n\t\tthis._proxy = proxy;\n\t\tthis._proxy._registerTextEditorDecorationType(this.key, <any>options);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._proxy._removeTextEditorDecorationType(this.key);\n\t}\n}\n\nexport interface ITextEditOperation {\n\trange: Range;\n\ttext: string;\n\tforceMoveMarkers: boolean;\n}\n\nexport interface IEditData {\n\tdocumentVersionId: number;\n\tedits: ITextEditOperation[];\n\tsetEndOfLine: EndOfLine;\n}\n\nexport class TextEditorEdit {\n\n\tprivate _documentVersionId: number;\n\tprivate _collectedEdits: ITextEditOperation[];\n\tprivate _setEndOfLine: EndOfLine;\n\n\tconstructor(document: vscode.TextDocument) {\n\t\tthis._documentVersionId = document.version;\n\t\tthis._collectedEdits = [];\n\t\tthis._setEndOfLine = 0;\n\t}\n\n\tfinalize(): IEditData {\n\t\treturn {\n\t\t\tdocumentVersionId: this._documentVersionId,\n\t\t\tedits: this._collectedEdits,\n\t\t\tsetEndOfLine: this._setEndOfLine\n\t\t};\n\t}\n\n\treplace(location: Position | Range | Selection, value: string): void {\n\t\tlet range: Range = null;\n\n\t\tif (location instanceof Position) {\n\t\t\trange = new Range(location, location);\n\t\t} else if (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else if (location instanceof Selection) {\n\t\t\trange = new Range(location.start, location.end);\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._collectedEdits.push({\n\t\t\trange: range,\n\t\t\ttext: value,\n\t\t\tforceMoveMarkers: false\n\t\t});\n\t}\n\n\tinsert(location: Position, value: string): void {\n\t\tthis._collectedEdits.push({\n\t\t\trange: new Range(location, location),\n\t\t\ttext: value,\n\t\t\tforceMoveMarkers: true\n\t\t});\n\t}\n\n\tdelete(location: Range | Selection): void {\n\t\tlet range: Range = null;\n\n\t\tif (location instanceof Range) {\n\t\t\trange = location;\n\t\t} else if (location instanceof Selection) {\n\t\t\trange = new Range(location.start, location.end);\n\t\t} else {\n\t\t\tthrow new Error('Unrecognized location');\n\t\t}\n\n\t\tthis._collectedEdits.push({\n\t\t\trange: range,\n\t\t\ttext: null,\n\t\t\tforceMoveMarkers: true\n\t\t});\n\t}\n\n\tsetEndOfLine(endOfLine:EndOfLine): void {\n\t\tif (endOfLine !== EndOfLine.LF && endOfLine !== EndOfLine.CRLF) {\n\t\t\tthrow illegalArg('endOfLine');\n\t\t}\n\n\t\tthis._setEndOfLine = endOfLine;\n\t}\n}\n\nfunction readonly(name: string, alt?: string) {\n\tlet message = `The property '${name}' is readonly.`;\n\tif (alt) {\n\t\tmessage += ` Use '${alt}' instead.`;\n\t}\n\treturn new Error(message);\n}\n\nfunction illegalArg(name: string) {\n\treturn new Error(`illgeal argument '${name}'`);\n}\n\nfunction deprecated(name: string, message: string = 'Refer to the documentation for further details.') {\n\treturn (target: Object, key: string, descriptor: TypedPropertyDescriptor<any>) => {\n\t\tconst originalMethod = descriptor.value;\n\t\tdescriptor.value = function(...args: any[]) {\n\t\t\tconsole.warn(`[Deprecation Warning] method '${name}' is deprecated and should no longer be used. ${message}`);\n\t\t\treturn originalMethod.apply(this, args);\n\t\t};\n\n\t\treturn descriptor;\n\t};\n}\n\nclass ExtHostTextEditor implements vscode.TextEditor {\n\n\tprivate _proxy: MainThreadEditors;\n\tprivate _id: string;\n\n\tprivate _documentData: ExtHostDocumentData;\n\tprivate _selections: Selection[];\n\tprivate _options: TextEditorOptions;\n\tprivate _viewColumn: vscode.ViewColumn;\n\n\tconstructor(proxy: MainThreadEditors, id: string, document: ExtHostDocumentData, selections: Selection[], options: EditorOptions, viewColumn: vscode.ViewColumn) {\n\t\tthis._proxy = proxy;\n\t\tthis._id = id;\n\t\tthis._documentData = document;\n\t\tthis._selections = selections;\n\t\tthis._options = options;\n\t\tthis._viewColumn = viewColumn;\n\t}\n\n\tdispose() {\n\t\tthis._documentData = null;\n\t}\n\n\t@deprecated('TextEditor.show') show(column: vscode.ViewColumn) {\n\t\tthis._proxy._tryShowEditor(this._id, TypeConverters.fromViewColumn(column));\n\t}\n\n\t@deprecated('TextEditor.hide') hide() {\n\t\tthis._proxy._tryHideEditor(this._id);\n\t}\n\n\t// ---- the document\n\n\tget document(): vscode.TextDocument {\n\t\treturn this._documentData.document;\n\t}\n\n\tset document(value) {\n\t\tthrow readonly('document');\n\t}\n\n\t// ---- options\n\n\tget options(): TextEditorOptions {\n\t\treturn this._options;\n\t}\n\n\tset options(value: TextEditorOptions) {\n\t\tthis._options = value;\n\t\tthis._runOnProxy(() => {\n\t\t\treturn this._proxy._trySetOptions(this._id, this._options);\n\t\t}, true);\n\t}\n\n\t_acceptOptions(options: EditorOptions): void {\n\t\tthis._options = options;\n\t}\n\n\t// ---- view column\n\n\tget viewColumn(): vscode.ViewColumn {\n\t\treturn this._viewColumn;\n\t}\n\n\tset viewColumn(value) {\n\t\tthrow readonly('viewColumn');\n\t}\n\n\t_acceptViewColumn(value: vscode.ViewColumn) {\n\t\tthis._viewColumn = value;\n\t}\n\n\t// ---- selections\n\n\tget selection(): Selection {\n\t\treturn this._selections && this._selections[0];\n\t}\n\n\tset selection(value: Selection) {\n\t\tif (!(value instanceof Selection)) {\n\t\t\tthrow illegalArg('selection');\n\t\t}\n\t\tthis._selections = [value];\n\t\tthis._trySetSelection(true);\n\t}\n\n\tget selections(): Selection[] {\n\t\treturn this._selections;\n\t}\n\n\tset selections(value: Selection[]) {\n\t\tif (!Array.isArray(value) || value.some(a => !(a instanceof Selection))) {\n\t\t\tthrow illegalArg('selections');\n\t\t}\n\t\tthis._selections = value;\n\t\tthis._trySetSelection(true);\n\t}\n\n\tsetDecorations(decorationType: vscode.TextEditorDecorationType, ranges: Range[] | vscode.DecorationOptions[]): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy._trySetDecorations(\n\t\t\t\tthis._id,\n\t\t\t\tdecorationType.key,\n\t\t\t\tTypeConverters.fromRangeOrRangeWithMessage(ranges)\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t}\n\n\trevealRange(range: Range, revealType: vscode.TextEditorRevealType): void {\n\t\tthis._runOnProxy(\n\t\t\t() => this._proxy._tryRevealRange(\n\t\t\t\tthis._id,\n\t\t\t\tTypeConverters.fromRange(range),\n\t\t\t\t(<TextEditorRevealType><any>revealType) || TextEditorRevealType.Default\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tprivate _trySetSelection(silent: boolean): TPromise<vscode.TextEditor> {\n\t\tlet selection = this._selections.map(TypeConverters.fromSelection);\n\t\treturn this._runOnProxy(() => this._proxy._trySetSelections(this._id, selection), silent);\n\t}\n\n\t_acceptSelections(selections: Selection[]): void {\n\t\tthis._selections = selections;\n\t}\n\n\t// ---- editing\n\n\tedit(callback: (edit: TextEditorEdit) => void): Thenable<boolean> {\n\t\tlet edit = new TextEditorEdit(this._documentData.document);\n\t\tcallback(edit);\n\t\treturn this._applyEdit(edit);\n\t}\n\n\t_applyEdit(editBuilder: TextEditorEdit): TPromise<boolean> {\n\t\tlet editData = editBuilder.finalize();\n\n\t\t// prepare data for serialization\n\t\tlet edits: ISingleEditOperation[] = editData.edits.map((edit) => {\n\t\t\treturn {\n\t\t\t\trange: TypeConverters.fromRange(edit.range),\n\t\t\t\ttext: edit.text,\n\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t};\n\t\t});\n\n\t\treturn this._proxy._tryApplyEdits(this._id, editData.documentVersionId, edits, editData.setEndOfLine);\n\t}\n\n\t// ---- util\n\n\tprivate _runOnProxy(callback: () => TPromise<any>, silent: boolean): TPromise<ExtHostTextEditor> {\n\t\treturn callback().then(() => this, err => {\n\t\t\tif (!silent) {\n\t\t\t\treturn TPromise.wrapError(silent);\n\t\t\t}\n\t\t\tconsole.warn(err);\n\t\t});\n\t}\n}\n\n@Remotable.MainContext('MainThreadEditors')\nexport class MainThreadEditors {\n\n\tprivate _proxy: ExtHostEditors;\n\tprivate _workbenchEditorService: IWorkbenchEditorService;\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _editorTracker: MainThreadEditorsTracker;\n\tprivate _toDispose: IDisposable[];\n\tprivate _textEditorsListenersMap: { [editorId: string]: IDisposable[]; };\n\tprivate _textEditorsMap: { [editorId: string]: MainThreadTextEditor; };\n\tprivate _activeTextEditor: string;\n\tprivate _visibleEditors: string[];\n\tprivate _editorPositionData: ITextEditorPositionData;\n\n\tconstructor(\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IWorkbenchEditorService workbenchEditorService: IWorkbenchEditorService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ICodeEditorService editorService: ICodeEditorService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IModelService modelService: IModelService\n\t) {\n\t\tthis._proxy = threadService.getRemotable(ExtHostEditors);\n\t\tthis._workbenchEditorService = workbenchEditorService;\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._toDispose = [];\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._textEditorsMap = Object.create(null);\n\t\tthis._activeTextEditor = null;\n\t\tthis._visibleEditors = [];\n\t\tthis._editorPositionData = null;\n\n\t\tthis._editorTracker = new MainThreadEditorsTracker(editorService, modelService);\n\t\tthis._toDispose.push(this._editorTracker);\n\n\t\tthis._toDispose.push(this._editorTracker.onTextEditorAdd((textEditor) => this._onTextEditorAdd(textEditor)));\n\t\tthis._toDispose.push(this._editorTracker.onTextEditorRemove((textEditor) => this._onTextEditorRemove(textEditor)));\n\n\t\tthis._toDispose.push(this._editorTracker.onDidUpdateTextEditors(() => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(this._editorTracker.onChangedFocusedTextEditor((focusedTextEditorId) => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(eventService.addListener2(EventType.EDITOR_INPUT_CHANGED, () => this._updateActiveAndVisibleTextEditors()));\n\t\tthis._toDispose.push(eventService.addListener2(EventType.EDITOR_POSITION_CHANGED, () => this._updateActiveAndVisibleTextEditors()));\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this._textEditorsListenersMap).forEach((editorId) => {\n\t\t\tdispose(this._textEditorsListenersMap[editorId]);\n\t\t});\n\t\tthis._textEditorsListenersMap = Object.create(null);\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprivate _onTextEditorAdd(textEditor: MainThreadTextEditor): void {\n\t\tlet id = textEditor.getId();\n\t\tlet toDispose: IDisposable[] = [];\n\t\ttoDispose.push(textEditor.onConfigurationChanged((opts) => {\n\t\t\tthis._proxy._acceptOptionsChanged(id, opts);\n\t\t}));\n\t\ttoDispose.push(textEditor.onSelectionChanged((selection) => {\n\t\t\tthis._proxy._acceptSelectionsChanged(id, selection);\n\t\t}));\n\t\tthis._proxy._acceptTextEditorAdd({\n\t\t\tid: id,\n\t\t\tdocument: textEditor.getModel().getAssociatedResource(),\n\t\t\toptions: textEditor.getConfiguration(),\n\t\t\tselections: textEditor.getSelections(),\n\t\t\teditorPosition: this._findEditorPosition(textEditor)\n\t\t});\n\n\t\tthis._textEditorsListenersMap[id] = toDispose;\n\t\tthis._textEditorsMap[id] = textEditor;\n\t}\n\n\tprivate _onTextEditorRemove(textEditor: MainThreadTextEditor): void {\n\t\tlet id = textEditor.getId();\n\t\tdispose(this._textEditorsListenersMap[id]);\n\t\tdelete this._textEditorsListenersMap[id];\n\t\tdelete this._textEditorsMap[id];\n\t\tthis._proxy._acceptTextEditorRemove(id);\n\t}\n\n\tprivate _updateActiveAndVisibleTextEditors(): void {\n\n\t\t// active and visible editors\n\t\tlet visibleEditors = this._editorTracker.getVisibleTextEditorIds();\n\t\tlet activeEditor = this._findActiveTextEditorId();\n\t\tif (activeEditor !== this._activeTextEditor || !arrayEquals(this._visibleEditors, visibleEditors, (a, b) => a === b)) {\n\t\t\tthis._activeTextEditor = activeEditor;\n\t\t\tthis._visibleEditors = visibleEditors;\n\t\t\tthis._proxy._acceptActiveEditorAndVisibleEditors(this._activeTextEditor, this._visibleEditors);\n\t\t}\n\n\t\t// editor columns\n\t\tlet editorPositionData = this._getTextEditorPositionData();\n\t\tif (!objectEquals(this._editorPositionData, editorPositionData)) {\n\t\t\tthis._editorPositionData = editorPositionData;\n\t\t\tthis._proxy._acceptEditorPositionData(this._editorPositionData);\n\t\t}\n\t}\n\n\tprivate _findActiveTextEditorId(): string {\n\t\tlet focusedTextEditorId = this._editorTracker.getFocusedTextEditorId();\n\t\tif (focusedTextEditorId) {\n\t\t\treturn focusedTextEditorId;\n\t\t}\n\n\t\tlet activeEditor = this._workbenchEditorService.getActiveEditor();\n\t\tif (!activeEditor) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet editor = <IEditor>activeEditor.getControl();\n\t\t// Substitute for (editor instanceof ICodeEditor)\n\t\tif (!editor || typeof editor.getEditorType !== 'function') {\n\t\t\t// Not a text editor...\n\t\t\treturn null;\n\t\t}\n\n\t\tif (editor.getEditorType() === EditorType.ICodeEditor) {\n\t\t\treturn this._editorTracker.findTextEditorIdFor(<ICommonCodeEditor>editor);\n\t\t}\n\n\t\t// Must be a diff editor => use the modified side\n\t\treturn this._editorTracker.findTextEditorIdFor((<ICommonDiffEditor>editor).getModifiedEditor());\n\t}\n\n\tprivate _findEditorPosition(editor: MainThreadTextEditor): EditorPosition {\n\t\tfor (let workbenchEditor of this._workbenchEditorService.getVisibleEditors()) {\n\t\t\tif (editor.matches(workbenchEditor)) {\n\t\t\t\treturn workbenchEditor.position;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _getTextEditorPositionData(): ITextEditorPositionData {\n\t\tlet result: ITextEditorPositionData = Object.create(null);\n\t\tfor (let workbenchEditor of this._workbenchEditorService.getVisibleEditors()) {\n\t\t\tlet editor = <IEditor>workbenchEditor.getControl();\n\t\t\t// Substitute for (editor instanceof ICodeEditor)\n\t\t\tif (!editor || typeof editor.getEditorType !== 'function') {\n\t\t\t\t// Not a text editor...\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (editor.getEditorType() === EditorType.ICodeEditor) {\n\t\t\t\tlet id = this._editorTracker.findTextEditorIdFor(<ICommonCodeEditor>editor);\n\t\t\t\tif (id) {\n\t\t\t\t\tresult[id] = workbenchEditor.position;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- from extension host process\n\n\t_tryShowTextDocument(resource: URI, position: EditorPosition, preserveFocus: boolean): TPromise<string> {\n\n\t\tconst input = {\n\t\t\tresource,\n\t\t\toptions: { preserveFocus }\n\t\t};\n\n\t\treturn this._workbenchEditorService.openEditor(input, position).then(editor => {\n\n\t\t\tif (!editor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn new TPromise<void>(c => {\n\t\t\t\t// not very nice but the way it is: changes to the editor state aren't\n\t\t\t\t// send to the ext host as they happen but stuff is delayed a little. in\n\t\t\t\t// order to provide the real editor on #openTextEditor we need to sync on\n\t\t\t\t// that update\n\t\t\t\tlet subscription: IDisposable;\n\t\t\t\tlet handle: number;\n\t\t\t\tfunction contd() {\n\t\t\t\t\tsubscription.dispose();\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t\tsubscription = this._editorTracker.onDidUpdateTextEditors(() => {\n\t\t\t\t\tcontd();\n\t\t\t\t});\n\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\tcontd();\n\t\t\t\t}, 1000);\n\n\t\t\t}).then(() => {\n\t\t\t\t// find the editor we have just opened and return the\n\t\t\t\t// id we have assigned to it.\n\t\t\t\tfor (let id in this._textEditorsMap) {\n\t\t\t\t\tif (this._textEditorsMap[id].matches(editor)) {\n\t\t\t\t\t\treturn id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_tryShowEditor(id: string, position: EditorPosition): TPromise<void> {\n\t\t// check how often this is used\n\t\tthis._telemetryService.publicLog('api.deprecated', { function: 'TextEditor.show' });\n\n\t\tlet mainThreadEditor = this._textEditorsMap[id];\n\t\tif (mainThreadEditor) {\n\t\t\tlet model = mainThreadEditor.getModel();\n\t\t\treturn this._workbenchEditorService.openEditor({\n\t\t\t\tresource: model.getAssociatedResource(),\n\t\t\t\toptions: { preserveFocus: false }\n\t\t\t}, position).then(() => { return; });\n\t\t}\n\t}\n\n\t_tryHideEditor(id: string): TPromise<void> {\n\t\t// check how often this is used\n\t\tthis._telemetryService.publicLog('api.deprecated', { function: 'TextEditor.hide' });\n\n\t\tlet mainThreadEditor = this._textEditorsMap[id];\n\t\tif (mainThreadEditor) {\n\t\t\tlet editors = this._workbenchEditorService.getVisibleEditors();\n\t\t\tfor (let editor of editors) {\n\t\t\t\tif (mainThreadEditor.matches(editor)) {\n\t\t\t\t\treturn this._workbenchEditorService.closeEditor(editor).then(() => { return; });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_trySetSelections(id: string, selections: ISelection[]): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setSelections(selections);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_trySetDecorations(id: string, key: string, ranges: IRangeWithMessage[]): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setDecorations(key, ranges);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_tryRevealRange(id: string, range: IRange, revealType: TextEditorRevealType): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].revealRange(range, revealType);\n\t}\n\n\t_trySetOptions(id: string, options: ITextEditorConfigurationUpdate): TPromise<any> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\tthis._textEditorsMap[id].setConfiguration(options);\n\t\treturn TPromise.as(null);\n\t}\n\n\t_tryApplyEdits(id: string, modelVersionId: number, edits: ISingleEditOperation[], setEndOfLine:EndOfLine): TPromise<boolean> {\n\t\tif (!this._textEditorsMap[id]) {\n\t\t\treturn TPromise.wrapError('TextEditor disposed');\n\t\t}\n\t\treturn TPromise.as(this._textEditorsMap[id].applyEdits(modelVersionId, edits, setEndOfLine));\n\t}\n\n\t_registerTextEditorDecorationType(key: string, options: IDecorationRenderOptions): void {\n\t\tthis._editorTracker.registerTextEditorDecorationType(key, options);\n\t}\n\n\t_removeTextEditorDecorationType(key: string): void {\n\t\tthis._editorTracker.removeTextEditorDecorationType(key);\n\t}\n}\n"]}