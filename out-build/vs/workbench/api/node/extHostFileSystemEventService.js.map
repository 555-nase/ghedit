{"version":3,"file":"vs/workbench/api/node/extHostFileSystemEventService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/api/node/extHostFileSystemEventService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {FileChangesEvent, FileChangeType} from 'vs/platform/files/common/files';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {Disposable} from './extHostTypes';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport URI from 'vs/base/common/uri';\nimport {match} from 'vs/base/common/glob';\nimport {Uri, FileSystemWatcher as _FileSystemWatcher} from 'vscode';\n\nexport interface FileSystemEvents {\n\tcreated: URI[];\n\tchanged: URI[];\n\tdeleted: URI[];\n}\n\nexport class FileSystemWatcher implements _FileSystemWatcher {\n\n\tprivate _onDidCreate = new Emitter<Uri>();\n\tprivate _onDidChange = new Emitter<Uri>();\n\tprivate _onDidDelete = new Emitter<Uri>();\n\tprivate _disposable: Disposable;\n\tprivate _config: number;\n\n\tget ignoreCreateEvents(): boolean{\n\t\treturn Boolean(this._config & 0b001);\n\t}\n\n\tget ignoreChangeEvents(): boolean{\n\t\treturn Boolean(this._config & 0b010);\n\t}\n\n\tget ignoreDeleteEvents(): boolean{\n\t\treturn Boolean(this._config & 0b100);\n\t}\n\n\tconstructor(dispatcher: Event<FileSystemEvents>, globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean) {\n\n\t\tthis._config = 0;\n\t\tif (!ignoreCreateEvents) {\n\t\t\tthis._config += 0b001;\n\t\t}\n\t\tif (!ignoreChangeEvents) {\n\t\t\tthis._config += 0b010;\n\t\t}\n\t\tif (!ignoreDeleteEvents) {\n\t\t\tthis._config += 0b100;\n\t\t}\n\n\t\tlet subscription = dispatcher(events => {\n\t\t\tif (!ignoreCreateEvents) {\n\t\t\t\tfor (let created of events.created) {\n\t\t\t\t\tif (match(globPattern, created.fsPath)) {\n\t\t\t\t\t\tthis._onDidCreate.fire(created);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreChangeEvents) {\n\t\t\t\tfor (let changed of events.changed) {\n\t\t\t\t\tif (match(globPattern, changed.fsPath)) {\n\t\t\t\t\t\tthis._onDidChange.fire(changed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ignoreDeleteEvents) {\n\t\t\t\tfor (let deleted of events.deleted) {\n\t\t\t\t\tif (match(globPattern, deleted.fsPath)) {\n\t\t\t\t\t\tthis._onDidDelete.fire(deleted);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._disposable = Disposable.from(this._onDidCreate, this._onDidChange, this._onDidDelete, subscription);\n\t}\n\n\tdispose() {\n\t\tthis._disposable.dispose();\n\t}\n\n\tget onDidCreate(): Event<Uri> {\n\t\treturn this._onDidCreate.event;\n\t}\n\n\tget onDidChange(): Event<Uri> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget onDidDelete(): Event<Uri> {\n\t\treturn this._onDidDelete.event;\n\t}\n}\n\n@Remotable.ExtHostContext('ExtHostFileSystemEventService')\nexport class ExtHostFileSystemEventService {\n\n\tprivate _emitter = new Emitter<FileSystemEvents>();\n\n\tconstructor() {\n\t}\n\n\tpublic createFileSystemWatcher(globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): _FileSystemWatcher {\n\t\treturn new FileSystemWatcher(this._emitter.event, globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n\t}\n\n\t_onFileEvent(events: FileSystemEvents) {\n\t\tthis._emitter.fire(events);\n\t}\n}\n\nexport class MainThreadFileSystemEventService {\n\n\tconstructor( @IEventService eventService: IEventService, @IThreadService threadService: IThreadService) {\n\n\t\tconst proxy = threadService.getRemotable(ExtHostFileSystemEventService);\n\t\tconst events: FileSystemEvents = {\n\t\t\tcreated: [],\n\t\t\tchanged: [],\n\t\t\tdeleted: []\n\t\t};\n\n\t\tconst scheduler = new RunOnceScheduler(() => {\n\t\t\tproxy._onFileEvent(events);\n\t\t\tevents.created.length = 0;\n\t\t\tevents.changed.length = 0;\n\t\t\tevents.deleted.length = 0;\n\t\t}, 100);\n\n\t\teventService.addListener('files:fileChanges', (event: FileChangesEvent) => {\n\t\t\tfor (let change of event.changes) {\n\t\t\t\tswitch (change.type) {\n\t\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\t\tevents.created.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\t\tevents.changed.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\t\tevents.deleted.push(change.resource);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tscheduler.schedule();\n\t\t});\n\t}\n}\n"]}