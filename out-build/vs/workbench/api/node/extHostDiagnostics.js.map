{"version":3,"file":"vs/workbench/api/node/extHostDiagnostics.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/api/node/extHostDiagnostics.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMarkerService, IMarkerData} from 'vs/platform/markers/common/markers';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Severity from 'vs/base/common/severity';\nimport * as vscode from 'vscode';\n\nexport class DiagnosticCollection implements vscode.DiagnosticCollection {\n\n\tprivate static _maxDiagnosticsPerFile: number = 250;\n\n\tprivate _name: string;\n\tprivate _proxy: MainThreadDiagnostics;\n\n\tprivate _isDisposed = false;\n\tprivate _data: {[uri:string]: vscode.Diagnostic[]} = Object.create(null);\n\n\tconstructor(name: string, proxy: MainThreadDiagnostics) {\n\t\tthis._name = name;\n\t\tthis._proxy = proxy;\n\t}\n\n\tdispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._proxy.$clear(this.name);\n\t\t\tthis._proxy = undefined;\n\t\t\tthis._data = undefined;\n\t\t\tthis._isDisposed = true;\n\t\t}\n\t}\n\n\tget name(): string {\n\t\tthis._checkDisposed();\n\t\treturn this._name;\n\t}\n\n\tset(uri: vscode.Uri, diagnostics: vscode.Diagnostic[]): void;\n\tset(entries: [vscode.Uri, vscode.Diagnostic[]][]): void;\n\tset(first: vscode.Uri | [vscode.Uri, vscode.Diagnostic[]][], diagnostics?: vscode.Diagnostic[]) {\n\n\t\tif (!first) {\n\t\t\t// this set-call is a clear-call\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\n\t\t// the actual implementation for #set\n\n\t\tthis._checkDisposed();\n\t\tlet toSync: vscode.Uri[];\n\n\t\tif (first instanceof URI) {\n\n\t\t\tif (!diagnostics) {\n\t\t\t\t// remove this entry\n\t\t\t\tthis.delete(first);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update single row\n\t\t\tthis._data[first.toString()] = diagnostics;\n\t\t\ttoSync = [first];\n\n\t\t} else if (Array.isArray(first)) {\n\t\t\t// update many rows\n\t\t\ttoSync = [];\n\t\t\tfor (let entry of first) {\n\t\t\t\tlet [uri, diagnostics] = entry;\n\t\t\t\tthis._data[uri.toString()] = diagnostics;\n\t\t\t\ttoSync.push(uri);\n\t\t\t}\n\t\t}\n\n\t\t// compute change and send to main side\n\t\tconst entries: [URI, IMarkerData[]][] = [];\n\t\tfor (let uri of toSync) {\n\t\t\tlet marker: IMarkerData[];\n\t\t\tlet diagnostics = this._data[uri.toString()];\n\t\t\tif (diagnostics) {\n\n\t\t\t\t// no more than 250 diagnostics per file\n\t\t\t\tif (diagnostics.length > DiagnosticCollection._maxDiagnosticsPerFile) {\n\t\t\t\t\tconsole.warn('diagnostics for %s will be capped to %d (actually is %d)', uri.toString(), DiagnosticCollection._maxDiagnosticsPerFile, diagnostics.length);\n\t\t\t\t\tdiagnostics = diagnostics.slice(0, DiagnosticCollection._maxDiagnosticsPerFile);\n\t\t\t\t}\n\t\t\t\tmarker = diagnostics.map(DiagnosticCollection._toMarkerData);\n\t\t\t}\n\n\t\t\tentries.push([<URI> uri, marker]);\n\t\t}\n\n\t\tthis._proxy.$changeMany(this.name, entries);\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\tthis._checkDisposed();\n\t\tdelete this._data[uri.toString()];\n\t\tthis._proxy.$changeMany(this.name, [[<URI> uri, undefined]]);\n\t}\n\n\tclear(): void {\n\t\tthis._checkDisposed();\n\t\tthis._data = Object.create(null);\n\t\tthis._proxy.$clear(this.name);\n\t}\n\n\tforEach(callback: (uri: URI, diagnostics: vscode.Diagnostic[], collection: DiagnosticCollection) => any, thisArg?: any): void {\n\t\tthis._checkDisposed();\n\t\tfor (let key in this._data) {\n\t\t\tlet uri = URI.parse(key);\n\t\t\tcallback.apply(thisArg, [uri, this.get(uri), this]);\n\t\t}\n\t}\n\n\tget(uri: URI): vscode.Diagnostic[] {\n\t\tthis._checkDisposed();\n\t\tlet result = this._data[uri.toString()];\n\t\tif (Array.isArray(result)) {\n\t\t\treturn Object.freeze(result.slice(0));\n\t\t}\n\t}\n\n\thas(uri: URI): boolean {\n\t\tthis._checkDisposed();\n\t\treturn Array.isArray(this._data[uri.toString()]);\n\t}\n\n\tprivate _checkDisposed() {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('illegal state - object is disposed');\n\t\t}\n\t}\n\n\tprivate static _toMarkerData(diagnostic: vscode.Diagnostic): IMarkerData {\n\n\t\tlet range = diagnostic.range;\n\n\t\treturn <IMarkerData>{\n\t\t\tstartLineNumber: range.start.line + 1,\n\t\t\tstartColumn: range.start.character + 1,\n\t\t\tendLineNumber: range.end.line + 1,\n\t\t\tendColumn: range.end.character + 1,\n\t\t\tmessage: diagnostic.message,\n\t\t\tsource: diagnostic.source,\n\t\t\tseverity: DiagnosticCollection._convertDiagnosticsSeverity(diagnostic.severity),\n\t\t\tcode: String(diagnostic.code)\n\t\t};\n\t}\n\n\tprivate static _convertDiagnosticsSeverity(severity: number): Severity {\n\t\tswitch (severity) {\n\t\t\tcase 0: return Severity.Error;\n\t\t\tcase 1: return Severity.Warning;\n\t\t\tcase 2: return Severity.Info;\n\t\t\tcase 3: return Severity.Ignore;\n\t\t\tdefault: return Severity.Error;\n\t\t}\n\t}\n}\n\n@Remotable.ExtHostContext('ExtHostDiagnostics')\nexport class ExtHostDiagnostics {\n\n\tprivate static _idPool: number = 0;\n\n\tprivate _proxy: MainThreadDiagnostics;\n\tprivate _collections: DiagnosticCollection[];\n\n\tconstructor(@IThreadService threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadDiagnostics);\n\t\tthis._collections = [];\n\t}\n\n\tcreateDiagnosticCollection(name: string): vscode.DiagnosticCollection {\n\t\tif (!name) {\n\t\t\tname = '_generated_diagnostic_collection_name_#' + ExtHostDiagnostics._idPool++;\n\t\t}\n\n\t\tconst {_collections, _proxy} = this;\n\t\tconst result = new class extends DiagnosticCollection {\n\t\t\tconstructor() {\n\t\t\t\tsuper(name, _proxy);\n\t\t\t\t_collections.push(this);\n\t\t\t}\n\t\t\tdispose() {\n\t\t\t\tsuper.dispose();\n\t\t\t\tlet idx = _collections.indexOf(this);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t_collections.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn result;\n\t}\n\n\tforEach(callback: (collection: DiagnosticCollection) => any): void {\n\t\tthis._collections.forEach(callback);\n\t}\n}\n\n@Remotable.MainContext('MainThreadDiagnostics')\nexport class MainThreadDiagnostics {\n\n\tprivate _markerService: IMarkerService;\n\n\tconstructor(@IMarkerService markerService: IMarkerService) {\n\t\tthis._markerService = markerService;\n\t}\n\n\t$changeMany(owner: string, entries: [URI, IMarkerData[]][]): TPromise<any> {\n\t\tfor (let entry of entries) {\n\t\t\tlet [uri, markers] = entry;\n\t\t\tthis._markerService.changeOne(owner, uri, markers);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t$clear(owner: string): TPromise<any> {\n\t\tthis._markerService.changeAll(owner, undefined);\n\t\treturn undefined;\n\t}\n}\n"]}