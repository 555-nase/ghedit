{"version":3,"file":"vs/workbench/node/userSettings.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/node/userSettings.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n'use strict';\n\nimport fs = require('fs');\nimport path = require('path');\n\nimport json = require('vs/base/common/json');\nimport objects = require('vs/base/common/objects');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\n\nexport interface ISettings {\n\tsettings: any;\n\tsettingsParseErrors?: string[];\n\tkeybindings: any;\n}\n\nexport class UserSettings {\n\n\tprivate static CHANGE_BUFFER_DELAY = 300;\n\n\tpublic globalSettings: ISettings;\n\n\tprivate timeoutHandle: number;\n\tprivate watcher: fs.FSWatcher;\n\tprivate appSettingsPath: string;\n\tprivate appKeybindingsPath: string;\n\n\tprivate _onChange: Emitter<ISettings>;\n\n\tconstructor(appSettingsPath: string, appKeybindingsPath: string) {\n\t\tthis.appSettingsPath = appSettingsPath;\n\t\tthis.appKeybindingsPath = appKeybindingsPath;\n\t\tthis._onChange = new Emitter<ISettings>();\n\n\t\tthis.registerWatchers();\n\t}\n\n\tpublic static getValue(contextService: IWorkspaceContextService, key: string, fallback?: any): TPromise<any> {\n\t\treturn new TPromise((c, e) => {\n\t\t\tconst appSettingsPath = contextService.getConfiguration().env.appSettingsPath;\n\n\t\t\tfs.readFile(appSettingsPath, (error /* ignore */, fileContents) => {\n\t\t\t\tlet root = Object.create(null);\n\t\t\t\tlet content = fileContents ? fileContents.toString() : '{}';\n\n\t\t\t\tlet contents = Object.create(null);\n\t\t\t\ttry {\n\t\t\t\t\tcontents = json.parse(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore parse problem\n\t\t\t\t}\n\n\t\t\t\tfor (let key in contents) {\n\t\t\t\t\tUserSettings.setNode(root, key, contents[key]);\n\t\t\t\t}\n\n\t\t\t\treturn c(UserSettings.doGetValue(root, key, fallback));\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic get onChange(): Event<ISettings> {\n\t\treturn this._onChange.event;\n\t}\n\n\tpublic getValue(key: string, fallback?: any): any {\n\t\treturn UserSettings.doGetValue(this.globalSettings.settings, key, fallback);\n\t}\n\n\tprivate static doGetValue(globalSettings: any, key: string, fallback?: any): any {\n\t\tif (!key) {\n\t\t\treturn fallback;\n\t\t}\n\n\t\tlet value = globalSettings;\n\n\t\tlet parts = key.split('\\.');\n\t\twhile (parts.length && value) {\n\t\t\tlet part = parts.shift();\n\t\t\tvalue = value[part];\n\t\t}\n\n\t\treturn typeof value !== 'undefined' ? value : fallback;\n\t}\n\n\tprivate registerWatchers(): void {\n\t\tthis.watcher = fs.watch(path.dirname(this.appSettingsPath));\n\t\tthis.watcher.on('change', (eventType: string, fileName: string) => this.onSettingsFileChange(eventType, fileName));\n\t}\n\n\tprivate onSettingsFileChange(eventType: string, fileName: string): void {\n\n\t\t// we can get multiple change events for one change, so we buffer through a timeout\n\t\tif (this.timeoutHandle) {\n\t\t\tglobal.clearTimeout(this.timeoutHandle);\n\t\t\tthis.timeoutHandle = null;\n\t\t}\n\n\t\tthis.timeoutHandle = global.setTimeout(() => {\n\n\t\t\t// Reload\n\t\t\tlet didChange = this.loadSync();\n\n\t\t\t// Emit event\n\t\t\tif (didChange) {\n\t\t\t\tthis._onChange.fire(this.globalSettings);\n\t\t\t}\n\n\t\t}, UserSettings.CHANGE_BUFFER_DELAY);\n\t}\n\n\tpublic loadSync(): boolean {\n\t\tlet loadedSettings = this.doLoadSync();\n\t\tif (!objects.equals(loadedSettings, this.globalSettings)) {\n\n\t\t\t// Keep in class\n\t\t\tthis.globalSettings = loadedSettings;\n\n\t\t\treturn true; // changed value\n\t\t}\n\n\t\treturn false; // no changed value\n\t}\n\n\tprivate doLoadSync(): ISettings {\n\t\tlet settings = this.doLoadSettingsSync();\n\n\t\treturn {\n\t\t\tsettings: settings.contents,\n\t\t\tsettingsParseErrors: settings.parseErrors,\n\t\t\tkeybindings: this.doLoadKeybindingsSync()\n\t\t};\n\t}\n\n\tprivate doLoadSettingsSync(): { contents: any; parseErrors?: string[]; } {\n\t\tlet root = Object.create(null);\n\t\tlet content = '{}';\n\t\ttry {\n\t\t\tcontent = fs.readFileSync(this.appSettingsPath).toString();\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\tlet contents = Object.create(null);\n\t\ttry {\n\t\t\tcontents = json.parse(content);\n\t\t} catch (error) {\n\t\t\t// parse problem\n\t\t\treturn {\n\t\t\t\tcontents: Object.create(null),\n\t\t\t\tparseErrors: [this.appSettingsPath]\n\t\t\t};\n\t\t}\n\n\t\tfor (let key in contents) {\n\t\t\tUserSettings.setNode(root, key, contents[key]);\n\t\t}\n\n\t\treturn {\n\t\t\tcontents: root\n\t\t};\n\t}\n\n\tprivate static setNode(root: any, key: string, value: any): any {\n\t\tlet segments = key.split('.');\n\t\tlet last = segments.pop();\n\n\t\tlet curr = root;\n\t\tsegments.forEach((s) => {\n\t\t\tlet obj = curr[s];\n\t\t\tswitch (typeof obj) {\n\t\t\t\tcase 'undefined':\n\t\t\t\t\tobj = curr[s] = {};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('Conflicting user settings: ' + key + ' at ' + s + ' with ' + JSON.stringify(obj));\n\t\t\t}\n\t\t\tcurr = obj;\n\t\t});\n\t\tcurr[last] = value;\n\t}\n\n\tprivate doLoadKeybindingsSync(): any {\n\t\ttry {\n\t\t\treturn json.parse(fs.readFileSync(this.appKeybindingsPath).toString());\n\t\t} catch (error) {\n\t\t\t// Ignore loading and parsing errors\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t}\n}"]}