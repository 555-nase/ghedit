{"version":3,"file":"vs/workbench/common/composite.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/common/composite.ts"],"names":[],"mappings":"AAAA;;;gGAGgG","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {IEventEmitter} from 'vs/base/common/eventEmitter';\nimport {IAction, IActionItem} from 'vs/base/common/actions';\nimport {ISelection} from 'vs/platform/selection/common/selection';\n\nexport interface IComposite {\n\n\t/**\n\t * Returns the unique identifier of this composite.\n\t */\n\tgetId(): string;\n\n\t/**\n\t * Returns the name of this composite to show in the title area.\n\t */\n\tgetTitle(): string;\n\n\t/**\n\t * Returns the primary actions of the composite.\n\t */\n\tgetActions(): IAction[];\n\n\t/**\n\t * Returns the secondary actions of the composite.\n\t */\n\tgetSecondaryActions(): IAction[];\n\n\t/**\n\t * Returns the action item for a specific action.\n\t */\n\tgetActionItem(action: IAction): IActionItem;\n\n\t/**\n\t * Returns the underlying control of this composite.\n\t */\n\tgetControl(): IEventEmitter;\n\n\t/**\n\t * Returns the selection of this composite.\n\t */\n\tgetSelection(): ISelection;\n\n\t/**\n\t * Asks the underlying control to focus.\n\t */\n\tfocus(): void;\n}\n"]}