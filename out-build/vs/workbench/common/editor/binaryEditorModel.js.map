{"version":3,"file":"vs/workbench/common/editor/binaryEditorModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/common/editor/binaryEditorModel.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb;;OAEG;IACH;QAAuC,qCAAW;QAIjD,2BAAY,QAAa,EAAE,IAAY;YACtC,iBAAO,CAAC;YAER,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAED;;WAEG;QACI,mCAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;QAED;;WAEG;QACI,uCAAW,GAAlB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QACF,wBAAC;IAAD,CAAC,AAxBD,CAAuC,oBAAW,GAwBjD;IAxBY,yBAAiB,oBAwB7B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EditorModel} from 'vs/workbench/common/editor';\nimport URI from 'vs/base/common/uri';\n\n/**\n * An editor model that just represents a resource and mime for a resource that can be loaded.\n */\nexport class BinaryEditorModel extends EditorModel {\n\tprivate name: string;\n\tprivate resource: URI;\n\n\tconstructor(resource: URI, name: string) {\n\t\tsuper();\n\n\t\tthis.name = name;\n\t\tthis.resource = resource;\n\t}\n\n\t/**\n\t * The name of the binary resource.\n\t */\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * The resource of the binary resource.\n\t */\n\tpublic getResource(): URI {\n\t\treturn this.resource;\n\t}\n}"]}