{"version":3,"file":"vs/workbench/common/editor/textDiffEditorModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/common/editor/textDiffEditorModel.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAQb;;;OAGG;IACH;QAAyC,uCAAe;QAGvD,6BAAY,aAAkC,EAAE,aAAkC;YACjF,kBAAM,aAAa,EAAE,aAAa,CAAC,CAAC;YAEpC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAClC,CAAC;QAEM,kCAAI,GAAX;YAAA,iBAMC;YALA,MAAM,CAAC,gBAAK,CAAC,IAAI,WAAE,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,yBAAyB,EAAE,CAAC;gBAEjC,MAAM,CAAC,KAAI,CAAC;YACb,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,uDAAyB,GAAjC;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;gBAExE,aAAa;gBACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,oBAAoB,GAAG;wBAC3B,QAAQ,EAAwB,IAAI,CAAC,aAAc,CAAC,eAAe;wBACnE,QAAQ,EAAwB,IAAI,CAAC,aAAc,CAAC,eAAe;qBACnE,CAAC;gBACH,CAAC;gBAGD,IAAI,CAAC,CAAC;oBACL,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAyB,IAAI,CAAC,aAAc,CAAC,eAAe,CAAC;oBAC/F,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAyB,IAAI,CAAC,aAAc,CAAC,eAAe,CAAC;gBAChG,CAAC;YACF,CAAC;QACF,CAAC;QAED,sBAAW,oDAAmB;iBAA9B;gBACC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC;YAClC,CAAC;;;WAAA;QAEM,wCAAU,GAAjB;YACC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC;QACpC,CAAC;QAEM,qCAAO,GAAd;YAEC,uFAAuF;YACvF,wFAAwF;YACxF,0FAA0F;YAC1F,gDAAgD;YAChD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YAEjC,gBAAK,CAAC,OAAO,WAAE,CAAC;QACjB,CAAC;QACF,0BAAC;IAAD,CAAC,AAtDD,CAAyC,iCAAe,GAsDvD;IAtDY,2BAAmB,sBAsD/B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDiffEditorModel} from 'vs/editor/common/editorCommon';\nimport {EditorModel} from 'vs/workbench/common/editor';\nimport {BaseTextEditorModel} from 'vs/workbench/common/editor/textEditorModel';\nimport {DiffEditorModel} from 'vs/workbench/common/editor/diffEditorModel';\n\n/**\n * The base text editor model for the diff editor. It is made up of two text editor models, the original version\n * and the modified version.\n */\nexport class TextDiffEditorModel extends DiffEditorModel {\n\tprivate _textDiffEditorModel: IDiffEditorModel;\n\n\tconstructor(originalModel: BaseTextEditorModel, modifiedModel: BaseTextEditorModel) {\n\t\tsuper(originalModel, modifiedModel);\n\n\t\tthis.updateTextDiffEditorModel();\n\t}\n\n\tpublic load(): TPromise<EditorModel> {\n\t\treturn super.load().then(() => {\n\t\t\tthis.updateTextDiffEditorModel();\n\n\t\t\treturn this;\n\t\t});\n\t}\n\n\tprivate updateTextDiffEditorModel(): void {\n\t\tif (this.originalModel.isResolved() && this.modifiedModel.isResolved()) {\n\n\t\t\t// Create new\n\t\t\tif (!this._textDiffEditorModel) {\n\t\t\t\tthis._textDiffEditorModel = {\n\t\t\t\t\toriginal: (<BaseTextEditorModel>this.originalModel).textEditorModel,\n\t\t\t\t\tmodified: (<BaseTextEditorModel>this.modifiedModel).textEditorModel\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Update existing\n\t\t\telse {\n\t\t\t\tthis._textDiffEditorModel.original = (<BaseTextEditorModel>this.originalModel).textEditorModel;\n\t\t\t\tthis._textDiffEditorModel.modified = (<BaseTextEditorModel>this.modifiedModel).textEditorModel;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textDiffEditorModel(): IDiffEditorModel {\n\t\treturn this._textDiffEditorModel;\n\t}\n\n\tpublic isResolved(): boolean {\n\t\treturn !!this._textDiffEditorModel;\n\t}\n\n\tpublic dispose(): void {\n\n\t\t// Free the diff editor model but do not propagate the dispose() call to the two models\n\t\t// inside. We never created the two models (original and modified) so we can not dispose\n\t\t// them without sideeffects. Rather rely on the models getting disposed when their related\n\t\t// inputs get disposed from the diffEditorInput.\n\t\tthis._textDiffEditorModel = null;\n\n\t\tsuper.dispose();\n\t}\n}"]}