{"version":3,"file":"diffEditorInput.js","sourceRoot":"","sources":["../../../../../src/vs/workbench/common/editor/diffEditorInput.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport types = require('vs/base/common/types');\nimport URI from 'vs/base/common/uri';\nimport {getPathLabel, IWorkspaceProvider} from 'vs/base/common/labels';\nimport {isBinaryMime} from 'vs/base/common/mime';\nimport {EventType} from 'vs/base/common/events';\nimport {EditorModel, IFileEditorInput, EditorInput, IInputStatus, BaseDiffEditorInput} from 'vs/workbench/common/editor';\nimport {BaseTextEditorModel} from 'vs/workbench/common/editor/textEditorModel';\nimport {DiffEditorModel} from 'vs/workbench/common/editor/diffEditorModel';\nimport {TextDiffEditorModel} from 'vs/workbench/common/editor/textDiffEditorModel';\n\n/**\n * The base editor input for the diff editor. It is made up of two editor inputs, the original version\n * and the modified version.\n */\nexport class DiffEditorInput extends BaseDiffEditorInput {\n\n\tpublic static ID = 'workbench.editors.diffEditorInput';\n\n\tprivate _toUnbind: { (): void; }[];\n\tprivate name: string;\n\tprivate description: string;\n\tprivate cachedModel: DiffEditorModel;\n\tprivate forceOpenAsBinary: boolean;\n\n\tconstructor(name: string, description: string, originalInput: EditorInput, modifiedInput: EditorInput, forceOpenAsBinary?: boolean) {\n\t\tsuper(originalInput, modifiedInput);\n\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.forceOpenAsBinary = forceOpenAsBinary;\n\n\t\tthis._toUnbind = [];\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When the original or modified input gets disposed, dispose this diff editor input\n\t\tthis._toUnbind.push(this.originalInput.addListener(EventType.DISPOSE, () => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\n\t\tthis._toUnbind.push(this.modifiedInput.addListener(EventType.DISPOSE, () => {\n\t\t\tif (!this.isDisposed()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic get toUnbind() {\n\t\treturn this._toUnbind;\n\t}\n\n\tpublic getId(): string {\n\t\treturn DiffEditorInput.ID;\n\t}\n\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tpublic getStatus(): IInputStatus {\n\t\tif (this.modifiedInput) {\n\t\t\tlet modifiedStatus = this.modifiedInput.getStatus();\n\n\t\t\tif (modifiedStatus) {\n\t\t\t\treturn modifiedStatus;\n\t\t\t}\n\t\t}\n\n\t\tif (this.originalInput) {\n\t\t\tlet originalStatus = this.originalInput.getStatus();\n\n\t\t\tif (originalStatus) {\n\t\t\t\treturn originalStatus;\n\t\t\t}\n\t\t}\n\n\t\treturn super.getStatus();\n\t}\n\n\tpublic setOriginalInput(input: EditorInput): void {\n\t\tthis.originalInput = input;\n\t}\n\n\tpublic setModifiedInput(input: EditorInput): void {\n\t\tthis.modifiedInput = input;\n\t}\n\n\tpublic resolve(refresh?: boolean): TPromise<EditorModel> {\n\t\tlet modelPromise: TPromise<EditorModel>;\n\n\t\t// Use Cached Model\n\t\tif (this.cachedModel && !refresh) {\n\t\t\tmodelPromise = TPromise.as<EditorModel>(this.cachedModel);\n\t\t}\n\n\t\t// Create Model - we never reuse our cached model if refresh is true because we cannot\n\t\t// decide for the inputs within if the cached model can be reused or not. There may be\n\t\t// inputs that need to be loaded again and thus we always recreate the model and dispose\n\t\t// the previous one - if any.\n\t\telse {\n\t\t\tmodelPromise = this.createModel(refresh);\n\t\t}\n\n\t\treturn modelPromise.then((resolvedModel: DiffEditorModel) => {\n\t\t\tif (this.cachedModel) {\n\t\t\t\tthis.cachedModel.dispose();\n\t\t\t}\n\n\t\t\tthis.cachedModel = resolvedModel;\n\n\t\t\treturn this.cachedModel;\n\t\t});\n\t}\n\n\tpublic getPreferredEditorId(candidates: string[]): string {\n\n\t\t// Find the right diff editor for the given isBinary/isText state\n\t\tlet useBinaryEditor = this.forceOpenAsBinary || this.isBinary(this.originalInput) || this.isBinary(this.modifiedInput);\n\n\t\treturn !useBinaryEditor ? 'workbench.editors.textDiffEditor' : 'workbench.editors.binaryResourceDiffEditor';\n\t}\n\n\tprivate isBinary(input: EditorInput): boolean {\n\t\tlet mime: string;\n\n\t\t// Find mime by checking for IFileEditorInput implementors\n\t\tlet fileInput = <IFileEditorInput>(<any>input);\n\t\tif (types.isFunction(fileInput.getMime)) {\n\t\t\tmime = fileInput.getMime();\n\t\t}\n\n\t\treturn mime && isBinaryMime(mime);\n\t}\n\n\tprivate createModel(refresh?: boolean): TPromise<DiffEditorModel> {\n\n\t\t// Join resolve call over two inputs and build diff editor model\n\t\treturn TPromise.join<EditorModel>([\n\t\t\tthis.originalInput.resolve(refresh),\n\t\t\tthis.modifiedInput.resolve(refresh)\n\t\t]).then((models) => {\n\t\t\tlet originalEditorModel = models[0];\n\t\t\tlet modifiedEditorModel = models[1];\n\n\t\t\t// If both are text models, return textdiffeditor model\n\t\t\tif (modifiedEditorModel instanceof BaseTextEditorModel && originalEditorModel instanceof BaseTextEditorModel) {\n\t\t\t\treturn new TextDiffEditorModel(<BaseTextEditorModel>originalEditorModel, <BaseTextEditorModel>modifiedEditorModel);\n\t\t\t}\n\n\t\t\t// Otherwise return normal diff model\n\t\t\treturn new DiffEditorModel(originalEditorModel, modifiedEditorModel);\n\t\t});\n\t}\n\n\tpublic matches(otherInput: any): boolean {\n\t\tif (super.matches(otherInput) === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (otherInput) {\n\t\t\tif (!(otherInput instanceof DiffEditorInput)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tlet otherDiffInput = <DiffEditorInput>otherInput;\n\t\t\treturn this.originalInput.matches(otherDiffInput.originalInput) && this.modifiedInput.matches(otherDiffInput.modifiedInput);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic dispose(): void {\n\t\twhile (this._toUnbind.length) {\n\t\t\tthis._toUnbind.pop()();\n\t\t}\n\n\t\t// Dispose Model\n\t\tif (this.cachedModel) {\n\t\t\tthis.cachedModel.dispose();\n\t\t\tthis.cachedModel = null;\n\t\t}\n\n\t\t// Delegate to Inputs\n\t\tthis.originalInput.dispose();\n\t\tthis.modifiedInput.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport function toDiffLabel(res1: URI, res2: URI, context: IWorkspaceProvider): string {\n\tlet leftName = getPathLabel(res1.fsPath, context);\n\tlet rightName = getPathLabel(res2.fsPath, context);\n\n\treturn nls.localize('compareLabels', \"{0} ↔ {1}\", leftName, rightName);\n}"]}