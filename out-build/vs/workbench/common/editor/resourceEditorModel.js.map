{"version":3,"file":"resourceEditorModel.js","sourceRoot":"","sources":["../../../../../src/vs/workbench/common/editor/resourceEditorModel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb;;OAEG;IACH;QAAyC,uCAAmB;QAE3D,6BACC,QAAa,EACC,WAAyB,EACxB,YAA2B;YAE1C,kBAAM,YAAY,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC5C,CAAC;QAJA;uBAAC,0BAAY;uBACZ,4BAAa;+BADD;QAKf,0BAAC;IAAD,CAAC,AATD,CAAyC,qCAAmB,GAS3D;IATY,2BAAmB,sBAS/B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {BaseTextEditorModel} from 'vs/workbench/common/editor/textEditorModel';\nimport URI from 'vs/base/common/uri';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\n/**\n * An editor model whith an in-memory, readonly content that is backed by an existing editor model.\n */\nexport class ResourceEditorModel extends BaseTextEditorModel {\n\n\tconstructor(\n\t\tresource: URI,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService\n\t) {\n\t\tsuper(modelService, modeService, resource);\n\t}\n}"]}