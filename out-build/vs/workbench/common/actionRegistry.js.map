{"version":3,"file":"actionRegistry.js","sourceRoot":"","sources":["../../../../src/vs/workbench/common/actionRegistry.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport collections = require('vs/base/common/collections');\nimport {Registry} from 'vs/platform/platform';\nimport {IAction} from 'vs/base/common/actions';\nimport {KeybindingsRegistry,ICommandDescriptor} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {IPartService} from 'vs/workbench/services/part/common/partService';\nimport {ICommandHandler} from 'vs/platform/keybinding/common/keybindingService';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport Severity from 'vs/base/common/severity';\n\nexport const Extensions = {\n\tWorkbenchActions: 'workbench.contributions.actions'\n};\n\nexport interface IActionProvider {\n\tgetActions(): IAction[];\n}\n\nexport interface IWorkbenchActionRegistry {\n\n\t/**\n\t * Registers a workbench action to the platform. Workbench actions are not\n\t * visible by default and can only be invoked through a keybinding if provided.\n\t */\n\tregisterWorkbenchAction(descriptor: SyncActionDescriptor, category?: string): void;\n\n\t/**\n\t * Unregisters a workbench action from the platform.\n\t */\n\tunregisterWorkbenchAction(id: string): boolean;\n\n\t/**\n\t * Returns the workbench action descriptor for the given id or null if none.\n\t */\n\tgetWorkbenchAction(id: string): SyncActionDescriptor;\n\n\t/**\n\t * Returns an array of registered workbench actions known to the platform.\n\t */\n\tgetWorkbenchActions(): SyncActionDescriptor[];\n\n\t/**\n\t * Returns the category for the given action or null iff none.\n\t */\n\tgetCategory(actionId: string): string;\n}\n\nclass WorkbenchActionRegistry implements IWorkbenchActionRegistry {\n\tprivate workbenchActions: collections.IStringDictionary<SyncActionDescriptor>;\n\tprivate mapActionIdToCategory: { [id: string]: string; };\n\n\tconstructor() {\n\t\tthis.workbenchActions = Object.create(null);\n\t\tthis.mapActionIdToCategory = Object.create(null);\n\t}\n\n\tpublic registerWorkbenchAction(descriptor: SyncActionDescriptor, category?: string): void {\n\t\tif (!this.workbenchActions[descriptor.id]) {\n\t\t\tthis.workbenchActions[descriptor.id] = descriptor;\n\t\t\tregisterWorkbenchCommandFromAction(descriptor);\n\n\t\t\tif (category) {\n\t\t\t\tthis.mapActionIdToCategory[descriptor.id] = category;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic unregisterWorkbenchAction(id: string): boolean {\n\t\tif (!this.workbenchActions[id]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdelete this.workbenchActions[id];\n\t\tdelete this.mapActionIdToCategory[id];\n\n\t\treturn true;\n\t}\n\n\tpublic getWorkbenchAction(id: string): SyncActionDescriptor {\n\t\treturn this.workbenchActions[id] || null;\n\t}\n\n\tpublic getCategory(id: string): string {\n\t\treturn this.mapActionIdToCategory[id] || null;\n\t}\n\n\tpublic getWorkbenchActions(): SyncActionDescriptor[] {\n\t\treturn collections.values(this.workbenchActions);\n\t}\n\n\tpublic setWorkbenchActions(actions: SyncActionDescriptor[]): void {\n\t\tthis.workbenchActions = Object.create(null);\n\t\tthis.mapActionIdToCategory = Object.create(null);\n\n\t\tactions.forEach(action => this.registerWorkbenchAction(action), this);\n\t}\n}\n\nRegistry.add(Extensions.WorkbenchActions, new WorkbenchActionRegistry());\n\nfunction registerWorkbenchCommandFromAction(descriptor: SyncActionDescriptor): void {\n\tlet context = descriptor.keybindingContext;\n\tlet weight = (typeof descriptor.keybindingWeight === 'undefined' ? KeybindingsRegistry.WEIGHT.workbenchContrib() : descriptor.keybindingWeight);\n\tlet keybindings = descriptor.keybindings;\n\n\tlet desc: ICommandDescriptor = {\n\t\tid: descriptor.id,\n\t\thandler: createCommandHandler(descriptor),\n\t\tweight: weight,\n\t\tcontext: context,\n\t\tprimary: keybindings && keybindings.primary,\n\t\tsecondary: keybindings && keybindings.secondary,\n\t\twin: keybindings && keybindings.win,\n\t\tmac: keybindings && keybindings.mac,\n\t\tlinux: keybindings && keybindings.linux\n\t};\n\n\tKeybindingsRegistry.registerCommandDesc(desc);\n}\n\nexport function createCommandHandler(descriptor: SyncActionDescriptor): ICommandHandler {\n\treturn (accessor, args) => {\n\n\t\tlet messageService = accessor.get(IMessageService);\n\t\tlet instantiationService = accessor.get(IInstantiationService);\n\t\tlet telemetryServce = accessor.get(ITelemetryService);\n\t\tlet partService = accessor.get(IPartService);\n\n\t\tTPromise.as(triggerAndDisposeAction(instantiationService, telemetryServce, partService, descriptor, args)).done(null, (err) => {\n\t\t\tmessageService.show(Severity.Error, err);\n\t\t});\n\t};\n}\n\nexport function triggerAndDisposeAction(instantitationService: IInstantiationService, telemetryService: ITelemetryService, partService: IPartService, descriptor: SyncActionDescriptor, args: any): TPromise<any> {\n\tlet actionInstance = instantitationService.createInstance(descriptor.syncDescriptor);\n\tactionInstance.label = descriptor.label || actionInstance.label;\n\n\t// don't run the action when not enabled\n\tif (!actionInstance.enabled) {\n\t\tactionInstance.dispose();\n\t\treturn;\n\t}\n\n\tif (telemetryService) {\n\t\ttelemetryService.publicLog('workbenchActionExecuted', { id: actionInstance.id, from: args.from || 'keybinding' });\n\t}\n\n\t// run action when workbench is created\n\treturn partService.joinCreation().then(() => {\n\t\ttry {\n\t\t\treturn TPromise.as(actionInstance.run()).then(() => {\n\t\t\t\tactionInstance.dispose();\n\t\t\t}, (err) => {\n\t\t\t\tactionInstance.dispose();\n\t\t\t\treturn TPromise.wrapError(err);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tactionInstance.dispose();\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t});\n}\n"]}