{"version":3,"file":"contributions.js","sourceRoot":"","sources":["../../../../src/vs/workbench/common/contributions.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAkBb,IAAiB,UAAU,CAE1B;IAFD,WAAiB,UAAU,EAAC,CAAC;QACf,oBAAS,GAAG,8BAA8B,CAAC;IACzD,CAAC,EAFgB,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAE1B;IAoBD;QAA6C,kDAAoC;QAAjF;YAA6C,8BAAoC;QAajF,CAAC;QAXO,sEAA6B,GAApC,UAAqC,IAAqC;YACzE,gBAAK,CAAC,SAAS,YAAC,IAAI,CAAC,CAAC;QACvB,CAAC;QAEM,kEAAyB,GAAhC;YACC,MAAM,CAAC,gBAAK,CAAC,aAAa,WAAE,CAAC;QAC9B,CAAC;QAEM,kEAAyB,GAAhC,UAAiC,aAAuC;YACvE,gBAAK,CAAC,aAAa,YAAC,aAAa,CAAC,CAAC;QACpC,CAAC;QACF,qCAAC;IAAD,CAAC,AAbD,CAA6C,uBAAY,GAaxD;IAED,mBAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,8BAA8B,EAAE,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Registry, BaseRegistry} from 'vs/platform/platform';\nimport {IInstantiationService, IConstructorSignature0} from 'vs/platform/instantiation/common/instantiation';\n\n// --- Workbench Contribution Registry\n\n/**\n * A workbench contribution that will be loaded when the workbench starts and disposed when the workbench shuts down.\n */\nexport interface IWorkbenchContribution {\n\n\t/**\n\t * The unique identifier of this workbench contribution.\n\t */\n\tgetId(): string;\n}\n\nexport namespace Extensions {\n\texport const Workbench = 'workbench.contributions.kind';\n}\n\nexport type IWorkbenchContributionSignature = IConstructorSignature0<IWorkbenchContribution>;\n\nexport interface IWorkbenchContributionsRegistry {\n\n\t/**\n\t * Registers a workbench contribution to the platform that will be loaded when the workbench starts and disposed when\n\t * the workbench shuts down.\n\t */\n\tregisterWorkbenchContribution(contribution: IWorkbenchContributionSignature): void;\n\n\t/**\n\t * Returns all workbench contributions that are known to the platform.\n\t */\n\tgetWorkbenchContributions(): IWorkbenchContribution[];\n\n\tsetInstantiationService(service: IInstantiationService): void;\n}\n\nclass WorkbenchContributionsRegistry extends BaseRegistry<IWorkbenchContribution> implements IWorkbenchContributionsRegistry {\n\n\tpublic registerWorkbenchContribution(ctor: IWorkbenchContributionSignature): void {\n\t\tsuper._register(ctor);\n\t}\n\n\tpublic getWorkbenchContributions(): IWorkbenchContribution[] {\n\t\treturn super._getInstances();\n\t}\n\n\tpublic setWorkbenchContributions(contributions: IWorkbenchContribution[]): void {\n\t\tsuper._setInstances(contributions);\n\t}\n}\n\nRegistry.add(Extensions.Workbench, new WorkbenchContributionsRegistry());"]}