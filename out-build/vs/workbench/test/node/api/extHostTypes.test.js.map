{"version":3,"file":"vs/workbench/test/node/api/extHostTypes.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/test/node/api/extHostTypes.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport URI from 'vs/base/common/uri';\nimport * as types from 'vs/workbench/api/node/extHostTypes';\nimport {isWindows} from 'vs/base/common/platform';\n\nfunction assertToJSON(a: any, expected: any) {\n\tconst raw = JSON.stringify(a);\n\tconst actual = JSON.parse(raw);\n\tassert.deepEqual(actual, expected);\n}\n\nsuite('ExtHostTypes', function() {\n\n\ttest('URI, toJSON', function() {\n\n\t\tlet uri = URI.parse('file:///path/test.file');\n\t\tlet data = uri.toJSON();\n\t\tassert.deepEqual(data, {\n\t\t\t$mid: 1,\n\t\t\tscheme: 'file',\n\t\t\tauthority: '',\n\t\t\tpath: '/path/test.file',\n\t\t\tfsPath: '/path/test.file'.replace(/\\//g, isWindows ? '\\\\' : '/'),\n\t\t\tquery: '',\n\t\t\tfragment: '',\n\t\t\texternal: 'file:///path/test.file'\n\t\t});\n\t});\n\n\ttest('Disposable', function() {\n\n\t\tlet count = 0;\n\t\tlet d = new types.Disposable(() => {\n\t\t\tcount += 1;\n\t\t\treturn 12;\n\t\t});\n\t\td.dispose();\n\t\tassert.equal(count, 1);\n\n\t\td.dispose();\n\t\tassert.equal(count, 1);\n\n\t\ttypes.Disposable.from(undefined, { dispose() { count += 1; } }).dispose();\n\t\tassert.equal(count, 2);\n\n\n\t\tassert.throws(() => {\n\t\t\tnew types.Disposable(() => {\n\t\t\t\tthrow new Error();\n\t\t\t}).dispose();\n\t\t});\n\n\t\tnew types.Disposable(undefined).dispose();\n\n\t});\n\n\ttest('Position', function() {\n\t\tassert.throws(() => new types.Position(-1, 0));\n\t\tassert.throws(() => new types.Position(0, -1));\n\n\t\tlet pos = new types.Position(0, 0);\n\t\tassert.throws(() => pos.line = -1);\n\t\tassert.throws(() => pos.character = -1);\n\t\tassert.throws(() => pos.line = 12);\n\n\t\tlet {line, character} = pos.toJSON();\n\t\tassert.equal(line, 0);\n\t\tassert.equal(character, 0);\n\t});\n\n\ttest('Position, toJSON', function() {\n\t\tlet pos = new types.Position(4, 2);\n\t\tassertToJSON(pos, { line: 4, character: 2 });\n\t});\n\n\ttest('Position, isBefore(OrEqual)?', function() {\n\t\tlet p1 = new types.Position(1, 3);\n\t\tlet p2 = new types.Position(1, 2);\n\t\tlet p3 = new types.Position(0, 4);\n\n\t\tassert.ok(p1.isBeforeOrEqual(p1));\n\t\tassert.ok(!p1.isBefore(p1));\n\t\tassert.ok(p2.isBefore(p1));\n\t\tassert.ok(p3.isBefore(p2));\n\t});\n\n\ttest('Position, isAfter(OrEqual)?', function() {\n\t\tlet p1 = new types.Position(1, 3);\n\t\tlet p2 = new types.Position(1, 2);\n\t\tlet p3 = new types.Position(0, 4);\n\n\t\tassert.ok(p1.isAfterOrEqual(p1));\n\t\tassert.ok(!p1.isAfter(p1));\n\t\tassert.ok(p1.isAfter(p2));\n\t\tassert.ok(p2.isAfter(p3));\n\t\tassert.ok(p1.isAfter(p3));\n\t});\n\n\ttest('Position, compareTo', function() {\n\t\tlet p1 = new types.Position(1, 3);\n\t\tlet p2 = new types.Position(1, 2);\n\t\tlet p3 = new types.Position(0, 4);\n\n\t\tassert.equal(p1.compareTo(p1), 0);\n\t\tassert.equal(p2.compareTo(p1), -1);\n\t\tassert.equal(p1.compareTo(p2), 1);\n\t\tassert.equal(p2.compareTo(p3), 1);\n\t\tassert.equal(p1.compareTo(p3), 1);\n\t});\n\n\ttest('Position, translate', function() {\n\t\tlet p1 = new types.Position(1, 3);\n\n\t\tassert.ok(p1.translate() === p1);\n\t\tassert.ok(p1.translate(0, 0) === p1);\n\t\tassert.ok(p1.translate(0) === p1);\n\t\tassert.ok(p1.translate(undefined, 0) === p1);\n\n\t\tlet res = p1.translate(-1);\n\t\tassert.equal(res.line, 0);\n\t\tassert.equal(res.character, 3);\n\n\t\tres = p1.translate(undefined, -1);\n\t\tassert.equal(res.line, 1);\n\t\tassert.equal(res.character, 2);\n\n\t\tres = p1.translate(11);\n\t\tassert.equal(res.line, 12);\n\t\tassert.equal(res.character, 3);\n\n\t\tassert.throws(() => p1.translate(-2));\n\t\tassert.throws(() => p1.translate(0, -4));\n\t});\n\n\ttest('Position, with', function() {\n\t\tlet p1 = new types.Position(1, 3);\n\n\t\tassert.ok(p1.with() === p1);\n\t\tassert.ok(p1.with(1) === p1);\n\t\tassert.ok(p1.with(undefined, 3) === p1);\n\t\tassert.ok(p1.with(1, 3) === p1);\n\n\t\tassert.throws(() => p1.with(-9));\n\t\tassert.throws(() => p1.with(0, -9));\n\t});\n\n\ttest('Range', function() {\n\t\tassert.throws(() => new types.Range(-1, 0, 0, 0));\n\t\tassert.throws(() => new types.Range(0, -1, 0, 0));\n\t\tassert.throws(() => new types.Range(new types.Position(0, 0), undefined));\n\t\tassert.throws(() => new types.Range(new types.Position(0, 0), null));\n\t\tassert.throws(() => new types.Range(undefined, new types.Position(0, 0)));\n\t\tassert.throws(() => new types.Range(null, new types.Position(0, 0)));\n\n\t\tlet range = new types.Range(1, 0, 0, 0);\n\t\tassert.throws(() => range.start = null);\n\t\tassert.throws(() => range.start = new types.Position(0, 3));\n\t});\n\n\ttest('Range, toJSON', function() {\n\n\t\tlet range = new types.Range(1, 2, 3, 4);\n\t\tassertToJSON(range, [{ line: 1, character: 2 }, { line: 3, character: 4 }]);\n\t});\n\n\ttest('Range, sorting', function() {\n\t\t// sorts start/end\n\t\tlet range = new types.Range(1, 0, 0, 0);\n\t\tassert.equal(range.start.line, 0);\n\t\tassert.equal(range.end.line, 1);\n\n\t\trange = new types.Range(0, 0, 1, 0);\n\t\tassert.equal(range.start.line, 0);\n\t\tassert.equal(range.end.line, 1);\n\t});\n\n\ttest('Range, isEmpty|isSingleLine', function() {\n\t\tlet range = new types.Range(1, 0, 0, 0);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(!range.isSingleLine);\n\n\t\trange = new types.Range(1, 1, 1, 1);\n\t\tassert.ok(range.isEmpty);\n\t\tassert.ok(range.isSingleLine);\n\n\t\trange = new types.Range(0, 1, 0, 11);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(range.isSingleLine);\n\n\t\trange = new types.Range(0, 0, 1, 1);\n\t\tassert.ok(!range.isEmpty);\n\t\tassert.ok(!range.isSingleLine);\n\t});\n\n\ttest('Range, contains', function() {\n\t\tlet range = new types.Range(1, 1, 2, 11);\n\n\t\tassert.ok(range.contains(range.start));\n\t\tassert.ok(range.contains(range.end));\n\t\tassert.ok(range.contains(range));\n\n\t\tassert.ok(!range.contains(new types.Range(1, 0, 2, 11)));\n\t\tassert.ok(!range.contains(new types.Range(0, 1, 2, 11)));\n\t\tassert.ok(!range.contains(new types.Range(1, 1, 2, 12)));\n\t\tassert.ok(!range.contains(new types.Range(1, 1, 3, 11)));\n\t});\n\n\ttest('Range, intersection', function() {\n\t\tlet range = new types.Range(1, 1, 2, 11);\n\t\tlet res: types.Range;\n\n\t\tres = range.intersection(range);\n\t\tassert.equal(res.start.line, 1);\n\t\tassert.equal(res.start.character, 1);\n\t\tassert.equal(res.end.line, 2);\n\t\tassert.equal(res.end.character, 11);\n\n\t\tres = range.intersection(new types.Range(2, 12, 4, 0));\n\t\tassert.equal(res, undefined);\n\n\t\tres = range.intersection(new types.Range(0, 0, 1, 0));\n\t\tassert.equal(res, undefined);\n\n\t\tres = range.intersection(new types.Range(0, 0, 1, 1));\n\t\tassert.ok(res.isEmpty);\n\t\tassert.equal(res.start.line, 1);\n\t\tassert.equal(res.start.character, 1);\n\n\t\tres = range.intersection(new types.Range(2, 11, 61, 1));\n\t\tassert.ok(res.isEmpty);\n\t\tassert.equal(res.start.line, 2);\n\t\tassert.equal(res.start.character, 11);\n\n\t\tassert.throws(() => range.intersection(null));\n\t\tassert.throws(() => range.intersection(undefined));\n\t});\n\n\ttest('Range, union', function() {\n\t\tlet ran1 = new types.Range(0, 0, 5, 5);\n\t\tassert.ok(ran1.union(new types.Range(0, 0, 1, 1)) === ran1);\n\n\t\tlet res: types.Range;\n\t\tres = ran1.union(new types.Range(2, 2, 9, 9));\n\t\tassert.ok(res.start === ran1.start);\n\t\tassert.equal(res.end.line, 9);\n\t\tassert.equal(res.end.character, 9);\n\n\t\tran1 = new types.Range(2, 1, 5, 3);\n\t\tres = ran1.union(new types.Range(1, 0, 4, 2));\n\t\tassert.ok(res.end === ran1.end);\n\t\tassert.equal(res.start.line, 1);\n\t\tassert.equal(res.start.character, 0);\n\t});\n\n\ttest('Range, with', function() {\n\t\tlet range = new types.Range(1, 1, 2, 11);\n\n\t\tassert.ok(range.with(range.start) === range);\n\t\tassert.ok(range.with(undefined, range.end) === range);\n\t\tassert.ok(range.with(range.start, range.end) === range);\n\t\tassert.ok(range.with(new types.Position(1, 1)) === range);\n\t\tassert.ok(range.with(undefined, new types.Position(2, 11)) === range);\n\n\t\tlet res = range.with(undefined, new types.Position(9, 8));\n\t\tassert.equal(res.end.line, 9);\n\t\tassert.equal(res.end.character, 8);\n\t\tassert.equal(res.start.line, 1);\n\t\tassert.equal(res.start.character, 1);\n\n\t\tassert.throws(() => range.with(null));\n\t\tassert.throws(() => range.with(undefined, null));\n\t});\n\n\ttest('TextEdit', function() {\n\n\t\tassert.throws(() => new types.TextEdit(null, 'far'));\n\t\tassert.throws(() => new types.TextEdit(undefined, 'far'));\n\n\t\tlet range = new types.Range(1, 1, 2, 11);\n\t\tlet edit = new types.TextEdit(range, undefined);\n\t\tassert.equal(edit.newText, '');\n\t\tassertToJSON(edit, { range: [{ line: 1, character: 1 }, { line: 2, character: 11 }], newText: '' });\n\n\t\tedit = new types.TextEdit(range, null);\n\t\tassert.equal(edit.newText, '');\n\n\t\tedit = new types.TextEdit(range, '');\n\t\tassert.equal(edit.newText, '');\n\t});\n\n\ttest('WorkspaceEdit', function() {\n\n\t\tlet a = types.Uri.file('a.ts');\n\t\tlet b = types.Uri.file('b.ts');\n\n\t\tlet edit = new types.WorkspaceEdit();\n\t\tassert.ok(!edit.has(a));\n\n\t\tedit.set(a, [types.TextEdit.insert(new types.Position(0, 0), 'fff')]);\n\t\tassert.ok(edit.has(a));\n\t\tassert.equal(edit.size, 1);\n\t\tassertToJSON(edit, [[URI.parse('file:///a.ts').toJSON(), [{ range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: 'fff' }]]]);\n\n\t\tedit.insert(b, new types.Position(1, 1), 'fff');\n\t\tedit.delete(b, new types.Range(0, 0, 0, 0));\n\t\tassert.ok(edit.has(b));\n\t\tassert.equal(edit.size, 2);\n\t\tassertToJSON(edit, [\n\t\t\t[URI.parse('file:///a.ts').toJSON(), [{ range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: 'fff' }]],\n\t\t\t[URI.parse('file:///b.ts').toJSON(), [{ range: [{ line: 1, character: 1 }, { line: 1, character: 1 }], newText: 'fff' }, { range: [{ line: 0, character: 0 }, { line: 0, character: 0 }], newText: '' }]]\n\t\t]);\n\n\t\tedit.set(b, undefined);\n\t\tassert.ok(edit.has(b));\n\t\tassert.equal(edit.size, 2);\n\n\t\tedit.set(b, [types.TextEdit.insert(new types.Position(0, 0), 'ffff')]);\n\t\tassert.equal(edit.get(b).length, 1);\n\n\t});\n\n\ttest('toJSON & stringify', function() {\n\n\t\tassertToJSON(new types.Selection(3, 4, 2, 1), { start: { line: 2, character: 1 }, end: { line: 3, character: 4 }, anchor: { line: 3, character: 4 }, active: { line: 2, character: 1 } });\n\n\t\tassertToJSON(new types.Location(types.Uri.file('u.ts'), new types.Position(3, 4)), { uri: URI.parse('file:///u.ts').toJSON(), range: [{ line: 3, character: 4 }, { line: 3, character: 4 }] });\n\t\tassertToJSON(new types.Location(types.Uri.file('u.ts'), new types.Range(1, 2, 3, 4)), { uri: URI.parse('file:///u.ts').toJSON(), range: [{ line: 1, character: 2 }, { line: 3, character: 4 }] });\n\n\t\tlet diag = new types.Diagnostic(new types.Range(0, 1, 2, 3), 'hello');\n\t\tassertToJSON(diag, { severity: 'Error', message: 'hello', range: [{ line: 0, character: 1 }, { line: 2, character: 3 }] });\n\t\tdiag.source = 'me';\n\t\tassertToJSON(diag, { severity: 'Error', message: 'hello', range: [{ line: 0, character: 1 }, { line: 2, character: 3 }], source: 'me' });\n\n\t\tassertToJSON(new types.DocumentHighlight(new types.Range(2, 3, 4, 5)), { range: [{ line: 2, character: 3 }, { line: 4, character: 5 }], kind: 'Text' });\n\t\tassertToJSON(new types.DocumentHighlight(new types.Range(2, 3, 4, 5), types.DocumentHighlightKind.Read), { range: [{ line: 2, character: 3 }, { line: 4, character: 5 }], kind: 'Read' });\n\n\t\tassertToJSON(new types.SymbolInformation('test', types.SymbolKind.Boolean, new types.Range(0, 1, 2, 3)), {\n\t\t\tname: 'test',\n\t\t\tkind: 'Boolean',\n\t\t\tlocation: {\n\t\t\t\trange: [{ line: 0, character: 1 }, { line: 2, character: 3 }]\n\t\t\t}\n\t\t});\n\n\t\tassertToJSON(new types.CodeLens(new types.Range(7, 8, 9, 10)), { range: [{ line: 7, character: 8 }, { line: 9, character: 10 }] });\n\t\tassertToJSON(new types.CodeLens(new types.Range(7, 8, 9, 10), { command: 'id', title: 'title' }), {\n\t\t\trange: [{ line: 7, character: 8 }, { line: 9, character: 10 }],\n\t\t\tcommand: { command: 'id', title: 'title' }\n\t\t});\n\n\t\tassertToJSON(new types.CompletionItem('complete'), { label: 'complete' });\n\n\t\tlet item = new types.CompletionItem('complete');\n\t\titem.kind = types.CompletionItemKind.Interface;\n\t\tassertToJSON(item, { label: 'complete', kind: 'Interface' });\n\n\t});\n});"]}