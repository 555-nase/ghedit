{"version":3,"file":"vs/workbench/test/browser/viewlet.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/test/browser/viewlet.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAOb,KAAK,CAAC,mBAAmB,EAAE;QAE1B,IAAI,CAAC,uBAAuB,EAAE;YAC7B,IAAI,CAAC,GAAG,IAAI,2BAAiB,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE;YAC1C,IAAI,CAAC,GAAG,IAAI,2BAAiB,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAChF,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAEnC,CAAC,GAAG,IAAI,2BAAiB,CAAC,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0CAA0C,EAAE;YAChD,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpF,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAEhF,IAAI,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC;YAC9E,IAAI,CAAC,GAAG,IAAI,2BAAiB,CAAC,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,CAAC,CAAC;YAC7E,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAE7D,MAAM,CAAC,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;YAClF,MAAM,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,oBAAU,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport * as Platform from 'vs/platform/platform';\nimport {ViewletDescriptor, Extensions} from 'vs/workbench/browser/viewlet';\nimport * as Types from 'vs/base/common/types';\n\nsuite('Workbench Viewlet', () => {\n\n\ttest('ViewletDescriptor API', function () {\n\t\tlet d = new ViewletDescriptor('moduleId', 'ctorName', 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\t\tassert.strictEqual(d.cssClass, 'class');\n\t\tassert.strictEqual(d.order, 5);\n\t});\n\n\ttest('Editor Aware ViewletDescriptor API', function () {\n\t\tlet d = new ViewletDescriptor('moduleId', 'ctorName', 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\n\t\td = new ViewletDescriptor('moduleId', 'ctorName', 'id', 'name', 'class', 5);\n\t\tassert.strictEqual(d.id, 'id');\n\t\tassert.strictEqual(d.name, 'name');\n\t});\n\n\ttest('Viewlet extension point and registration', function () {\n\t\tassert(Types.isFunction(Platform.Registry.as(Extensions.Viewlets).registerViewlet));\n\t\tassert(Types.isFunction(Platform.Registry.as(Extensions.Viewlets).getViewlet));\n\t\tassert(Types.isFunction(Platform.Registry.as(Extensions.Viewlets).getViewlets));\n\n\t\tlet oldCount = Platform.Registry.as(Extensions.Viewlets).getViewlets().length;\n\t\tlet d = new ViewletDescriptor('moduleId', 'ctorName', 'reg-test-id', 'name');\n\t\tPlatform.Registry.as(Extensions.Viewlets).registerViewlet(d);\n\n\t\tassert(d === Platform.Registry.as(Extensions.Viewlets).getViewlet('reg-test-id'));\n\t\tassert.equal(oldCount + 1, Platform.Registry.as(Extensions.Viewlets).getViewlets().length);\n\t});\n});"]}