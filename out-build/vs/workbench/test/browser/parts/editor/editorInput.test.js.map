{"version":3,"file":"vs/workbench/test/browser/parts/editor/editorInput.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/test/browser/parts/editor/editorInput.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport {EditorInput} from 'vs/workbench/common/editor';\nimport {DiffEditorInput} from 'vs/workbench/common/editor/diffEditorInput';\n\nclass MyEditorInput extends EditorInput {\n\tgetMime() {\n\t\treturn 'text/css';\n\t}\n\n\tpublic getId(): string {\n\t\treturn '';\n\t}\n\n\tpublic resolve(refresh?: boolean): any {\n\t\treturn null;\n\t}\n}\n\nsuite('Workbench - EditorInput', () => {\n\n\ttest('EditorInput', function () {\n\t\tlet counter = 0;\n\t\tlet input = new MyEditorInput();\n\t\tlet otherInput = new MyEditorInput();\n\n\t\tassert(input.matches(input));\n\t\tassert(!input.matches(otherInput));\n\t\tassert(!input.matches(null));\n\t\tassert(!input.getName());\n\n\t\tinput.addListener('dispose', function () {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t});\n\n\t\tinput.dispose();\n\t\tassert.equal(counter, 1);\n\t});\n\n\ttest('DiffEditorInput', function () {\n\t\tlet counter = 0;\n\t\tlet input = new MyEditorInput();\n\t\tinput.addListener('dispose', function () {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t});\n\n\t\tlet otherInput = new MyEditorInput();\n\t\totherInput.addListener('dispose', function () {\n\t\t\tassert(true);\n\t\t\tcounter++;\n\t\t});\n\n\t\tlet diffInput = new DiffEditorInput('name', 'description', input, otherInput);\n\n\t\tassert.equal(diffInput.getOriginalInput(), input);\n\t\tassert.equal(diffInput.getModifiedInput(), otherInput);\n\t\tassert(diffInput.matches(diffInput));\n\t\tassert(!diffInput.matches(otherInput));\n\t\tassert(!diffInput.matches(null));\n\n\t\tdiffInput.dispose();\n\t\tassert.equal(counter, 2);\n\t});\n\n\ttest('DiffEditorInput disposes when input inside disposes', function () {\n\t\tlet counter = 0;\n\t\tlet input = new MyEditorInput();\n\t\tlet otherInput = new MyEditorInput();\n\n\t\tlet diffInput = new DiffEditorInput('name', 'description', input, otherInput);\n\t\tdiffInput.addListener('dispose', function () {\n\t\t\tcounter++;\n\t\t\tassert(true);\n\t\t});\n\n\t\tinput.dispose();\n\n\t\tinput = new MyEditorInput();\n\t\totherInput = new MyEditorInput();\n\n\t\tlet diffInput2 = new DiffEditorInput('name', 'description', input, otherInput);\n\t\tdiffInput2.addListener('dispose', function () {\n\t\t\tcounter++;\n\t\t\tassert(true);\n\t\t});\n\n\t\totherInput.dispose();\n\t\tassert.equal(counter, 2);\n\t});\n});"]}