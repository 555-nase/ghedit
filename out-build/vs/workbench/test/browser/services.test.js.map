{"version":3,"file":"vs/workbench/test/browser/services.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/test/browser/services.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport {Promise, TPromise} from 'vs/base/common/winjs.base';\nimport paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\nimport {createInstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {BaseEditor} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {EditorInput, EditorOptions, TextEditorOptions} from 'vs/workbench/common/editor';\nimport {StringEditorInput} from 'vs/workbench/common/editor/stringEditorInput';\nimport {StringEditorModel} from 'vs/workbench/common/editor/stringEditorModel';\nimport {FileEditorInput} from 'vs/workbench/parts/files/browser/editors/fileEditorInput';\nimport {TextFileEditorModel} from 'vs/workbench/parts/files/common/editors/textFileEditorModel';\nimport {TextFileService} from 'vs/workbench/parts/files/browser/textFileServices';\nimport {TestEventService, TestLifecycleService, TestPartService, TestStorageService, TestConfigurationService, TestRequestService, TestContextService, TestWorkspace, TestEditorService, MockRequestService} from 'vs/workbench/test/browser/servicesTestUtils';\nimport {Viewlet} from 'vs/workbench/browser/viewlet';\nimport {EventType} from 'vs/workbench/common/events';\nimport {NullTelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {UntitledEditorService} from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport {WorkbenchProgressService, ScopedService} from 'vs/workbench/services/progress/browser/progressService';\nimport {EditorArrangement} from 'vs/workbench/services/editor/common/editorService';\nimport {DelegatingWorkbenchEditorService, WorkbenchEditorService, IEditorPart} from 'vs/workbench/services/editor/browser/editorService';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IViewlet} from 'vs/workbench/common/viewlet';\nimport {Position, IEditor} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {createMockModeService, createMockModelService} from 'vs/editor/test/common/servicesTestUtils';\n\nlet activeViewlet: Viewlet = <any>{};\nlet activeEditor: BaseEditor = <any>{\n\tgetSelection: function () {\n\t\treturn 'test.selection';\n\t}\n};\n\nlet openedEditorInput;\nlet openedEditorOptions;\nlet openedEditorPosition;\n\nfunction toResource(path) {\n\treturn URI.file(paths.join('C:\\\\', path));\n}\n\nclass TestEditorPart implements IEditorPart {\n\tprivate activeInput;\n\n\tpublic getId(): string {\n\t\treturn null;\n\t}\n\n\tpublic setEditors(inputs: EditorInput[]): Promise {\n\t\treturn TPromise.as([]);\n\t}\n\n\tpublic closeEditors(othersOnly?: boolean): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic openEditor(input?: EditorInput, options?: EditorOptions, sideBySide?: boolean): TPromise<BaseEditor>;\n\tpublic openEditor(input?: EditorInput, options?: EditorOptions, position?: Position): TPromise<BaseEditor>;\n\tpublic openEditor(input?: EditorInput, options?: EditorOptions, arg?: any): TPromise<BaseEditor> {\n\t\topenedEditorInput = input;\n\t\topenedEditorOptions = options;\n\t\topenedEditorPosition = arg;\n\n\t\treturn TPromise.as(activeEditor);\n\t}\n\n\tpublic activateEditor(editor: IEditor): void {\n\t\t// Unsupported\n\t}\n\n\tpublic getActiveEditor(): BaseEditor {\n\t\treturn activeEditor;\n\t}\n\n\tpublic setActiveEditorInput(input: EditorInput) {\n\t\tthis.activeInput = input;\n\t}\n\n\tpublic getActiveEditorInput(): EditorInput {\n\t\treturn this.activeInput;\n\t}\n\n\tpublic getVisibleEditors(): IEditor[] {\n\t\treturn [activeEditor];\n\t}\n\n\tpublic moveEditor(from: Position, to: Position) {\n\t\t// Unsupported\n\t}\n\n\tpublic arrangeEditors(arrangement: EditorArrangement): void {\n\t\t// Unsuported\n\t}\n}\n\nclass TestViewletService implements IViewletService {\n\tpublic serviceId = IViewletService;\n\tpublic openViewlet(id: string, focus?: boolean): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic getActiveViewlet(): IViewlet {\n\t\treturn activeViewlet;\n\t}\n\n\tpublic dispose() {\n\t}\n}\n\nclass TestScopedService extends ScopedService {\n\tpublic isActive: boolean;\n\n\tconstructor(eventService: IEventService) {\n\t\tsuper(eventService, 'test.scopeId');\n\t}\n\n\tpublic onScopeActivated() {\n\t\tthis.isActive = true;\n\t}\n\n\tpublic onScopeDeactivated() {\n\t\tthis.isActive = false;\n\t}\n}\n\nclass TestProgressBar {\n\tpublic fTotal: number;\n\tpublic fWorked: number;\n\tpublic fInfinite: boolean;\n\tpublic fDone: boolean;\n\n\tconstructor() {\n\t}\n\n\tpublic infinite() {\n\t\tthis.fDone = null;\n\t\tthis.fInfinite = true;\n\n\t\treturn this;\n\t}\n\n\tpublic total(total: number) {\n\t\tthis.fDone = null;\n\t\tthis.fTotal = total;\n\n\t\treturn this;\n\t}\n\n\tpublic hasTotal() {\n\t\treturn !!this.fTotal;\n\t}\n\n\tpublic worked(worked: number) {\n\t\tthis.fDone = null;\n\n\t\tif (this.fWorked) {\n\t\t\tthis.fWorked += worked;\n\t\t} else {\n\t\t\tthis.fWorked = worked;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic done() {\n\t\tthis.fDone = true;\n\n\t\tthis.fInfinite = null;\n\t\tthis.fWorked = null;\n\t\tthis.fTotal = null;\n\n\t\treturn this;\n\t}\n\n\tpublic stop() {\n\t\treturn this.done();\n\t}\n\n\tpublic getContainer() {\n\t\treturn {\n\t\t\tshow: function () { },\n\t\t\thide: function () { }\n\t\t};\n\t}\n}\n\nsuite('Workbench UI Services', () => {\n\n\ttest('WorkbenchEditorService', function () {\n\t\tconst TestFileService = {\n\t\t\tresolveContent: function (resource) {\n\t\t\t\treturn TPromise.as({\n\t\t\t\t\tresource: resource,\n\t\t\t\t\tvalue: 'Hello Html',\n\t\t\t\t\tetag: 'index.txt',\n\t\t\t\t\tmime: 'text/plain',\n\t\t\t\t\tencoding: 'utf8',\n\t\t\t\t\tmtime: new Date().getTime(),\n\t\t\t\t\tname: paths.basename(resource.fsPath)\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tupdateContent: function (res) {\n\t\t\t\treturn TPromise.timeout(1).then(() => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresource: res,\n\t\t\t\t\t\tetag: 'index.txt',\n\t\t\t\t\t\tmime: 'text/plain',\n\t\t\t\t\t\tencoding: 'utf8',\n\t\t\t\t\t\tmtime: new Date().getTime(),\n\t\t\t\t\t\tname: paths.basename(res.fsPath)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tlet editorService = new TestEditorService(function () { });\n\t\tlet eventService = new TestEventService();\n\t\tlet contextService = new TestContextService(TestWorkspace);\n\t\tlet requestService = new MockRequestService(TestWorkspace, (url) => {\n\t\t\tif (/index\\.html$/.test(url)) {\n\t\t\t\treturn {\n\t\t\t\t\tresponseText: 'Hello Html',\n\t\t\t\t\tgetResponseHeader: key => ({\n\t\t\t\t\t\t'content-length': '1000',\n\t\t\t\t\t\t'last-modified': new Date().toUTCString(),\n\t\t\t\t\t\t'content-type': 'text/html'\n\t\t\t\t\t})[key.toLowerCase()]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn null;\n\t\t});\n\t\tlet telemetryService = NullTelemetryService;\n\n\t\tlet services = {\n\t\t\teventService: eventService,\n\t\t\tcontextService: contextService,\n\t\t\trequestService: requestService,\n\t\t\ttelemetryService: telemetryService,\n\t\t\tconfigurationService: new TestConfigurationService(),\n\t\t\tuntitledEditorService: new UntitledEditorService(),\n\t\t\tstorageService: new TestStorageService(),\n\t\t\teditorService: editorService,\n\t\t\tpartService: new TestPartService(),\n\t\t\tmodeService: createMockModeService(),\n\t\t\tmodelService: createMockModelService(),\n\t\t\tlifecycleService: new TestLifecycleService(),\n\t\t\tfileService: TestFileService\n\t\t};\n\t\tlet inst = createInstantiationService(services);\n\n\t\tlet textFileService = inst.createInstance(<any>TextFileService);\n\t\tinst.registerService('textFileService', textFileService);\n\t\tservices['instantiationService'] = inst;\n\n\t\tlet activeInput: EditorInput = inst.createInstance(FileEditorInput, toResource('/something.js'), 'text/javascript', void 0);\n\n\t\tlet testEditorPart = new TestEditorPart();\n\t\ttestEditorPart.setActiveEditorInput(activeInput);\n\t\tlet service: WorkbenchEditorService = <any>inst.createInstance(<any>WorkbenchEditorService, testEditorPart);\n\t\tservice.setInstantiationService(inst);\n\n\t\tassert.strictEqual(service.getActiveEditor(), activeEditor);\n\t\tassert.strictEqual(service.getActiveEditorInput(), activeInput);\n\n\t\t// Open EditorInput\n\t\tservice.openEditor(activeInput, null).then((editor) => {\n\t\t\tassert.strictEqual(openedEditorInput, activeInput);\n\t\t\tassert.strictEqual(openedEditorOptions, null);\n\t\t\tassert.strictEqual(editor, activeEditor);\n\t\t\tassert.strictEqual(service.getVisibleEditors().length, 1);\n\t\t\tassert(service.getVisibleEditors()[0] === editor);\n\t\t});\n\n\t\tservice.openEditor(activeInput, null, Position.LEFT).then((editor) => {\n\t\t\tassert.strictEqual(openedEditorInput, activeInput);\n\t\t\tassert.strictEqual(openedEditorOptions, null);\n\t\t\tassert.strictEqual(editor, activeEditor);\n\t\t\tassert.strictEqual(service.getVisibleEditors().length, 1);\n\t\t\tassert(service.getVisibleEditors()[0] === editor);\n\t\t});\n\n\t\t// Open Untyped Input\n\t\tservice.openEditor({ resource: toResource('/index.html'), mime: 'text/html', options: { selection: { startLineNumber: 1, startColumn: 1 } } }).then((editor) => {\n\t\t\tassert.strictEqual(editor, activeEditor);\n\n\t\t\tassert(openedEditorInput instanceof FileEditorInput);\n\t\t\tlet contentInput = <FileEditorInput>openedEditorInput;\n\t\t\tassert.strictEqual(contentInput.getResource().fsPath, toResource('/index.html').fsPath);\n\t\t\tassert.strictEqual(contentInput.getMime(), 'text/html');\n\n\t\t\tassert(openedEditorOptions instanceof TextEditorOptions);\n\t\t\tlet textEditorOptions = <TextEditorOptions>openedEditorOptions;\n\t\t\tassert(textEditorOptions.hasOptionsDefined());\n\t\t});\n\n\t\t// Resolve Editor Model (Typed EditorInput)\n\t\tlet input = inst.createInstance(StringEditorInput, 'name', 'description', 'hello world', 'text/plain', false);\n\t\tservice.resolveEditorModel(input, true).then((model: StringEditorModel) => {\n\t\t\tassert(model instanceof StringEditorModel);\n\n\t\t\tassert(model.isResolved());\n\n\t\t\tservice.resolveEditorModel(input, false).then((otherModel) => {\n\t\t\t\tassert(model === otherModel);\n\n\t\t\t\tinput.dispose();\n\t\t\t});\n\t\t});\n\n\t\t// Resolve Editor Model (Untyped Input)\n\t\tservice.resolveEditorModel({ resource: toResource('/index.html'), mime: 'text/html' }, true).then((model) => {\n\t\t\tassert(model instanceof TextFileEditorModel);\n\t\t});\n\n\t\t// Focus editor\n\t\tservice.focusEditor().then((editor) => {\n\t\t\tassert.strictEqual(editor, activeEditor);\n\t\t});\n\n\t\t// Close editor\n\t\tservice.closeEditor().then((editor) => {\n\t\t\tassert.strictEqual(editor, activeEditor);\n\t\t});\n\n\t\tservice.openEditor(null, null).then((editor) => {\n\t\t\tassert.strictEqual(editor, activeEditor);\n\t\t});\n\t});\n\n\ttest('DelegatingWorkbenchEditorService', function () {\n\t\tlet editorService = new TestEditorService(function () { });\n\t\tlet contextService = new TestContextService(TestWorkspace);\n\t\tlet eventService = new TestEventService();\n\t\tlet requestService = new TestRequestService();\n\t\tlet telemetryService = NullTelemetryService;\n\n\t\tlet services = {\n\t\t\teventService: eventService,\n\t\t\tcontextService: contextService,\n\t\t\trequestService: requestService,\n\t\t\ttelemetryService: telemetryService,\n\t\t\tstorageService: new TestStorageService(),\n\t\t\tuntitledEditorService: new UntitledEditorService(),\n\t\t\teditorService: editorService,\n\t\t\tpartService: new TestPartService(),\n\t\t\tlifecycleService: new TestLifecycleService(),\n\t\t\tmodelService: createMockModelService(),\n\t\t\tconfigurationService: new TestConfigurationService()\n\t\t};\n\n\t\tlet inst = createInstantiationService(services);\n\t\tlet textFileService = inst.createInstance(<any>TextFileService);\n\t\tinst.registerService('textFileService', textFileService);\n\t\tservices['instantiationService'] = inst;\n\t\tlet activeInput: EditorInput = inst.createInstance(FileEditorInput, toResource('/something.js'), 'text/javascript', void 0);\n\n\t\tlet testEditorPart = new TestEditorPart();\n\t\ttestEditorPart.setActiveEditorInput(activeInput);\n\n\t\tinst.createInstance(<any>WorkbenchEditorService, testEditorPart);\n\t\tclass MyEditor extends BaseEditor {\n\n\t\t\tconstructor(id: string) {\n\t\t\t\tsuper(id, null);\n\t\t\t}\n\n\t\t\tgetId(): string {\n\t\t\t\treturn 'myEditor';\n\t\t\t}\n\n\t\t\tpublic layout(): void {\n\n\t\t\t}\n\n\t\t\tpublic createEditor(): any {\n\n\t\t\t}\n\t\t}\n\t\tlet ed = inst.createInstance(MyEditor, 'my.editor');\n\n\t\tlet inp = inst.createInstance(StringEditorInput, 'name', 'description', 'hello world', 'text/plain', false);\n\t\tlet delegate: any = inst.createInstance(<any>DelegatingWorkbenchEditorService, ed, (editor: BaseEditor, input: EditorInput, options?: EditorOptions) => {\n\t\t\tassert.strictEqual(input, inp);\n\t\t\tassert.strictEqual(editor, ed);\n\n\t\t\treturn TPromise.as(true);\n\t\t});\n\n\t\tdelegate.openEditor(inp);\n\t});\n\n\ttest('ScopedService', function () {\n\t\tlet eventService = new TestEventService();\n\t\tlet service = new TestScopedService(eventService);\n\t\tassert(!service.isActive);\n\n\t\teventService.emit(EventType.EDITOR_OPENED, { editorId: 'other.test.scopeId' });\n\t\tassert(!service.isActive);\n\n\t\teventService.emit(EventType.EDITOR_OPENED, { editorId: 'test.scopeId' });\n\t\tassert(service.isActive);\n\n\t\teventService.emit(EventType.EDITOR_CLOSED, { editorId: 'test.scopeId' });\n\t\tassert(!service.isActive);\n\n\t\teventService.emit(EventType.COMPOSITE_OPENED, { compositeId: 'test.scopeId' });\n\t\tassert(service.isActive);\n\n\t\teventService.emit(EventType.COMPOSITE_CLOSED, { compositeId: 'test.scopeId' });\n\t\tassert(!service.isActive);\n\t});\n\n\ttest('WorkbenchProgressService', function () {\n\t\tlet testProgressBar = new TestProgressBar();\n\t\tlet eventService = new TestEventService();\n\t\tlet service = new WorkbenchProgressService(eventService, (<any>testProgressBar), 'test.scopeId', true);\n\n\t\t// Active: Show (Infinite)\n\t\tlet fn = service.show(true);\n\t\tassert.strictEqual(true, testProgressBar.fInfinite);\n\t\tfn.done();\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t// Active: Show (Total / Worked)\n\t\tfn = service.show(100);\n\t\tassert.strictEqual(false, !!testProgressBar.fInfinite);\n\t\tassert.strictEqual(100, testProgressBar.fTotal);\n\t\tfn.worked(20);\n\t\tassert.strictEqual(20, testProgressBar.fWorked);\n\t\tfn.total(80);\n\t\tassert.strictEqual(80, testProgressBar.fTotal);\n\t\tfn.done();\n\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t// Inactive: Show (Infinite)\n\t\teventService.emit(EventType.EDITOR_CLOSED, { editorId: 'test.scopeId' });\n\t\tservice.show(true);\n\t\tassert.strictEqual(false, !!testProgressBar.fInfinite);\n\t\teventService.emit(EventType.EDITOR_OPENED, { editorId: 'test.scopeId' });\n\t\tassert.strictEqual(true, testProgressBar.fInfinite);\n\n\t\t// Inactive: Show (Total / Worked)\n\t\teventService.emit(EventType.EDITOR_CLOSED, { editorId: 'test.scopeId' });\n\t\tfn = service.show(100);\n\t\tfn.total(80);\n\t\tfn.worked(20);\n\t\tassert.strictEqual(false, !!testProgressBar.fTotal);\n\t\teventService.emit(EventType.EDITOR_OPENED, { editorId: 'test.scopeId' });\n\t\tassert.strictEqual(20, testProgressBar.fWorked);\n\t\tassert.strictEqual(80, testProgressBar.fTotal);\n\n\t\t// Acive: Show While\n\t\tlet p = TPromise.as(null);\n\t\tservice.showWhile(p).then(() => {\n\t\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t\teventService.emit(EventType.EDITOR_CLOSED, { editorId: 'test.scopeId' });\n\t\t\tp = TPromise.as(null);\n\t\t\tservice.showWhile(p).then(() => {\n\t\t\t\tassert.strictEqual(true, testProgressBar.fDone);\n\n\t\t\t\teventService.emit(EventType.EDITOR_OPENED, { editorId: 'test.scopeId' });\n\t\t\t\tassert.strictEqual(true, testProgressBar.fDone);\n\t\t\t});\n\t\t});\n\t});\n});"]}