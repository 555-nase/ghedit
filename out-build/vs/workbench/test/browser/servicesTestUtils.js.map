{"version":3,"file":"vs/workbench/test/browser/servicesTestUtils.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/test/browser/servicesTestUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/workbench/browser/parts/editor/editor.contribution'; // make sure to load all contributed editor things into tests\nimport {Promise, TPromise} from 'vs/base/common/winjs.base';\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport Paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\nimport {NullTelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport Storage = require('vs/workbench/common/storage');\nimport WorkbenchEditorCommon = require('vs/workbench/common/editor');\nimport Event from 'vs/base/common/event';\nimport LifecycleService = require('vs/platform/lifecycle/common/baseLifecycleService');\nimport Types = require('vs/base/common/types');\nimport Severity from 'vs/base/common/severity';\nimport http = require('vs/base/common/http');\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IStorageService, StorageScope} from 'vs/platform/storage/common/storage';\nimport WorkbenchEditorService = require('vs/workbench/services/editor/common/editorService');\nimport QuickOpenService = require('vs/workbench/services/quickopen/common/quickOpenService');\nimport PartService = require('vs/workbench/services/part/common/partService');\nimport WorkspaceContextService = require('vs/workbench/services/workspace/common/contextService');\nimport {IEditorInput, IEditorModel, Position, IEditor, IResourceInput, ITextEditorModel} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IUntitledEditorService} from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport {IMessageService, IConfirmation} from 'vs/platform/message/common/message';\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport {BaseRequestService} from 'vs/platform/request/common/baseRequestService';\nimport {IWorkspace, IConfiguration} from 'vs/platform/workspace/common/workspace';\n\nexport const TestWorkspace: IWorkspace = {\n\tresource: URI.file('C:\\\\testWorkspace'),\n\tid: 'testWorkspace',\n\tname: 'Test Workspace',\n\tuid: new Date().getTime(),\n\tmtime: new Date().getTime()\n};\n\nexport const TestConfiguration: IConfiguration = {\n\tenv: Object.create(null)\n};\n\nexport class TestContextService implements WorkspaceContextService.IWorkspaceContextService {\n\tpublic serviceId = WorkspaceContextService.IWorkspaceContextService;\n\n\tprivate workspace: any;\n\tprivate configuration: any;\n\tprivate options: any;\n\n\tconstructor(workspace: any = TestWorkspace, configuration: any = TestConfiguration, options: any = null) {\n\t\tthis.workspace = workspace;\n\t\tthis.configuration = configuration;\n\t\tthis.options = options || {\n\t\t\tglobalSettings: {\n\t\t\t\tsettings: {}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getWorkspace(): IWorkspace {\n\t\treturn this.workspace;\n\t}\n\n\tpublic getConfiguration(): IConfiguration {\n\t\treturn this.configuration;\n\t}\n\n\tpublic getOptions() {\n\t\treturn this.options;\n\t}\n\n\tpublic updateOptions() {\n\n\t}\n\n\tpublic isInsideWorkspace(resource: URI): boolean {\n\t\tif (resource && this.workspace) {\n\t\t\treturn Paths.isEqualOrParent(resource.fsPath, this.workspace.resource.fsPath);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic toWorkspaceRelativePath(resource: URI): string {\n\t\treturn Paths.makeAbsolute(Paths.normalize(resource.fsPath.substr('c:'.length)));\n\t}\n\n\tpublic toResource(workspaceRelativePath: string): URI {\n\t\treturn URI.file(Paths.join('C:\\\\', workspaceRelativePath));\n\t}\n}\n\nexport class TestMessageService implements IMessageService {\n\tpublic serviceId = IMessageService;\n\n\tprivate counter: number;\n\n\tconstructor() {\n\t\tthis.counter = 0;\n\t}\n\n\tpublic show(sev: Severity, message: any): () => void {\n\t\tthis.counter++;\n\n\t\treturn null;\n\t}\n\n\tpublic getCounter() {\n\t\treturn this.counter;\n\t}\n\n\tpublic hideAll(): void {\n\t\t// No-op\n\t}\n\n\tpublic confirm(confirmation: IConfirmation): boolean {\n\t\treturn false;\n\t}\n\n\tpublic setStatusMessage(message: string, autoDisposeAfter: number = -1): Lifecycle.IDisposable {\n\t\treturn {\n\t\t\tdispose: () => { /* Nothing to do here */ }\n\t\t};\n\t}\n}\n\nexport class TestPartService implements PartService.IPartService {\n\tpublic serviceId = PartService.IPartService;\n\n\tpublic layout(): void { }\n\n\tpublic isCreated(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic joinCreation(): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic hasFocus(part): boolean {\n\t\treturn false;\n\t}\n\n\tpublic isVisible(part): boolean {\n\t\treturn true;\n\t}\n\n\tpublic isSideBarHidden(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic setSideBarHidden(hidden: boolean): void { }\n\n\tpublic isPanelHidden(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic setPanelHidden(hidden: boolean): void { }\n\n\tpublic getSideBarPosition() {\n\t\treturn 0;\n\t}\n\n\tpublic setSideBarPosition(position): void { }\n\tpublic addClass(clazz: string): void { }\n\tpublic removeClass(clazz: string): void { }\n}\n\nexport class TestEventService extends EventEmitter.EventEmitter implements IEventService {\n\tpublic serviceId = IEventService;\n}\n\nexport class TestLifecycleService extends LifecycleService.BaseLifecycleService { }\n\nexport class TestStorageService extends EventEmitter.EventEmitter implements IStorageService {\n\tpublic serviceId = IStorageService;\n\n\tprivate storage: Storage.Storage;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tlet context = new TestContextService();\n\t\tthis.storage = new Storage.Storage(context, new Storage.InMemoryLocalStorage());\n\t}\n\n\tstore(key: string, value: any, scope: StorageScope = StorageScope.GLOBAL): void {\n\t\tthis.storage.store(key, value, scope);\n\t}\n\n\tswap(key: string, valueA: any, valueB: any, scope: StorageScope = StorageScope.GLOBAL, defaultValue?: any): void {\n\t\tthis.storage.swap(key, valueA, valueB, scope, defaultValue);\n\t}\n\n\tremove(key: string, scope: StorageScope = StorageScope.GLOBAL): void {\n\t\tthis.storage.remove(key, scope);\n\t}\n\n\tget(key: string, scope: StorageScope = StorageScope.GLOBAL, defaultValue?: string): string {\n\t\treturn this.storage.get(key, scope, defaultValue);\n\t}\n\n\tgetInteger(key: string, scope: StorageScope = StorageScope.GLOBAL, defaultValue?: number): number {\n\t\treturn this.storage.getInteger(key, scope, defaultValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope = StorageScope.GLOBAL, defaultValue?: boolean): boolean {\n\t\treturn this.storage.getBoolean(key, scope, defaultValue);\n\t}\n}\n\nexport class TestRequestService extends BaseRequestService {\n\n\tconstructor(workspace = TestWorkspace) {\n\t\tsuper(new TestContextService(), NullTelemetryService);\n\t}\n}\n\nexport interface ICustomResponse {\n\tresponseText: string;\n\tgetResponseHeader: (key: string) => string;\n}\n\nexport interface IMockRequestHandler {\n\t(url: string): string | ICustomResponse;\n}\n\nexport class MockRequestService extends BaseRequestService {\n\n\tconstructor(workspace: any, private handler: IMockRequestHandler) {\n\t\tsuper(new TestContextService(), NullTelemetryService);\n\t}\n\n\tpublic makeRequest(options: http.IXHROptions): TPromise<http.IXHRResponse> {\n\t\tlet data = this.handler(options.url);\n\n\t\tif (!data) {\n\t\t\treturn super.makeRequest(options);\n\t\t}\n\n\t\tlet isString = Types.isString(data);\n\t\tlet responseText = isString ? <string>data : (<ICustomResponse>data).responseText;\n\t\tlet getResponseHeader = isString ? () => '' : (<ICustomResponse>data).getResponseHeader;\n\n\t\treturn TPromise.as<http.IXHRResponse>({\n\t\t\tresponseText: responseText,\n\t\t\tstatus: 200,\n\t\t\treadyState: 4,\n\t\t\tgetResponseHeader: getResponseHeader\n\t\t});\n\t}\n}\n\nexport class TestUntitledEditorService implements IUntitledEditorService {\n\tpublic serviceId = IUntitledEditorService;\n\n\tpublic get(resource: URI) {\n\t\treturn null;\n\t}\n\n\tpublic getAll() {\n\t\treturn [];\n\t}\n\n\tpublic getDirty() {\n\t\treturn [];\n\t}\n\n\tpublic isDirty() {\n\t\treturn false;\n\t}\n\n\tpublic createOrGet(resource?: URI) {\n\t\treturn null;\n\t}\n\n\tpublic hasAssociatedFilePath(resource: URI) {\n\t\treturn false;\n\t}\n}\n\nexport class TestEditorService implements WorkbenchEditorService.IWorkbenchEditorService {\n\tpublic serviceId = WorkbenchEditorService.IWorkbenchEditorService;\n\n\tpublic activeEditorInput;\n\tpublic activeEditorOptions;\n\tpublic activeEditorPosition;\n\n\tprivate callback: (method: string) => void;\n\n\tconstructor(callback?: (method: string) => void) {\n\t\tthis.callback = callback || ((s: string) => { });\n\t}\n\n\tpublic setEditors(inputs): Promise {\n\t\treturn TPromise.as([]);\n\t}\n\n\tpublic closeEditors(othersOnly?: boolean): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic isVisible(input: IEditorInput, includeDiff: boolean): boolean {\n\t\treturn false;\n\t}\n\n\tpublic getActiveEditor(): IEditor {\n\t\tthis.callback('getActiveEditor');\n\n\t\treturn null;\n\t}\n\n\tpublic getActiveEditorInput(): IEditorInput {\n\t\tthis.callback('getActiveEditorInput');\n\n\t\treturn null;\n\t}\n\n\tpublic getVisibleEditors(): IEditor[] {\n\t\tthis.callback('getVisibleEditors');\n\n\t\treturn [];\n\t}\n\n\tpublic activateEditor(position: Position): void;\n\tpublic activateEditor(editor: IEditor): void;\n\tpublic activateEditor(arg: any): void {\n\t\tthis.callback('activateEditor');\n\t}\n\n\tpublic moveEditor(from: Position, to: Position): void {\n\t\tthis.callback('moveEditor');\n\t}\n\n\tpublic arrangeEditors(arrangement: WorkbenchEditorService.EditorArrangement): void {\n\t\tthis.callback('arrangeEditors');\n\t}\n\n\tpublic openEditor(input: any, options?: any, position?: any): Promise {\n\t\tthis.callback('openEditor');\n\n\t\tthis.activeEditorInput = input;\n\t\tthis.activeEditorOptions = options;\n\t\tthis.activeEditorPosition = position;\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic resolveEditorModel(input: IEditorInput, refresh?: boolean): TPromise<IEditorModel>;\n\tpublic resolveEditorModel(input: IResourceInput, refresh?: boolean): TPromise<ITextEditorModel>;\n\tpublic resolveEditorModel(input: any, refresh?: boolean): Promise {\n\t\tthis.callback('resolveEditorModel');\n\n\t\treturn input.resolve(refresh);\n\t}\n\n\n\tpublic closeEditor(editor?: IEditor): TPromise<IEditor>;\n\tpublic closeEditor(position?: Position): TPromise<IEditor>;\n\tpublic closeEditor(arg?: any): TPromise<IEditor> {\n\t\tthis.callback('closeEditor');\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic focusEditor(editor?: IEditor): TPromise<IEditor>;\n\tpublic focusEditor(position?: Position): TPromise<IEditor>;\n\tpublic focusEditor(arg?: any): TPromise<IEditor> {\n\t\tthis.callback('focusEditor');\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic inputToType(input: IResourceInput): TPromise<IEditorInput> {\n\t\treturn TPromise.as(null);\n\t}\n}\n\nexport class TestQuickOpenService implements QuickOpenService.IQuickOpenService {\n\tpublic serviceId = QuickOpenService.IQuickOpenService;\n\n\tprivate callback: (prefix: string) => void;\n\n\tconstructor(callback?: (prefix: string) => void) {\n\t\tthis.callback = callback;\n\t}\n\n\tpick(arg: any, placeHolder?: string, autoFocusFirst?: boolean): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\tinput(options?: any): Promise {\n\t\treturn TPromise.as(null);\n\t}\n\n\trefresh(): Promise {\n\t\treturn TPromise.as(true);\n\t}\n\n\tshow(prefix?: string, quickNavigateConfiguration?: any): Promise {\n\t\tif (this.callback) {\n\t\t\tthis.callback(prefix);\n\t\t}\n\n\t\treturn TPromise.as(true);\n\t}\n\n\tgetEditorHistory(): WorkbenchEditorCommon.EditorInput[] {\n\t\treturn [];\n\t}\n\n\tget onShow(): Event<void> {\n\t\treturn null;\n\t}\n\n\tget onHide(): Event<void> {\n\t\treturn null;\n\t}\n\n\tpublic removeEditorHistoryEntry(input: WorkbenchEditorCommon.EditorInput): void { }\n\tpublic dispose() { }\n\tpublic quickNavigate(): void { }\n}\n\nexport const TestFileService = {\n\tresolveContent: function (resource) {\n\t\treturn TPromise.as({\n\t\t\tresource: resource,\n\t\t\tvalue: 'Hello Html',\n\t\t\tetag: 'index.txt',\n\t\t\tmime: 'text/plain',\n\t\t\tencoding: 'utf8',\n\t\t\tmtime: new Date().getTime(),\n\t\t\tname: Paths.basename(resource.fsPath)\n\t\t});\n\t},\n\n\tupdateContent: function (res) {\n\t\treturn TPromise.timeout(1).then(() => {\n\t\t\treturn {\n\t\t\t\tresource: res,\n\t\t\t\tetag: 'index.txt',\n\t\t\t\tmime: 'text/plain',\n\t\t\t\tencoding: 'utf8',\n\t\t\t\tmtime: new Date().getTime(),\n\t\t\t\tname: Paths.basename(res.fsPath)\n\t\t\t};\n\t\t});\n\t}\n};\n\nexport class TestConfigurationService extends EventEmitter.EventEmitter implements IConfigurationService {\n\tpublic serviceId = IConfigurationService;\n\n\tpublic getConfiguration(): any {\n\t\treturn {};\n\t}\n\n\tpublic hasWorkspaceConfiguration(): boolean {\n\t\treturn false;\n\t}\n\n\tpublic onDidUpdateConfiguration() {\n\t\treturn { dispose() { } };\n\t}\n}"]}