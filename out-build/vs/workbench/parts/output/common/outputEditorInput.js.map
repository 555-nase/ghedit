{"version":3,"sources":["vs/workbench/parts/output/common/outputEditorInput.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/output/common/outputEditorInput.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport strings = require('vs/base/common/strings');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {EditorModel} from 'vs/workbench/common/editor';\nimport {StringEditorInput} from 'vs/workbench/common/editor/stringEditorInput';\nimport {OUTPUT_EDITOR_INPUT_ID, OUTPUT_PANEL_ID, IOutputEvent, OUTPUT_MIME, IOutputService, MAX_OUTPUT_LENGTH, IOutputChannel} from 'vs/workbench/parts/output/common/output';\nimport {OutputPanel} from 'vs/workbench/parts/output/browser/outputPanel';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {EventType, CompositeEvent} from 'vs/workbench/common/events';\nimport {IPanelService} from 'vs/workbench/services/panel/common/panelService';\n\n/**\n * Output Editor Input\n */\nexport class OutputEditorInput extends StringEditorInput {\n\n\tprivate static OUTPUT_DELAY = 300; // delay in ms to accumulate output before emitting an event about it\n\tprivate static instances: { [channel: string]: OutputEditorInput; } = Object.create(null);\n\n\tprivate outputSet: boolean;\n\tprivate bufferedOutput: string;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate appendOutputScheduler: RunOnceScheduler;\n\n\tpublic static getInstances(): OutputEditorInput[] {\n\t\treturn Object.keys(OutputEditorInput.instances).map((key) => OutputEditorInput.instances[key]);\n\t}\n\n\tpublic static getInstance(instantiationService: IInstantiationService, channel: IOutputChannel): OutputEditorInput {\n\t\tif (OutputEditorInput.instances[channel.id]) {\n\t\t\treturn OutputEditorInput.instances[channel.id];\n\t\t}\n\n\t\tOutputEditorInput.instances[channel.id] = instantiationService.createInstance(OutputEditorInput, channel);\n\n\t\treturn OutputEditorInput.instances[channel.id];\n\t}\n\n\tconstructor(\n\t\tprivate outputChannel: IOutputChannel,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IOutputService private outputService: IOutputService,\n\t\t@IPanelService private panelService: IPanelService,\n\t\t@IEventService private eventService: IEventService\n\t) {\n\t\tsuper(nls.localize('output', \"Output\"), outputChannel ? nls.localize('outputChannel', \"for '{0}'\", outputChannel.label) : '', '', OUTPUT_MIME, true, instantiationService);\n\n\t\tthis.bufferedOutput = '';\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.outputService.onOutput(this.onOutputReceived, this));\n\t\tthis.toDispose.push(this.outputService.onActiveOutputChannel(() => this.scheduleOutputAppend()));\n\t\tthis.toDispose.push(this.eventService.addListener2(EventType.COMPOSITE_OPENED, (e: CompositeEvent) => {\n\t\t\tif (e.compositeId === OUTPUT_PANEL_ID) {\n\t\t\t\tthis.appendOutput();\n\t\t\t}\n\t\t}));\n\n\t\tthis.appendOutputScheduler = new RunOnceScheduler(() => {\n\t\t\tif (this.isVisible()) {\n\t\t\t\tthis.appendOutput();\n\t\t\t}\n\t\t}, OutputEditorInput.OUTPUT_DELAY);\n\t}\n\n\tprivate appendOutput(): void {\n\t\tif (this.value.length + this.bufferedOutput.length > MAX_OUTPUT_LENGTH) {\n\t\t\tthis.setValue(this.outputChannel.output);\n\t\t} else {\n\t\t\tthis.append(this.bufferedOutput);\n\t\t}\n\t\tthis.bufferedOutput = '';\n\n\t\tconst panel = this.panelService.getActivePanel();\n\t\t(<OutputPanel>panel).revealLastLine();\n\t}\n\n\tprivate onOutputReceived(e: IOutputEvent): void {\n\t\tif (this.outputSet && e.channelId === this.outputChannel.id) {\n\t\t\tif (e.output) {\n\t\t\t\tthis.bufferedOutput = strings.appendWithLimit(this.bufferedOutput, e.output, MAX_OUTPUT_LENGTH);\n\t\t\t\tthis.scheduleOutputAppend();\n\t\t\t} else if (e.output === null) {\n\t\t\t\tthis.clearValue(); // special output indicates we should clear\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate isVisible(): boolean {\n\t\tconst panel = this.panelService.getActivePanel();\n\t\treturn panel && panel.getId() === OUTPUT_PANEL_ID && this.outputService.getActiveChannel().id === this.outputChannel.id;\n\t}\n\n\tprivate scheduleOutputAppend(): void {\n\t\tif (this.isVisible() && this.bufferedOutput && !this.appendOutputScheduler.isScheduled()) {\n\t\t\tthis.appendOutputScheduler.schedule();\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn OUTPUT_EDITOR_INPUT_ID;\n\t}\n\n\tpublic resolve(refresh?: boolean): TPromise<EditorModel> {\n\t\treturn super.resolve(refresh).then(model => {\n\t\t\t// Just return model if output already set\n\t\t\tif (this.outputSet) {\n\t\t\t\treturn model;\n\t\t\t}\n\n\t\t\tthis.setValue(this.outputChannel.output);\n\t\t\tthis.outputSet = true;\n\n\t\t\treturn model;\n\t\t});\n\t}\n\n\tpublic matches(otherInput: any): boolean {\n\t\tif (otherInput instanceof OutputEditorInput) {\n\t\t\tlet otherOutputEditorInput = <OutputEditorInput>otherInput;\n\t\t\tif (otherOutputEditorInput.outputChannel.id === this.outputChannel.id) {\n\t\t\t\treturn super.matches(otherInput);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.appendOutputScheduler.dispose();\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}