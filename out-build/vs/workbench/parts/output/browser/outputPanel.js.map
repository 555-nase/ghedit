{"version":3,"sources":["vs/workbench/parts/output/browser/outputPanel.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/output/browser/outputPanel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Action, IAction} from 'vs/base/common/actions';\nimport {Builder} from 'vs/base/browser/builder';\nimport {IActionItem} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {IEditorOptions} from 'vs/editor/common/editorCommon';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IStorageService} from 'vs/platform/storage/common/storage';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {EditorInput, EditorOptions} from 'vs/workbench/common/editor';\nimport {StringEditor} from 'vs/workbench/browser/parts/editor/stringEditor';\nimport {OUTPUT_PANEL_ID, IOutputService} from 'vs/workbench/parts/output/common/output';\nimport {OutputEditorInput} from 'vs/workbench/parts/output/common/outputEditorInput';\nimport {SwitchOutputAction, SwitchOutputActionItem, ClearOutputAction} from 'vs/workbench/parts/output/browser/outputActions';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IThemeService} from 'vs/workbench/services/themes/common/themeService';\n\nexport class OutputPanel extends StringEditor {\n\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate actions: IAction[];\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IModeService modeService: IModeService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@IOutputService private outputService: IOutputService\n\t) {\n\t\tsuper(telemetryService, instantiationService, contextService, storageService,\n\t\t\tmessageService, configurationService, eventService, editorService, modeService, themeService);\n\t\tthis.toDispose = [];\n\t}\n\n\tpublic getId(): string {\n\t\treturn OUTPUT_PANEL_ID;\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\tif (!this.actions) {\n\t\t\tthis.actions = [\n\t\t\t\tthis.instantiationService.createInstance(SwitchOutputAction),\n\t\t\t\tthis.instantiationService.createInstance(ClearOutputAction)\n\t\t\t];\n\n\t\t\tthis.actions.forEach(a => {\n\t\t\t\tthis.toDispose.push(a);\n\t\t\t});\n\t\t}\n\n\t\treturn this.actions;\n\t}\n\n\tpublic getActionItem(action: Action): IActionItem {\n\t\tif (action.id === SwitchOutputAction.ID) {\n\t\t\treturn this.instantiationService.createInstance(SwitchOutputActionItem, action);\n\t\t}\n\n\t\treturn super.getActionItem(action);\n\t}\n\n\tprotected getCodeEditorOptions(): IEditorOptions {\n\t\tconst options = super.getCodeEditorOptions();\n\t\toptions.wrappingColumn = 0;\t\t\t\t// all output editors wrap\n\t\toptions.lineNumbers = false;\t\t\t// all output editors hide line numbers\n\t\toptions.glyphMargin = false;\n\t\toptions.lineDecorationsWidth = 20;\n\t\toptions.rulers = [];\n\t\toptions.folding = false;\n\n\t\tconst channel = this.outputService.getActiveChannel();\n\t\toptions.ariaLabel = channel ? nls.localize('outputPanelWithInputAriaLabel', \"{0}, Output panel\", channel.label) : nls.localize('outputPanelAriaLabel', \"Output panel\");\n\n\t\treturn options;\n\t}\n\n\tpublic setInput(input: EditorInput, options: EditorOptions): TPromise<void> {\n\t\treturn super.setInput(input, options).then(() => this.revealLastLine());\n\t}\n\n\tpublic create(parent: Builder): TPromise<void> {\n\t\treturn super.create(parent)\n\t\t\t.then(() => this.setInput(OutputEditorInput.getInstance(this.instantiationService, this.outputService.getActiveChannel()), null));\n\t}\n\n\tpublic focus(): void {\n\t\tsuper.focus();\n\t\tthis.revealLastLine();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t\tsuper.dispose();\n\t}\n}\n"]}