{"version":3,"file":"vs/workbench/parts/gettingStarted/test/common/gettingStarted.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/gettingStarted/test/common/gettingStarted.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;IAEhG,YAAY,CAAC;IAQb;QAAiC,sCAAsB;QAAvD;YAAiC,8BAAsB;QAMvD,CAAC;QAHU,yCAAY,GAAtB,UAAuB,GAAW;YACjC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACpB,CAAC;QACF,yBAAC;IAAD,CAAC,AAND,CAAiC,+CAAsB,GAMtD;IAED,KAAK,CAAC,4BAA4B,EAAE;QACnC,IAAI,aAAa,GAA0B,IAAI,CAAC;QAChD,IAAI,oBAAoB,GAAW,IAAI,CAAC;QACxC,IAAI,wBAAwB,GAAW,IAAI,CAAC;QAC5C,IAAI,SAAS,GAAW,IAAI,CAAC;QAC7B,IAAI,OAAO,GAAW,IAAI,CAAC;QAE3B,UAAU,CAAC;YACV,aAAa,GAAG,iDAA0B,CAAC;gBAC1C,cAAc,EAAE;oBACf,gBAAgB,EAAE;wBACjB,MAAM,CAAC;4BACN,GAAG,EAAE;gCACJ,WAAW,EAAE,oBAAoB;gCACjC,OAAO,EAAE,OAAO;6BAChB;yBACD,CAAA;oBACF,CAAC;iBACD;gBACD,gBAAgB,EAAE;oBACjB,gBAAgB,EAAE,cAAM,OAAA,qBAAQ,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,EAArC,CAAqC;iBAC7D;gBACD,cAAc,EAAE;oBACf,GAAG,EAAE,cAAM,OAAA,wBAAwB,EAAxB,CAAwB;oBACnC,KAAK,EAAE,UAAC,KAAK,IAAK,OAAA,wBAAwB,GAAG,KAAK,EAAhC,CAAgC;iBAClD;aACD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,aAAa,CAAC;YACb,aAAa,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC;YACL,oBAAoB,GAAG,IAAI,CAAC;YAC5B,wBAAwB,GAAG,IAAI,CAAC;YAChC,OAAO,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE;YAC3B,IAAI,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YACtE,MAAM,CAAC,cAAc,CAAC,OAAO,KAAK,SAAS,EAAE,sDAAsD,CAAC,CAAC;QACtG,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,EAAE;YACjB,oBAAoB,GAAG,UAAU,CAAC;YAClC,OAAO,GAAG,UAAU,CAAC;YACrB,SAAS,GAAG,KAAK,CAAC;YAClB,IAAI,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YACtE,MAAM,CAAC,cAAc,CAAC,OAAO,KAAQ,oBAAoB,eAAU,OAAO,aAAQ,SAAW,EAAE,8DAA8D,CAAC,CAAC;YAC/J,MAAM,CAAC,wBAAwB,KAAK,IAAI,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE;YACnC,oBAAoB,GAAG,KAAK,CAAC;YAC7B,wBAAwB,GAAG,MAAM,CAAC;YAClC,IAAI,cAAc,GAAG,aAAa,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC;YACtE,MAAM,CAAC,cAAc,CAAC,OAAO,KAAK,SAAS,EAAE,qCAAqC,CAAC,CAAC;YACpF,MAAM,CAAC,wBAAwB,KAAK,IAAI,EAAE,oCAAoC,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport {AbstractGettingStarted} from 'vs/workbench/parts/gettingStarted/common/abstractGettingStarted';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {createInstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {TPromise} from 'vs/base/common/winjs.base';\n\nclass TestGettingStarted extends AbstractGettingStarted {\n\tpublic lastUrl: string;\n\n\tprotected openExternal(url: string) {\n\t\tthis.lastUrl = url;\n\t}\n}\n\nsuite('Workbench - GettingStarted', () => {\n\tlet instantiation: IInstantiationService = null;\n\tlet welcomePageEnvConfig: string = null;\n\tlet hideWelcomeSettingsValue: string = null;\n\tlet machineId: string = null;\n\tlet appName: string = null;\n\n\tsuiteSetup(() => {\n\t\tinstantiation = createInstantiationService({\n\t\t\tcontextService: {\n\t\t\t\tgetConfiguration: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenv: {\n\t\t\t\t\t\t\twelcomePage: welcomePageEnvConfig,\n\t\t\t\t\t\t\tappName: appName\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\ttelemetryService: {\n\t\t\t\tgetTelemetryInfo: () => TPromise.as({ machineId: machineId })\n\t\t\t},\n\t\t\tstorageService: {\n\t\t\t\tget: () => hideWelcomeSettingsValue,\n\t\t\t\tstore: (value) => hideWelcomeSettingsValue = value\n\t\t\t}\n\t\t});\n\t});\n\n\tsuiteTeardown(() => {\n\t\tinstantiation = null;\n\t});\n\n\tsetup(() => {\n\t\twelcomePageEnvConfig = null;\n\t\thideWelcomeSettingsValue = null;\n\t\tappName = null;\n\t});\n\n\ttest('disabled by default', function() {\n\t\tlet gettingStarted = instantiation.createInstance(TestGettingStarted);\n\t\tassert(gettingStarted.lastUrl === undefined, 'no page is opened when welcomePage is not configured');\n\t});\n\n\ttest('base case', function() {\n\t\twelcomePageEnvConfig = 'base url';\n\t\tappName = 'some app';\n\t\tmachineId = '123';\n\t\tlet gettingStarted = instantiation.createInstance(TestGettingStarted);\n\t\tassert(gettingStarted.lastUrl === `${welcomePageEnvConfig}&&from=${appName}&&id=${machineId}`, 'a page is opened when welcomePage is configured && first run');\n\t\tassert(hideWelcomeSettingsValue !== null, 'a flag is set to hide welcome page');\n\t});\n\n\ttest('dont show after initial run', function() {\n\t\twelcomePageEnvConfig = 'url';\n\t\thideWelcomeSettingsValue = 'true';\n\t\tlet gettingStarted = instantiation.createInstance(TestGettingStarted);\n\t\tassert(gettingStarted.lastUrl === undefined, 'no page is opened after initial run');\n\t\tassert(hideWelcomeSettingsValue !== null, 'a flag is set to hide welcome page');\n\t});\n});"]}