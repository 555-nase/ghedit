{"version":3,"file":"vs/workbench/parts/git/test/common/gitModel.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/test/common/gitModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n\nimport assert = require('assert');\nimport Git = require('vs/workbench/parts/git/common/git');\nimport Model = require('vs/workbench/parts/git/common/gitModel');\n\nsuite('Git - StatusModel', () => {\n\tvar model: Git.IStatusModel;\n\n\tsetup(() => {\n\t\tmodel = new Model.StatusModel();\n\t});\n\n\tteardown(() => {\n\t\tmodel = null;\n\t});\n\n\ttest('simple update', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: '?', y: '?', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 0);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\t});\n\n\ttest('simple update same file twice', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: '?', y: '?', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 0);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: '?', y: '?', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tindex = model.getIndexStatus().all();\n\t\tworkingTree = model.getWorkingTreeStatus().all();\n\t\tmerge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 0);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\t});\n\n\ttest('simple update same file twice, first untracked, then ignored', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: '?', y: '?', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 0);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: '!', y: '!', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tindex = model.getIndexStatus().all();\n\t\tworkingTree = model.getWorkingTreeStatus().all();\n\t\tmerge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 0);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\t});\n\n\ttest('same file, both modified in index, deleted in working tree', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'hello', x: 'M', y: 'D', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 1);\n\t\tassert.equal(workingTree.length, 1);\n\t\tassert.equal(merge.length, 0);\n\n\t\tassert.equal(index[0].getPath(), 'hello');\n\t\tassert.equal(index[0].getStatus(), Git.Status.INDEX_MODIFIED);\n\n\t\tassert.equal(workingTree[0].getPath(), 'hello');\n\t\tassert.equal(workingTree[0].getStatus(), Git.Status.DELETED);\n\t});\n\n\ttest('index and working tree matches', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'f1', x: 'M', y: ' ', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f2', x: 'A', y: ' ', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f3', x: 'R', y: ' ', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f4', x: 'C', y: ' ', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 4);\n\t\tassert.equal(workingTree.length, 0);\n\t\tassert.equal(merge.length, 0);\n\n\t\tassert.equal(index[0].getStatus(), Git.Status.INDEX_MODIFIED);\n\t\tassert.equal(index[1].getStatus(), Git.Status.INDEX_ADDED);\n\t\tassert.equal(index[2].getStatus(), Git.Status.INDEX_RENAMED);\n\t\tassert.equal(index[3].getStatus(), Git.Status.INDEX_COPIED);\n\t});\n\n\ttest('work tree changed since index', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'f1', x: ' ', y: 'M', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f2', x: 'M', y: 'M', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f3', x: 'A', y: 'M', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f4', x: 'R', y: 'M', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f5', x: 'C', y: 'M', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 4);\n\t\tassert.equal(workingTree.length, 5);\n\t\tassert.equal(merge.length, 0);\n\n\t\tassert.equal(index[0].getStatus(), Git.Status.INDEX_MODIFIED);\n\t\tassert.equal(index[1].getStatus(), Git.Status.INDEX_ADDED);\n\t\tassert.equal(index[2].getStatus(), Git.Status.INDEX_RENAMED);\n\t\tassert.equal(index[3].getStatus(), Git.Status.INDEX_COPIED);\n\n\t\tassert.equal(workingTree[0].getStatus(), Git.Status.MODIFIED);\n\t\tassert.equal(workingTree[1].getStatus(), Git.Status.MODIFIED);\n\t\tassert.equal(workingTree[2].getStatus(), Git.Status.MODIFIED);\n\t\tassert.equal(workingTree[3].getStatus(), Git.Status.MODIFIED);\n\t\tassert.equal(workingTree[3].getStatus(), Git.Status.MODIFIED);\n\t});\n\n\ttest('deleted in work tree', () => {\n\t\tmodel.update([\n\t\t\t{ path: 'f1', x: ' ', y: 'D', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f2', x: 'M', y: 'D', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f3', x: 'A', y: 'D', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f4', x: 'R', y: 'D', mimetype: 'application/octet-stream' },\n\t\t\t{ path: 'f5', x: 'C', y: 'D', mimetype: 'application/octet-stream' }\n\t\t]);\n\n\t\tvar index = model.getIndexStatus().all();\n\t\tvar workingTree = model.getWorkingTreeStatus().all();\n\t\tvar merge = model.getMergeStatus().all();\n\n\t\tassert.equal(index.length, 4);\n\t\tassert.equal(workingTree.length, 5);\n\t\tassert.equal(merge.length, 0);\n\n\t\tassert.equal(index[0].getStatus(), Git.Status.INDEX_MODIFIED);\n\t\tassert.equal(index[1].getStatus(), Git.Status.INDEX_ADDED);\n\t\tassert.equal(index[2].getStatus(), Git.Status.INDEX_RENAMED);\n\t\tassert.equal(index[3].getStatus(), Git.Status.INDEX_COPIED);\n\n\t\tassert.equal(workingTree[0].getStatus(), Git.Status.DELETED);\n\t\tassert.equal(workingTree[1].getStatus(), Git.Status.DELETED);\n\t\tassert.equal(workingTree[2].getStatus(), Git.Status.DELETED);\n\t\tassert.equal(workingTree[3].getStatus(), Git.Status.DELETED);\n\t\tassert.equal(workingTree[3].getStatus(), Git.Status.DELETED);\n\t});\n});\n"]}