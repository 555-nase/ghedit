{"version":3,"file":"vs/workbench/parts/git/test/common/stageRanges.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/test/common/stageRanges.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n\nimport * as assert from 'assert';\nimport { getSelectedChanges, applyChangesToModel } from 'vs/workbench/parts/git/common/stageRanges';\nimport { Model } from 'vs/editor/common/model/model';\nimport { NullMode } from 'vs/editor/common/modes/nullMode';\nimport { IChange, IEditorSelection, DefaultEndOfLine } from 'vs/editor/common/editorCommon';\nimport { Selection } from 'vs/editor/common/core/selection';\n\nfunction changesEqual(actual: IChange[], expected: IChange[]) {\n\tassert.equal(actual.length, expected.length);\n\tif (actual.length === expected.length) {\n\t\tfor (var i = 0; i < actual.length; ++i) {\n\t\t\tassert.equal(actual[i].modifiedStartLineNumber, expected[i].modifiedStartLineNumber);\n\t\t\tassert.equal(actual[i].modifiedEndLineNumber, expected[i].modifiedEndLineNumber);\n\t\t\tassert.equal(actual[i].originalStartLineNumber, expected[i].originalStartLineNumber);\n\t\t\tassert.equal(actual[i].originalEndLineNumber, expected[i].originalEndLineNumber);\n\t\t}\n\t}\n}\n\nfunction createChange(modifiedStart:number, modifiedEnd:number, originalStart:number, originalEnd:number): IChange {\n\treturn {\n\t\tmodifiedStartLineNumber : modifiedStart,\n\t\tmodifiedEndLineNumber : modifiedEnd,\n\t\toriginalStartLineNumber : originalStart,\n\t\toriginalEndLineNumber : originalEnd\n\t};\n}\n\nsuite('Git - Stage ranges', () => {\n\tvar mode = new NullMode();\n\n\ttest('Get selected changes test - no change selected (selection before changes)', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(1, 1, 1, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 1));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tassert.equal(result.length, 0);\n\t});\n\n\ttest('Get selected changes test - no change selected (selection after changes)', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(5, 3, 7, 8));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 1));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tassert.equal(result.length, 0);\n\t});\n\n\ttest('Get selected changes test - one change fully selected', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(5, 3, 7, 8));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 1), createChange(5, 7, 2, 6));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(5, 7, 2, 6));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - one change fully selected(deletion)', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(5, 3, 7, 8));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 1), createChange(5, 0, 5, 6));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(5, 0, 5, 6));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - one change (insertion) partially selected', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(5, 3, 6, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 0), createChange(5, 7, 2, 0));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(5, 6, 2, 0));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - multiple changes selected with one selection', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(2, 7, 7, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 1, 1), createChange(5, 7, 2, 6));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected = changes;\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - one change partially seleceted with multiple selections', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(2, 2, 5, 5),  Selection.createSelection(7, 2, 9, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 15, 1, 10), createChange(120, 127, 122, 126));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(2, 5, 1, 10), createChange(7, 9, 1, 10));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - one change partially seleceted with overlapping selections', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(2, 2, 5, 5),  Selection.createSelection(5, 2, 9, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 15, 1, 10), createChange(120, 127, 122, 126));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(2, 5, 1, 10), createChange(6, 9, 1, 10));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - multiple changes partially selected with multiple selections', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(3, 1, 9, 5),  Selection.createSelection(115, 2, 129, 1));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 15, 1, 10), createChange(116, 135, 122, 126));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(3, 9, 1, 10), createChange(116, 129, 122, 126));\n\t\tchangesEqual(result, expected);\n\t});\n\n\ttest('Get selected changes test - multiple changes selected with multiple selections. Multiple changes not selected', () => {\n\t\tvar selections: IEditorSelection[] = [];\n\t\tselections.push(Selection.createSelection(33, 11, 79, 15),  Selection.createSelection(155, 21, 189, 11));\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 45, 1, 0), createChange(80, 89, 72, 79), createChange(154, 190, 152, 186), createChange(216, 235, 222, 226));\n\t\tvar result = getSelectedChanges(changes, selections);\n\t\tvar expected: IChange[] = [];\n\t\texpected.push(createChange(33, 45, 1, 0), createChange(155, 189, 152, 186));\n\t\tchangesEqual(result, expected);\n\t});\n\n\tfunction createModel(text:string): Model {\n\t\treturn new Model(text, Model.DEFAULT_CREATION_OPTIONS, mode);\n\t}\n\n\ttest('Apply changes to model - no changes', () => {\n\t\tvar original = createModel('One line that is equal. ');\n\t\tvar modified = createModel('One line that is equal. \\n Second line is new.');\n\t\tvar changes: IChange[] = [];\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = original;\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t});\n\n\ttest('Apply changes to model - one line change at the end', () => {\n\t\tvar original = createModel('One line that is equal. ');\n\t\tvar modified = createModel('One line that is equal. \\n Second line is new.');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 2, 2, 2));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = modified;\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t});\n\n\ttest('Apply changes to model - one line insertion in the middle', () => {\n\t\tvar original = createModel('One line that is equal. \\n Last line same. ');\n\t\tvar modified = createModel('One line that is equal. \\n Second line is new. \\n Last line same. ');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 2, 1, 0));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = modified;\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t});\n\n\ttest('Apply changes to model - three empty lines insertion in the middle', () => {\n\t\tvar original = createModel('hello\\n there\\n isidor\\n');\n\t\tvar modified = createModel('hello\\n there\\n \\n \\n \\n isidor\\n');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(3, 5, 2, 0));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = modified;\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t});\n\n\ttest('Apply changes to model - one line deletion', () => {\n\t\tvar original = createModel('One line that is equal. \\n Second line is old. \\n Third line same. \\n Forth line not important');\n\t\tvar modified = createModel('One line that is equal. \\n Third line same. ');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 0, 2, 2));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel('One line that is equal. \\n Third line same. \\n Forth line not important');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n\n\ttest('Apply changes to model - one multi line change', () => {\n\t\tvar original = createModel('One line that is equal. \\n Second line is different. \\n Third line also different. \\n Forth line is same. \\n Fifth line is different.');\n\t\tvar modified = createModel('One line that is equal. \\n 2nd line is different. \\n 3rd line also different. \\n Forth line is same. \\n 5th line is different.');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 2, 3));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel('One line that is equal. \\n 2nd line is different. \\n 3rd line also different. \\n Forth line is same. \\n Fifth line is different.');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n\n\ttest('Apply changes to model - two overlapping changes', () => {\n\t\tvar original = createModel(' One \\n Two \\n Three \\n Four \\n Five \\n');\n\t\tvar modified = createModel(' One \\n 2 \\n 3 \\n 4 \\n NotSelected \\n');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(2, 3, 2, 4), createChange(4, 4, 2, 4));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel(' One \\n 2 \\n 3 \\n 4 \\n Five \\n');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n\n\ttest('Apply changes to model - multiple small changes', () => {\n\t\tvar original = createModel(' One \\n Two \\n Three \\n Four \\n Five \\n Six \\n Seven \\n Eight \\n');\n\t\tvar modified = createModel(' One \\n 2 \\n Three \\n 4 \\n 5 \\n Six \\n 7 \\n 8 \\n');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 2, 1, 2), createChange(5, 5, 5, 5), createChange(7, 8, 7, 8));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel(' One \\n 2 \\n Three \\n Four \\n 5 \\n Six \\n 7 \\n 8 \\n');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n\n\ttest('Apply changes to model - multiple changes - insertion, deletion and modification', () => {\n\t\tvar original = createModel(' One \\n Two \\n Three \\n Four \\n Five \\n Six \\n Seven \\n Eight \\n Nine \\n Ten');\n\t\tvar modified = createModel(' 1 \\n Three \\n 4 \\n 5 \\n Six \\n 7 \\n NEWLINE \\n Eight ');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 1, 1, 1), createChange(2, 0, 2, 2), createChange(3, 3, 4, 4), createChange(7, 7, 7, 0), createChange(7, 0, 9, 10));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel(' 1 \\n Three \\n 4 \\n Five \\n Six \\n Seven \\n NEWLINE \\n Eight ');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n\n\ttest('Apply changes to model - multiple changes 2 - insertion, deletion and modification', () => {\n\t\tvar original = createModel(' One \\n Two \\n Three \\n Four \\n Five \\n Six \\n Seven \\n Eight \\n Nine \\n Ten ');\n\t\tvar modified = createModel(' Two \\n Three \\n INSERTED \\n Four \\n Six \\n 7 \\n Eight \\n 9 \\n CHANGEIGNORED \\n INSERTED');\n\t\tvar changes: IChange[] = [];\n\t\tchanges.push(createChange(1, 0, 1, 1), createChange(3, 3, 3, 0), createChange(5, 0, 5, 5), createChange(6, 8, 7, 9), createChange(10, 10, 10, 0));\n\t\tvar result = applyChangesToModel(original, modified, changes);\n\t\tvar expected = createModel(' Two \\n Three \\n INSERTED \\n Four \\n Six \\n 7 \\n Eight \\n 9 \\n Ten \\n INSERTED');\n\t\tassert.equal(result, expected.getValue());\n\t\toriginal.dispose();\n\t\tmodified.dispose();\n\t\texpected.dispose();\n\t});\n});\n"]}