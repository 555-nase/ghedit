{"version":3,"file":"vs/workbench/parts/git/common/gitModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/common/gitModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport Strings = require('vs/base/common/strings');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport Git = require('vs/workbench/parts/git/common/git');\n\nexport class FileStatus implements Git.IFileStatus {\n\n\tprivate id: string;\n\tprivate pathComponents: string[];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate mimetype: string,\n\t\tprivate status: Git.Status,\n\t\tprivate rename?: string,\n\t\tisModifiedInIndex?: boolean\n\t) {\n\t\tthis.id = FileStatus.typeOf(status) + ':' + path + (rename ? ':' + rename : '') + (isModifiedInIndex ? '$' : '');\n\t\tthis.pathComponents = path.split('/');\n\t}\n\n\tpublic getPath(): string {\n\t\treturn this.path;\n\t}\n\n\tpublic getPathComponents(): string[] {\n\t\treturn this.pathComponents.slice(0);\n\t}\n\n\tpublic getMimetype(): string {\n\t\treturn this.mimetype;\n\t}\n\n\tpublic getStatus(): Git.Status {\n\t\treturn this.status;\n\t}\n\n\tpublic getRename(): string {\n\t\treturn this.rename;\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic getType(): Git.StatusType {\n\t\tswitch (FileStatus.typeOf(this.status)) {\n\t\t\tcase 'index': return Git.StatusType.INDEX;\n\t\t\tcase 'workingTree': return Git.StatusType.WORKING_TREE;\n\t\t\tdefault: return Git.StatusType.MERGE;\n\t\t}\n\t}\n\n\tpublic clone(): Git.IFileStatus {\n\t\treturn new FileStatus(this.path, this.mimetype, this.status, this.rename);\n\t}\n\n\tpublic update(other: FileStatus): void {\n\t\tthis.status = other.getStatus();\n\t\tthis.rename = other.getRename();\n\t}\n\n\tstatic typeOf(s: Git.Status): string {\n\t\tswitch (s) {\n\t\t\tcase Git.Status.INDEX_MODIFIED:\n\t\t\tcase Git.Status.INDEX_ADDED:\n\t\t\tcase Git.Status.INDEX_DELETED:\n\t\t\tcase Git.Status.INDEX_RENAMED:\n\t\t\tcase Git.Status.INDEX_COPIED:\n\t\t\t\treturn 'index';\n\n\t\t\tcase Git.Status.MODIFIED:\n\t\t\tcase Git.Status.DELETED:\n\t\t\tcase Git.Status.UNTRACKED:\n\t\t\tcase Git.Status.IGNORED:\n\t\t\t\treturn 'workingTree';\n\n\t\t\tdefault:\n\t\t\t\treturn 'merge';\n\t\t}\n\t}\n}\n\ninterface IStatusSet {\n\t[path: string]: Git.IFileStatus;\n}\n\nexport class StatusGroup extends EventEmitter.EventEmitter implements Git.IStatusGroup {\n\n\tprivate type: Git.StatusType;\n\tprivate statusSet: IStatusSet;\n\tprivate statusList: Git.IFileStatus[];\n\tprivate statusByName: IStatusSet;\n\tprivate statusByRename: IStatusSet;\n\n\tconstructor(type: Git.StatusType) {\n\t\tsuper();\n\n\t\tthis.type = type;\n\t\tthis.statusSet = Object.create(null);\n\t\tthis.statusList = [];\n\t\tthis.statusByName = Object.create(null);\n\t\tthis.statusByRename = Object.create(null);\n\t}\n\n\tpublic getType(): Git.StatusType {\n\t\treturn this.type;\n\t}\n\n\tpublic update(statusList: FileStatus[]): void {\n\t\tvar toDelete: IStatusSet = Object.create(null);\n\n\t\tvar id: string, path: string, rename: string;\n\t\tvar status: Git.IFileStatus;\n\n\t\tfor (id in this.statusSet) {\n\t\t\ttoDelete[id] = this.statusSet[id];\n\t\t}\n\n\t\tfor (var i = 0; i < statusList.length; i++) {\n\t\t\tstatus = statusList[i];\n\t\t\tid = status.getId();\n\t\t\tpath = status.getPath();\n\t\t\trename = status.getRename();\n\n\t\t\tif (toDelete[id]) {\n\t\t\t\tthis.statusSet[id].update(status);\n\t\t\t\ttoDelete[id] = null;\n\n\t\t\t} else {\n\t\t\t\tthis.statusSet[id] = status;\n\t\t\t}\n\t\t}\n\n\t\tfor (id in toDelete) {\n\t\t\tif (status = toDelete[id]) {\n\t\t\t\tthis.emit('fileStatus:dispose', status);\n\t\t\t\tdelete this.statusSet[id];\n\t\t\t}\n\t\t}\n\n\t\tthis.statusList = [];\n\t\tthis.statusByName = Object.create(null);\n\t\tthis.statusByRename = Object.create(null);\n\n\t\tfor (id in this.statusSet) {\n\t\t\tstatus = this.statusSet[id];\n\t\t\tthis.statusList.push(status);\n\n\t\t\tif (status.getRename()) {\n\t\t\t\tthis.statusByRename[status.getPath()] = status;\n\t\t\t} else {\n\t\t\t\tthis.statusByName[status.getPath()] = status;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic all(): Git.IFileStatus[] {\n\t\treturn this.statusList;\n\t}\n\n\tpublic find(path: string): Git.IFileStatus {\n\t\treturn this.statusByName[path] || this.statusByRename[path] || null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.type = null;\n\t\tthis.statusSet = null;\n\t\tthis.statusList = null;\n\t\tthis.statusByName = null;\n\t\tthis.statusByRename = null;\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class StatusModel extends EventEmitter.EventEmitter implements Git.IStatusModel {\n\n\tprivate indexStatus: StatusGroup;\n\tprivate workingTreeStatus: StatusGroup;\n\tprivate mergeStatus: StatusGroup;\n\tprivate toDispose: Lifecycle.IDisposable[];\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.indexStatus = new StatusGroup(Git.StatusType.INDEX);\n\t\tthis.workingTreeStatus = new StatusGroup(Git.StatusType.WORKING_TREE);\n\t\tthis.mergeStatus = new StatusGroup(Git.StatusType.MERGE);\n\n\t\tthis.toDispose = [\n\t\t\tthis.addEmitter2(this.indexStatus),\n\t\t\tthis.addEmitter2(this.workingTreeStatus),\n\t\t\tthis.addEmitter2(this.mergeStatus)\n\t\t];\n\t}\n\n\tpublic getSummary(): Git.IStatusSummary {\n\t\treturn {\n\t\t\thasWorkingTreeChanges: this.getWorkingTreeStatus().all().length > 0,\n\t\t\thasIndexChanges: this.getIndexStatus().all().length > 0,\n\t\t\thasMergeChanges: this.getMergeStatus().all().length > 0\n\t\t};\n\t}\n\n\tpublic update(status: Git.IRawFileStatus[]): void {\n\t\tvar index: FileStatus[] = [];\n\t\tvar workingTree: FileStatus[] = [];\n\t\tvar merge: FileStatus[] = [];\n\n\t\tstatus.forEach(raw => {\n\t\t\tswitch(raw.x + raw.y) {\n\t\t\t\tcase '??': return workingTree.push(new FileStatus(raw.path, raw.mimetype, Git.Status.UNTRACKED));\n\t\t\t\tcase '!!': return workingTree.push(new FileStatus(raw.path, raw.mimetype, Git.Status.IGNORED));\n\t\t\t\tcase 'DD': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.BOTH_DELETED));\n\t\t\t\tcase 'AU': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.ADDED_BY_US));\n\t\t\t\tcase 'UD': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.DELETED_BY_THEM));\n\t\t\t\tcase 'UA': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.ADDED_BY_THEM));\n\t\t\t\tcase 'DU': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.DELETED_BY_US));\n\t\t\t\tcase 'AA': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.BOTH_ADDED));\n\t\t\t\tcase 'UU': return merge.push(new FileStatus(raw.path, raw.mimetype, Git.Status.BOTH_MODIFIED));\n\t\t\t}\n\n\t\t\tlet isModifiedInIndex = false;\n\n\t\t\tswitch (raw.x) {\n\t\t\t\tcase 'M': index.push(new FileStatus(raw.path, raw.mimetype, Git.Status.INDEX_MODIFIED)); isModifiedInIndex = true; break;\n\t\t\t\tcase 'A': index.push(new FileStatus(raw.path, raw.mimetype, Git.Status.INDEX_ADDED)); break;\n\t\t\t\tcase 'D': index.push(new FileStatus(raw.path, raw.mimetype, Git.Status.INDEX_DELETED)); break;\n\t\t\t\tcase 'R': index.push(new FileStatus(raw.path, raw.mimetype, Git.Status.INDEX_RENAMED, raw.rename)); break;\n\t\t\t\tcase 'C': index.push(new FileStatus(raw.path, raw.mimetype, Git.Status.INDEX_COPIED)); break;\n\t\t\t}\n\n\t\t\tswitch (raw.y) {\n\t\t\t\tcase 'M': workingTree.push(new FileStatus(raw.path, raw.mimetype, Git.Status.MODIFIED, raw.rename, isModifiedInIndex)); break;\n\t\t\t\tcase 'D': workingTree.push(new FileStatus(raw.path, raw.mimetype, Git.Status.DELETED, raw.rename)); break;\n\t\t\t}\n\t\t});\n\n\t\tthis.indexStatus.update(index);\n\t\tthis.workingTreeStatus.update(workingTree);\n\t\tthis.mergeStatus.update(merge);\n\n\t\tthis.emit(Git.ModelEvents.STATUS_MODEL_UPDATED);\n\t}\n\n\tpublic getIndexStatus(): Git.IStatusGroup {\n\t\treturn this.indexStatus;\n\t}\n\n\tpublic getWorkingTreeStatus(): Git.IStatusGroup {\n\t\treturn this.workingTreeStatus;\n\t}\n\n\tpublic getMergeStatus(): Git.IStatusGroup {\n\t\treturn this.mergeStatus;\n\t}\n\n\tpublic getGroups(): Git.IStatusGroup[] {\n\t\treturn [ this.mergeStatus, this.indexStatus, this.workingTreeStatus ];\n\t}\n\n\tpublic find(path: string, type: Git.StatusType): Git.IFileStatus {\n\t\tvar group: Git.IStatusGroup;\n\n\t\tswitch (type) {\n\t\t\tcase Git.StatusType.INDEX:\n\t\t\t\tgroup = this.indexStatus; break;\n\t\t\tcase Git.StatusType.WORKING_TREE:\n\t\t\t\tgroup = this.workingTreeStatus; break;\n\t\t\tcase Git.StatusType.MERGE:\n\t\t\t\tgroup = this.mergeStatus; break;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\n\t\treturn group.find(path);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = Lifecycle.dispose(this.toDispose);\n\n\t\tif (this.indexStatus) {\n\t\t\tthis.indexStatus.dispose();\n\t\t\tthis.indexStatus = null;\n\t\t}\n\n\t\tif (this.workingTreeStatus) {\n\t\t\tthis.workingTreeStatus.dispose();\n\t\t\tthis.workingTreeStatus = null;\n\t\t}\n\n\t\tif (this.mergeStatus) {\n\t\t\tthis.mergeStatus.dispose();\n\t\t\tthis.mergeStatus = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class Model extends EventEmitter.EventEmitter implements Git.IModel {\n\n\tprivate repositoryRoot: string;\n\tprivate status: Git.IStatusModel;\n\tprivate HEAD: Git.IBranch;\n\tprivate heads: Git.IBranch[];\n\tprivate tags: Git.ITag[];\n\tprivate remotes: Git.IRemote[];\n\tprivate toDispose: Lifecycle.IDisposable[];\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.toDispose = [];\n\n\t\tthis.repositoryRoot = null;\n\t\tthis.status = new StatusModel();\n\t\tthis.toDispose.push(this.addEmitter2(this.status));\n\n\t\tthis.HEAD = null;\n\t\tthis.heads = [];\n\t\tthis.tags = [];\n\t\tthis.remotes = [];\n\t}\n\n\tpublic getRepositoryRoot(): string {\n\t\treturn this.repositoryRoot;\n\t}\n\n\tpublic getStatus(): Git.IStatusModel {\n\t\treturn this.status;\n\t}\n\n\tpublic getHEAD(): Git.IBranch {\n\t\treturn this.HEAD;\n\t}\n\n\tpublic getHeads(): Git.IBranch[] {\n\t\treturn this.heads;\n\t}\n\n\tpublic getTags(): Git.ITag[] {\n\t\treturn this.tags;\n\t}\n\n\tpublic getRemotes(): Git.IRemote[] {\n\t\treturn this.remotes;\n\t}\n\n\tpublic update(status: Git.IRawStatus): void {\n\t\tif (!status) {\n\t\t\tstatus = {\n\t\t\t\trepositoryRoot: null,\n\t\t\t\tstatus: [],\n\t\t\t\tHEAD: null,\n\t\t\t\theads: [],\n\t\t\t\ttags: [],\n\t\t\t\tremotes: []\n\t\t\t};\n\t\t}\n\n\t\tthis.repositoryRoot = status.repositoryRoot;\n\t\tthis.status.update(status.status);\n\n\t\tthis.HEAD = status.HEAD;\n\t\tthis.emit(Git.ModelEvents.HEAD_UPDATED);\n\n\t\tthis.heads = status.heads;\n\t\tthis.emit(Git.ModelEvents.HEADS_UPDATED);\n\n\t\tthis.tags = status.tags;\n\t\tthis.emit(Git.ModelEvents.TAGS_UPDATED);\n\n\t\tthis.remotes = status.remotes;\n\t\tthis.emit(Git.ModelEvents.REMOTES_UPDATED);\n\n\t\tthis.emit(Git.ModelEvents.MODEL_UPDATED);\n\t}\n\n\tpublic getStatusSummary(): Git.IStatusSummary {\n\t\tvar status = this.getStatus();\n\n\t\treturn {\n\t\t\thasWorkingTreeChanges: status.getWorkingTreeStatus().all().length > 0,\n\t\t\thasIndexChanges: status.getIndexStatus().all().length > 0,\n\t\t\thasMergeChanges: status.getMergeStatus().all().length > 0\n\t\t};\n\t}\n\n\tpublic getPS1(): string {\n\t\tif (!this.HEAD) {\n\t\t\treturn '';\n\t\t}\n\n\t\tvar label = this.HEAD.name || this.HEAD.commit.substr(0, 8);\n\t\tvar statusSummary = this.getStatus().getSummary();\n\n\t\treturn Strings.format('{0}{1}{2}{3}',\n\t\t\tlabel,\n\t\t\tstatusSummary.hasWorkingTreeChanges ? '*' : '',\n\t\t\tstatusSummary.hasIndexChanges ? '+' : '',\n\t\t\tstatusSummary.hasMergeChanges ? '!' : ''\n\t\t);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = Lifecycle.dispose(this.toDispose);\n\t\tsuper.dispose();\n\t}\n}\n"]}