{"version":3,"sources":["vs/workbench/parts/git/browser/gitActionItems.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAab,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;IAElB;QAA4C,0CAAwB;QAMnE,gCAAY,MAAuB,EAAuB,kBAAuC,EAAe,UAAuB;YACtI,kBAAM,IAAI,EAAE,MAAM,CAAC,CAAC;YACpB,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,CAAC;QAEM,uCAAM,GAAb,UAAc,SAAqB;YAAnC,iBAaC;YAZA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE;gBACzE,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAmB,CAAC;gBACjE,iBAAiB,EAAE;oBAClB,WAAW,EAAE,KAAK;oBAClB,UAAU,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,CAAgB;iBACjC;gBACD,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAkB,CAAC;aACjE,CAAC,CAAC;YAEH,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,CAAgB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC;YAEjF,IAAI,CAAC,cAAc,EAAE,CAAC;QACvB,CAAC;QAEM,+CAAc,GAArB;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACzB,CAAC;QACF,CAAC;QAEM,sCAAK,GAAZ;YACC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;QAEM,qCAAI,GAAX;YACC,QAAQ;QACT,CAAC;QAEO,yCAAQ,GAAhB,UAAiB,KAAa;YAC7B,EAAE,CAAC,CAAC,uDAAuD,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzE,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAAsB,CAAC,EAAE,CAAC;YAC/E,CAAC;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YACvC,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAE7B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,KAAK,KAAK,EAAhB,CAAgB,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAA6B,CAAC,EAAE,CAAC;YACnF,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEO,wCAAO,GAAf,UAAgB,CAAgB;YAC/B,IAAI,KAAK,GAAG,IAAI,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,4BAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBAExB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACxC,MAAM,CAAC;gBACR,CAAC;gBAED,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;YACrD,CAAC;QACF,CAAC;QAEM,wCAAO,GAAd;YACC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YAExB,gBAAK,CAAC,OAAO,WAAE,CAAC;QACjB,CAAC;QAxEoC;uBAAC,iCAAmB;uBAA2C,iBAAW;kCAAtD;QAyE1D,6BAAC;IAAD,CA/EA,AA+EC,CA/E2C,SAAS,CAAC,cAAc,GA+EnE;IA/EY,8BAAsB,yBA+ElC,CAAA","file":"vs/workbench/parts/git/browser/gitActionItems.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Keyboard = require('vs/base/browser/keyboardEvent');\nimport Builder = require('vs/base/browser/builder');\nimport Strings = require('vs/base/common/strings');\nimport Actions = require('vs/base/common/actions');\nimport InputBox = require('vs/base/browser/ui/inputbox/inputBox');\nimport ActionBar = require('vs/base/browser/ui/actionbar/actionbar');\nimport { IGitService } from 'vs/workbench/parts/git/common/git';\nimport {IContextViewService} from 'vs/platform/contextview/browser/contextView';\nimport {CommonKeybindings} from 'vs/base/common/keyCodes';\n\nvar $ = Builder.$;\n\nexport class CreateBranchActionItem extends ActionBar.BaseActionItem  {\n\n\tprivate contextViewService: IContextViewService;\n\tprivate gitService: IGitService;\n\tprivate inputBox: InputBox.InputBox;\n\n\tconstructor(action: Actions.IAction, @IContextViewService contextViewService: IContextViewService, @IGitService gitService: IGitService) {\n\t\tsuper(null, action);\n\t\tthis.contextViewService = contextViewService;\n\t\tthis.gitService = gitService;\n\t}\n\n\tpublic render(container:HTMLElement): void {\n\t\tthis.inputBox = new InputBox.InputBox(container, this.contextViewService, {\n\t\t\tplaceholder: nls.localize('createNewBranch', \"Create New Branch\"),\n\t\t\tvalidationOptions: {\n\t\t\t\tshowMessage: false,\n\t\t\t\tvalidation: v => this.validate(v)\n\t\t\t},\n\t\t\tariaLabel: nls.localize('newBranchAriaLabel', \"Type branch name\")\n\t\t});\n\n\t\t$(this.inputBox.inputElement).on('keyup', (e: KeyboardEvent) => this.onKeyUp(e));\n\n\t\tthis._updateEnabled();\n\t}\n\n\tpublic _updateEnabled(): void {\n\t\tif (this._action.enabled) {\n\t\t\tthis.inputBox.enable();\n\t\t} else {\n\t\t\tthis.inputBox.disable();\n\t\t}\n\t}\n\n\tpublic focus(): void {\n\t\tthis.inputBox.focus();\n\t}\n\n\tpublic blur(): void {\n\t\t// no-op\n\t}\n\n\tprivate validate(value: string): InputBox.IMessage {\n\t\tif (/^\\.|\\/\\.|\\.\\.|~|\\^|:|\\/$|\\.lock$|\\.lock\\/|\\\\|\\*|^\\s*$/.test(value)) {\n\t\t\treturn { content: nls.localize('invalidBranchName', \"Invalid branch name.\") };\n\t\t}\n\n\t\tvar model = this.gitService.getModel();\n\t\tvar heads = model.getHeads();\n\n\t\tif (heads.some(h => h.name === value)) {\n\t\t\treturn { content: nls.localize('dupeBranchName', \"Branch name already exists.\") };\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate onKeyUp(e: KeyboardEvent): void {\n\t\tvar event = new Keyboard.StandardKeyboardEvent(e);\n\n\t\tif (event.equals(CommonKeybindings.ENTER)) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tif (this.validate(this.inputBox.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = Strings.trim(this.inputBox.value);\n\t\t\tthis.actionRunner.run(this._action, context).done();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.inputBox.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n"]}