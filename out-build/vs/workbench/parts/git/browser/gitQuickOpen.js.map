{"version":3,"sources":["vs/workbench/parts/git/browser/gitQuickOpen.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/gitQuickOpen.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport filters = require('vs/base/common/filters');\nimport winjs = require('vs/base/common/winjs.base');\nimport severity from 'vs/base/common/severity';\nimport git = require('vs/workbench/parts/git/common/git');\nimport quickopenwb = require('vs/workbench/browser/quickopen');\nimport quickopen = require('vs/base/parts/quickopen/common/quickOpen');\nimport model = require('vs/base/parts/quickopen/browser/quickOpenModel');\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IMessageService} from 'vs/platform/message/common/message';\n\nimport IGitService = git.IGitService;\n\n// Entries\n\nclass AbstractRefEntry extends model.QuickOpenEntry {\n\n\tprotected gitService: git.IGitService;\n\tprotected messageService: IMessageService;\n\tprotected head: git.IBranch;\n\n\tconstructor(gitService: git.IGitService, messageService: IMessageService, head: git.IBranch, highlights:model.IHighlight[]) {\n\t\tsuper(highlights);\n\n\t\tthis.gitService = gitService;\n\t\tthis.messageService = messageService;\n\t\tthis.head = head;\n\t}\n\n\tpublic getIcon(): string { return 'git'; }\n\tpublic getLabel(): string { return this.head.name; }\n\tpublic getDescription(): string { return ''; }\n\tpublic getAriaLabel(): string { return nls.localize('refAriaLabel', \"{0}, git\", this.getLabel()); }\n\n\tpublic run(mode: quickopen.Mode, context: model.IContext):boolean {\n\t\tif (mode === quickopen.Mode.PREVIEW) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass CheckoutHeadEntry extends AbstractRefEntry {\n\n\tpublic getDescription(): string { return nls.localize('checkoutBranch', \"Branch at {0}\", this.head.commit.substr(0, 8)); }\n\n\tpublic run(mode: quickopen.Mode, context: model.IContext): boolean {\n\t\tif (mode === quickopen.Mode.PREVIEW) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.gitService.checkout(this.head.name).done(null, e => this.messageService.show(severity.Error, e));\n\t\treturn true;\n\t}\n}\n\nclass CheckoutTagEntry extends AbstractRefEntry {\n\n\tpublic getDescription(): string { return nls.localize('checkoutTag', \"Tag at {0}\", this.head.commit.substr(0, 8)); }\n\n\tpublic run(mode: quickopen.Mode, context: model.IContext): boolean {\n\t\tif (mode === quickopen.Mode.PREVIEW) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.gitService.checkout(this.head.name).done(null, e => this.messageService.show(severity.Error, e));\n\t\treturn true;\n\t}\n}\n\nclass CurrentHeadEntry extends AbstractRefEntry {\n\tpublic getDescription(): string { return nls.localize('alreadyCheckedOut', \"Branch {0} is already the current branch\", this.head.name); }\n}\n\nclass BranchEntry extends model.QuickOpenEntry {\n\n\tprivate gitService: git.IGitService;\n\tprivate messageService: IMessageService;\n\tprivate name: string;\n\n\tconstructor(gitService: git.IGitService, messageService: IMessageService, name: string) {\n\t\tsuper([{ start: 0, end: name.length }]);\n\n\t\tthis.gitService = gitService;\n\t\tthis.messageService = messageService;\n\t\tthis.name = name;\n\t}\n\n\tpublic getIcon(): string { return 'git'; }\n\tpublic getLabel(): string { return this.name; }\n\tpublic getAriaLabel(): string { return nls.localize({ key: 'branchAriaLabel', comment: ['the branch name'] }, \"{0}, git branch\", this.getLabel()); }\n\tpublic getDescription(): string { return nls.localize('createBranch', \"Create branch {0}\", this.name); }\n\n\tpublic run(mode: quickopen.Mode, context: model.IContext):boolean {\n\t\tif (mode === quickopen.Mode.PREVIEW) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.gitService.branch(this.name, true).done(null, e => this.messageService.show(severity.Error, e));\n\t\treturn true;\n\t}\n}\n\n// Commands\n\nclass CheckoutCommand implements quickopenwb.ICommand {\n\n\tpublic aliases = ['checkout', 'co'];\n\tpublic icon = 'git';\n\n\tconstructor(private gitService: git.IGitService, private messageService: IMessageService) {\n\t\t// noop\n\t}\n\n\tpublic getResults(input: string): winjs.TPromise<model.QuickOpenEntry[]> {\n\t\tinput = input.trim();\n\n\t\tvar gitModel = this.gitService.getModel();\n\t\tvar currentHead = gitModel.getHEAD();\n\n\t\tvar headMatches = gitModel.getHeads()\n\t\t\t.map(head => ({ head, highlights: filters.matchesContiguousSubString(input, head.name) }))\n\t\t\t.filter(({ highlights }) => !!highlights);\n\n\t\tvar headEntries: model.QuickOpenEntry[] = headMatches\n\t\t\t.filter(({ head }) => head.name !== currentHead.name)\n\t\t\t.map(({ head, highlights }) => new CheckoutHeadEntry(this.gitService, this.messageService, head, highlights));\n\n\t\tvar tagMatches = gitModel.getTags()\n\t\t\t.map(tag => ({ tag, highlights: filters.matchesContiguousSubString(input, tag.name) }))\n\t\t\t.filter(({ highlights }) => !!highlights);\n\n\t\tvar tagEntries: model.QuickOpenEntry[] = tagMatches\n\t\t\t.filter(({ tag }) => tag.name !== currentHead.name)\n\t\t\t.map(({ tag, highlights }) => new CheckoutTagEntry(this.gitService, this.messageService, tag, highlights));\n\n\t\tvar entries = headEntries\n\t\t\t.concat(tagEntries)\n\t\t\t.sort((a, b) => a.getLabel().localeCompare(b.getLabel()));\n\n\t\tif (entries.length > 0) {\n\t\t\tentries[0] = new model.QuickOpenEntryGroup(entries[0], 'checkout', false);\n\t\t}\n\n\t\tvar exactMatches = headMatches.filter(({ head }) => head.name === input);\n\t\tvar currentHeadMatches = exactMatches.filter(({ head }) => head.name === currentHead.name);\n\n\t\tif (currentHeadMatches.length > 0) {\n\t\t\tentries.unshift(new CurrentHeadEntry(this.gitService, this.messageService, currentHeadMatches[0].head, currentHeadMatches[0].highlights));\n\n\t\t} else if (exactMatches.length === 0 && git.isValidBranchName(input)) {\n\t\t\tvar branchEntry = new BranchEntry(this.gitService, this.messageService, input);\n\t\t\tentries.push(new model.QuickOpenEntryGroup(branchEntry, 'branch', false));\n\t\t}\n\n\t\treturn winjs.TPromise.as<model.QuickOpenEntry[]>(entries);\n\t}\n\n\tpublic getEmptyLabel(input: string): string {\n\t\treturn nls.localize('noBranches', \"No other branches\");\n\t}\n}\n\nclass BranchCommand implements quickopenwb.ICommand {\n\n\tpublic aliases = ['branch'];\n\tpublic icon = 'git';\n\n\tconstructor(private gitService: git.IGitService, private messageService: IMessageService) {\n\t\t// noop\n\t}\n\n\tpublic getResults(input: string): winjs.TPromise<model.QuickOpenEntry[]> {\n\t\tinput = input.trim();\n\n\t\tif (!git.isValidBranchName(input)) {\n\t\t\treturn winjs.TPromise.as([]);\n\t\t}\n\n\t\tvar gitModel = this.gitService.getModel();\n\t\tvar currentHead = gitModel.getHEAD();\n\n\t\tvar matches = gitModel.getHeads()\n\t\t\t.map(head => ({ head, highlights: filters.matchesContiguousSubString(input, head.name) }))\n\t\t\t.filter(({ highlights }) => !!highlights);\n\n\t\tvar exactMatches = matches.filter(({ head }) => head.name === input);\n\t\tvar headMatches = exactMatches.filter(({ head }) => head.name === currentHead.name);\n\n\t\tif (headMatches.length > 0) {\n\t\t\treturn winjs.TPromise.as([new CurrentHeadEntry(this.gitService, this.messageService, headMatches[0].head, headMatches[0].highlights)]);\n\t\t} else if (exactMatches.length > 0) {\n\t\t\treturn winjs.TPromise.as([new CheckoutHeadEntry(this.gitService, this.messageService, exactMatches[0].head, exactMatches[0].highlights)]);\n\t\t}\n\n\t\tvar branchEntry = new BranchEntry(this.gitService, this.messageService, input);\n\t\treturn winjs.TPromise.as([new model.QuickOpenEntryGroup(branchEntry, 'branch', false)]);\n\t}\n\n\tpublic getEmptyLabel(input: string): string {\n\t\treturn nls.localize('notValidBranchName', \"Please provide a valid branch name\");\n\t}\n}\n\nexport class CommandQuickOpenHandler extends quickopenwb.CommandQuickOpenHandler {\n\n\tconstructor(@IQuickOpenService quickOpenService: IQuickOpenService, @IGitService gitService: IGitService, @IMessageService messageService: IMessageService) {\n\t\tsuper(quickOpenService, {\n\t\t\tprefix: 'git',\n\t\t\tcommands: [\n\t\t\t\tnew CheckoutCommand(gitService, messageService),\n\t\t\t\tnew BranchCommand(gitService, messageService)\n\t\t\t]\n\t\t});\n\t}\n}\n"]}