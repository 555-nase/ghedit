{"version":3,"file":"vs/workbench/parts/git/browser/gitViewlet.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/browser/gitViewlet.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/gitViewlet';\nimport winjs = require('vs/base/common/winjs.base');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport eventemitter = require('vs/base/common/eventEmitter');\nimport $ = require('vs/base/browser/builder');\nimport actions = require('vs/base/common/actions');\nimport viewlet = require('vs/workbench/browser/viewlet');\nimport git = require('vs/workbench/parts/git/common/git');\nimport contrib = require('vs/workbench/parts/git/browser/gitWorkbenchContributions');\nimport view = require('vs/workbench/parts/git/browser/views/view');\nimport changes = require('vs/workbench/parts/git/browser/views/changes/changesView');\nimport empty = require('vs/workbench/parts/git/browser/views/empty/emptyView');\nimport gitless = require('vs/workbench/parts/git/browser/views/gitless/gitlessView');\nimport notroot = require('vs/workbench/parts/git/browser/views/notroot/notrootView');\nimport noworkspace = require('vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView');\nimport { DisabledView } from './views/disabled/disabledView';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IProgressService, IProgressRunner} from 'vs/platform/progress/common/progress';\nimport {ISelection, Selection} from 'vs/platform/selection/common/selection';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\n\nimport IGitService = git.IGitService;\n\nexport class GitViewlet\n\textends viewlet.Viewlet\n\timplements view.IController\n{\n\tprivate progressService: IProgressService;\n\tprivate gitService: git.IGitService;\n\tprivate instantiationService: IInstantiationService;\n\n\tprivate $el: $.Builder;\n\tprivate currentView: view.IView;\n\tprivate progressRunner: IProgressRunner;\n\n\tprivate currentDimension:$.Dimension;\n\tprivate views: { [id:string]: view.IView; };\n\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(@ITelemetryService telemetryService: ITelemetryService, @IProgressService progressService: IProgressService, @IInstantiationService instantiationService: IInstantiationService, @IGitService gitService: IGitService) {\n\t\tsuper(contrib.VIEWLET_ID, telemetryService);\n\n\t\tthis.progressService = progressService;\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.gitService = gitService;\n\n\t\tthis.progressRunner = null;\n\t\tthis.views = <any> {};\n\t\tthis.toDispose = [];\n\n\t\tvar views: view.IView[] = [\n\t\t\tthis.instantiationService.createInstance(changes.ChangesView, this.getActionRunner()),\n\t\t\tthis.instantiationService.createInstance(empty.EmptyView, this, this.getActionRunner()),\n\t\t\tthis.instantiationService.createInstance(gitless.GitlessView),\n\t\t\tnew notroot.NotRootView(),\n\t\t\tnew noworkspace.NoWorkspaceView(),\n\t\t\tnew DisabledView()\n\t\t];\n\n\t\tviews.forEach(v => {\n\t\t\tthis.views[v.ID] = v;\n\t\t\tthis.toDispose.push(v);\n\t\t});\n\n\t\tthis.toUnbind.push(this.gitService.addBulkListener(() => this.onGitServiceChanges()));\n\t}\n\n\t// GitView.IController\n\n\tpublic setView(id: string): winjs.Promise {\n\t\tif (!this.$el) {\n\t\t\treturn winjs.TPromise.as(null);\n\t\t}\n\n\t\tvar view = this.views[id];\n\n\t\tif (!view) {\n\t\t\treturn winjs.Promise.wrapError(new Error('Could not find view.'));\n\t\t}\n\n\t\tif (this.currentView === view) {\n\t\t\treturn winjs.TPromise.as(null);\n\t\t}\n\n\t\tvar promise = winjs.TPromise.as(null);\n\n\t\tif (this.currentView) {\n\t\t\tpromise = this.currentView.setVisible(false);\n\t\t}\n\n\t\tvar element = view.element;\n\t\tthis.currentView = view;\n\t\tthis.updateTitleArea();\n\n\t\tvar el = this.$el.getHTMLElement();\n\t\twhile (el.firstChild) {\n\t\t\tel.removeChild(el.firstChild);\n\t\t}\n\n\t\tel.appendChild(element);\n\t\tview.layout(this.currentDimension);\n\n\t\treturn promise.then(() => view.setVisible(true));\n\t}\n\n\t// Viewlet\n\n\tpublic create(parent:$.Builder): winjs.TPromise<void> {\n\t\tsuper.create(parent);\n\n\t\tthis.$el = parent.div().addClass('git-viewlet');\n\n\t\treturn winjs.TPromise.as(null);\n\t}\n\n\tpublic setVisible(visible:boolean): winjs.TPromise<void> {\n\t\tif (visible) {\n\t\t\tthis.onGitServiceChanges();\n\n\t\t\tthis.gitService.status().done();\n\n\t\t\treturn super.setVisible(visible).then(() => {\n\t\t\t\tif (this.currentView) {\n\t\t\t\t\treturn this.currentView.setVisible(visible);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\treturn (this.currentView ? this.currentView.setVisible(visible) : winjs.TPromise.as(null)).then(() => {\n\t\t\t\tsuper.setVisible(visible);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic focus():void {\n\t\tsuper.focus();\n\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.focus();\n\t\t}\n\t}\n\n\tpublic layout(dimension:$.Dimension = this.currentDimension):void {\n\t\tthis.currentDimension = dimension;\n\n\t\tif (this.currentView) {\n\t\t\tthis.currentView.layout(dimension);\n\t\t}\n\t}\n\n\tpublic getActions(): actions.IAction[] {\n\t\treturn this.currentView ? this.currentView.getActions() : [];\n\t}\n\n\tpublic getSecondaryActions(): actions.IAction[] {\n\t\treturn this.currentView ? this.currentView.getSecondaryActions() : [];\n\t}\n\n\tpublic getSelection(): ISelection {\n\t\tif (!this.currentView) {\n\t\t\treturn Selection.EMPTY;\n\t\t}\n\n\t\treturn this.currentView.getSelection();\n\t}\n\n\tpublic getControl(): eventemitter.IEventEmitter {\n\t\tif (!this.currentView) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.currentView.getControl();\n\t}\n\n\t// Event handlers\n\n\tprivate onGitServiceChanges(): void {\n\t\tif (this.progressRunner) {\n\t\t\tthis.progressRunner.done();\n\t\t}\n\n\t\tif (this.gitService.getState() === git.ServiceState.NoGit) {\n\t\t\tthis.setView('gitless');\n\t\t\tthis.progressRunner = null;\n\t\t} else if (this.gitService.getState() === git.ServiceState.Disabled) {\n\t\t\tthis.setView('disabled');\n\t\t\tthis.progressRunner = null;\n\t\t} else if (this.gitService.getState() === git.ServiceState.NotARepo) {\n\t\t\tthis.setView('empty');\n\t\t\tthis.progressRunner = null;\n\t\t} else if (this.gitService.getState() === git.ServiceState.NotAWorkspace) {\n\t\t\tthis.setView('noworkspace');\n\t\t\tthis.progressRunner = null;\n\t\t} else if (this.gitService.getState() === git.ServiceState.NotAtRepoRoot) {\n\t\t\tthis.setView('notroot');\n\t\t\tthis.progressRunner = null;\n\t\t} else if (this.gitService.isIdle()) {\n\t\t\tthis.setView('changes');\n\t\t\tthis.progressRunner = null;\n\t\t} else {\n\t\t\tthis.progressRunner = this.progressService.show(true);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t\tthis.views = null;\n\n\t\tsuper.dispose();\n\t}\n}\n"]}