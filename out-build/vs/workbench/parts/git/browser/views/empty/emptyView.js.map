{"version":3,"sources":["vs/workbench/parts/git/browser/views/empty/emptyView.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/views/empty/emptyView.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./emptyView';\nimport nls = require('vs/nls');\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport DOM = require('vs/base/browser/dom');\nimport {Button} from 'vs/base/browser/ui/button/button';\nimport WinJS = require('vs/base/common/winjs.base');\nimport Builder = require('vs/base/browser/builder');\nimport Actions = require('vs/base/common/actions');\nimport InputBox = require('vs/base/browser/ui/inputbox/inputBox');\nimport git = require('vs/workbench/parts/git/common/git');\nimport GitView = require('vs/workbench/parts/git/browser/views/view');\nimport GitActions = require('vs/workbench/parts/git/browser/gitActions');\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {ISelection, Selection} from 'vs/platform/selection/common/selection';\n\nimport IGitService = git.IGitService;\n\nvar $ = Builder.$;\n\nexport class EmptyView extends EventEmitter.EventEmitter implements GitView.IView {\n\n\tpublic ID = 'empty';\n\n\tprivate static EMPTY_MESSAGE = nls.localize('noGit', \"This workspace isn't yet under git source control.\");\n\n\tprivate gitService: IGitService;\n\tprivate instantiationService: IInstantiationService;\n\tprivate messageService: IMessageService;\n\tprivate fileService: IFileService;\n\n\tprivate actionRunner: Actions.IActionRunner;\n\tprivate refreshAction: Actions.IAction;\n\tprivate isVisible: boolean;\n\tprivate needsRender: boolean;\n\tprivate $el: Builder.Builder;\n\tprivate urlInputBox: InputBox.InputBox;\n\tprivate cloneButton: Button;\n\tprivate initButton: Button;\n\tprivate controller: GitView.IController;\n\tprivate toDispose: Lifecycle.IDisposable[];\n\n\tconstructor(controller: GitView.IController, actionRunner: Actions.IActionRunner,\n\t\t@IGitService gitService: IGitService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IFileService fileService: IFileService\n\t) {\n\t\tsuper();\n\n\t\tthis.gitService = gitService;\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.messageService = messageService;\n\t\tthis.fileService = fileService;\n\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.isVisible = false;\n\t\tthis.needsRender = false;\n\t\tthis.controller = controller;\n\t\tthis.toDispose = [];\n\t}\n\n\t// Properties\n\n\tprivate _initAction: GitActions.InitAction;\n\tprivate get initAction(): GitActions.InitAction {\n\t\tif (!this._initAction) {\n\t\t\tthis._initAction = this.instantiationService.createInstance(GitActions.InitAction);\n\t\t}\n\n\t\treturn this._initAction;\n\t}\n\n\t// IView\n\n\tpublic get element():HTMLElement {\n\t\tthis.render();\n\t\treturn this.$el.getHTMLElement();\n\t}\n\n\tprivate render(): void {\n\t\tif (this.$el) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el = $('.empty-view');\n\n\t\t$('p').appendTo(this.$el).text(EmptyView.EMPTY_MESSAGE);\n\n\t\tvar initSection = $('.section').appendTo(this.$el);\n\t\tthis.initButton = new Button(initSection);\n\t\tthis.initButton.label = nls.localize('gitinit', 'Initialize git repository');\n\t\tthis.initButton.on('click', (e) => {\n\t\t\tDOM.EventHelper.stop(e);\n\n\t\t\tthis.disableUI();\n\n\t\t\tthis.actionRunner.run(this.initAction).done(() => {\n\t\t\t\tthis.enableUI();\n\t\t\t});\n\t\t});\n\n\t\tthis.toDispose.push(this.gitService.addListener2(git.ServiceEvents.OPERATION, () => this.onGitOperation()));\n\t}\n\n\tprivate disableUI(): void {\n\t\tif (this.urlInputBox) {\n\t\t\tthis.urlInputBox.disable();\n\t\t}\n\n\t\tif (this.cloneButton) {\n\t\t\tthis.cloneButton.enabled = false;\n\t\t}\n\n\t\tthis.initButton.enabled = false;\n\t}\n\n\tprivate enableUI(): void {\n\t\tif (this.gitService.getRunningOperations().length > 0){\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.urlInputBox) {\n\t\t\tthis.urlInputBox.enable();\n\t\t\tthis.urlInputBox.validate();\n\t\t}\n\n\t\tthis.initButton.enabled = true;\n\t}\n\n\tpublic focus():void {\n\t\t// no-op\n\t}\n\n\tpublic layout(dimension:Builder.Dimension):void {\n\t\t// no-op\n\t}\n\n\tpublic setVisible(visible:boolean): WinJS.TPromise<void> {\n\t\tthis.isVisible = visible;\n\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic getSelection():ISelection {\n\t\treturn Selection.EMPTY;\n\t}\n\n\tpublic getControl(): EventEmitter.IEventEmitter {\n\t\treturn null;\n\t}\n\n\tpublic getActions(): Actions.IAction[] {\n\t\treturn this.refreshAction ? [ this.refreshAction ] : [];\n\t}\n\n\tpublic getSecondaryActions(): Actions.IAction[] {\n\t\treturn [];\n\t}\n\n\t// Events\n\n\tprivate onGitOperation(): void {\n\t\tif (this.gitService.getRunningOperations().length > 0) {\n\t\t\tthis.disableUI();\n\t\t} else {\n\t\t\tthis.enableUI();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.$el) {\n\t\t\tthis.$el.dispose();\n\t\t\tthis.$el = null;\n\t\t}\n\n\t\tthis.toDispose = Lifecycle.dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}