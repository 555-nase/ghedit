{"version":3,"sources":["vs/workbench/parts/git/browser/views/changes/changesView.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/views/changes/changesView.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./changesView';\nimport nls = require('vs/nls');\nimport Platform = require('vs/base/common/platform');\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport Strings = require('vs/base/common/strings');\nimport Errors = require('vs/base/common/errors');\nimport * as paths from 'vs/base/common/paths';\nimport WinJS = require('vs/base/common/winjs.base');\nimport Builder = require('vs/base/browser/builder');\nimport {StandardKeyboardEvent, IKeyboardEvent} from 'vs/base/browser/keyboardEvent';\nimport Actions = require('vs/base/common/actions');\nimport ActionBar = require('vs/base/browser/ui/actionbar/actionbar');\nimport Tree = require('vs/base/parts/tree/browser/tree');\nimport TreeImpl = require('vs/base/parts/tree/browser/treeImpl');\nimport WorkbenchEvents = require('vs/workbench/common/events');\nimport git = require('vs/workbench/parts/git/common/git');\nimport GitView = require('vs/workbench/parts/git/browser/views/view');\nimport GitActions = require('vs/workbench/parts/git/browser/gitActions');\nimport GitModel = require('vs/workbench/parts/git/common/gitModel');\nimport Viewer = require('vs/workbench/parts/git/browser/views/changes/changesViewer');\nimport GitEditorInputs = require('vs/workbench/parts/git/browser/gitEditorInputs');\nimport Files = require('vs/workbench/parts/files/common/files');\nimport {IOutputService} from 'vs/workbench/parts/output/common/output';\nimport WorkbenchEditorCommon = require('vs/workbench/common/editor');\nimport InputBox = require('vs/base/browser/ui/inputbox/inputBox');\nimport Severity from 'vs/base/common/severity';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IContextViewService} from 'vs/platform/contextview/browser/contextView';\nimport {IEditorInput} from 'vs/platform/editor/common/editor';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISelection, StructuredSelection} from 'vs/platform/selection/common/selection';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {CommonKeybindings} from 'vs/base/common/keyCodes';\n\nimport IGitService = git.IGitService;\n\nvar $ = Builder.$;\n\nexport class ChangesView extends EventEmitter.EventEmitter implements GitView.IView, GitActions.ICommitState {\n\n\tpublic ID = 'changes';\n\n\tprivate static COMMIT_KEYBINDING = Platform.isMacintosh ? 'Cmd+Enter' : 'Ctrl+Enter';\n\tprivate static NEED_MESSAGE = nls.localize('needMessage', \"Please provide a commit message. You can always press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.\", ChangesView.COMMIT_KEYBINDING);\n\tprivate static NOTHING_TO_COMMIT = nls.localize('nothingToCommit', \"Once there are some changes to commit, type in the commit message and either press **{0}** to commit changes. If there are any staged changes, only those will be committed; otherwise, all changes will.\", ChangesView.COMMIT_KEYBINDING);\n\n\tprivate instantiationService: IInstantiationService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate messageService: IMessageService;\n\tprivate contextViewService: IContextViewService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate gitService: IGitService;\n\tprivate outputService: IOutputService;\n\n\tprivate $el: Builder.Builder;\n\tprivate $commitView: Builder.Builder;\n\tprivate $statusView: Builder.Builder;\n\tprivate commitInputBox: InputBox.InputBox;\n\tprivate tree: Tree.ITree;\n\n\tprivate visible: boolean;\n\tprivate currentDimension: Builder.Dimension;\n\n\tprivate smartCommitAction: GitActions.SmartCommitAction;\n\tprivate actions: Actions.IAction[];\n\tprivate secondaryActions: Actions.IAction[];\n\tprivate actionRunner: Actions.IActionRunner;\n\n\tprivate toDispose: Lifecycle.IDisposable[];\n\n\tconstructor(actionRunner: Actions.IActionRunner,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IGitService gitService: IGitService,\n\t\t@IOutputService outputService: IOutputService,\n\t\t@IEventService eventService: IEventService\n\t) {\n\t\tsuper();\n\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.editorService = editorService;\n\t\tthis.messageService = messageService;\n\t\tthis.contextViewService = contextViewService;\n\t\tthis.contextService = contextService;\n\t\tthis.gitService = gitService;\n\t\tthis.outputService = outputService;\n\n\t\tthis.visible = false;\n\t\tthis.currentDimension = null;\n\t\tthis.actionRunner = actionRunner;\n\n\t\tthis.toDispose = [\n\t\t\tthis.smartCommitAction = this.instantiationService.createInstance(GitActions.SmartCommitAction, this),\n\t\t\teventService.addListener2(WorkbenchEvents.EventType.EDITOR_INPUT_CHANGED, (e:WorkbenchEvents.EditorEvent) => this.onEditorInputChanged(e.editorInput).done(null, Errors.onUnexpectedError)),\n\t\t\tthis.gitService.addListener2(git.ServiceEvents.OPERATION_START, (e) => this.onGitOperationStart(e)),\n\t\t\tthis.gitService.addListener2(git.ServiceEvents.OPERATION_END, (e) => this.onGitOperationEnd(e)),\n\t\t\tthis.gitService.getModel().addListener2(git.ModelEvents.MODEL_UPDATED, this.onGitModelUpdate.bind(this))\n\t\t];\n\t}\n\n\t// IView\n\n\tpublic get element():HTMLElement {\n\t\tthis.render();\n\t\treturn this.$el.getHTMLElement();\n\t}\n\n\tprivate render(): void {\n\t\tif (this.$el) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$el = $('.changes-view');\n\t\tthis.$commitView = $('.commit-view').appendTo(this.$el);\n\n\t\t// Commit view\n\n\t\tthis.commitInputBox = new InputBox.InputBox(this.$commitView.getHTMLElement(), this.contextViewService, {\n\t\t\tplaceholder: nls.localize('commitMessage', \"Message (press {0} to commit)\", ChangesView.COMMIT_KEYBINDING),\n\t\t\tvalidationOptions: {\n\t\t\t\tshowMessage: true,\n\t\t\t\tvalidation: (): InputBox.IMessage => null\n\t\t\t},\n\t\t\tariaLabel: nls.localize('commitMessageAriaLabel', \"Git: Type commit message and press {0} to commit\", ChangesView.COMMIT_KEYBINDING),\n\t\t\tflexibleHeight: true\n\t\t});\n\n\t\tthis.commitInputBox.onDidChange((value) => this.emit('change', value));\n\t\tthis.commitInputBox.onDidHeightChange((value) => this.emit('heightchange', value));\n\n\t\t$(this.commitInputBox.inputElement).on('keydown', (e:KeyboardEvent) => {\n\t\t\tvar keyboardEvent = new StandardKeyboardEvent(e);\n\n\t\t\tif (keyboardEvent.equals(CommonKeybindings.CTRLCMD_ENTER) || keyboardEvent.equals(CommonKeybindings.CTRLCMD_S)) {\n\t\t\t\tif (this.smartCommitAction.enabled) {\n\t\t\t\t\tthis.actionRunner.run(this.smartCommitAction).done();\n\t\t\t\t} else {\n\t\t\t\t\tthis.commitInputBox.showMessage({ content: ChangesView.NOTHING_TO_COMMIT, formatContent: true, type: InputBox.MessageType.INFO });\n\t\t\t\t}\n\t\t\t}\n\t\t}).on('blur', () => {\n\t\t\tthis.commitInputBox.hideMessage();\n\t\t});\n\n\t\t// Status view\n\n\t\tthis.$statusView = $('.status-view').appendTo(this.$el);\n\n\t\tvar actionProvider = this.instantiationService.createInstance(Viewer.ActionProvider);\n\t\tvar renderer = this.instantiationService.createInstance(Viewer.Renderer, actionProvider, this.actionRunner);\n\t\tvar dnd = this.instantiationService.createInstance(Viewer.DragAndDrop);\n\t\tvar controller = this.instantiationService.createInstance(Viewer.Controller, actionProvider);\n\n\t\tthis.tree = new TreeImpl.Tree(this.$statusView.getHTMLElement(), {\n\t\t\tdataSource: new Viewer.DataSource(),\n\t\t\trenderer: renderer,\n\t\t\tfilter: new Viewer.Filter(),\n\t\t\tsorter: new Viewer.Sorter(),\n\t\t\taccessibilityProvider: new Viewer.AccessibilityProvider(),\n\t\t\tdnd: dnd,\n\t\t\tcontroller: controller\n\t\t}, {\n\t\t\tindentPixels: 0,\n\t\t\ttwistiePixels: 20,\n\t\t\tariaLabel: nls.localize('treeAriaLabel', \"Git Changes View\")\n\t\t});\n\n\t\tthis.tree.setInput(this.gitService.getModel().getStatus());\n\t\tthis.tree.expandAll(this.gitService.getModel().getStatus().getGroups());\n\n\t\tthis.toDispose.push(this.tree.addListener2('selection', (e) => this.onSelection(e)));\n\t\tthis.toDispose.push(this.commitInputBox.onDidHeightChange(() => this.layout()));\n\t}\n\n\tpublic focus():void {\n\t\tvar selection = this.tree.getSelection();\n\t\tif (selection.length > 0) {\n\t\t\tthis.tree.reveal(selection[0], 0.5).done(null, Errors.onUnexpectedError);\n\t\t}\n\n\t\tthis.commitInputBox.focus();\n\t}\n\n\tpublic layout(dimension:Builder.Dimension = this.currentDimension):void {\n\t\tif (!dimension) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.currentDimension = dimension;\n\n\t\tthis.commitInputBox.layout();\n\t\tvar statusViewHeight = dimension.height - (this.commitInputBox.height + 12 /* margin */);\n\t\tthis.$statusView.size(dimension.width, statusViewHeight);\n\t\tthis.tree.layout(statusViewHeight);\n\n\t\tif (this.commitInputBox.height === 134) {\n\t\t\tthis.$commitView.addClass('scroll');\n\t\t} else {\n\t\t\tthis.$commitView.removeClass('scroll');\n\t\t}\n\t}\n\n\tpublic setVisible(visible:boolean): WinJS.TPromise<void> {\n\t\tthis.visible = visible;\n\n\t\tif (visible) {\n\t\t\tthis.tree.onVisible();\n\t\t\treturn this.onEditorInputChanged(this.editorService.getActiveEditorInput());\n\n\t\t} else {\n\t\t\tthis.tree.onHidden();\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\t}\n\n\tpublic getSelection():ISelection {\n\t\treturn new StructuredSelection(this.tree.getSelection());\n\t}\n\n\tpublic getControl(): Tree.ITree {\n\t\treturn this.tree;\n\t}\n\n\tpublic getActions(): Actions.IAction[] {\n\t\tif (!this.actions) {\n\t\t\tthis.actions = [\n\t\t\t\tthis.smartCommitAction,\n\t\t\t\tthis.instantiationService.createInstance(GitActions.RefreshAction)\n\t\t\t];\n\n\t\t\tthis.actions.forEach(a => this.toDispose.push(a));\n\t\t}\n\n\t\treturn this.actions;\n\t}\n\n\tpublic getSecondaryActions(): Actions.IAction[] {\n\t\tif (!this.secondaryActions) {\n\t\t\tthis.secondaryActions = [\n\t\t\t\tthis.instantiationService.createInstance(GitActions.SyncAction, GitActions.SyncAction.ID, GitActions.SyncAction.LABEL),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.PullAction, GitActions.PullAction.ID, GitActions.PullAction.LABEL),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.PullWithRebaseAction),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.PushAction, GitActions.PushAction.ID, GitActions.PushAction.LABEL),\n\t\t\t\tnew ActionBar.Separator(),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.PublishAction, GitActions.PublishAction.ID, GitActions.PublishAction.LABEL),\n\t\t\t\tnew ActionBar.Separator(),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.CommitAction, this),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.StageAndCommitAction, this),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.UndoLastCommitAction, GitActions.UndoLastCommitAction.ID, GitActions.UndoLastCommitAction.LABEL),\n\t\t\t\tnew ActionBar.Separator(),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.GlobalUnstageAction),\n\t\t\t\tthis.instantiationService.createInstance(GitActions.GlobalUndoAction),\n\t\t\t\tnew ActionBar.Separator(),\n\t\t\t\tnew Actions.Action('show.gitOutput', nls.localize('showOutput', \"Show Git Output\"), null, true, () => this.outputService.getChannel('Git').show())\n\t\t\t];\n\n\t\t\tthis.secondaryActions.forEach(a => this.toDispose.push(a));\n\t\t}\n\n\t\treturn this.secondaryActions;\n\t}\n\n\t// ICommitState\n\n\tpublic getCommitMessage(): string {\n\t\treturn Strings.trim(this.commitInputBox.value);\n\t}\n\n\tpublic onEmptyCommitMessage(): void {\n\t\tthis.commitInputBox.focus();\n\t\tthis.commitInputBox.showMessage({ content: ChangesView.NEED_MESSAGE, formatContent: true, type: InputBox.MessageType.INFO });\n\t}\n\n\t// Events\n\n\tprivate onGitModelUpdate(): void {\n\t\tif (this.tree) {\n\t\t\tthis.tree.refresh().done(() => {\n\t\t\t\treturn this.tree.expandAll(this.gitService.getModel().getStatus().getGroups());\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onEditorInputChanged(input: IEditorInput): WinJS.TPromise<void> {\n\t\tif (!this.tree) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\tvar status = this.getStatusFromInput(input);\n\n\t\tif (!status) {\n\t\t\tthis.tree.clearSelection();\n\t\t}\n\n\t\tif (this.visible && this.tree.getSelection().indexOf(status) === -1) {\n\t\t\treturn this.tree.reveal(status, 0.5).then(() => {\n\t\t\t\tthis.tree.setSelection([status], { origin: 'implicit' });\n\t\t\t});\n\t\t}\n\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tprivate onSelection(e: Tree.ISelectionEvent): void {\n\t\tif (e.payload && e.payload && e.payload.origin === 'implicit') {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.selection.length !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = e.selection[0];\n\n\t\tif (!(element instanceof GitModel.FileStatus)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (e.payload && e.payload.origin === 'keyboard' && !(<IKeyboardEvent>e.payload.originalEvent).equals(CommonKeybindings.ENTER)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar isMouseOrigin = e.payload && (e.payload.origin === 'mouse');\n\n\t\tif (isMouseOrigin && (e.payload.originalEvent.metaKey || e.payload.originalEvent.shiftKey)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar status = <git.IFileStatus> element;\n\n\t\tthis.gitService.getInput(status).done((input) => {\n\t\t\tvar options = new WorkbenchEditorCommon.TextDiffEditorOptions();\n\n\t\t\tif (isMouseOrigin) {\n\t\t\t\toptions.preserveFocus = true;\n\n\t\t\t\tvar originalEvent:MouseEvent = e && e.payload && e.payload.origin === 'mouse' && e.payload.originalEvent;\n\t\t\t\tif (originalEvent && originalEvent.detail === 2) {\n\t\t\t\t\toptions.preserveFocus = false;\n\t\t\t\t\toriginalEvent.preventDefault(); // focus moves to editor, we need to prevent default\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toptions.forceOpen = true;\n\n\t\t\tvar sideBySide = (e && e.payload && e.payload.originalEvent && e.payload.originalEvent.altKey);\n\n\t\t\treturn this.editorService.openEditor(input, options, sideBySide);\n\t\t}, (e) => {\n\t\t\tif (e.gitErrorCode === git.GitErrorCodes.CantOpenResource) {\n\t\t\t\tthis.messageService.show(Severity.Warning, e);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.messageService.show(Severity.Error, e);\n\t\t});\n\t}\n\n\tprivate onGitOperationStart(operation: git.IGitOperation): void {\n\t\tif (operation.id === git.ServiceOperations.COMMIT) {\n\t\t\tif (this.commitInputBox) {\n\t\t\t\tthis.commitInputBox.disable();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onGitOperationEnd(e: { operation: git.IGitOperation; error: any; }): void {\n\t\tif (e.operation.id === git.ServiceOperations.COMMIT) {\n\t\t\tif (this.commitInputBox) {\n\t\t\t\tthis.commitInputBox.enable();\n\n\t\t\t\tif (!e.error) {\n\t\t\t\t\tthis.commitInputBox.value = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Misc\n\n\tprivate getStatusFromInput(input: IEditorInput): git.IFileStatus {\n\t\tif (!input) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (input instanceof GitEditorInputs.GitDiffEditorInput) {\n\t\t\treturn (<GitEditorInputs.GitDiffEditorInput> input).getFileStatus();\n\t\t}\n\n\t\tif (input instanceof GitEditorInputs.NativeGitIndexStringEditorInput) {\n\t\t\treturn (<GitEditorInputs.NativeGitIndexStringEditorInput> input).getFileStatus() || null;\n\t\t}\n\n\t\tif (input instanceof Files.FileEditorInput) {\n\t\t\tconst fileInput = <Files.FileEditorInput> input;\n\t\t\tconst resource = fileInput.getResource();\n\n\t\t\tconst workspaceRoot = this.contextService.getWorkspace().resource.fsPath;\n\t\t\tif (!workspaceRoot || !paths.isEqualOrParent(resource.fsPath, workspaceRoot)) {\n\t\t\t\treturn null; // out of workspace not yet supported\n\t\t\t}\n\n\t\t\tconst repositoryRoot = this.gitService.getModel().getRepositoryRoot();\n\t\t\tif (!repositoryRoot || !paths.isEqualOrParent(resource.fsPath, repositoryRoot)) {\n\t\t\t\treturn null; // out of repository not supported\n\t\t\t}\n\n\t\t\tconst repositoryRelativePath = paths.normalize(paths.relative(repositoryRoot, resource.fsPath));\n\n\t\t\tvar status = this.gitService.getModel().getStatus().getWorkingTreeStatus().find(repositoryRelativePath);\n\t\t\tif (status && (status.getStatus() === git.Status.UNTRACKED || status.getStatus() === git.Status.IGNORED)) {\n\t\t\t\treturn status;\n\t\t\t}\n\n\t\t\tstatus = this.gitService.getModel().getStatus().getMergeStatus().find(repositoryRelativePath);\n\t\t\tif (status) {\n\t\t\t\treturn status;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.$el) {\n\t\t\tthis.$el.dispose();\n\t\t\tthis.$el = null;\n\t\t}\n\n\t\tthis.toDispose = Lifecycle.dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}