{"version":3,"sources":["vs/workbench/parts/git/browser/gitWorkbenchContributions.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/gitWorkbenchContributions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/git.contribution';\nimport nls = require('vs/nls');\nimport async = require('vs/base/common/async');\nimport errors = require('vs/base/common/errors');\nimport paths = require('vs/base/common/paths');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport winjs = require('vs/base/common/winjs.base');\nimport ext = require('vs/workbench/common/contributions');\nimport git = require('vs/workbench/parts/git/common/git');\nimport workbenchEvents = require('vs/workbench/common/events');\nimport common = require('vs/editor/common/editorCommon');\nimport widget = require('vs/editor/browser/widget/codeEditorWidget');\nimport viewlet = require('vs/workbench/browser/viewlet');\nimport statusbar = require('vs/workbench/browser/parts/statusbar/statusbar');\nimport platform = require('vs/platform/platform');\nimport widgets = require('vs/workbench/parts/git/browser/gitWidgets');\nimport wbar = require('vs/workbench/common/actionRegistry');\nimport gitoutput = require('vs/workbench/parts/git/browser/gitOutput');\nimport output = require('vs/workbench/parts/output/common/output');\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {EditorBrowserRegistry} from 'vs/editor/browser/editorBrowserExtensions';\nimport confregistry = require('vs/platform/configuration/common/configurationRegistry');\nimport quickopen = require('vs/workbench/browser/quickopen');\nimport editorcontrib = require('vs/workbench/parts/git/browser/gitEditorContributions');\nimport {IActivityService, ProgressBadge, NumberBadge} from 'vs/workbench/services/activity/common/activityService';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {RawText} from 'vs/editor/common/model/textModel';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport URI from 'vs/base/common/uri';\n\nimport IGitService = git.IGitService;\n\nexport class StatusUpdater implements ext.IWorkbenchContribution\n{\n\tstatic ID = 'Monaco.IDE.UI.Viewlets.GitViewlet.Workbench.StatusUpdater';\n\n\tprivate gitService: IGitService;\n\tprivate eventService: IEventService;\n\tprivate activityService:IActivityService;\n\tprivate messageService:IMessageService;\n\tprivate progressBadgeDelayer: async.Delayer<void>;\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(\n\t\t@IGitService gitService: IGitService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IActivityService activityService: IActivityService,\n\t\t@IMessageService messageService: IMessageService\n\t) {\n\t\tthis.gitService = gitService;\n\t\tthis.eventService = eventService;\n\t\tthis.activityService = activityService;\n\t\tthis.messageService = messageService;\n\n\t\tthis.progressBadgeDelayer = new async.Delayer<void>(200);\n\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.gitService.addBulkListener2(e => this.onGitServiceChange()));\n\t}\n\n\tprivate onGitServiceChange(): void {\n\t\tif (this.gitService.getState() !== git.ServiceState.OK) {\n\t\t\tthis.progressBadgeDelayer.cancel();\n\t\t\tthis.activityService.showActivity('workbench.view.git', null, 'git-viewlet-label');\n\t\t} else if (this.gitService.isIdle()) {\n\t\t\tthis.showChangesBadge();\n\t\t} else {\n\t\t\tthis.progressBadgeDelayer.trigger(() => {\n\t\t\t\tthis.activityService.showActivity('workbench.view.git', new ProgressBadge(() => nls.localize('gitProgressBadge', 'Running git status')), 'git-viewlet-label-progress');\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate showChangesBadge(): void {\n\t\tvar count = this.gitService.getModel().getStatus().getGroups().map((g1: git.IStatusGroup) => {\n\t\t\treturn g1.all().length;\n\t\t}).reduce((a, b) => a + b, 0);\n\n\t\tvar badge = new NumberBadge(count, (num)=>{ return nls.localize('gitPendingChangesBadge', '{0} pending changes', num); });\n\n\t\tthis.progressBadgeDelayer.cancel();\n\t\tthis.activityService.showActivity('workbench.view.git', badge, 'git-viewlet-label');\n\t}\n\n\tpublic getId(): string {\n\t\treturn StatusUpdater.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nclass DirtyDiffModelDecorator {\n\tstatic GIT_ORIGINAL_SCHEME = 'git-index';\n\n\tstatic ID = 'Monaco.IDE.UI.Viewlets.GitViewlet.Editor.DirtyDiffDecorator';\n\tstatic MODIFIED_DECORATION_OPTIONS: common.IModelDecorationOptions = {\n\t\tlinesDecorationsClassName: 'git-dirty-modified-diff-glyph',\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tcolor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tdarkColor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tposition: common.OverviewRulerLane.Left\n\t\t}\n\t};\n\tstatic ADDED_DECORATION_OPTIONS: common.IModelDecorationOptions = {\n\t\tlinesDecorationsClassName: 'git-dirty-added-diff-glyph',\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tcolor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tdarkColor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tposition: common.OverviewRulerLane.Left\n\t\t}\n\t};\n\tstatic DELETED_DECORATION_OPTIONS: common.IModelDecorationOptions = {\n\t\tlinesDecorationsClassName: 'git-dirty-deleted-diff-glyph',\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tcolor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tdarkColor: 'rgba(0, 122, 204, 0.6)',\n\t\t\tposition: common.OverviewRulerLane.Left\n\t\t}\n\t};\n\n\tprivate modelService: IModelService;\n\tprivate editorWorkerService: IEditorWorkerService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate gitService: IGitService;\n\n\tprivate model: common.IModel;\n\tprivate _originalContentsURI: URI;\n\tprivate path: string;\n\tprivate decorations: string[];\n\n\tprivate delayer: async.ThrottledDelayer<void>;\n\tprivate diffDelayer: async.ThrottledDelayer<void>;\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(model: common.IModel, path: string,\n\t\t@IModelService modelService: IModelService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IGitService gitService: IGitService\n\t) {\n\t\tthis.modelService = modelService;\n\t\tthis.editorWorkerService = editorWorkerService;\n\t\tthis.editorService = editorService;\n\t\tthis.contextService = contextService;\n\t\tthis.gitService = gitService;\n\n\t\tthis.model = model;\n\t\tthis._originalContentsURI = model.getAssociatedResource().withScheme(DirtyDiffModelDecorator.GIT_ORIGINAL_SCHEME);\n\t\tthis.path = path;\n\t\tthis.decorations = [];\n\n\t\tthis.delayer = new async.ThrottledDelayer<void>(500);\n\t\tthis.diffDelayer = new async.ThrottledDelayer<void>(200);\n\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(model.addListener2(common.EventType.ModelContentChanged, () => this.triggerDiff()));\n\t\tthis.toDispose.push(this.gitService.addListener2(git.ServiceEvents.STATE_CHANGED, () => this.onChanges()));\n\t\tthis.toDispose.push(this.gitService.addListener2(git.ServiceEvents.OPERATION_END, e => {\n\t\t\tif (e.operation.id !== git.ServiceOperations.BACKGROUND_FETCH) {\n\t\t\t\tthis.onChanges();\n\t\t\t}\n\t\t}));\n\n\t\tthis.onChanges();\n\t}\n\n\tprivate onChanges(): void {\n\t\tif (!this.gitService) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.gitService.getState() !== git.ServiceState.OK) {\n\t\t\treturn;\n\t\t}\n\n\t\t// go through all interesting models\n\t\tthis.trigger();\n\t}\n\n\tprivate trigger(): void {\n\t\tthis.delayer\n\t\t\t.trigger(() => this.diffOriginalContents())\n\t\t\t.done(null, errors.onUnexpectedError);\n\t}\n\n\tprivate diffOriginalContents(): winjs.TPromise<void> {\n\t\treturn this.getOriginalContents()\n\t\t\t.then(contents => {\n\t\t\t\tif (!this.model || this.model.isDisposed()) {\n\t\t\t\t\treturn; // disposed\n\t\t\t\t}\n\n\t\t\t\tif (!contents) {\n\t\t\t\t\t// untracked file\n\t\t\t\t\tthis.modelService.destroyModel(this._originalContentsURI);\n\t\t\t\t\treturn this.triggerDiff();\n\t\t\t\t}\n\n\t\t\t\tlet originalModel = this.modelService.getModel(this._originalContentsURI);\n\t\t\t\tif (originalModel) {\n\t\t\t\t\tlet contentsRawText = RawText.fromStringWithModelOptions(contents, originalModel);\n\n\t\t\t\t\t// return early if nothing has changed\n\t\t\t\t\tif (originalModel.equals(contentsRawText)) {\n\t\t\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t\t\t}\n\n\t\t\t\t\t// we already have the original contents\n\t\t\t\t\toriginalModel.setValueFromRawText(contentsRawText);\n\t\t\t\t} else {\n\t\t\t\t\t// this is the first time we load the original contents\n\t\t\t\t\tthis.modelService.createModel(contents, null, this._originalContentsURI);\n\t\t\t\t}\n\n\t\t\t\treturn this.triggerDiff();\n\t\t\t});\n\t}\n\n\tprivate getOriginalContents(): winjs.TPromise<string> {\n\t\tvar gitModel = this.gitService.getModel();\n\t\tvar treeish = gitModel.getStatus().find(this.path, git.StatusType.INDEX) ? '~' : 'HEAD';\n\n\t\treturn this.gitService.buffer(this.path, treeish);\n\t}\n\n\tprivate triggerDiff(): winjs.Promise {\n\t\tif (!this.diffDelayer) {\n\t\t\treturn winjs.TPromise.as(null);\n\t\t}\n\n\t\treturn this.diffDelayer.trigger(() => {\n\t\t\tif (!this.model || this.model.isDisposed()) {\n\t\t\t\treturn winjs.TPromise.as<any>([]); // disposed\n\t\t\t}\n\n\t\t\treturn this.editorWorkerService.computeDirtyDiff(this._originalContentsURI, this.model.getAssociatedResource(), true);\n\t\t}).then((diff:common.IChange[]) => {\n\t\t\tif (!this.model || this.model.isDisposed()) {\n\t\t\t\treturn; // disposed\n\t\t\t}\n\n\t\t\treturn this.decorations = this.model.deltaDecorations(this.decorations, DirtyDiffModelDecorator.changesToDecorations(diff || []));\n\t\t});\n\t}\n\n\tprivate static changesToDecorations(diff:common.IChange[]): common.IModelDeltaDecoration[] {\n\t\treturn diff.map((change) => {\n\t\t\tvar startLineNumber = change.modifiedStartLineNumber;\n\t\t\tvar endLineNumber = change.modifiedEndLineNumber || startLineNumber;\n\n\t\t\t// Added\n\t\t\tif (change.originalEndLineNumber === 0) {\n\t\t\t\treturn {\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t\t},\n\t\t\t\t\toptions: DirtyDiffModelDecorator.ADDED_DECORATION_OPTIONS\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Removed\n\t\t\tif (change.modifiedEndLineNumber === 0) {\n\t\t\t\treturn {\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\t\tendLineNumber: startLineNumber, endColumn: 1\n\t\t\t\t\t},\n\t\t\t\t\toptions: DirtyDiffModelDecorator.DELETED_DECORATION_OPTIONS\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Modified\n\t\t\treturn {\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: startLineNumber, startColumn: 1,\n\t\t\t\t\tendLineNumber: endLineNumber, endColumn: 1\n\t\t\t\t},\n\t\t\t\toptions: DirtyDiffModelDecorator.MODIFIED_DECORATION_OPTIONS\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.modelService.destroyModel(this._originalContentsURI);\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t\tif (this.model && !this.model.isDisposed()) {\n\t\t\tthis.model.deltaDecorations(this.decorations, []);\n\t\t}\n\t\tthis.model = null;\n\t\tthis.decorations = null;\n\t\tif (this.delayer) {\n\t\t\tthis.delayer.cancel();\n\t\t\tthis.delayer = null;\n\t\t}\n\t\tif (this.diffDelayer) {\n\t\t\tthis.diffDelayer.cancel();\n\t\t\tthis.diffDelayer = null;\n\t\t}\n\t}\n}\n\nexport class DirtyDiffDecorator implements ext.IWorkbenchContribution {\n\n\tprivate gitService: IGitService;\n\tprivate messageService: IMessageService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate eventService: IEventService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate instantiationService: IInstantiationService;\n\tprivate models: common.IModel[];\n\tprivate decorators: { [modelId:string]: DirtyDiffModelDecorator };\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(\n\t\t@IGitService gitService: IGitService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis.gitService = gitService;\n\t\tthis.messageService = messageService;\n\t\tthis.editorService = editorService;\n\t\tthis.eventService = eventService;\n\t\tthis.contextService = contextService;\n\t\tthis.instantiationService = instantiationService;\n\n\t\tthis.models = [];\n\t\tthis.decorators = Object.create(null);\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(eventService.addListener2(workbenchEvents.EventType.EDITOR_INPUT_CHANGED, () => this.onEditorInputChange()));\n\t\tthis.toDispose.push(gitService.addListener2(git.ServiceEvents.DISPOSE, () => this.dispose()));\n\t}\n\n\tpublic getId(): string {\n\t\treturn 'git.DirtyDiffModelDecorator';\n\t}\n\n\tprivate onEditorInputChange(): void {\n\t\t// HACK: This is the best current way of figuring out whether to draw these decorations\n\t\t// or not. Needs context from the editor, to know whether it is a diff editor, in place editor\n\t\t// etc.\n\n\t\tconst repositoryRoot = this.gitService.getModel().getRepositoryRoot();\n\n\t\t// If there is no repository root, just wait until that changes\n\t\tif (typeof repositoryRoot !== 'string') {\n\t\t\tthis.gitService.addOneTimeListener(git.ServiceEvents.STATE_CHANGED, () => this.onEditorInputChange());\n\n\t\t\tthis.models.forEach(m => this.onModelInvisible(m));\n\t\t\tthis.models = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst models = this.editorService.getVisibleEditors()\n\n\t\t\t// map to the editor controls\n\t\t\t.map(e => e.getControl())\n\n\t\t\t// only interested in code editor widgets\n\t\t\t.filter(c => c instanceof widget.CodeEditorWidget)\n\n\t\t\t// map to models\n\t\t\t.map(e => (<widget.CodeEditorWidget> e).getModel())\n\n\t\t\t// remove nulls and duplicates\n\t\t\t.filter((m, i, a) => !!m && a.indexOf(m, i + 1) === -1)\n\n\t\t\t// get the associated resource\n\t\t\t.map(m => ({ model: m, resource: m.getAssociatedResource() }))\n\n\t\t\t// remove nulls\n\t\t\t.filter(p => !!p.resource &&\n\t\t\t\t// and invalid resources\n\t\t\t\t(p.resource.scheme === 'file' && paths.isEqualOrParent(p.resource.fsPath, repositoryRoot))\n\t\t\t)\n\n\t\t\t// get paths\n\t\t\t.map(p => ({ model: p.model, path: paths.normalize(paths.relative(repositoryRoot, p.resource.fsPath)) }))\n\n\t\t\t// remove nulls and inside .git files\n\t\t\t.filter(p => !!p.path && p.path.indexOf('.git/') === -1);\n\n\t\tvar newModels = models.filter(p => this.models.every(m => p.model !== m));\n\t\tvar oldModels = this.models.filter(m => models.every(p => p.model !== m));\n\n\t\tnewModels.forEach(p => this.onModelVisible(p.model, p.path));\n\t\toldModels.forEach(m => this.onModelInvisible(m));\n\n\t\tthis.models = models.map(p => p.model);\n\t}\n\n\tprivate onModelVisible(model: common.IModel, path: string): void {\n\t\tthis.decorators[model.id] = this.instantiationService.createInstance(DirtyDiffModelDecorator, model, path);\n\t}\n\n\tprivate onModelInvisible(model: common.IModel): void {\n\t\tthis.decorators[model.id].dispose();\n\t\tdelete this.decorators[model.id];\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t\tthis.models.forEach(m => this.decorators[m.id].dispose());\n\t\tthis.models = null;\n\t\tthis.decorators = null;\n\t}\n}\n\nexport var VIEWLET_ID = 'workbench.view.git';\n\nclass OpenGitViewletAction extends viewlet.ToggleViewletAction {\n\tpublic static ID = VIEWLET_ID;\n\tpublic static LABEL = nls.localize('toggleGitViewlet', \"Show Git\");\n\n\tconstructor(id: string, label: string, @IViewletService viewletService: IViewletService, @IWorkbenchEditorService editorService: IWorkbenchEditorService) {\n\t\tsuper(id, label, VIEWLET_ID, viewletService, editorService);\n\t}\n}\n\nexport function registerContributions(): void {\n\n\t// Register Statusbar item\n\t(<statusbar.IStatusbarRegistry>platform.Registry.as(statusbar.Extensions.Statusbar)).registerStatusbarItem(new statusbar.StatusbarItemDescriptor(\n\t\twidgets.GitStatusbarItem,\n\t\tstatusbar.StatusbarAlignment.LEFT,\n\t\t100 /* High Priority */\n\t));\n\n\t// Register Output Channel\n\tvar outputChannelRegistry = <output.IOutputChannelRegistry>platform.Registry.as(output.Extensions.OutputChannels);\n\toutputChannelRegistry.registerChannel('Git', nls.localize('git', \"Git\"));\n\n\t// Register Git Output\n\t(<ext.IWorkbenchContributionsRegistry>platform.Registry.as(ext.Extensions.Workbench)).registerWorkbenchContribution(\n\t\tgitoutput.GitOutput\n\t);\n\n\t// Register Viewlet\n\t(<viewlet.ViewletRegistry>platform.Registry.as(viewlet.Extensions.Viewlets)).registerViewlet(new viewlet.ViewletDescriptor(\n\t\t'vs/workbench/parts/git/browser/gitViewlet',\n\t\t'GitViewlet',\n\t\tVIEWLET_ID,\n\t\tnls.localize('git', \"Git\"),\n\t\t'git',\n\t\t35\n\t));\n\n\t// Register Action to Open Viewlet\n\t(<wbar.IWorkbenchActionRegistry> platform.Registry.as(wbar.Extensions.WorkbenchActions)).registerWorkbenchAction(\n\t\tnew SyncActionDescriptor(OpenGitViewletAction, OpenGitViewletAction.ID, OpenGitViewletAction.LABEL, {\n\t\t\tprimary: null,\n\t\t\twin: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_G },\n\t\t\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_G },\n\t\t\tmac: { primary: KeyMod.WinCtrl | KeyMod.Shift | KeyCode.KEY_G }\n\t\t}),\n\t\tnls.localize('view', \"View\")\n\t);\n\n\t// Register MergeDecorator\n\tEditorBrowserRegistry.registerEditorContribution(editorcontrib.MergeDecorator);\n\n\t// Register StatusUpdater\n\t(<ext.IWorkbenchContributionsRegistry>platform.Registry.as(ext.Extensions.Workbench)).registerWorkbenchContribution(\n\t\tStatusUpdater\n\t);\n\n\t// Register DirtyDiffDecorator\n\t(<ext.IWorkbenchContributionsRegistry>platform.Registry.as(ext.Extensions.Workbench)).registerWorkbenchContribution(\n\t\tDirtyDiffDecorator\n\t);\n\n\t// Register Quick Open for git\n\t(<quickopen.IQuickOpenRegistry>platform.Registry.as(quickopen.Extensions.Quickopen)).registerQuickOpenHandler(\n\t\tnew quickopen.QuickOpenHandlerDescriptor(\n\t\t\t'vs/workbench/parts/git/browser/gitQuickOpen',\n\t\t\t'CommandQuickOpenHandler',\n\t\t\t'git ',\n\t\t\tnls.localize('gitCommands', \"Git Commands\")\n\t\t)\n\t);\n\n\t// Register configuration\n\tvar configurationRegistry = <confregistry.IConfigurationRegistry>platform.Registry.as(confregistry.Extensions.Configuration);\n\tconfigurationRegistry.registerConfiguration({\n\t\tid: 'git',\n\t\torder: 10,\n\t\ttitle: nls.localize('gitConfigurationTitle', \"Git configuration\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'git.enabled': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: nls.localize('gitEnabled', \"Is git enabled\"),\n\t\t\t\tdefault: true\n\t\t\t},\n\t\t\t'git.path': {\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdescription: nls.localize('gitPath', \"Path to the git executable\"),\n\t\t\t\tdefault: null\n\t\t\t},\n\t\t\t'git.autofetch': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: nls.localize('gitAutoFetch', \"Whether auto fetching is enabled.\"),\n\t\t\t\tdefault: true\n\t\t\t}\n\t\t}\n\t});\n}\n"]}