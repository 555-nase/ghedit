{"version":3,"file":"vs/workbench/parts/git/browser/gitEditorContributions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/browser/gitEditorContributions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport ee = require('vs/base/common/eventEmitter');\nimport editorbrowser = require('vs/editor/browser/editorBrowser');\nimport common = require('vs/editor/common/editorCommon');\nimport git = require('vs/workbench/parts/git/common/git');\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {Disposable} from 'vs/base/common/lifecycle';\nimport {RunOnceScheduler} from 'vs/base/common/async';\n\nimport IGitService = git.IGitService;\n\nclass MergeDecoratorBoundToModel extends Disposable {\n\n\tprivate _editor: editorbrowser.ICodeEditor;\n\tprivate _model: common.IModel;\n\tprivate _gitService: git.IGitService;\n\tprivate _filePath:string;\n\tprivate _redecorateSoon: RunOnceScheduler;\n\tprivate _decorations: string[];\n\n\tconstructor(editor: editorbrowser.ICodeEditor, model:common.IModel, filePath:string, gitService: git.IGitService) {\n\t\tsuper();\n\t\tthis._editor = editor;\n\t\tthis._model = model;\n\t\tthis._gitService = gitService;\n\t\tthis._filePath = filePath;\n\t\tthis._decorations = [];\n\t\tthis._redecorateSoon = this._register(new RunOnceScheduler(() => this.redecorate(), 300));\n\t\tthis._register(this._model.addListener2(common.EventType.ModelContentChanged, () => this._redecorateSoon.schedule()));\n\t\tthis._register(this._gitService.addListener2(git.ServiceEvents.STATE_CHANGED, () => this._redecorateSoon.schedule()));\n\t\tthis._redecorateSoon.schedule();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._setDecorations([]);\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setDecorations(newDecorations: common.IModelDeltaDecoration[]): void {\n\t\tthis._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\n\t}\n\n\tprivate redecorate(): void {\n\t\tvar gitModel = this._gitService.getModel();\n\t\tvar mergeStatus = gitModel.getStatus().find(this._filePath, git.StatusType.MERGE);\n\t\tif (!mergeStatus) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet decorations: common.IModelDeltaDecoration[] = [];\n\t\tlet lineCount = this._model.getLineCount();\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tlet start = this._model.getLineContent(i).substr(0, 7);\n\n\t\t\tswitch (start) {\n\t\t\t\tcase '<<<<<<<':\n\t\t\t\tcase '=======':\n\t\t\t\tcase '>>>>>>>':\n\t\t\t\t\tdecorations.push({\n\t\t\t\t\t\trange: { startLineNumber: i, startColumn: 1, endLineNumber: i, endColumn: 1 },\n\t\t\t\t\t\toptions: MergeDecorator.DECORATION_OPTIONS\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._setDecorations(decorations);\n\t}\n}\n\nexport class MergeDecorator implements common.IEditorContribution {\n\n\tstatic ID = 'Monaco.IDE.UI.Viewlets.GitViewlet.Editor.MergeDecorator';\n\tstatic DECORATION_OPTIONS:common.IModelDecorationOptions = {\n\t\tclassName: 'git-merge-control-decoration',\n\t\tisWholeLine: true,\n\t\toverviewRuler: {\n\t\t\tcolor: 'rgb(197, 118, 0)',\n\t\t\tdarkColor: 'rgb(197, 118, 0)',\n\t\t\tposition: common.OverviewRulerLane.Left\n\t\t},\n\t\tstickiness: common.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate editor: editorbrowser.ICodeEditor;\n\tprivate gitService: git.IGitService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate toUnbind: ee.ListenerUnbind[];\n\n\tprivate mergeDecorator: MergeDecoratorBoundToModel;\n\n\tconstructor(editor: editorbrowser.ICodeEditor, @IGitService gitService: IGitService, @IWorkspaceContextService contextService : IWorkspaceContextService) {\n\t\tthis.gitService = gitService;\n\t\tthis.contextService = contextService;\n\t\tthis.editor = editor;\n\t\tthis.toUnbind = [ this.editor.addListener(common.EventType.ModelChanged, this.onModelChanged.bind(this)) ];\n\t\tthis.mergeDecorator = null;\n\t}\n\n\tpublic getId(): string {\n\t\treturn MergeDecorator.ID;\n\t}\n\n\tprivate onModelChanged(): void {\n\t\tif (this.mergeDecorator) {\n\t\t\tthis.mergeDecorator.dispose();\n\t\t\tthis.mergeDecorator = null;\n\t\t}\n\n\t\tif (!this.contextService || !this.gitService) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar resource = model.getAssociatedResource();\n\t\tif (!resource) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar path = this.contextService.toWorkspaceRelativePath(resource);\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mergeDecorator = new MergeDecoratorBoundToModel(this.editor, model, path, this.gitService);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.mergeDecorator) {\n\t\t\tthis.mergeDecorator.dispose();\n\t\t\tthis.mergeDecorator = null;\n\t\t}\n\t\twhile(this.toUnbind.length) {\n\t\t\tthis.toUnbind.pop()();\n\t\t}\n\t}\n}\n"]}