{"version":3,"sources":["vs/workbench/parts/git/browser/gitActions.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/gitActions.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport platform = require('vs/platform/platform');\nimport abr = require('vs/workbench/browser/actionBarRegistry');\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport editorbrowser = require('vs/editor/browser/editorBrowser');\nimport editorcommon = require('vs/editor/common/editorCommon');\nimport baseeditor = require('vs/workbench/browser/parts/editor/baseEditor');\nimport WorkbenchEditorCommon = require('vs/workbench/common/editor');\nimport tdeditor = require('vs/workbench/browser/parts/editor/textDiffEditor');\nimport teditor = require('vs/workbench/browser/parts/editor/textEditor');\nimport filesCommon = require('vs/workbench/parts/files/common/files');\nimport gitcontrib = require('vs/workbench/parts/git/browser/gitWorkbenchContributions');\nimport { IGitService, Status, IFileStatus, StatusType } from 'vs/workbench/parts/git/common/git';\nimport gitei = require('vs/workbench/parts/git/browser/gitEditorInputs');\nimport stageranges = require('vs/workbench/parts/git/common/stageRanges');\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IPartService, Parts} from 'vs/workbench/services/part/common/partService';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport wbar = require('vs/workbench/common/actionRegistry');\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { OpenChangeAction, OpenFileAction, SyncAction, PullAction, PushAction, PublishAction, StartGitBranchAction, StartGitCheckoutAction, InputCommitAction, UndoLastCommitAction } from './gitActions';\nimport paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\n\nfunction getStatus(gitService: IGitService, contextService: IWorkspaceContextService, input: WorkbenchEditorCommon.IFileEditorInput): IFileStatus {\n\tconst model = gitService.getModel();\n\tconst repositoryRoot = model.getRepositoryRoot();\n\tconst statusModel = model.getStatus();\n\tconst repositoryRelativePath = paths.normalize(paths.relative(repositoryRoot, input.getResource().fsPath));\n\n\treturn statusModel.getWorkingTreeStatus().find(repositoryRelativePath) ||\n\t\t\tstatusModel.getIndexStatus().find(repositoryRelativePath);\n}\n\nclass OpenInDiffAction extends baseeditor.EditorInputAction {\n\n\tstatic ID = 'workbench.action.git.openInDiff';\n\tstatic Label = nls.localize('switchToChangesView', \"Switch to Changes View\");\n\n\tprivate gitService: IGitService;\n\tprivate viewletService: IViewletService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate partService: IPartService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(@IWorkbenchEditorService editorService: IWorkbenchEditorService, @IGitService gitService: IGitService, @IViewletService viewletService: IViewletService, @IPartService partService: IPartService, @IWorkspaceContextService contextService : IWorkspaceContextService) {\n\t\tsuper(OpenInDiffAction.ID, OpenInDiffAction.Label);\n\n\t\tthis.class = 'git-action open-in-diff';\n\t\tthis.gitService = gitService;\n\t\tthis.viewletService = viewletService;\n\t\tthis.editorService = editorService;\n\t\tthis.partService = partService;\n\t\tthis.contextService = contextService;\n\n\t\tthis.toDispose = [this.gitService.addBulkListener2(() => this.onGitStateChanged())];\n\n\t\tthis.enabled = this.isEnabled();\n\t}\n\n\tpublic isEnabled():boolean {\n\t\tif (!super.isEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(typeof this.gitService.getModel().getRepositoryRoot() === 'string')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar status = this.getStatus();\n\n\t\treturn status && (\n\t\t\tstatus.getStatus() === Status.MODIFIED ||\n\t\t\tstatus.getStatus() === Status.INDEX_MODIFIED ||\n\t\t\tstatus.getStatus() === Status.INDEX_RENAMED\n\t\t);\n\t}\n\n\tprivate onGitStateChanged():void {\n\t\tif (this.gitService.isIdle()) {\n\t\t\tthis.enabled = this.isEnabled();\n\t\t}\n\t}\n\n\tprivate getStatus():IFileStatus {\n\t\treturn getStatus(this.gitService, this.contextService, <filesCommon.FileEditorInput> this.input);\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tvar sideBySide = !!(event && (event.ctrlKey || event.metaKey));\n\t\tvar editor = <editorbrowser.ICodeEditor> this.editorService.getActiveEditor().getControl();\n\t\tvar viewState = editor ? editor.saveViewState() : null;\n\n\t\treturn this.gitService.getInput(this.getStatus()).then((input) => {\n\t\t\tvar promise = TPromise.as(null);\n\n\t\t\tif (this.partService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\t\tpromise = this.viewletService.openViewlet(gitcontrib.VIEWLET_ID, false);\n\t\t\t}\n\n\t\t\treturn promise.then(() => {\n\t\t\t\tvar options = new WorkbenchEditorCommon.TextDiffEditorOptions();\n\t\t\t\toptions.forceOpen = true;\n\t\t\t\toptions.autoRevealFirstChange = false;\n\n\t\t\t\treturn this.editorService.openEditor(input, options, sideBySide).then((editor) => {\n\t\t\t\t\tif (viewState) {\n\t\t\t\t\t\tvar codeEditor = <editorbrowser.ICodeEditor> this.editorService.getActiveEditor().getControl();\n\t\t\t\t\t\tcodeEditor.restoreViewState({\n\t\t\t\t\t\t\toriginal: { },\n\t\t\t\t\t\t\tmodified: viewState\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic dispose():void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nclass OpenInEditorAction extends baseeditor.EditorInputAction {\n\n\tprivate static DELETED_STATES = [Status.BOTH_DELETED, Status.DELETED, Status.DELETED_BY_US, Status.INDEX_DELETED];\n\tstatic ID = 'workbench.action.git.openInEditor';\n\tstatic LABEL = nls.localize('openInEditor', \"Switch to Editor View\");\n\n\tprivate gitService: IGitService;\n\tprivate fileService: IFileService;\n\tprivate viewletService: IViewletService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate partService: IPartService;\n\tprivate contextService: IWorkspaceContextService;\n\n\tconstructor(@IFileService fileService: IFileService, @IWorkbenchEditorService editorService: IWorkbenchEditorService, @IGitService gitService: IGitService, @IViewletService viewletService: IViewletService, @IPartService partService: IPartService, @IWorkspaceContextService contextService: IWorkspaceContextService) {\n\t\tsuper(OpenInEditorAction.ID, OpenInEditorAction.LABEL);\n\n\t\tthis.class = 'git-action open-in-editor';\n\t\tthis.gitService = gitService;\n\t\tthis.fileService = fileService;\n\t\tthis.viewletService = viewletService;\n\t\tthis.editorService = editorService;\n\t\tthis.partService = partService;\n\t\tthis.contextService = contextService;\n\n\t\tthis.enabled = this.isEnabled();\n\t}\n\n\tpublic isEnabled():boolean {\n\t\tif (!super.isEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!(typeof this.gitService.getModel().getRepositoryRoot() === 'string')) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar status:IFileStatus = (<any>this.input).getFileStatus();\n\t\tif (OpenInEditorAction.DELETED_STATES.indexOf(status.getStatus()) > -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tconst model = this.gitService.getModel();\n\t\tconst resource = URI.file(paths.join(model.getRepositoryRoot(), this.getRepositoryRelativePath()));\n\t\tconst sideBySide = !!(event && (event.ctrlKey || event.metaKey));\n\t\tconst modifiedViewState = this.saveTextViewState();\n\n\t\treturn this.fileService.resolveFile(resource).then(stat => {\n\t\t\treturn this.editorService.openEditor({\n\t\t\t\tresource: stat.resource,\n\t\t\t\tmime: stat.mime,\n\t\t\t\toptions: {\n\t\t\t\t\tforceOpen: true\n\t\t\t\t}\n\t\t\t}, sideBySide).then(editor => {\n\t\t\t\tthis.restoreTextViewState(modifiedViewState);\n\n\t\t\t\tif (this.partService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\t\t\treturn this.viewletService.openViewlet(filesCommon.VIEWLET_ID, false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate saveTextViewState():editorcommon.IEditorViewState {\n\t\tvar textEditor = this.getTextEditor();\n\t\tif (textEditor) {\n\t\t\treturn textEditor.saveViewState();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate restoreTextViewState(state:editorcommon.IEditorViewState):void {\n\t\tvar textEditor = this.getTextEditor();\n\t\tif (textEditor) {\n\t\t\treturn textEditor.restoreViewState(state);\n\t\t}\n\t}\n\n\tprivate getTextEditor(): editorcommon.ICommonCodeEditor {\n\t\tvar editor = this.editorService.getActiveEditor();\n\n\t\tif (editor instanceof tdeditor.TextDiffEditor) {\n\t\t\treturn (<editorbrowser.IDiffEditor>editor.getControl()).getModifiedEditor();\n\t\t} else if (editor instanceof teditor.BaseTextEditor) {\n\t\t\treturn <editorbrowser.ICodeEditor> editor.getControl();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getRepositoryRelativePath():string {\n\t\tvar status: IFileStatus = (<any> this.input).getFileStatus();\n\n\t\tif (status.getStatus() === Status.INDEX_RENAMED) {\n\t\t\treturn status.getRename();\n\t\t} else {\n\t\t\tvar indexStatus = this.gitService.getModel().getStatus().find(status.getPath(), StatusType.INDEX);\n\n\t\t\tif (indexStatus && indexStatus.getStatus() === Status.INDEX_RENAMED) {\n\t\t\t\treturn indexStatus.getRename();\n\t\t\t} else {\n\t\t\t\treturn status.getPath();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class StageRangesAction extends baseeditor.EditorInputAction {\n\tprivate gitService: IGitService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate editor:editorbrowser.IDiffEditor;\n\n\tconstructor(editor:tdeditor.TextDiffEditor, @IGitService gitService: IGitService, @IWorkbenchEditorService editorService : IWorkbenchEditorService) {\n\t\tsuper('workbench.action.git.stageRanges', nls.localize('stageSelectedLines', \"Stage Selected Lines\"));\n\n\t\tthis.editorService = editorService;\n\t\tthis.gitService = gitService;\n\t\tthis.editor = editor.getControl();\n\t\tthis.editor.addListener(editorcommon.EventType.CursorSelectionChanged, this.updateEnablement.bind(this));\n\t\tthis.editor.addListener(editorcommon.EventType.DiffUpdated, this.updateEnablement.bind(this));\n\t\tthis.class = 'git-action stage-ranges';\n\t}\n\n\tpublic isEnabled():boolean {\n\t\tif (!super.isEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.gitService || !this.editorService) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar changes = this.editor.getLineChanges();\n\t\tvar selections = this.editor.getSelections();\n\n\t\tif (!changes || !selections || selections.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn stageranges.getSelectedChanges(changes, selections).length > 0;\n\t}\n\n\tpublic run():TPromise<any> {\n\t\tvar result = stageranges.stageRanges(this.editor);\n\n\t\tvar status = (<gitei.GitWorkingTreeDiffEditorInput>this.input).getFileStatus();\n\t\tvar path = status.getPath();\n\t\tvar viewState = this.editor.saveViewState();\n\n\t\treturn this.gitService.stage(status.getPath(), result).then(() => {\n\t\t\tvar statusModel = this.gitService.getModel().getStatus();\n\n\t\t\tstatus = statusModel.getWorkingTreeStatus().find(path) || statusModel.getIndexStatus().find(path);\n\n\t\t\tif (status) {\n\t\t\t\treturn this.gitService.getInput(status).then((input) => {\n\t\t\t\t\tvar options = new WorkbenchEditorCommon.TextDiffEditorOptions();\n\t\t\t\t\toptions.forceOpen = true;\n\t\t\t\t\toptions.autoRevealFirstChange = false;\n\n\t\t\t\t\treturn this.editorService.openEditor(input, options, this.position).then(() => {\n\t\t\t\t\t\tthis.editor.restoreViewState(viewState);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateEnablement():void {\n\t\tthis.enabled = this.isEnabled();\n\t}\n}\n\nclass FileEditorActionContributor extends baseeditor.EditorInputActionContributor {\n\tprivate instantiationService:IInstantiationService;\n\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\n\t\tthis.instantiationService = instantiationService;\n\t}\n\n\tpublic hasActionsForEditorInput(context:baseeditor.IEditorInputActionContext):boolean {\n\t\treturn context.input instanceof filesCommon.FileEditorInput;\n\t}\n\n\tpublic getActionsForEditorInput(context:baseeditor.IEditorInputActionContext):baseeditor.IEditorInputAction[] {\n\t\treturn [ this.instantiationService.createInstance(OpenInDiffAction) ];\n\t}\n}\n\nclass GitEditorActionContributor extends baseeditor.EditorInputActionContributor {\n\tprivate instantiationService:IInstantiationService;\n\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\n\t\tthis.instantiationService = instantiationService;\n\t}\n\n\tpublic hasActionsForEditorInput(context:baseeditor.IEditorInputActionContext):boolean {\n\t\treturn gitei.isGitEditorInput(context.input);\n\t}\n\n\tpublic getActionsForEditorInput(context:baseeditor.IEditorInputActionContext):baseeditor.IEditorInputAction[] {\n\t\treturn [ this.instantiationService.createInstance(OpenInEditorAction) ];\n\t}\n}\n\nclass GitWorkingTreeDiffEditorActionContributor extends baseeditor.EditorInputActionContributor {\n\tprivate instantiationService:IInstantiationService;\n\n\tconstructor(@IInstantiationService instantiationService: IInstantiationService) {\n\t\tsuper();\n\n\t\tthis.instantiationService = instantiationService;\n\t}\n\n\tpublic hasSecondaryActionsForEditorInput(context:baseeditor.IEditorInputActionContext):boolean {\n\t\treturn (context.input instanceof gitei.GitWorkingTreeDiffEditorInput && context.editor instanceof tdeditor.TextDiffEditor);\n\t}\n\n\tpublic getSecondaryActionsForEditorInput(context:baseeditor.IEditorInputActionContext):baseeditor.IEditorInputAction[] {\n\t\treturn [ this.instantiationService.createInstance(StageRangesAction, <tdeditor.TextDiffEditor>context.editor) ];\n\t}\n}\n\nclass GlobalOpenChangeAction extends OpenChangeAction {\n\n\tstatic ID = 'workbench.action.git.globalOpenChange';\n\tstatic LABEL = nls.localize('openChange', \"Open Change\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IGitService gitService: IGitService,\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IViewletService protected viewletService: IViewletService,\n\t\t@IPartService protected partService: IPartService\n\t) {\n\t\tsuper(editorService, gitService);\n\t}\n\n\tpublic getInput(): WorkbenchEditorCommon.IFileEditorInput {\n\t\treturn WorkbenchEditorCommon.asFileEditorInput(this.editorService.getActiveEditorInput());\n\t}\n\n\tpublic run(context?: any): TPromise<any> {\n\t\tlet input = this.getInput();\n\n\t\tif (!input) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\tlet status = getStatus(this.gitService, this.contextService, input);\n\n\t\tif (!status) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\tvar sideBySide = !!(context && (context.ctrlKey || context.metaKey));\n\t\tvar editor = <editorbrowser.ICodeEditor> this.editorService.getActiveEditor().getControl();\n\t\tvar viewState = editor ? editor.saveViewState() : null;\n\n\t\treturn this.gitService.getInput(status).then((input) => {\n\t\t\tvar promise = TPromise.as(null);\n\n\t\t\tif (this.partService.isVisible(Parts.SIDEBAR_PART)) {\n\t\t\t\tpromise = this.viewletService.openViewlet(gitcontrib.VIEWLET_ID, false);\n\t\t\t}\n\n\t\t\treturn promise.then(() => {\n\t\t\t\tvar options = new WorkbenchEditorCommon.TextDiffEditorOptions();\n\t\t\t\toptions.forceOpen = true;\n\t\t\t\toptions.autoRevealFirstChange = false;\n\n\t\t\t\treturn this.editorService.openEditor(input, options, sideBySide).then((editor) => {\n\t\t\t\t\tif (viewState) {\n\t\t\t\t\t\tvar codeEditor = <editorbrowser.ICodeEditor> this.editorService.getActiveEditor().getControl();\n\t\t\t\t\t\tcodeEditor.restoreViewState({\n\t\t\t\t\t\t\toriginal: { },\n\t\t\t\t\t\t\tmodified: viewState\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\n\nclass GlobalOpenInEditorAction extends OpenFileAction {\n\n\tstatic ID = 'workbench.action.git.globalOpenFile';\n\tstatic LABEL = nls.localize('openFile', \"Open File\");\n\n\tconstructor(\n\t\tid = GlobalOpenInEditorAction.ID,\n\t\tlabel = GlobalOpenInEditorAction.LABEL,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IGitService gitService: IGitService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tsuper(editorService, fileService, gitService, contextService);\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tconst input = WorkbenchEditorCommon.asFileEditorInput(this.editorService.getActiveEditorInput(), true);\n\n\t\tif (!input) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\tconst status = getStatus(this.gitService, this.contextService, input);\n\n\t\tif (!status) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\treturn super.run(status);\n\t}\n}\n\nvar actionBarRegistry = <abr.IActionBarRegistry> platform.Registry.as(abr.Extensions.Actionbar);\nactionBarRegistry.registerActionBarContributor(abr.Scope.EDITOR, FileEditorActionContributor);\nactionBarRegistry.registerActionBarContributor(abr.Scope.EDITOR, GitEditorActionContributor);\nactionBarRegistry.registerActionBarContributor(abr.Scope.EDITOR, GitWorkingTreeDiffEditorActionContributor);\n\nlet workbenchActionRegistry = (<wbar.IWorkbenchActionRegistry> platform.Registry.as(wbar.Extensions.WorkbenchActions));\n\n// Register Actions\nconst category = nls.localize('git', \"Git\");\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(GlobalOpenChangeAction, GlobalOpenChangeAction.ID, GlobalOpenChangeAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(GlobalOpenInEditorAction, GlobalOpenInEditorAction.ID, GlobalOpenInEditorAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(PullAction, PullAction.ID, PullAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(PushAction, PushAction.ID, PushAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(SyncAction, SyncAction.ID, SyncAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(PublishAction, PublishAction.ID, PublishAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(StartGitBranchAction, StartGitBranchAction.ID, StartGitBranchAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(StartGitCheckoutAction, StartGitCheckoutAction.ID, StartGitCheckoutAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(InputCommitAction, InputCommitAction.ID, InputCommitAction.LABEL), category);\nworkbenchActionRegistry.registerWorkbenchAction(new SyncActionDescriptor(UndoLastCommitAction, UndoLastCommitAction.ID, UndoLastCommitAction.LABEL), category);\n"]}