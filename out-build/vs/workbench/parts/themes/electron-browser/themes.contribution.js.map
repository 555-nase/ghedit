{"version":3,"sources":["vs/workbench/parts/themes/electron-browser/themes.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/themes/electron-browser/themes.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport winjs = require('vs/base/common/winjs.base');\nimport actions = require('vs/base/common/actions');\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\nimport platform = require('vs/platform/platform');\nimport workbenchActionRegistry = require('vs/workbench/common/actionRegistry');\nimport {IQuickOpenService, IPickOpenEntry} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IThemeService} from 'vs/workbench/services/themes/common/themeService';\nimport {RunOnceScheduler} from 'vs/base/common/async';\n\nclass SelectThemeAction extends actions.Action {\n\n\tpublic static ID = 'workbench.action.selectTheme';\n\tpublic static LABEL = nls.localize('selectTheme.label', 'Color Theme');\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IQuickOpenService private quickOpenService: IQuickOpenService,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IThemeService private themeService: IThemeService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(): winjs.TPromise<void> {\n\n\t\treturn this.themeService.getThemes().then(contributedThemes => {\n\t\t\tlet currentTheme = this.themeService.getTheme();\n\n\t\t\tlet picks: IPickOpenEntry[] = [];\n\n\t\t\tcontributedThemes.forEach(theme => {\n\t\t\t\tpicks.push({ id: theme.id, label: theme.label, description: theme.description });\n\t\t\t\tcontributedThemes[theme.id] = theme;\n\t\t\t});\n\n\t\t\tpicks = picks.sort((t1, t2) => t1.label.localeCompare(t2.label));\n\n\t\t\tlet selectedPickIndex: number;\n\t\t\tpicks.forEach((p, index) => {\n\t\t\t\tif (p.id === currentTheme) {\n\t\t\t\t\tselectedPickIndex = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet selectTheme = (pick, broadcast) => {\n\t\t\t\tif (pick) {\n\t\t\t\t\tlet themeId = pick.id;\n\t\t\t\t\tthis.themeService.setTheme(themeId, broadcast).then(null, error => {\n\t\t\t\t\t\tthis.messageService.show(Severity.Info, nls.localize('problemChangingTheme', \"Problem loading theme: {0}\", error.message));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.themeService.setTheme(currentTheme, broadcast);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet themeToPreview : IPickOpenEntry = null;\n\t\t\tlet previewThemeScheduler = new RunOnceScheduler(() => {\n\t\t\t\tselectTheme(themeToPreview, false);\n\t\t\t}, 100);\n\t\t\tlet previewTheme = pick => {\n\t\t\t\tthemeToPreview = pick;\n\t\t\t\tpreviewThemeScheduler.schedule();\n\t\t\t};\n\t\t\tlet pickTheme = pick => {\n\t\t\t\tpreviewThemeScheduler.dispose();\n\t\t\t\tselectTheme(pick, true);\n\t\t\t};\n\t\t\treturn this.quickOpenService.pick(picks, { placeHolder: nls.localize('themes.selectTheme', \"Select Color Theme\"), autoFocus: { autoFocusIndex: selectedPickIndex } }).then(pickTheme, null, previewTheme);\n\t\t});\n\t}\n}\n\nconst category = nls.localize('preferences', \"Preferences\");\nlet workbenchActionsRegistry = <workbenchActionRegistry.IWorkbenchActionRegistry>platform.Registry.as(workbenchActionRegistry.Extensions.WorkbenchActions);\nworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(SelectThemeAction, SelectThemeAction.ID, SelectThemeAction.LABEL), category);\n"]}