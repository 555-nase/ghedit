{"version":3,"file":"vs/workbench/parts/files/test/browser/textFileEditorModelCache.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/files/test/browser/textFileEditorModelCache.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAOb,KAAK,CAAC,kCAAkC,EAAE;QAEzC,IAAI,CAAC,oBAAoB,EAAE;YAC1B,IAAI,KAAK,GAAG,IAAI,8CAAwB,EAAE,CAAC;YAE3C,IAAI,EAAE,GAAG,IAAI,oBAAW,EAAE,CAAC;YAC3B,IAAI,EAAE,GAAG,IAAI,oBAAW,EAAE,CAAC;YAC3B,IAAI,EAAE,GAAG,IAAI,oBAAW,EAAE,CAAC;YAE3B,KAAK,CAAC,GAAG,CAAC,aAAG,CAAC,IAAI,CAAC,YAAY,CAAC,EAAO,EAAE,CAAC,CAAC;YAC3C,KAAK,CAAC,GAAG,CAAC,aAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAO,EAAE,CAAC,CAAC;YACjD,KAAK,CAAC,GAAG,CAAC,aAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAO,EAAE,CAAC,CAAC;YAE/C,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,aAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,aAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAE1D,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YAC5B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAE3B,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAErC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YAErC,KAAK,CAAC,KAAK,EAAE,CAAC;YACd,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;YACxB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport URI from 'vs/base/common/uri';\nimport {TextFileEditorModelCache} from 'vs/workbench/parts/files/common/editors/textFileEditorModel';\nimport {EditorModel} from 'vs/workbench/common/editor';\n\nsuite('Files - TextFileEditorModelCache', () => {\n\n\ttest('add, remove, clear', function () {\n\t\tlet cache = new TextFileEditorModelCache();\n\n\t\tlet m1 = new EditorModel();\n\t\tlet m2 = new EditorModel();\n\t\tlet m3 = new EditorModel();\n\n\t\tcache.add(URI.file('/test.html'), <any>m1);\n\t\tcache.add(URI.file('/some/other.html'), <any>m2);\n\t\tcache.add(URI.file('/some/this.txt'), <any>m3);\n\n\t\tassert(!cache.get(URI.file('foo')));\n\t\tassert.strictEqual(cache.get(URI.file('/test.html')), m1);\n\n\t\tlet result = cache.getAll();\n\t\tassert.strictEqual(3, result.length);\n\n\t\tresult = cache.getAll(URI.file('/yes'));\n\t\tassert.strictEqual(0, result.length);\n\n\t\tresult = cache.getAll(URI.file('/some/other.txt'));\n\t\tassert.strictEqual(0, result.length);\n\n\t\tresult = cache.getAll(URI.file('/some/other.html'));\n\t\tassert.strictEqual(1, result.length);\n\n\t\tcache.remove(URI.file(''));\n\n\t\tresult = cache.getAll();\n\t\tassert.strictEqual(3, result.length);\n\n\t\tcache.remove(URI.file('/test.html'));\n\n\t\tresult = cache.getAll();\n\t\tassert.strictEqual(2, result.length);\n\n\t\tcache.clear();\n\t\tresult = cache.getAll();\n\t\tassert.strictEqual(0, result.length);\n\t});\n});"]}