{"version":3,"sources":["vs/workbench/parts/files/browser/workingFilesPicker.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/files/browser/workingFilesPicker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport paths = require('vs/base/common/paths');\nimport labels = require('vs/base/common/labels');\nimport URI from 'vs/base/common/uri';\nimport errors = require('vs/base/common/errors');\nimport strings = require('vs/base/common/strings');\nimport {IAutoFocus, Mode, IContext} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenModel, QuickOpenEntry, QuickOpenEntryGroup} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {WorkingFilesModel, WorkingFileEntry} from 'vs/workbench/parts/files/common/workingFilesModel';\nimport scorer = require('vs/base/common/scorer');\nimport {QuickOpenHandler} from 'vs/workbench/browser/quickopen';\nimport {ITextFileService} from 'vs/workbench/parts/files/common/files';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\nexport class WorkingFilePickerEntry extends QuickOpenEntryGroup {\n\tprivate name: string;\n\tprivate description: string;\n\tprivate workingFilesEntry: WorkingFileEntry;\n\n\tconstructor(\n\t\tname: string,\n\t\tdescription: string,\n\t\tentry: WorkingFileEntry,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper();\n\n\t\tthis.workingFilesEntry = entry;\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t}\n\n\tpublic getPrefix(): string {\n\t\tif (this.workingFilesEntry.dirty) {\n\t\t\treturn '\\u25cf '; // dirty decoration\n\t\t}\n\n\t\treturn void 0;\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, working file picker\", this.getLabel());\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tpublic getResource(): URI {\n\t\treturn this.workingFilesEntry.resource;\n\t}\n\n\tpublic getWorkingFilesEntry(): WorkingFileEntry {\n\t\treturn this.workingFilesEntry;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\treturn this.runOpen(context);\n\t\t}\n\n\t\treturn super.run(mode, context);\n\t}\n\n\tprivate runOpen(context: IContext): boolean {\n\t\tlet event = context.event;\n\t\tlet sideBySide = (event && (event.ctrlKey || event.metaKey || (event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey))));\n\n\t\tthis.editorService.openEditor({ resource: this.workingFilesEntry.resource }, sideBySide).done(null, errors.onUnexpectedError);\n\n\t\treturn true;\n\t}\n}\n\nexport class WorkingFilesPicker extends QuickOpenHandler {\n\tprivate scorerCache: { [key: string]: number };\n\n\tconstructor(\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@ITextFileService private textFileService: ITextFileService\n\t) {\n\t\tsuper();\n\n\t\tthis.scorerCache = Object.create(null);\n\t}\n\n\tpublic getResults(searchValue: string): TPromise<QuickOpenModel> {\n\t\tsearchValue = searchValue.trim();\n\n\t\tconst normalizedSearchValueLowercase = strings.stripWildcards(searchValue).toLowerCase();\n\n\t\treturn TPromise.as(new QuickOpenModel(this.textFileService.getWorkingFilesModel().getEntries()\n\n\t\t\t// Convert working files to quick open entries\n\t\t\t.map(e => {\n\t\t\t\tlet label = paths.basename(e.resource.fsPath);\n\t\t\t\tlet description = labels.getPathLabel(paths.dirname(e.resource.fsPath), this.contextService);\n\t\t\t\tif (description === '.') {\n\t\t\t\t\tdescription = null; // for untitled files\n\t\t\t\t}\n\n\t\t\t\treturn this.instantiationService.createInstance(WorkingFilePickerEntry, label, description, e);\n\t\t\t})\n\n\t\t\t// Filter by search value\n\t\t\t.filter(e => {\n\t\t\t\tif (!searchValue) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tlet targetToMatch = labels.getPathLabel(e.getResource(), this.contextService);\n\t\t\t\tif (!scorer.matches(targetToMatch, normalizedSearchValueLowercase)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst {labelHighlights, descriptionHighlights} = QuickOpenEntry.highlight(e, searchValue, true /* fuzzy highlight */);\n\t\t\t\te.setHighlights(labelHighlights, descriptionHighlights);\n\n\t\t\t\treturn true;\n\t\t\t}).\n\n\t\t\t// Sort by search value score or natural order if not searching\n\t\t\tsort((e1, e2) => {\n\t\t\t\tif (!searchValue) {\n\t\t\t\t\treturn WorkingFilesModel.compare(e1.getWorkingFilesEntry(), e2.getWorkingFilesEntry());\n\t\t\t\t}\n\n\t\t\t\treturn QuickOpenEntry.compareByScore(e1, e2, searchValue, normalizedSearchValueLowercase, this.scorerCache);\n\t\t\t}).\n\n\t\t\t// Apply group label\n\t\t\tmap((e, index) => {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\te.setGroupLabel(nls.localize('workingFilesGroupLabel', \"working files\"));\n\t\t\t\t}\n\n\t\t\t\treturn e;\n\t\t\t})));\n\t}\n\n\tpublic getEmptyLabel(searchString: string): string {\n\t\tif (searchString) {\n\t\t\treturn nls.localize('noResultsFound', \"No matching working files found\");\n\t\t}\n\n\t\treturn nls.localize('noWorkingFiles', \"List of working files is currently empty\");\n\t}\n\n\tpublic getAutoFocus(searchValue: string): IAutoFocus {\n\t\tif (searchValue) {\n\t\t\treturn {\n\t\t\t\tautoFocusFirstEntry: true\n\t\t\t};\n\t\t}\n\n\t\treturn super.getAutoFocus(searchValue);\n\t}\n\n\tpublic onClose(canceled: boolean): void {\n\t\tthis.scorerCache = Object.create(null);\n\t}\n}"]}