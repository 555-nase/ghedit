{"version":3,"file":"vs/workbench/parts/files/browser/textFileServices.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/files/browser/textFileServices.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport errors = require('vs/base/common/errors');\nimport {ListenerUnbind} from 'vs/base/common/eventEmitter';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {FileEditorInput} from 'vs/workbench/parts/files/browser/editors/fileEditorInput';\nimport {CACHE, TextFileEditorModel} from 'vs/workbench/parts/files/common/editors/textFileEditorModel';\nimport {IResult, ITextFileOperationResult, ConfirmResult, ITextFileService, IAutoSaveConfiguration, AutoSaveMode} from 'vs/workbench/parts/files/common/files';\nimport {EventType} from 'vs/workbench/common/events';\nimport {WorkingFilesModel} from 'vs/workbench/parts/files/common/workingFilesModel';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IFilesConfiguration, IFileOperationResult, FileOperationResult, AutoSaveConfiguration} from 'vs/platform/files/common/files';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {ILifecycleService} from 'vs/platform/lifecycle/common/lifecycle';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IConfigurationService, IConfigurationServiceEvent, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\n\n/**\n * The workbench file service implementation implements the raw file service spec and adds additional methods on top.\n *\n * It also adds diagnostics and logging around file system operations.\n */\nexport abstract class TextFileService implements ITextFileService {\n\n\tpublic serviceId = ITextFileService;\n\n\tprivate listenerToUnbind: ListenerUnbind[];\n\tprivate _workingFilesModel: WorkingFilesModel;\n\n\tprivate _onAutoSaveConfigurationChange: Emitter<IAutoSaveConfiguration>;\n\n\tprivate configuredAutoSaveDelay: number;\n\tprivate configuredAutoSaveOnFocusChange: boolean;\n\n\tconstructor(\n\t\t@IWorkspaceContextService protected contextService: IWorkspaceContextService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IConfigurationService private configurationService: IConfigurationService,\n\t\t@ITelemetryService private telemetryService: ITelemetryService,\n\t\t@ILifecycleService private lifecycleService: ILifecycleService,\n\t\t@IEventService private eventService: IEventService\n\t) {\n\t\tthis.listenerToUnbind = [];\n\t\tthis._onAutoSaveConfigurationChange = new Emitter<IAutoSaveConfiguration>();\n\t}\n\n\tprotected init(): void {\n\t\tthis.registerListeners();\n\n\t\tconst configuration = this.configurationService.getConfiguration<IFilesConfiguration>();\n\t\tthis.onConfigurationChange(configuration);\n\n\t\t// we want to find out about this setting from telemetry\n\t\tthis.telemetryService.publicLog('autoSave', this.getAutoSaveConfiguration());\n\t}\n\n\tpublic get onAutoSaveConfigurationChange(): Event<IAutoSaveConfiguration> {\n\t\treturn this._onAutoSaveConfigurationChange.event;\n\t}\n\n\tprivate get workingFilesModel(): WorkingFilesModel {\n\t\tif (!this._workingFilesModel) {\n\t\t\tthis._workingFilesModel = this.instantiationService.createInstance(WorkingFilesModel);\n\t\t}\n\n\t\treturn this._workingFilesModel;\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Lifecycle\n\t\tthis.lifecycleService.addBeforeShutdownParticipant(this);\n\t\tthis.lifecycleService.onShutdown(this.dispose, this);\n\n\t\t// Configuration changes\n\t\tthis.listenerToUnbind.push(this.configurationService.addListener(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => this.onConfigurationChange(e.config)));\n\n\t\t// Editor focus change\n\t\twindow.addEventListener('blur', () => this.onEditorFocusChange(), true);\n\t\tthis.listenerToUnbind.push(this.eventService.addListener(EventType.EDITOR_INPUT_CHANGED, () => this.onEditorFocusChange()));\n\t}\n\n\tprivate onEditorFocusChange(): void {\n\t\tif (this.configuredAutoSaveOnFocusChange && this.getDirty().length) {\n\t\t\tthis.saveAll().done(null, errors.onUnexpectedError); // save dirty files when we change focus in the editor area\n\t\t}\n\t}\n\n\tprivate onConfigurationChange(configuration: IFilesConfiguration): void {\n\t\tconst wasAutoSaveEnabled = (this.getAutoSaveMode() !== AutoSaveMode.OFF);\n\n\t\tconst autoSaveMode = (configuration && configuration.files && configuration.files.autoSave) || AutoSaveConfiguration.OFF;\n\t\tswitch (autoSaveMode) {\n\t\t\tcase AutoSaveConfiguration.AFTER_DELAY:\n\t\t\t\tthis.configuredAutoSaveDelay = configuration && configuration.files && configuration.files.autoSaveDelay;\n\t\t\t\tthis.configuredAutoSaveOnFocusChange = false;\n\t\t\t\tbreak;\n\n\t\t\tcase AutoSaveConfiguration.ON_FOCUS_CHANGE:\n\t\t\t\tthis.configuredAutoSaveDelay = void 0;\n\t\t\t\tthis.configuredAutoSaveOnFocusChange = true;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.configuredAutoSaveDelay = void 0;\n\t\t\t\tthis.configuredAutoSaveOnFocusChange = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Emit as event\n\t\tthis._onAutoSaveConfigurationChange.fire(this.getAutoSaveConfiguration());\n\n\t\t// save all dirty when enabling auto save\n\t\tif (!wasAutoSaveEnabled && this.getAutoSaveMode() !== AutoSaveMode.OFF) {\n\t\t\tthis.saveAll().done(null, errors.onUnexpectedError);\n\t\t}\n\t}\n\n\tpublic getDirty(resources?: URI[]): URI[] {\n\t\treturn this.getDirtyFileModels(resources).map((m) => m.getResource());\n\t}\n\n\tpublic isDirty(resource?: URI): boolean {\n\t\treturn CACHE\n\t\t\t.getAll(resource)\n\t\t\t.some((model) => model.isDirty());\n\t}\n\n\tpublic save(resource: URI): TPromise<boolean> {\n\t\treturn this.saveAll([resource]).then((result) => result.results.length === 1 && result.results[0].success);\n\t}\n\n\tpublic saveAll(arg1?: any /* URI[] */): TPromise<ITextFileOperationResult> {\n\t\tlet dirtyFileModels = this.getDirtyFileModels(Array.isArray(arg1) ? arg1 : void 0 /* Save All */);\n\n\t\tlet mapResourceToResult: { [resource: string]: IResult } = Object.create(null);\n\t\tdirtyFileModels.forEach((m) => {\n\t\t\tmapResourceToResult[m.getResource().toString()] = {\n\t\t\t\tsource: m.getResource()\n\t\t\t};\n\t\t});\n\n\t\treturn TPromise.join(dirtyFileModels.map((model) => {\n\t\t\treturn model.save().then(() => {\n\t\t\t\tif (!model.isDirty()) {\n\t\t\t\t\tmapResourceToResult[model.getResource().toString()].success = true;\n\t\t\t\t}\n\t\t\t});\n\t\t})).then((r) => {\n\t\t\treturn {\n\t\t\t\tresults: Object.keys(mapResourceToResult).map((k) => mapResourceToResult[k])\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate getFileModels(resources?: URI[]): TextFileEditorModel[];\n\tprivate getFileModels(resource?: URI): TextFileEditorModel[];\n\tprivate getFileModels(arg1?: any): TextFileEditorModel[] {\n\t\tif (Array.isArray(arg1)) {\n\t\t\tlet models: TextFileEditorModel[] = [];\n\t\t\t(<URI[]>arg1).forEach((resource) => {\n\t\t\t\tmodels.push(...this.getFileModels(resource));\n\t\t\t});\n\n\t\t\treturn models;\n\t\t}\n\n\t\treturn CACHE.getAll(<URI>arg1);\n\t}\n\n\tprivate getDirtyFileModels(resources?: URI[]): TextFileEditorModel[];\n\tprivate getDirtyFileModels(resource?: URI): TextFileEditorModel[];\n\tprivate getDirtyFileModels(arg1?: any): TextFileEditorModel[] {\n\t\treturn this.getFileModels(arg1).filter((model) => model.isDirty());\n\t}\n\n\tpublic abstract saveAs(resource: URI, targetResource?: URI): TPromise<URI>;\n\n\tpublic confirmSave(resources?: URI[]): ConfirmResult {\n\t\tthrow new Error('Unsupported');\n\t}\n\n\tpublic revert(resource: URI, force?: boolean): TPromise<boolean> {\n\t\treturn this.revertAll([resource], force).then((result) => result.results.length === 1 && result.results[0].success);\n\t}\n\n\tpublic revertAll(resources?: URI[], force?: boolean): TPromise<ITextFileOperationResult> {\n\t\tlet fileModels = force ? this.getFileModels(resources) : this.getDirtyFileModels(resources);\n\n\t\tlet mapResourceToResult: { [resource: string]: IResult } = Object.create(null);\n\t\tfileModels.forEach((m) => {\n\t\t\tmapResourceToResult[m.getResource().toString()] = {\n\t\t\t\tsource: m.getResource()\n\t\t\t};\n\t\t});\n\n\t\treturn TPromise.join(fileModels.map((model) => {\n\t\t\treturn model.revert().then(() => {\n\t\t\t\tif (!model.isDirty()) {\n\t\t\t\t\tmapResourceToResult[model.getResource().toString()].success = true;\n\t\t\t\t}\n\t\t\t}, (error) => {\n\n\t\t\t\t// FileNotFound means the file got deleted meanwhile, so dispose this model\n\t\t\t\tif ((<IFileOperationResult>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\t\tlet clients = FileEditorInput.getAll(model.getResource());\n\t\t\t\t\tclients.forEach((input) => input.dispose(true));\n\n\t\t\t\t\t// also make sure to have it removed from any working files\n\t\t\t\t\tthis.workingFilesModel.removeEntry(model.getResource());\n\n\t\t\t\t\t// store as successful revert\n\t\t\t\t\tmapResourceToResult[model.getResource().toString()].success = true;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise bubble up the error\n\t\t\t\telse {\n\t\t\t\t\treturn TPromise.wrapError(error);\n\t\t\t\t}\n\t\t\t});\n\t\t})).then((r) => {\n\t\t\treturn {\n\t\t\t\tresults: Object.keys(mapResourceToResult).map((k) => mapResourceToResult[k])\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic beforeShutdown(): boolean | TPromise<boolean> {\n\n\t\t// Propagate to working files model\n\t\tthis.workingFilesModel.shutdown();\n\n\t\treturn false; // no veto\n\t}\n\n\tpublic getWorkingFilesModel(): WorkingFilesModel {\n\t\treturn this.workingFilesModel;\n\t}\n\n\tpublic getAutoSaveMode(): AutoSaveMode {\n\t\tif (this.configuredAutoSaveOnFocusChange) {\n\t\t\treturn AutoSaveMode.ON_FOCUS_CHANGE;\n\t\t}\n\n\t\tif (this.configuredAutoSaveDelay && this.configuredAutoSaveDelay > 0) {\n\t\t\treturn this.configuredAutoSaveDelay <= 1000 ? AutoSaveMode.AFTER_SHORT_DELAY : AutoSaveMode.AFTER_LONG_DELAY;\n\t\t}\n\n\t\treturn AutoSaveMode.OFF;\n\t}\n\n\tpublic getAutoSaveConfiguration(): IAutoSaveConfiguration {\n\t\treturn {\n\t\t\tautoSaveDelay: this.configuredAutoSaveDelay && this.configuredAutoSaveDelay > 0 ? this.configuredAutoSaveDelay : void 0,\n\t\t\tautoSaveFocusChange: this.configuredAutoSaveOnFocusChange\n\t\t};\n\t}\n\n\tpublic dispose(): void {\n\t\twhile (this.listenerToUnbind.length) {\n\t\t\tthis.listenerToUnbind.pop()();\n\t\t}\n\n\t\tthis.workingFilesModel.dispose();\n\n\t\t// Clear all caches\n\t\tCACHE.clear();\n\t}\n}"]}