{"version":3,"sources":["vs/workbench/parts/files/browser/views/emptyView.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/files/browser/views/emptyView.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport env = require('vs/base/common/platform');\nimport DOM = require('vs/base/browser/dom');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IAction, Action} from 'vs/base/common/actions';\nimport {Button} from 'vs/base/browser/ui/button/button';\nimport {$} from 'vs/base/browser/builder';\nimport {IActionItem} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {CollapsibleView} from 'vs/base/browser/ui/splitview/splitview';\nimport {Registry} from 'vs/platform/platform';\nimport {IWorkbenchActionRegistry, Extensions} from 'vs/workbench/common/actionRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {StructuredSelection} from 'vs/platform/selection/common/selection';\n\nexport class EmptyView extends CollapsibleView {\n\n\tconstructor(@IInstantiationService private instantiationService: IInstantiationService) {\n\t\tsuper({\n\t\t\tminimumSize: 2 * 22,\n\t\t\tariaHeaderLabel: nls.localize('explorerSection', \"Files Explorer Section\")\n\t\t});\n\t}\n\n\tpublic renderHeader(container: HTMLElement): void {\n\t\tlet titleDiv = $('div.title').appendTo(container);\n\t\t$('span').text(nls.localize('noWorkspace', \"No Folder Opened\")).appendTo(titleDiv);\n\t}\n\n\tprotected renderBody(container: HTMLElement): void {\n\t\tDOM.addClass(container, 'explorer-empty-view');\n\n\t\tlet titleDiv = $('div.section').appendTo(container);\n\t\t$('p').text(nls.localize('noWorkspaceHelp', \"You have not yet opened a folder.\")).appendTo(titleDiv);\n\n\t\tlet section = $('div.section').appendTo(container);\n\n\t\tlet button = new Button(section);\n\t\tbutton.label = nls.localize('openFolder', \"Open Folder\");\n\t\tbutton.on('click', () => {\n\t\t\tthis.runWorkbenchAction(env.isMacintosh ? 'workbench.action.files.openFileFolder' : 'workbench.action.files.openFolder');\n\t\t});\n\t}\n\n\tprotected layoutBody(size: number): void {\n\t\t// no-op\n\t}\n\n\tprivate runWorkbenchAction(actionId: string): void {\n\t\tlet actionRegistry = <IWorkbenchActionRegistry> Registry.as(Extensions.WorkbenchActions);\n\t\tlet actionDescriptor = actionRegistry.getWorkbenchAction(actionId);\n\n\t\tlet action = <Action> this.instantiationService.createInstance(actionDescriptor.syncDescriptor);\n\n\t\treturn action.run().done(() => action.dispose());\n\t}\n\n\tpublic create(): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic focusBody(): void {\n\t\t// Ignore\n\t}\n\n\tpublic getSelection(): StructuredSelection {\n\t\treturn new StructuredSelection([]);\n\t}\n\n\tprotected reveal(element: any, relativeTop?: number): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic getActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getSecondaryActions(): IAction[] {\n\t\treturn [];\n\t}\n\n\tpublic getActionItem(action: IAction): IActionItem {\n\t\treturn null;\n\t}\n\n\tpublic shutdown(): void {\n\t\t// Subclass to implement\n\t}\n}"]}