{"version":3,"sources":["vs/workbench/parts/files/browser/views/explorerView.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/files/browser/views/explorerView.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Builder, $} from 'vs/base/browser/builder';\nimport URI from 'vs/base/common/uri';\nimport {ThrottledDelayer} from 'vs/base/common/async';\nimport errors = require('vs/base/common/errors');\nimport paths = require('vs/base/common/paths');\nimport {Action, IActionRunner} from 'vs/base/common/actions';\nimport {prepareActions} from 'vs/workbench/browser/actionBarRegistry';\nimport {ITree} from 'vs/base/parts/tree/browser/tree';\nimport {Tree} from 'vs/base/parts/tree/browser/treeImpl';\nimport {EditorEvent, EventType as WorkbenchEventType} from 'vs/workbench/common/events';\nimport {EditorOptions} from 'vs/workbench/common/editor';\nimport {LocalFileChangeEvent, IFilesConfiguration} from 'vs/workbench/parts/files/common/files';\nimport {IFileStat, IResolveFileOptions, FileChangeType, FileChangesEvent, IFileChange, EventType as FileEventType, IFileService} from 'vs/platform/files/common/files';\nimport {FileImportedEvent, RefreshViewExplorerAction, NewFolderAction, NewFileAction} from 'vs/workbench/parts/files/browser/fileActions';\nimport {FileEditorInput} from 'vs/workbench/parts/files/browser/editors/fileEditorInput';\nimport {FileDragAndDrop, FileFilter, FileSorter, FileController, FileRenderer, FileDataSource, FileViewletState, FileAccessibilityProvider} from 'vs/workbench/parts/files/browser/views/explorerViewer';\nimport lifecycle = require('vs/base/common/lifecycle');\nimport {IEditor} from 'vs/platform/editor/common/editor';\nimport * as DOM from 'vs/base/browser/dom';\nimport {CollapseAction, CollapsibleViewletView} from 'vs/workbench/browser/viewlet';\nimport {FileStat} from 'vs/workbench/parts/files/common/explorerViewModel';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IPartService} from 'vs/workbench/services/part/common/partService';\nimport {IWorkspace} from 'vs/platform/workspace/common/workspace';\nimport {IStorageService} from 'vs/platform/storage/common/storage';\nimport {IConfigurationService, IConfigurationServiceEvent, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IProgressService} from 'vs/platform/progress/common/progress';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IContextMenuService} from 'vs/platform/contextview/browser/contextView';\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\n\nexport class ExplorerView extends CollapsibleViewletView {\n\n\tprivate static EXPLORER_FILE_CHANGES_REACT_DELAY = 500; // delay in ms to react to file changes to give our internal events a chance to react first\n\tprivate static EXPLORER_FILE_CHANGES_REFRESH_DELAY = 100; // delay in ms to refresh the explorer from disk file changes\n\tprivate static EXPLORER_IMPORT_REFRESH_DELAY = 300; // delay in ms to refresh the explorer from imports\n\n\tprivate static MEMENTO_LAST_ACTIVE_FILE_RESOURCE = 'explorer.memento.lastActiveFileResource';\n\tprivate static MEMENTO_EXPANDED_FOLDER_RESOURCES = 'explorer.memento.expandedFolderResources';\n\n\tprivate workspace: IWorkspace;\n\n\tprivate explorerViewer: ITree;\n\tprivate filter: FileFilter;\n\tprivate viewletState: FileViewletState;\n\n\tprivate explorerRefreshDelayer: ThrottledDelayer<void>;\n\tprivate explorerImportDelayer: ThrottledDelayer<void>;\n\n\tprivate shouldRefresh: boolean;\n\n\tprivate autoReveal: boolean;\n\n\tprivate settings: any;\n\n\tconstructor(\n\t\tviewletState: FileViewletState,\n\t\tactionRunner: IActionRunner,\n\t\tsettings: any,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IEventService private eventService: IEventService,\n\t\t@IStorageService private storageService: IStorageService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IProgressService private progressService: IProgressService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@IPartService private partService: IPartService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper(actionRunner, false, nls.localize('explorerSection', \"Files Explorer Section\"), messageService, contextMenuService);\n\n\t\tthis.workspace = contextService.getWorkspace();\n\n\t\tthis.settings = settings;\n\t\tthis.viewletState = viewletState;\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.autoReveal = true;\n\n\t\tthis.explorerRefreshDelayer = new ThrottledDelayer<void>(ExplorerView.EXPLORER_FILE_CHANGES_REFRESH_DELAY);\n\t\tthis.explorerImportDelayer = new ThrottledDelayer<void>(ExplorerView.EXPLORER_IMPORT_REFRESH_DELAY);\n\t}\n\n\tpublic renderHeader(container: HTMLElement): void {\n\t\tlet titleDiv = $('div.title').appendTo(container);\n\t\t$('span').text(this.workspace.name).appendTo(titleDiv);\n\n\t\tsuper.renderHeader(container);\n\t}\n\n\tpublic renderBody(container: HTMLElement): void {\n\t\tthis.treeContainer = super.renderViewTree(container);\n\t\tDOM.addClass(this.treeContainer, 'explorer-folders-view');\n\n\t\tthis.tree = this.createViewer($(this.treeContainer));\n\n\t\tthis.fillToolBar();\n\t}\n\n\tprivate fillToolBar(): void {\n\t\tlet actions: Action[] = [];\n\n\t\t// New File\n\t\tactions.push(this.instantiationService.createInstance(NewFileAction, this.getViewer(), null));\n\n\t\t// New Folder\n\t\tactions.push(this.instantiationService.createInstance(NewFolderAction, this.getViewer(), null));\n\n\t\t// Refresh\n\t\tactions.push(this.instantiationService.createInstance(RefreshViewExplorerAction, this, 'explorer-action refresh-explorer'));\n\n\t\t// Collapse\n\t\tactions.push(this.instantiationService.createInstance(CollapseAction, this.getViewer(), true, 'explorer-action collapse-explorer'));\n\n\t\t// Set Order\n\t\tfor (let i = 0; i < actions.length; i++) {\n\t\t\tlet action = actions[i];\n\t\t\taction.order = 10 * (i + 1);\n\t\t}\n\n\t\tthis.toolBar.setActions(prepareActions(actions), [])();\n\t}\n\n\tpublic create(): TPromise<void> {\n\n\t\t// Update configuration\n\t\tconst configuration = this.configurationService.getConfiguration<IFilesConfiguration>();\n\t\tthis.onConfigurationUpdated(configuration);\n\n\t\t// Load and Fill Viewer\n\t\treturn this.doRefresh().then(() => {\n\n\t\t\t// When the explorer viewer is loaded, listen to changes to the editor input\n\t\t\tthis.toDispose.push(this.eventService.addListener2(WorkbenchEventType.EDITOR_INPUT_CHANGING, (e: EditorEvent) => this.onEditorInputChanging(e)));\n\n\t\t\t// Also handle configuration updates\n\t\t\tthis.toDispose.push(this.configurationService.addListener2(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => this.onConfigurationUpdated(e.config, true)));\n\t\t});\n\t}\n\n\tprivate onEditorInputChanging(e: EditorEvent): void {\n\n\t\t// During workbench startup, the editor area might restore more than one editor from a previous\n\t\t// session. When this happens there might be editor input changing events for side editors that\n\t\t// don't have focus. In these cases we do not adjust explorer selection for non-focused editors\n\t\t// because we only want to react for the editor that has focus.\n\t\tif (!this.partService.isCreated() && e.editorOptions && e.editorOptions.preserveFocus) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet clearSelection = true;\n\n\t\t// Handle File Input\n\t\tif (e.editorInput && e.editorInput instanceof FileEditorInput) {\n\t\t\tlet fileInput = (<FileEditorInput>e.editorInput);\n\n\t\t\t// Always remember last opened file\n\t\t\tthis.settings[ExplorerView.MEMENTO_LAST_ACTIVE_FILE_RESOURCE] = fileInput.getResource().toString();\n\n\t\t\t// Select file if input is FileEditorInput\n\t\t\tif (this.isVisible && this.contextService.isInsideWorkspace(fileInput.getResource())) {\n\t\t\t\tlet selection = this.hasSelection(fileInput.getResource());\n\t\t\t\tif (!selection) {\n\t\t\t\t\tthis.select(fileInput.getResource()).done(null, errors.onUnexpectedError);\n\t\t\t\t}\n\n\t\t\t\tclearSelection = false;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise clear\n\t\tif (this.isVisible && clearSelection) {\n\t\t\tthis.explorerViewer.clearSelection();\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(configuration: IFilesConfiguration, refresh?: boolean): void {\n\t\tthis.autoReveal = configuration && configuration.explorer && configuration.explorer.autoReveal;\n\n\t\t// Push down config updates to components of viewer\n\t\tlet needsRefresh = false;\n\t\tif (this.filter) {\n\t\t\tneedsRefresh = this.filter.updateConfiguration(configuration);\n\t\t}\n\n\t\t// Refresh viewer as needed\n\t\tif (refresh && needsRefresh) {\n\t\t\tthis.doRefresh().done(null, errors.onUnexpectedError);\n\t\t}\n\t}\n\n\tpublic focusBody(): void {\n\t\tlet keepFocus = false;\n\n\t\t// Make sure the current selected element is revealed\n\t\tif (this.explorerViewer) {\n\t\t\tif (this.autoReveal) {\n\t\t\t\tlet selection = this.explorerViewer.getSelection();\n\t\t\t\tif (selection.length > 0) {\n\t\t\t\t\tthis.reveal(selection[0], 0.5).done(null, errors.onUnexpectedError);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Pass Focus to Viewer\n\t\t\tthis.explorerViewer.DOMFocus();\n\t\t\tkeepFocus = true;\n\t\t}\n\n\t\t// Open the focused element in the editor if there is currently no file opened\n\t\tlet input = this.editorService.getActiveEditorInput();\n\t\tif (!input || !(input instanceof FileEditorInput)) {\n\t\t\tthis.openFocusedElement(keepFocus);\n\t\t}\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\treturn super.setVisible(visible).then(() => {\n\n\t\t\t// Show\n\t\t\tif (visible) {\n\n\t\t\t\t// If a refresh was requested and we are now visible, run it\n\t\t\t\tlet refreshPromise = TPromise.as(null);\n\t\t\t\tif (this.shouldRefresh) {\n\t\t\t\t\trefreshPromise = this.doRefresh();\n\t\t\t\t\tthis.shouldRefresh = false; // Reset flag\n\t\t\t\t}\n\n\t\t\t\t// Always select the current navigated file in explorer if input is file editor input\n\t\t\t\tlet activeResource = this.getActiveEditorInputResource();\n\t\t\t\tif (activeResource) {\n\t\t\t\t\treturn refreshPromise.then(() => {\n\t\t\t\t\t\treturn this.select(activeResource);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Return now if the workbench has not yet been created - in this case the workbench takes care of restoring last used editors\n\t\t\t\tif (!this.partService.isCreated()) {\n\t\t\t\t\treturn TPromise.as(null);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise restore last used file: By lastActiveFileResource\n\t\t\t\tlet root = this.getInput();\n\t\t\t\tlet lastActiveFileResource: URI;\n\t\t\t\tif (this.settings[ExplorerView.MEMENTO_LAST_ACTIVE_FILE_RESOURCE]) {\n\t\t\t\t\tlastActiveFileResource = URI.parse(this.settings[ExplorerView.MEMENTO_LAST_ACTIVE_FILE_RESOURCE]);\n\t\t\t\t}\n\n\t\t\t\tif (lastActiveFileResource && root && root.find(lastActiveFileResource)) {\n\t\t\t\t\tlet editorInput = this.instantiationService.createInstance(FileEditorInput, lastActiveFileResource, void 0, void 0);\n\t\t\t\t\tthis.openEditor(editorInput).done(null, errors.onUnexpectedError);\n\n\t\t\t\t\treturn refreshPromise;\n\t\t\t\t}\n\n\t\t\t\t// Otherwise restore last used file: By Explorer selection\n\t\t\t\treturn refreshPromise.then(() => {\n\t\t\t\t\tthis.openFocusedElement();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate openFocusedElement(keepFocus?: boolean): void {\n\t\tlet stat: FileStat = this.explorerViewer.getFocus();\n\t\tif (stat && !stat.isDirectory) {\n\t\t\tlet editorInput = this.instantiationService.createInstance(FileEditorInput, stat.resource, stat.mime, void 0);\n\n\t\t\tthis.openEditor(editorInput, keepFocus).done(null, errors.onUnexpectedError);\n\t\t}\n\t}\n\n\tprivate openEditor(input: FileEditorInput, keepFocus?: boolean): TPromise<IEditor> {\n\n\t\t// First try to find if input already visible\n\t\tlet editors = this.editorService.getVisibleEditors();\n\t\tif (editors) {\n\t\t\tfor (let i = 0; i < editors.length; i++) {\n\t\t\t\tlet editor = editors[i];\n\t\t\t\tif (input.matches(editor.input)) {\n\t\t\t\t\tif (!keepFocus) {\n\t\t\t\t\t\treturn this.editorService.focusEditor(editor);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TPromise.as(editor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise open in active slot\n\t\treturn this.editorService.openEditor(input, keepFocus ? EditorOptions.create({ preserveFocus: true }) : void 0);\n\t}\n\n\tprivate getActiveEditorInputResource(): URI {\n\n\t\t// Try with Editor Input\n\t\tlet input = this.editorService.getActiveEditorInput();\n\t\tif (input && input instanceof FileEditorInput) {\n\t\t\treturn (<FileEditorInput>input).getResource();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate getInput(): FileStat {\n\t\treturn this.explorerViewer ? (<FileStat>this.explorerViewer.getInput()) : null;\n\t}\n\n\tpublic createViewer(container: Builder): ITree {\n\t\tlet dataSource = this.instantiationService.createInstance(FileDataSource);\n\t\tlet renderer = this.instantiationService.createInstance(FileRenderer, this.viewletState, this.actionRunner);\n\t\tlet controller = this.instantiationService.createInstance(FileController, this.viewletState);\n\t\tlet sorter = new FileSorter();\n\t\tthis.filter = this.instantiationService.createInstance(FileFilter);\n\t\tlet dnd = this.instantiationService.createInstance(FileDragAndDrop);\n\t\tlet accessibility = this.instantiationService.createInstance(FileAccessibilityProvider);\n\n\t\tthis.explorerViewer = new Tree(container.getHTMLElement(), {\n\t\t\tdataSource: dataSource,\n\t\t\trenderer: renderer,\n\t\t\tcontroller: controller,\n\t\t\tsorter: sorter,\n\t\t\tfilter: this.filter,\n\t\t\tdnd: dnd,\n\t\t\taccessibilityProvider: accessibility\n\t\t}, {\n\t\t\t\tautoExpandSingleChildren: true,\n\t\t\t\tariaLabel: nls.localize('treeAriaLabel', \"Files Explorer\")\n\t\t\t});\n\n\t\tthis.toDispose.push(lifecycle.toDisposable(() => renderer.dispose()));\n\n\t\t// Update Viewer based on File Change Events\n\t\tthis.toDispose.push(this.eventService.addListener2('files.internal:fileChanged', (e: LocalFileChangeEvent) => this.onLocalFileChange(e)));\n\t\tthis.toDispose.push(this.eventService.addListener2(FileEventType.FILE_CHANGES, (e: FileChangesEvent) => this.onFileChanges(e)));\n\n\t\treturn this.explorerViewer;\n\t}\n\n\tpublic getOptimalWidth(): number {\n\t\tlet parentNode = this.explorerViewer.getHTMLElement();\n\t\tlet childNodes = [].slice.call(parentNode.querySelectorAll('.explorer-item-label > a'));\n\t\treturn DOM.getLargestChildWidth(parentNode, childNodes);\n\t}\n\n\tprivate onLocalFileChange(e: LocalFileChangeEvent): void {\n\t\tlet modelElement: FileStat;\n\t\tlet parent: FileStat;\n\t\tlet parentResource: URI;\n\t\tlet parentElement: FileStat;\n\n\t\t// Add\n\t\tif (e.gotAdded()) {\n\t\t\tlet addedElement = e.getAfter();\n\t\t\tparentResource = URI.file(paths.dirname(addedElement.resource.fsPath));\n\t\t\tparentElement = this.getInput().find(parentResource);\n\n\t\t\tif (parentElement) {\n\n\t\t\t\t// Add the new file to its parent (Model)\n\t\t\t\tlet childElement = FileStat.create(addedElement);\n\t\t\t\tparentElement.addChild(childElement);\n\n\t\t\t\tlet refreshPromise = () => {\n\n\t\t\t\t\t// Refresh the Parent (View)\n\t\t\t\t\treturn this.explorerViewer.refresh(parentElement).then(() => {\n\t\t\t\t\t\treturn this.reveal(childElement, 0.5).then(() => {\n\n\t\t\t\t\t\t\t// Focus new element\n\t\t\t\t\t\t\tthis.explorerViewer.setFocus(childElement);\n\n\t\t\t\t\t\t\t// Open new file in editor\n\t\t\t\t\t\t\tif (!childElement.isDirectory) {\n\t\t\t\t\t\t\t\tlet editorInput = this.instantiationService.createInstance(FileEditorInput, childElement.resource, childElement.mime, void 0);\n\t\t\t\t\t\t\t\treturn this.editorService.openEditor(editorInput);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t// For file imports, use a delayer to not refresh too many times when multiple files are imported\n\t\t\t\tif (e instanceof FileImportedEvent) {\n\t\t\t\t\tthis.explorerImportDelayer.trigger(refreshPromise).done(null, errors.onUnexpectedError);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise just refresh immediately\n\t\t\t\telse {\n\t\t\t\t\trefreshPromise().done(null, errors.onUnexpectedError);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Move (including Rename)\n\t\telse if (e.gotMoved()) {\n\t\t\tlet oldElement = e.getBefore();\n\t\t\tlet newElement = e.getAfter();\n\n\t\t\tlet oldParentResource = URI.file(paths.dirname(oldElement.resource.fsPath));\n\t\t\tlet newParentResource = URI.file(paths.dirname(newElement.resource.fsPath));\n\n\t\t\t// Only update focus if renamed/moved element is selected\n\t\t\tlet updateFocus = false;\n\t\t\tlet focus: FileStat = this.explorerViewer.getFocus();\n\t\t\tif (focus && focus.resource && focus.resource.toString() === oldElement.resource.toString()) {\n\t\t\t\tupdateFocus = true;\n\t\t\t}\n\n\t\t\t// Handle Rename\n\t\t\tif (oldParentResource && newParentResource && oldParentResource.toString() === newParentResource.toString()) {\n\t\t\t\tmodelElement = this.getInput().find(oldElement.resource);\n\t\t\t\tif (modelElement) {\n\t\t\t\t\tif (!modelElement.isDirectory && !modelElement.mime) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Rename File (Model)\n\t\t\t\t\tmodelElement.rename(newElement);\n\n\t\t\t\t\t// Update Parent (View)\n\t\t\t\t\tparent = modelElement.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tthis.explorerViewer.refresh(parent).done(() => {\n\n\t\t\t\t\t\t\t// Select in Viewer if set\n\t\t\t\t\t\t\tif (updateFocus) {\n\t\t\t\t\t\t\t\tthis.explorerViewer.setFocus(modelElement);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, errors.onUnexpectedError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle Move\n\t\t\telse if (oldParentResource && newParentResource) {\n\t\t\t\tlet oldParent = this.getInput().find(oldParentResource);\n\t\t\t\tlet newParent = this.getInput().find(newParentResource);\n\t\t\t\tmodelElement = this.getInput().find(oldElement.resource);\n\n\t\t\t\tif (oldParent && newParent && modelElement) {\n\n\t\t\t\t\t// Move in Model\n\t\t\t\t\tmodelElement.move(newParent, (callback: () => void) => {\n\n\t\t\t\t\t\t// Update old parent\n\t\t\t\t\t\tthis.explorerViewer.refresh(oldParent, true).done(callback, errors.onUnexpectedError);\n\t\t\t\t\t}, () => {\n\n\t\t\t\t\t\t// Update new parent\n\t\t\t\t\t\tthis.explorerViewer.refresh(newParent, true).done(() => {\n\t\t\t\t\t\t\treturn this.explorerViewer.expand(newParent);\n\t\t\t\t\t\t}, errors.onUnexpectedError);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Delete\n\t\telse if (e.gotDeleted()) {\n\t\t\tlet deletedElement = e.getBefore();\n\t\t\tmodelElement = this.getInput().find(deletedElement.resource);\n\t\t\tif (modelElement && modelElement.parent) {\n\t\t\t\tparent = modelElement.parent;\n\n\t\t\t\t// Remove Element from Parent (Model)\n\t\t\t\tparent.removeChild(modelElement);\n\n\t\t\t\t// Refresh Parent (View)\n\t\t\t\tthis.explorerViewer.refresh(parent).done(() => {\n\n\t\t\t\t\t// Ensure viewer has keyboard focus if event originates from viewer\n\t\t\t\t\tthis.explorerViewer.DOMFocus();\n\t\t\t\t}, errors.onUnexpectedError);\n\t\t\t}\n\t\t}\n\n\t\t// Imported which replaced an existing file\n\t\telse if (e instanceof FileImportedEvent) {\n\t\t\tlet importedElement: IFileStat = (<FileImportedEvent>e).getAfter();\n\t\t\tparentResource = URI.file(paths.dirname(importedElement.resource.fsPath));\n\t\t\tparentElement = this.getInput().find(parentResource);\n\n\t\t\tif (parentElement) {\n\t\t\t\tthis.explorerViewer.refresh(parentElement).then(() => {\n\t\t\t\t\tlet editorInput = this.instantiationService.createInstance(FileEditorInput, importedElement.resource, importedElement.mime, void 0);\n\t\t\t\t\treturn this.editorService.openEditor(editorInput);\n\t\t\t\t}).done(null, errors.onUnexpectedError);\n\t\t\t}\n\t\t}\n\n\t\t// Refresh if the event indicates that '/' got updated (from a place outside the explorer viewlet)\n\t\telse if (this.workspace && e.gotUpdated() && e.getAfter().resource.toString() === this.workspace.resource.toString() && !this.explorerViewer.getHighlight()) {\n\t\t\tthis.refreshFromEvent();\n\t\t}\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\n\t\t// Ensure memento state does not capture a deleted file\n\t\tlet lastActiveResource: string = this.settings[ExplorerView.MEMENTO_LAST_ACTIVE_FILE_RESOURCE];\n\t\tif (lastActiveResource && e.contains(URI.parse(lastActiveResource), FileChangeType.DELETED)) {\n\t\t\tthis.settings[ExplorerView.MEMENTO_LAST_ACTIVE_FILE_RESOURCE] = null;\n\t\t}\n\n\t\t// Check if an explorer refresh is necessary (delayed to give internal events a chance to react first)\n\t\t// Note: there is no guarantee when the internal events are fired vs real ones. Code has to deal with the fact that one might\n\t\t// be fired first over the other or not at all.\n\t\tTPromise.timeout(ExplorerView.EXPLORER_FILE_CHANGES_REACT_DELAY).then(() => {\n\t\t\tif (!this.shouldRefresh && this.shouldRefreshFromEvent(e)) {\n\t\t\t\tthis.refreshFromEvent();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate shouldRefreshFromEvent(e: FileChangesEvent): boolean {\n\n\t\t// Filter to the ones we care\n\t\te = this.filterToAddRemovedOnWorkspacePath(e, (event, segments) => {\n\t\t\tif (segments[0] !== '.git') {\n\t\t\t\treturn true; // we like all things outside .git\n\t\t\t}\n\n\t\t\treturn segments.length === 1; // we only care about the .git folder itself\n\t\t});\n\n\t\t// We only ever refresh from files/folders that got added or deleted\n\t\tif (e.gotAdded() || e.gotDeleted()) {\n\t\t\tlet added = e.getAdded();\n\t\t\tlet deleted = e.getDeleted();\n\n\t\t\tlet root = this.getInput();\n\t\t\tif (!root) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Check added: Refresh if added file/folder is not part of resolved root and parent is part of it\n\t\t\tlet ignoredPaths: { [fsPath: string]: boolean } = <{ [fsPath: string]: boolean }>{};\n\t\t\tfor (let i = 0; i < added.length; i++) {\n\t\t\t\tlet change = added[i];\n\t\t\t\tif (!this.contextService.isInsideWorkspace(change.resource)) {\n\t\t\t\t\tcontinue; // out of workspace file\n\t\t\t\t}\n\n\t\t\t\t// Find parent\n\t\t\t\tlet parent = paths.dirname(change.resource.fsPath);\n\n\t\t\t\t// Continue if parent was already determined as to be ignored\n\t\t\t\tif (ignoredPaths[parent]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Compute if parent is visible and added file not yet part of it\n\t\t\t\tlet parentStat = root.find(URI.file(parent));\n\t\t\t\tif (parentStat && parentStat.isDirectoryResolved && !root.find(change.resource)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Keep track of path that can be ignored for faster lookup\n\t\t\t\tif (!parentStat || !parentStat.isDirectoryResolved) {\n\t\t\t\t\tignoredPaths[parent] = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check deleted: Refresh if deleted file/folder part of resolved root\n\t\t\tfor (let j = 0; j < deleted.length; j++) {\n\t\t\t\tlet del = deleted[j];\n\t\t\t\tif (!this.contextService.isInsideWorkspace(del.resource)) {\n\t\t\t\t\tcontinue; // out of workspace file\n\t\t\t\t}\n\n\t\t\t\tif (root.find(del.resource)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate filterToAddRemovedOnWorkspacePath(e: FileChangesEvent, fn: (change: IFileChange, workspacePathSegments: string[]) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(e.changes.filter((change) => {\n\t\t\tif (change.type === FileChangeType.UPDATED) {\n\t\t\t\treturn false; // we only want added / removed\n\t\t\t}\n\n\t\t\tlet workspacePath = this.contextService.toWorkspaceRelativePath(change.resource);\n\t\t\tif (!workspacePath) {\n\t\t\t\treturn false; // not inside workspace\n\t\t\t}\n\n\t\t\tlet segments = workspacePath.split(/\\//);\n\n\t\t\treturn fn(change, segments);\n\t\t}));\n\t}\n\n\tprivate refreshFromEvent(): void {\n\t\tif (this.isVisible) {\n\t\t\tthis.explorerRefreshDelayer.trigger(() => {\n\t\t\t\tif (!this.explorerViewer.getHighlight()) {\n\t\t\t\t\treturn this.doRefresh();\n\t\t\t\t}\n\n\t\t\t\treturn TPromise.as(null);\n\t\t\t}).done(null, errors.onUnexpectedError);\n\t\t} else {\n\t\t\tthis.shouldRefresh = true;\n\t\t}\n\t}\n\n\t/**\n\t * Refresh the contents of the explorer to get up to date data from the disk about the file structure.\n\t */\n\tpublic refresh(): TPromise<void> {\n\t\tif (!this.explorerViewer || this.explorerViewer.getHighlight()) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\t// Focus\n\t\tthis.explorerViewer.DOMFocus();\n\n\t\t// Find resource to focus from active editor input if set\n\t\tlet resourceToFocus: URI;\n\t\tif (this.autoReveal) {\n\t\t\tresourceToFocus = this.getActiveEditorInputResource();\n\t\t\tif (!resourceToFocus) {\n\t\t\t\tlet selection = this.explorerViewer.getSelection();\n\t\t\t\tif (selection && selection.length === 1) {\n\t\t\t\t\tresourceToFocus = (<FileStat>selection[0]).resource;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.doRefresh().then(() => {\n\t\t\tif (resourceToFocus) {\n\t\t\t\treturn this.select(resourceToFocus, true);\n\t\t\t}\n\n\t\t\treturn TPromise.as(null);\n\t\t});\n\t}\n\n\tprivate doRefresh(): TPromise<void> {\n\t\tlet root = this.getInput();\n\t\tlet targetsToResolve: URI[] = [];\n\t\tlet targetsToExpand: URI[] = [];\n\n\t\tif (this.settings[ExplorerView.MEMENTO_EXPANDED_FOLDER_RESOURCES]) {\n\t\t\ttargetsToExpand = this.settings[ExplorerView.MEMENTO_EXPANDED_FOLDER_RESOURCES].map(e => URI.parse(e));\n\t\t}\n\n\t\t// First time refresh: Receive target through active editor input or selection and also include settings from previous session\n\t\tif (!root) {\n\t\t\tlet activeResource = this.getActiveEditorInputResource();\n\t\t\tif (activeResource) {\n\t\t\t\ttargetsToResolve.push(activeResource);\n\t\t\t}\n\n\t\t\tif (targetsToExpand.length) {\n\t\t\t\ttargetsToResolve.push(...targetsToExpand);\n\t\t\t}\n\t\t}\n\n\t\t// Subsequent refresh: Receive targets through expanded folders in tree\n\t\telse {\n\t\t\tthis.getResolvedDirectories(root, targetsToResolve);\n\t\t}\n\n\t\t// Load Root Stat with given target path configured\n\t\tlet options: IResolveFileOptions = { resolveTo: targetsToResolve };\n\t\tlet promise = this.fileService.resolveFile(this.workspace.resource, options).then((stat: IFileStat) => {\n\t\t\tlet explorerPromise: TPromise<void>;\n\n\t\t\t// Convert to model\n\t\t\tlet modelStat = FileStat.create(stat, options.resolveTo);\n\n\t\t\t// First time refresh: The stat becomes the input of the viewer\n\t\t\tif (!root) {\n\t\t\t\texplorerPromise = this.explorerViewer.setInput(modelStat).then(() => {\n\n\t\t\t\t\t// Make sure to expand all folders that where expanded in the previous session\n\t\t\t\t\tif (targetsToExpand) {\n\t\t\t\t\t\treturn this.explorerViewer.expandAll(targetsToExpand.map(expand => this.getInput().find(expand)));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TPromise.as(null);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Subsequent refresh: Merge stat into our local model and refresh tree\n\t\t\telse {\n\t\t\t\tFileStat.mergeLocalWithDisk(modelStat, root);\n\n\t\t\t\texplorerPromise = this.explorerViewer.refresh(root);\n\t\t\t}\n\n\t\t\treturn explorerPromise;\n\t\t}, (e: any) => TPromise.wrapError(e));\n\n\t\tthis.progressService.showWhile(promise, this.partService.isCreated() ? 800 : 3200 /* less ugly initial startup */);\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Given a stat, fills an array of path that make all folders below the stat that are resolved directories.\n\t */\n\tprivate getResolvedDirectories(stat: FileStat, resolvedDirectories: URI[]): void {\n\t\tif (stat.isDirectoryResolved) {\n\t\t\tif (stat.resource.toString() !== this.workspace.resource.toString()) {\n\n\t\t\t\t// Drop those path which are parents of the current one\n\t\t\t\tfor (let i = resolvedDirectories.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet resource = resolvedDirectories[i];\n\t\t\t\t\tif (stat.resource.toString().indexOf(resource.toString()) === 0) {\n\t\t\t\t\t\tresolvedDirectories.splice(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add to the list of path to resolve\n\t\t\t\tresolvedDirectories.push(stat.resource);\n\t\t\t}\n\n\t\t\t// Recurse into children\n\t\t\tfor (let i = 0; i < stat.children.length; i++) {\n\t\t\t\tlet child = stat.children[i];\n\t\t\t\tthis.getResolvedDirectories(child, resolvedDirectories);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects and reveal the file element provided by the given resource if its found in the explorer. Will try to\n\t * resolve the path from the disk in case the explorer is not yet expanded to the file yet.\n\t */\n\tpublic select(resource: URI, reveal: boolean = this.autoReveal): TPromise<void> {\n\n\t\t// Require valid path\n\t\tif (!resource || resource.toString() === this.workspace.resource.toString()) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\t// If path already selected, just reveal and return\n\t\tlet selection = this.hasSelection(resource);\n\t\tif (selection) {\n\t\t\treturn reveal ? this.reveal(selection, 0.5) : TPromise.as(null);\n\t\t}\n\n\t\t// First try to get the stat object from the input to avoid a roundtrip\n\t\tlet root = this.getInput();\n\t\tif (!root) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\tlet fileStat = root.find(resource);\n\t\tif (fileStat) {\n\t\t\treturn this.doSelect(fileStat, reveal);\n\t\t}\n\n\t\t// Stat needs to be resolved first and then revealed\n\t\tlet options: IResolveFileOptions = { resolveTo: [resource] };\n\t\treturn this.fileService.resolveFile(this.workspace.resource, options).then((stat: IFileStat) => {\n\n\t\t\t// Convert to model\n\t\t\tlet modelStat = FileStat.create(stat, options.resolveTo);\n\n\t\t\t// Update Input with disk Stat\n\t\t\tFileStat.mergeLocalWithDisk(modelStat, root);\n\n\t\t\t// Select and Reveal\n\t\t\treturn this.explorerViewer.refresh(root).then(() => {\n\t\t\t\treturn this.doSelect(root.find(resource), reveal);\n\t\t\t});\n\t\t}, (e: any) => this.messageService.show(Severity.Error, e));\n\t}\n\n\tprivate hasSelection(resource: URI): FileStat {\n\t\tlet currentSelection: FileStat[] = this.explorerViewer.getSelection();\n\t\tfor (let i = 0; i < currentSelection.length; i++) {\n\t\t\tif (currentSelection[i].resource.toString() === resource.toString()) {\n\t\t\t\treturn currentSelection[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doSelect(fileStat: FileStat, reveal: boolean): TPromise<void> {\n\t\tif (!fileStat) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\t// Special case: we are asked to reveal and select an element that is not visible\n\t\t// In this case we take the parent element so that we are at least close to it.\n\t\tif (!this.filter.isVisible(this.tree, fileStat)) {\n\t\t\tfileStat = fileStat.parent;\n\t\t\tif (!fileStat) {\n\t\t\t\treturn TPromise.as(null);\n\t\t\t}\n\t\t}\n\n\t\t// Reveal depending on flag\n\t\tlet revealPromise: TPromise<void>;\n\t\tif (reveal) {\n\t\t\trevealPromise = this.reveal(fileStat, 0.5);\n\t\t} else {\n\t\t\trevealPromise = TPromise.as(null);\n\t\t}\n\n\t\treturn revealPromise.then(() => {\n\t\t\tif (!fileStat.isDirectory) {\n\t\t\t\tthis.explorerViewer.setSelection([fileStat]); // Since folders can not be opened, only select files\n\t\t\t}\n\n\t\t\tthis.explorerViewer.setFocus(fileStat);\n\t\t});\n\t}\n\n\tpublic shutdown(): void {\n\n\t\t// Keep list of expanded folders to restore on next load\n\t\tlet root = this.getInput();\n\t\tif (root) {\n\t\t\tlet expanded = this.explorerViewer.getExpandedElements()\n\t\t\t\t.filter((e: FileStat) => e.resource.toString() !== this.workspace.resource.toString())\n\t\t\t\t.map((e: FileStat) => e.resource.toString());\n\n\t\t\tthis.settings[ExplorerView.MEMENTO_EXPANDED_FOLDER_RESOURCES] = expanded;\n\t\t}\n\n\t\tsuper.shutdown();\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.toolBar) {\n\t\t\tthis.toolBar.dispose();\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}"]}