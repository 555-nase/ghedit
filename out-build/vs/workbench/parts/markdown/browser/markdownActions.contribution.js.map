{"version":3,"sources":["vs/workbench/parts/markdown/browser/markdownActions.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/markdown/browser/markdownActions.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport {Registry} from 'vs/platform/platform';\nimport {IAction} from 'vs/base/common/actions';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {Scope, IActionBarRegistry, Extensions as ActionBarExtensions, ActionBarContributor} from 'vs/workbench/browser/actionBarRegistry';\nimport {asFileResource, FileEditorInput} from 'vs/workbench/parts/files/common/files';\nimport mime = require('vs/base/common/mime');\nimport {IEditorInputActionContext, IEditorInputAction, EditorInputActionContributor} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {OpenPreviewToSideAction, GlobalTogglePreviewMarkdownAction, PreviewMarkdownEditorInputAction, PreviewMarkdownAction} from 'vs/workbench/parts/markdown/browser/markdownActions';\nimport {MARKDOWN_MIME} from 'vs/workbench/parts/markdown/common/markdown';\nimport {IWorkbenchActionRegistry, Extensions as ActionExtensions} from 'vs/workbench/common/actionRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\n\nclass ExplorerViewerActionContributor extends ActionBarContributor {\n\n\tconstructor(@IInstantiationService private instantiationService: IInstantiationService) {\n\t\tsuper();\n\t}\n\n\tpublic hasSecondaryActions(context: any): boolean {\n\t\tlet element = context.element;\n\n\t\t// Contribute only on file resources\n\t\tlet fileResource = asFileResource(element);\n\t\tif (!fileResource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !fileResource.isDirectory && mime.guessMimeTypes(fileResource.resource.fsPath).indexOf(MARKDOWN_MIME) >= 0;\n\t}\n\n\tpublic getSecondaryActions(context: any): IAction[] {\n\t\tlet actions: IAction[] = [];\n\n\t\tif (this.hasSecondaryActions(context)) {\n\t\t\tlet fileResource = asFileResource(context.element);\n\n\t\t\t// Open Markdown\n\t\t\tlet action = this.instantiationService.createInstance(PreviewMarkdownAction, fileResource.resource);\n\t\t\taction.order = 0; // on top of other actions\n\t\t\tactions.push(action);\n\t\t}\n\n\t\treturn actions;\n\t}\n}\n\nclass MarkdownFilesActionContributor extends EditorInputActionContributor {\n\n\tconstructor(@IInstantiationService private instantiationService: IInstantiationService) {\n\t\tsuper();\n\t}\n\n\t/* We override toId() to make the caching of actions based on the mime of the input if given */\n\tprotected toId(context: IEditorInputActionContext): string {\n\t\tlet id = super.toId(context);\n\n\t\tlet mime = this.getMimeFromContext(context);\n\t\tif (mime) {\n\t\t\tid += mime;\n\t\t}\n\n\t\treturn id;\n\t}\n\n\tprivate getMimeFromContext(context: IEditorInputActionContext): string {\n\t\tif (context && context.input && context.input instanceof FileEditorInput) {\n\t\t\tlet fileInput = <FileEditorInput>context.input;\n\t\t\treturn fileInput.getMime();\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic hasActionsForEditorInput(context: IEditorInputActionContext): boolean {\n\t\tconst input = context.input;\n\t\tif (input instanceof FileEditorInput) {\n\t\t\tconst fileResource = input.getResource();\n\n\t\t\treturn mime.guessMimeTypes(fileResource.fsPath).indexOf(MARKDOWN_MIME) >= 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getActionsForEditorInput(context: IEditorInputActionContext): IEditorInputAction[] {\n\t\tif (this.hasActionsForEditorInput(context)) {\n\t\t\treturn [\n\t\t\t\tthis.instantiationService.createInstance(PreviewMarkdownEditorInputAction)\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n}\n\n// Contribute to viewers and editors of markdown files\nlet actionBarRegistry = <IActionBarRegistry>Registry.as(ActionBarExtensions.Actionbar);\nactionBarRegistry.registerActionBarContributor(Scope.VIEWER, ExplorerViewerActionContributor);\nactionBarRegistry.registerActionBarContributor(Scope.EDITOR, MarkdownFilesActionContributor);\n\nlet category = nls.localize('markdown', \"Markdown\");\n\nlet workbenchActionsRegistry = <IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions);\nworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(GlobalTogglePreviewMarkdownAction, GlobalTogglePreviewMarkdownAction.ID, GlobalTogglePreviewMarkdownAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_V }), category);\nworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(OpenPreviewToSideAction, OpenPreviewToSideAction.ID, OpenPreviewToSideAction.LABEL, { primary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyCode.KEY_V) }), category);"]}