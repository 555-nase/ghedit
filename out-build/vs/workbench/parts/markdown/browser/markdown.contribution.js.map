{"version":3,"file":"vs/workbench/parts/markdown/browser/markdown.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/markdown/browser/markdown.contribution.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAWb,gCAAgC;IAChC;QAEC;QAAe,CAAC;QAET,wCAAS,GAAhB,UAAiB,WAAwB;YACxC,IAAI,aAAa,GAAwB,WAAW,CAAC;YAErD,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;QAC/C,CAAC;QAEM,0CAAW,GAAlB,UAAmB,oBAA2C,EAAE,WAAmB;YAClF,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,yCAAmB,EAAE,aAAG,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QACzG,CAAC;QACF,2BAAC;IAAD,CAAC,AAbD,IAaC;IAEiB,mBAAQ,CAAC,EAAE,CAAC,uBAAgB,CAAC,OAAO,CAAE,CAAC,0BAA0B,CAAC,yCAAmB,CAAC,EAAE,EAAE,oBAAoB,CAAC,CAAC;IAElI,iCAAiC;IACC,mBAAQ,CAAC,EAAE,CAAC,0BAAmB,CAAC,SAAS,CAAE,CAAC,6BAA6B,CAC1G,uCAAmB,CACnB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Registry} from 'vs/platform/platform';\nimport URI from 'vs/base/common/uri';\nimport {IEditorRegistry, Extensions as EditorExtensions, IEditorInputFactory} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {EditorInput} from 'vs/workbench/common/editor';\nimport {MarkdownEditorInput} from 'vs/workbench/parts/markdown/common/markdownEditorInput';\nimport {MarkdownFileTracker} from 'vs/workbench/parts/markdown/browser/markdownExtension';\nimport {IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions} from 'vs/workbench/common/contributions';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\n\n// Register Editor Input Factory\nclass MarkdownInputFactory implements IEditorInputFactory {\n\n\tconstructor() {}\n\n\tpublic serialize(editorInput: EditorInput): string {\n\t\tlet markdownInput = <MarkdownEditorInput>editorInput;\n\n\t\treturn markdownInput.getResource().toString();\n\t}\n\n\tpublic deserialize(instantiationService: IInstantiationService, resourceRaw: string): EditorInput {\n\t\treturn instantiationService.createInstance(MarkdownEditorInput, URI.parse(resourceRaw), void 0, void 0);\n\t}\n}\n\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditorInputFactory(MarkdownEditorInput.ID, MarkdownInputFactory);\n\n// Register Markdown File Tracker\n(<IWorkbenchContributionsRegistry>Registry.as(WorkbenchExtensions.Workbench)).registerWorkbenchContribution(\n\tMarkdownFileTracker\n);"]}