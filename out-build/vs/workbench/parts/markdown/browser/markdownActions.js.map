{"version":3,"sources":["vs/workbench/parts/markdown/browser/markdownActions.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/markdown/browser/markdownActions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/markdownactions';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Action} from 'vs/base/common/actions';\nimport URI from 'vs/base/common/uri';\nimport errors = require('vs/base/common/errors');\nimport nls = require('vs/nls');\nimport {FileEditorInput} from 'vs/workbench/parts/files/common/files';\nimport {EditorInputAction} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {getUntitledOrFileResource} from 'vs/workbench/common/editor';\nimport {MarkdownEditorInput} from 'vs/workbench/parts/markdown/common/markdownEditorInput';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\n\nexport class GlobalTogglePreviewMarkdownAction extends Action {\n\n\tpublic static ID = 'workbench.action.markdown.togglePreview';\n\tpublic static LABEL = nls.localize('toggleMarkdownPreview', \"Toggle Preview\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IMessageService private messageService: IMessageService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet activeInput = this.editorService.getActiveEditorInput();\n\n\t\t// View source if we are in a markdown file already\n\t\tif (activeInput instanceof MarkdownEditorInput) {\n\t\t\tthis.editorService.openEditor({\n\t\t\t\tresource: activeInput.getResource()\n\t\t\t}).done(null, errors.onUnexpectedError);\n\t\t}\n\n\t\t// Otherwise try to open as markdown preview\n\t\telse {\n\t\t\tlet msg: string;\n\n\t\t\tlet resource = getUntitledOrFileResource(activeInput);\n\t\t\tif (resource) {\n\t\t\t\tlet action = this.instantiationService.createInstance(PreviewMarkdownAction, resource);\n\t\t\t\taction.run().done(() => action.dispose(), errors.onUnexpectedError);\n\t\t\t} else {\n\t\t\t\tmsg = nls.localize('markdownPreviewNoFile', \"Open a Markdown file first to show a preview.\");\n\t\t\t}\n\n\t\t\tif (msg) {\n\t\t\t\tthis.messageService.show(Severity.Info, msg);\n\t\t\t}\n\t\t}\n\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class OpenPreviewToSideAction extends Action {\n\n\tpublic static ID = 'workbench.action.markdown.openPreviewSideBySide';\n\tpublic static LABEL = nls.localize('openPreviewSideBySide', \"Open Preview to the Side\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IMessageService private messageService: IMessageService\n\t) {\n\t\tsuper(id, label);\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet activeInput = this.editorService.getActiveEditorInput();\n\n\t\t// Do nothing if already in markdown preview\n\t\tif (activeInput instanceof MarkdownEditorInput) {\n\t\t\treturn TPromise.as(true);\n\t\t}\n\n\t\t// Otherwise try to open as markdown preview to the side\n\t\telse {\n\t\t\tlet msg: string;\n\n\t\t\tlet resource = getUntitledOrFileResource(activeInput);\n\t\t\tif (resource) {\n\t\t\t\tlet input = this.instantiationService.createInstance(MarkdownEditorInput, resource, void 0, void 0);\n\n\t\t\t\treturn this.editorService.openEditor(input, null, true /* to the side */);\n\t\t\t} else {\n\t\t\t\tmsg = nls.localize('markdownPreviewNoFile', \"Open a Markdown file first to show a preview.\");\n\t\t\t}\n\n\t\t\tif (msg) {\n\t\t\t\tthis.messageService.show(Severity.Info, msg);\n\t\t\t}\n\t\t}\n\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class PreviewMarkdownAction extends Action {\n\tprivate markdownResource: URI;\n\n\tconstructor(\n\t\tmarkdownResource: URI,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper('workbench.markdown.action.previewFromExplorer', nls.localize('openPreview', \"Open Preview\"));\n\n\t\tthis.markdownResource = markdownResource;\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet input = this.instantiationService.createInstance(MarkdownEditorInput, this.markdownResource, void 0, void 0);\n\n\t\treturn this.editorService.openEditor(input);\n\t}\n}\n\nexport class PreviewMarkdownEditorInputAction extends EditorInputAction {\n\n\tconstructor(\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper('workbench.markdown.action.previewFromEditor', nls.localize('openPreview', \"Open Preview\"));\n\n\t\tthis.class = 'markdown-action action-preview';\n\t\tthis.order = 100; // far end\n\t}\n\n\tpublic run(event?: any): TPromise<any> {\n\t\tlet input = <FileEditorInput>this.input;\n\n\t\tlet sideBySide = !!(event && (event.ctrlKey || event.metaKey));\n\t\tlet markdownInput = this.instantiationService.createInstance(MarkdownEditorInput, input.getResource(), void 0, void 0);\n\n\t\treturn this.editorService.openEditor(markdownInput, null, sideBySide);\n\t}\n}"]}