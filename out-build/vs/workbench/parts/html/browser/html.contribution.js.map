{"version":3,"sources":["vs/workbench/parts/html/browser/html.contribution.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAcb,sBAAsB;IACJ,mBAAQ,CAAC,EAAE,CAAC,uBAAgB,CAAC,OAAO,CAAE,CAAC,cAAc,CAAC,IAAI,6BAAgB,CAAC,iCAAe,CAAC,EAAE,EAC9G,cAAQ,CAAC,CAAmB,EAAE,IAAc,CAAC,EAC7C,iDAAiD,EACjD,iBAAiB,CAAC,EAClB,CAAC,IAAI,4BAAc,CAAC,qBAAS,CAAC,CAAC,CAAC,CAAC;IAElC,wBAAwB;IAExB,yCAAmB,CAAC,mBAAmB,CAAC;QACvC,EAAE,EAAE,wBAAwB;QAC5B,MAAM,EAAE,yCAAmB,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtD,OAAO,YAAC,QAA0B,EAAE,IAAkC;YAEhE,sBAAQ,EAAE,kBAAQ,CAAS;YAChC,IAAI,GAAG,GAAG,QAAQ,YAAY,aAAG,GAAG,QAAQ,GAAG,aAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACnE,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,qCAAqB,CAAC,CAAC,cAAc,CAAC,qBAAS,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;YAEtG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,uCAAuB,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC;iBAC5E,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,IAAI,EAAJ,CAAI,CAAC,CAAC;QACxB,CAAC;QACD,OAAO,EAAE,SAAS;QAClB,OAAO,EAAE,SAAS;KAClB,CAAC,CAAC","file":"vs/workbench/parts/html/browser/html.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {localize} from 'vs/nls';\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {IInstantiationService, ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport URI from 'vs/base/common/uri';\nimport {Position as EditorPosition} from 'vs/platform/editor/common/editor';\nimport {HtmlInput} from '../common/htmlInput';\nimport {HtmlPreviewPart} from 'vs/workbench/parts/html/browser/htmlPreviewPart';\nimport {Registry} from 'vs/platform/platform';\nimport {EditorDescriptor, IEditorRegistry, Extensions as EditorExtensions} from 'vs/workbench/browser/parts/editor/baseEditor';\nimport {SyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\n\n// --- Register Editor\n(<IEditorRegistry>Registry.as(EditorExtensions.Editors)).registerEditor(new EditorDescriptor(HtmlPreviewPart.ID,\n\tlocalize('html.editor.label', \"Html Preview\"),\n\t'vs/workbench/parts/html/browser/htmlPreviewPart',\n\t'HtmlPreviewPart'),\n\t[new SyncDescriptor(HtmlInput)]);\n\n// --- Register Commands\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: '_workbench.previewHtml',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(0),\n\thandler(accessor: ServicesAccessor, args: [URI|string, EditorPosition]) {\n\n\t\tlet [resource, position] = args;\n\t\tlet uri = resource instanceof URI ? resource : URI.parse(resource);\n\t\tlet input = accessor.get(IInstantiationService).createInstance(HtmlInput, uri.fsPath, undefined, uri);\n\n\t\treturn accessor.get(IWorkbenchEditorService).openEditor(input, null, position)\n\t\t\t.then(editor => true);\n\t},\n\tcontext: undefined,\n\tprimary: undefined\n});\n"]}