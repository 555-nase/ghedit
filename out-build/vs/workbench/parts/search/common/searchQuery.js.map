{"version":3,"file":"vs/workbench/parts/search/common/searchQuery.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/search/common/searchQuery.ts"],"names":[],"mappings":";;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb,qBAA4B,aAA0C;QACrE,IAAI,YAAY,GAAG,aAAa,IAAI,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;QACvF,IAAI,cAAc,GAAG,aAAa,IAAI,aAAa,CAAC,MAAM,IAAI,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC;QAE3F,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,YAAY,IAAI,cAAc,CAAC;QACvC,CAAC;QAED,IAAI,WAAW,GAAqB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxD,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QACvD,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC,CAAC;QAE/D,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC;IAjBe,mBAAW,cAiB1B,CAAA;IAED;QAEC,sBAA4C,oBAA2C;YAA3C,yBAAoB,GAApB,oBAAoB,CAAuB;QACvF,CAAC;QAEM,2BAAI,GAAX,UAAY,cAAmC,EAAE,OAA8B;YAC9E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;QACnE,CAAC;QAEM,2BAAI,GAAX,UAAY,OAA8B;YACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACzD,CAAC;QAEO,4BAAK,GAAb,UAAc,IAAsB,EAAE,cAAmC,EAAE,OAAkC;YAAlC,uBAAkC,GAAlC,YAAkC;YAC5G,IAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAA+B,CAAC;YAEhG,IAAI,cAAc,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC7B,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;YACzC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,EAAE,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACjF,CAAC;YAED,MAAM,CAAC;gBACN,IAAI,EAAE,IAAI;gBACV,eAAe,EAAE,OAAO,CAAC,eAAe;gBACxC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;gBAC9C,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,cAAc,EAAE,OAAO,CAAC,cAAc;gBACtC,cAAc,EAAE,OAAO,CAAC,cAAc;gBACtC,UAAU,EAAE,OAAO,CAAC,UAAU;gBAC9B,YAAY,EAAE,OAAO,CAAC,YAAY;gBAClC,cAAc,EAAE,cAAc;aAC9B,CAAC;QACH,CAAC;QAhCY;uBAAC,qCAAqB;wBAAA;QAiCpC,mBAAC;IAAD,CAAC,AAnCD,IAmCC;IAnCY,oBAAY,eAmCxB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport glob = require('vs/base/common/glob');\nimport objects = require('vs/base/common/objects');\nimport search = require('vs/platform/search/common/search');\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\n\nexport function getExcludes(configuration: search.ISearchConfiguration): glob.IExpression {\n\tlet fileExcludes = configuration && configuration.files && configuration.files.exclude;\n\tlet searchExcludes = configuration && configuration.search && configuration.search.exclude;\n\n\tif (!fileExcludes && !searchExcludes) {\n\t\treturn null;\n\t}\n\n\tif (!fileExcludes || !searchExcludes) {\n\t\treturn fileExcludes || searchExcludes;\n\t}\n\n\tlet allExcludes: glob.IExpression = Object.create(null);\n\tallExcludes = objects.mixin(allExcludes, fileExcludes);\n\tallExcludes = objects.mixin(allExcludes, searchExcludes, true);\n\n\treturn allExcludes;\n}\n\nexport class QueryBuilder {\n\n\tconstructor( @IConfigurationService private configurationService: IConfigurationService) {\n\t}\n\n\tpublic text(contentPattern: search.IPatternInfo, options?: search.IQueryOptions): search.ISearchQuery {\n\t\treturn this.query(search.QueryType.Text, contentPattern, options);\n\t}\n\n\tpublic file(options?: search.IQueryOptions): search.ISearchQuery {\n\t\treturn this.query(search.QueryType.File, null, options);\n\t}\n\n\tprivate query(type: search.QueryType, contentPattern: search.IPatternInfo, options: search.IQueryOptions = {}): search.ISearchQuery {\n\t\tconst configuration = this.configurationService.getConfiguration<search.ISearchConfiguration>();\n\n\t\tlet excludePattern = getExcludes(configuration);\n\t\tif (!options.excludePattern) {\n\t\t\toptions.excludePattern = excludePattern;\n\t\t} else {\n\t\t\tobjects.mixin(options.excludePattern, excludePattern, false /* no overwrite */);\n\t\t}\n\n\t\treturn {\n\t\t\ttype: type,\n\t\t\tfolderResources: options.folderResources,\n\t\t\textraFileResources: options.extraFileResources,\n\t\t\tfilePattern: options.filePattern,\n\t\t\texcludePattern: options.excludePattern,\n\t\t\tincludePattern: options.includePattern,\n\t\t\tmaxResults: options.maxResults,\n\t\t\tfileEncoding: options.fileEncoding,\n\t\t\tcontentPattern: contentPattern\n\t\t};\n\t}\n}"]}