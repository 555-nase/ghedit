{"version":3,"sources":["vs/workbench/parts/search/browser/openAnythingHandler.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/search/browser/openAnythingHandler.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport {ThrottledDelayer} from 'vs/base/common/async';\nimport types = require('vs/base/common/types');\nimport {isWindows} from 'vs/base/common/platform';\nimport scorer = require('vs/base/common/scorer');\nimport paths = require('vs/base/common/paths');\nimport labels = require('vs/base/common/labels');\nimport strings = require('vs/base/common/strings');\nimport {IRange} from 'vs/editor/common/editorCommon';\nimport {IAutoFocus} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenEntry, QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {QuickOpenHandler} from 'vs/workbench/browser/quickopen';\nimport {FileEntry, OpenFileHandler} from 'vs/workbench/parts/search/browser/openFileHandler';\n/* tslint:disable:no-unused-variable */\nimport * as openSymbolHandler from 'vs/workbench/parts/search/browser/openSymbolHandler';\n/* tslint:enable:no-unused-variable */\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\n\ninterface ISearchWithRange {\n\tsearch: string;\n\trange: IRange;\n}\n\n// OpenSymbolHandler is used from an extension and must be in the main bundle file so it can load\nexport import OpenSymbolHandler = openSymbolHandler.OpenSymbolHandler;\n\nexport class OpenAnythingHandler extends QuickOpenHandler {\n\tprivate static LINE_COLON_PATTERN = /[#|:|\\(](\\d*)([#|:|,](\\d*))?\\)?$/;\n\n\tprivate static SYMBOL_SEARCH_INITIAL_TIMEOUT = 500; // Ignore symbol search after a timeout to not block search results\n\tprivate static SYMBOL_SEARCH_SUBSEQUENT_TIMEOUT = 100;\n\tprivate static SEARCH_DELAY = 300; // This delay accommodates for the user typing a word and then stops typing to start searching\n\n\tprivate static MAX_DISPLAYED_RESULTS = 512;\n\n\tprivate openSymbolHandler: OpenSymbolHandler;\n\tprivate openFileHandler: OpenFileHandler;\n\tprivate resultsToSearchCache: { [searchValue: string]: QuickOpenEntry[]; };\n\tprivate delayer: ThrottledDelayer<QuickOpenModel>;\n\tprivate pendingSearch: TPromise<QuickOpenModel>;\n\tprivate isClosed: boolean;\n\tprivate scorerCache: { [key: string]: number };\n\n\tconstructor(\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\t// Instantiate delegate handlers\n\t\tthis.openSymbolHandler = instantiationService.createInstance(OpenSymbolHandler);\n\t\tthis.openFileHandler = instantiationService.createInstance(OpenFileHandler);\n\n\t\tthis.openSymbolHandler.setStandalone(false);\n\n\t\tthis.resultsToSearchCache = Object.create(null);\n\t\tthis.scorerCache = Object.create(null);\n\t\tthis.delayer = new ThrottledDelayer<QuickOpenModel>(OpenAnythingHandler.SEARCH_DELAY);\n\t}\n\n\tpublic getResults(searchValue: string): TPromise<QuickOpenModel> {\n\t\tsearchValue = searchValue.trim();\n\n\t\t// Help Windows users to search for paths when using slash\n\t\tif (isWindows) {\n\t\t\tsearchValue = searchValue.replace(/\\//g, '\\\\');\n\t\t}\n\n\t\t// Cancel any pending search\n\t\tthis.cancelPendingSearch();\n\n\t\t// Treat this call as the handler being in use\n\t\tthis.isClosed = false;\n\n\t\t// Respond directly to empty search\n\t\tif (!searchValue) {\n\t\t\treturn TPromise.as(new QuickOpenModel());\n\t\t}\n\n\t\t// Find a suitable range from the pattern looking for \":\" and \"#\"\n\t\tlet searchWithRange = this.extractRange(searchValue);\n\t\tif (searchWithRange) {\n\t\t\tsearchValue = searchWithRange.search; // ignore range portion in query\n\t\t}\n\n\t\t// Check Cache first\n\t\tlet cachedResults = this.getResultsFromCache(searchValue, searchWithRange ? searchWithRange.range : null);\n\t\tif (cachedResults) {\n\t\t\treturn TPromise.as(new QuickOpenModel(cachedResults));\n\t\t}\n\n\t\t// The throttler needs a factory for its promises\n\t\tlet promiseFactory = () => {\n\t\t\tlet receivedFileResults = false;\n\n\t\t\t// Symbol Results (unless a range is specified)\n\t\t\tlet resultPromises: TPromise<QuickOpenModel>[] = [];\n\t\t\tif (!searchWithRange) {\n\t\t\t\tlet symbolSearchTimeoutPromiseFn: (timeout: number) => TPromise<QuickOpenModel> = (timeout) => {\n\t\t\t\t\treturn TPromise.timeout(timeout).then(() => {\n\n\t\t\t\t\t\t// As long as the file search query did not return, push out the symbol timeout\n\t\t\t\t\t\t// so that the symbol search has a chance to return results at least as long as\n\t\t\t\t\t\t// the file search did not return.\n\t\t\t\t\t\tif (!receivedFileResults) {\n\t\t\t\t\t\t\treturn symbolSearchTimeoutPromiseFn(OpenAnythingHandler.SYMBOL_SEARCH_SUBSEQUENT_TIMEOUT);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Empty result since timeout was reached and file results are in\n\t\t\t\t\t\treturn TPromise.as(new QuickOpenModel());\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tlet lookupPromise = this.openSymbolHandler.getResults(searchValue);\n\t\t\t\tlet timeoutPromise = symbolSearchTimeoutPromiseFn(OpenAnythingHandler.SYMBOL_SEARCH_INITIAL_TIMEOUT);\n\n\t\t\t\t// Timeout lookup after N seconds to not block file search results\n\t\t\t\tresultPromises.push(TPromise.any([lookupPromise, timeoutPromise]).then((result) => {\n\t\t\t\t\treturn result.value;\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresultPromises.push(TPromise.as(new QuickOpenModel())); // We need this empty promise because we are using the throttler below!\n\t\t\t}\n\n\t\t\t// File Results\n\t\t\tresultPromises.push(this.openFileHandler.getResults(searchValue).then((results: QuickOpenModel) => {\n\t\t\t\treceivedFileResults = true;\n\n\t\t\t\treturn results;\n\t\t\t}));\n\n\t\t\t// Join and sort unified\n\t\t\tthis.pendingSearch = TPromise.join(resultPromises).then((results: QuickOpenModel[]) => {\n\t\t\t\tthis.pendingSearch = null;\n\n\t\t\t\t// If the quick open widget has been closed meanwhile, ignore the result\n\t\t\t\tif (this.isClosed) {\n\t\t\t\t\treturn TPromise.as<QuickOpenModel>(new QuickOpenModel());\n\t\t\t\t}\n\n\t\t\t\t// Combine symbol results and file results\n\t\t\t\tlet result = [...results[0].entries, ...results[1].entries];\n\n\t\t\t\t// Sort\n\t\t\t\tconst normalizedSearchValue = strings.stripWildcards(searchValue).toLowerCase();\n\t\t\t\tresult.sort((elementA, elementB) => QuickOpenEntry.compareByScore(elementA, elementB, searchValue, normalizedSearchValue, this.scorerCache));\n\n\t\t\t\t// Apply Range\n\t\t\t\tresult.forEach((element) => {\n\t\t\t\t\tif (element instanceof FileEntry) {\n\t\t\t\t\t\t(<FileEntry>element).setRange(searchWithRange ? searchWithRange.range : null);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Cache for fast lookup\n\t\t\t\tthis.resultsToSearchCache[searchValue] = result;\n\n\t\t\t\t// Cap the number of results to make the view snappy\n\t\t\t\tconst viewResults = result.length > OpenAnythingHandler.MAX_DISPLAYED_RESULTS ? result.slice(0, OpenAnythingHandler.MAX_DISPLAYED_RESULTS) : result;\n\n\t\t\t\t// Apply highlights to file entries\n\t\t\t\tviewResults.forEach(entry => {\n\t\t\t\t\tif (entry instanceof FileEntry) {\n\t\t\t\t\t\tconst {labelHighlights, descriptionHighlights} = QuickOpenEntry.highlight(entry, searchValue, true /* fuzzy highlight */);\n\t\t\t\t\t\tentry.setHighlights(labelHighlights, descriptionHighlights);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn TPromise.as<QuickOpenModel>(new QuickOpenModel(viewResults));\n\t\t\t}, (error: Error) => {\n\t\t\t\tthis.pendingSearch = null;\n\t\t\t\tthis.messageService.show(Severity.Error, error);\n\t\t\t});\n\n\t\t\treturn this.pendingSearch;\n\t\t};\n\n\t\t// Trigger through delayer to prevent accumulation while the user is typing\n\t\treturn this.delayer.trigger(promiseFactory);\n\t}\n\n\tprivate extractRange(value: string): ISearchWithRange {\n\t\tlet range: IRange = null;\n\n\t\t// Find Line/Column number from search value using RegExp\n\t\tlet patternMatch = OpenAnythingHandler.LINE_COLON_PATTERN.exec(value);\n\t\tif (patternMatch && patternMatch.length > 1) {\n\t\t\tlet startLineNumber = parseInt(patternMatch[1], 10);\n\n\t\t\t// Line Number\n\t\t\tif (types.isNumber(startLineNumber)) {\n\t\t\t\trange = {\n\t\t\t\t\tstartLineNumber: startLineNumber,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: startLineNumber,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t};\n\n\t\t\t\t// Column Number\n\t\t\t\tif (patternMatch.length > 3) {\n\t\t\t\t\tlet startColumn = parseInt(patternMatch[3], 10);\n\t\t\t\t\tif (types.isNumber(startColumn)) {\n\t\t\t\t\t\trange.startColumn = startColumn;\n\t\t\t\t\t\trange.endColumn = startColumn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// User has typed \"something:\" or \"something#\" without a line number, in this case treat as start of file\n\t\t\telse if (patternMatch[1] === '') {\n\t\t\t\trange = {\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (range) {\n\t\t\treturn {\n\t\t\t\tsearch: value.substr(0, patternMatch.index), // clear range suffix from search value\n\t\t\t\trange: range\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getResultsFromCache(searchValue: string, range: IRange = null): QuickOpenEntry[] {\n\t\tif (paths.isAbsolute(searchValue)) {\n\t\t\treturn null; // bypass cache if user looks up an absolute path where matching goes directly on disk\n\t\t}\n\n\t\t// Find cache entries by prefix of search value\n\t\tlet cachedEntries: QuickOpenEntry[];\n\t\tfor (let previousSearch in this.resultsToSearchCache) {\n\n\t\t\t// If we narrow down, we might be able to reuse the cached results\n\t\t\tif (searchValue.indexOf(previousSearch) === 0) {\n\t\t\t\tif (searchValue.indexOf(paths.nativeSep) >= 0 && previousSearch.indexOf(paths.nativeSep) < 0) {\n\t\t\t\t\tcontinue; // since a path character widens the search for potential more matches, require it in previous search too\n\t\t\t\t}\n\n\t\t\t\tcachedEntries = this.resultsToSearchCache[previousSearch];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!cachedEntries) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Pattern match on results and adjust highlights\n\t\tlet results: QuickOpenEntry[] = [];\n\t\tconst normalizedSearchValueLowercase = strings.stripWildcards(searchValue).toLowerCase();\n\t\tfor (let i = 0; i < cachedEntries.length; i++) {\n\t\t\tlet entry = cachedEntries[i];\n\n\t\t\t// Check for file entries if range is used\n\t\t\tif (range && !(entry instanceof FileEntry)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Check if this entry is a match for the search value\n\t\t\tconst resource = entry.getResource(); // can be null for symbol results!\n\t\t\tlet targetToMatch = resource ? labels.getPathLabel(resource, this.contextService) : entry.getLabel();\n\t\t\tif (!scorer.matches(targetToMatch, normalizedSearchValueLowercase)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresults.push(entry);\n\t\t}\n\n\t\t// Sort\n\t\tresults.sort((elementA, elementB) => QuickOpenEntry.compareByScore(elementA, elementB, searchValue, normalizedSearchValueLowercase, this.scorerCache));\n\n\t\t// Apply Range\n\t\tresults.forEach((element) => {\n\t\t\tif (element instanceof FileEntry) {\n\t\t\t\t(<FileEntry>element).setRange(range);\n\t\t\t}\n\t\t});\n\n\t\t// Cap the number of results to make the view snappy\n\t\tconst viewResults = results.length > OpenAnythingHandler.MAX_DISPLAYED_RESULTS ? results.slice(0, OpenAnythingHandler.MAX_DISPLAYED_RESULTS) : results;\n\n\t\t// Apply highlights\n\t\tviewResults.forEach(entry => {\n\t\t\tconst {labelHighlights, descriptionHighlights} = QuickOpenEntry.highlight(entry, searchValue, true /* fuzzy highlight */);\n\t\t\tentry.setHighlights(labelHighlights, descriptionHighlights);\n\t\t});\n\n\t\treturn viewResults;\n\t}\n\n\tpublic getGroupLabel(): string {\n\t\treturn nls.localize('fileAndTypeResults', \"file and symbol results\");\n\t}\n\n\tpublic getAutoFocus(searchValue: string): IAutoFocus {\n\t\treturn {\n\t\t\tautoFocusFirstEntry: true\n\t\t};\n\t}\n\n\tpublic onClose(canceled: boolean): void {\n\t\tthis.isClosed = true;\n\n\t\t// Cancel any pending search\n\t\tthis.cancelPendingSearch();\n\n\t\t// Clear Cache\n\t\tthis.resultsToSearchCache = Object.create(null);\n\t\tthis.scorerCache = Object.create(null);\n\n\t\t// Propagate\n\t\tthis.openSymbolHandler.onClose(canceled);\n\t\tthis.openFileHandler.onClose(canceled);\n\t}\n\n\tprivate cancelPendingSearch(): void {\n\t\tif (this.pendingSearch) {\n\t\t\tthis.pendingSearch.cancel();\n\t\t\tthis.pendingSearch = null;\n\t\t}\n\t}\n}"]}