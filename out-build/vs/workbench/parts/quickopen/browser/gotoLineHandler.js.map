{"version":3,"sources":["vs/workbench/parts/quickopen/browser/gotoLineHandler.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/quickopen/browser/gotoLineHandler.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport types = require('vs/base/common/types');\nimport errors = require('vs/base/common/errors');\nimport {IContext, Mode, IAutoFocus} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {QuickOpenHandler, EditorQuickOpenEntry} from 'vs/workbench/browser/quickopen';\nimport {QuickOpenAction} from 'vs/workbench/browser/actions/quickOpenAction';\nimport {TextEditorOptions, EditorOptions, EditorInput} from 'vs/workbench/common/editor';\nimport {BaseTextEditor} from 'vs/workbench/browser/parts/editor/textEditor';\nimport {IEditor, IModelDecorationsChangeAccessor, OverviewRulerLane, IModelDeltaDecoration, IRange, IEditorViewState, ITextModel, IDiffEditorModel} from 'vs/editor/common/editorCommon';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {Position} from 'vs/platform/editor/common/editor';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\n\nexport const GOTO_LINE_PREFIX = ':';\n\nexport class GotoLineAction extends QuickOpenAction {\n\n\tpublic static ID = 'workbench.action.gotoLine';\n\tpublic static LABEL = nls.localize('gotoLine', \"Go to Line...\");\n\n\tconstructor(actionId: string, actionLabel: string, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tsuper(actionId, actionLabel, GOTO_LINE_PREFIX, quickOpenService);\n\t}\n}\n\nclass GotoLineEntry extends EditorQuickOpenEntry {\n\tprivate line: number;\n\tprivate column: number;\n\tprivate handler: GotoLineHandler;\n\n\tconstructor(line: string, editorService: IWorkbenchEditorService, handler: GotoLineHandler) {\n\t\tsuper(editorService);\n\n\t\tthis.parseInput(line);\n\t\tthis.handler = handler;\n\t}\n\n\tprivate parseInput(line: string) {\n\t\tlet numbers = line.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\n\t\tthis.line = numbers[0];\n\t\tthis.column = numbers[1];\n\t}\n\n\tpublic getLabel(): string {\n\n\t\t// Inform user about valid range if input is invalid\n\t\tlet maxLineNumber = this.getMaxLineNumber();\n\t\tif (this.invalidRange(maxLineNumber)) {\n\t\t\tif (maxLineNumber > 0) {\n\t\t\t\treturn nls.localize('gotoLineLabelEmptyWithLimit', \"Type a line number between 1 and {0} to navigate to\", maxLineNumber);\n\t\t\t}\n\n\t\t\treturn nls.localize('gotoLineLabelEmpty', \"Type a line number to navigate to\");\n\t\t}\n\n\t\t// Input valid, indicate action\n\t\treturn this.column ? nls.localize('gotoLineColumnLabel', \"Go to line {0} and column {1}\", this.line, this.column) : nls.localize('gotoLineLabel', \"Go to line {0}\", this.line);\n\t}\n\n\tprivate invalidRange(maxLineNumber: number = this.getMaxLineNumber()): boolean {\n\t\treturn !this.line || !types.isNumber(this.line) || (maxLineNumber > 0 && types.isNumber(this.line) && this.line > maxLineNumber);\n\t}\n\n\tprivate getMaxLineNumber(): number {\n\t\tlet editor = this.editorService.getActiveEditor();\n\t\tlet editorControl = <IEditor>editor.getControl();\n\t\tlet model = editorControl.getModel();\n\t\tif (model && (<IDiffEditorModel>model).modified && (<IDiffEditorModel>model).original) {\n\t\t\tmodel = (<IDiffEditorModel>model).modified; // Support for diff editor models\n\t\t}\n\n\t\treturn model && types.isFunction((<ITextModel>model).getLineCount) ? (<ITextModel>model).getLineCount() : -1;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\treturn this.runOpen(context);\n\t\t}\n\n\t\treturn this.runPreview();\n\t}\n\n\tpublic getInput(): EditorInput {\n\t\treturn <EditorInput>this.editorService.getActiveEditorInput();\n\t}\n\n\tpublic getOptions(): EditorOptions {\n\t\tlet range = this.toSelection();\n\t\tlet options = new TextEditorOptions();\n\t\toptions.selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\n\t\treturn options;\n\t}\n\n\tpublic runOpen(context: IContext): boolean {\n\n\t\t// No-op if range is not valid\n\t\tif (this.invalidRange()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for sideBySide use\n\t\tlet event = context.event;\n\t\tlet sideBySide = (event && (event.ctrlKey || event.metaKey || (event.payload && event.payload.originalEvent && (event.payload.originalEvent.ctrlKey || event.payload.originalEvent.metaKey))));\n\t\tif (sideBySide) {\n\t\t\tthis.editorService.openEditor(this.getInput(), this.getOptions(), true).done(null, errors.onUnexpectedError);\n\t\t}\n\n\t\t// Apply selection and focus\n\t\tlet range = this.toSelection();\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor) {\n\t\t\tlet editor = <IEditor>activeEditor.getControl();\n\t\t\teditor.setSelection(range);\n\t\t\teditor.revealRangeInCenter(range);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic runPreview(): boolean {\n\n\t\t// No-op if range is not valid\n\t\tif (this.invalidRange()) {\n\t\t\tthis.handler.clearDecorations();\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Select Line Position\n\t\tlet range = this.toSelection();\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tif (activeEditor) {\n\t\t\tlet editorControl = <IEditor>activeEditor.getControl();\n\t\t\teditorControl.revealRangeInCenter(range);\n\n\t\t\t// Decorate if possible\n\t\t\tif (types.isFunction(editorControl.changeDecorations)) {\n\t\t\t\tthis.handler.decorateOutline(range, editorControl, activeEditor.position);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate toSelection(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this.line,\n\t\t\tstartColumn: this.column || 1,\n\t\t\tendLineNumber: this.line,\n\t\t\tendColumn: this.column || 1\n\t\t};\n\t}\n}\n\ninterface IEditorLineDecoration {\n\tlineHighlightId: string;\n\tlineDecorationId: string;\n\tposition: Position;\n}\n\nexport class GotoLineHandler extends QuickOpenHandler {\n\tprivate lineHighlightDecorationId: IEditorLineDecoration;\n\tprivate lastKnownEditorViewState: IEditorViewState;\n\n\tconstructor( @IWorkbenchEditorService private editorService: IWorkbenchEditorService) {\n\t\tsuper();\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('gotoLineHandlerAriaLabel', \"Type a line number to navigate to.\");\n\t}\n\n\tpublic getResults(searchValue: string): TPromise<QuickOpenModel> {\n\t\tsearchValue = searchValue.trim();\n\n\t\t// Remember view state to be able to restore on cancel\n\t\tif (!this.lastKnownEditorViewState) {\n\t\t\tlet editor = this.editorService.getActiveEditor();\n\t\t\tthis.lastKnownEditorViewState = (<IEditor>editor.getControl()).saveViewState();\n\t\t}\n\n\t\treturn TPromise.as(new QuickOpenModel([new GotoLineEntry(searchValue, this.editorService, this)]));\n\t}\n\n\tpublic canRun(): boolean | string {\n\t\tlet canRun = this.editorService.getActiveEditor() instanceof BaseTextEditor;\n\n\t\treturn canRun ? true : nls.localize('cannotRunGotoLine', \"Open a text file first to go to a line\");\n\t}\n\n\tpublic decorateOutline(range: IRange, editor: IEditor, position: Position): void {\n\t\teditor.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\tlet deleteDecorations: string[] = [];\n\n\t\t\tif (this.lineHighlightDecorationId) {\n\t\t\t\tdeleteDecorations.push(this.lineHighlightDecorationId.lineDecorationId);\n\t\t\t\tdeleteDecorations.push(this.lineHighlightDecorationId.lineHighlightId);\n\t\t\t\tthis.lineHighlightDecorationId = null;\n\t\t\t}\n\n\t\t\tlet newDecorations: IModelDeltaDecoration[] = [\n\t\t\t\t// lineHighlight at index 0\n\t\t\t\t{\n\t\t\t\t\trange: range,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tclassName: 'lineHighlight',\n\t\t\t\t\t\tisWholeLine: true\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// lineDecoration at index 1\n\t\t\t\t{\n\t\t\t\t\trange: range,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\toverviewRuler: {\n\t\t\t\t\t\t\tcolor: 'rgba(0, 122, 204, 0.6)',\n\t\t\t\t\t\t\tdarkColor: 'rgba(0, 122, 204, 0.6)',\n\t\t\t\t\t\t\tposition: OverviewRulerLane.Full\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tlet decorations = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\n\t\t\tlet lineHighlightId = decorations[0];\n\t\t\tlet lineDecorationId = decorations[1];\n\n\t\t\tthis.lineHighlightDecorationId = {\n\t\t\t\tlineHighlightId: lineHighlightId,\n\t\t\t\tlineDecorationId: lineDecorationId,\n\t\t\t\tposition: position\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic clearDecorations(): void {\n\t\tif (this.lineHighlightDecorationId) {\n\t\t\tthis.editorService.getVisibleEditors().forEach((editor) => {\n\t\t\t\tif (editor.position === this.lineHighlightDecorationId.position) {\n\t\t\t\t\tlet editorControl = <IEditor>editor.getControl();\n\t\t\t\t\teditorControl.changeDecorations((changeAccessor: IModelDecorationsChangeAccessor) => {\n\t\t\t\t\t\tchangeAccessor.deltaDecorations([\n\t\t\t\t\t\t\tthis.lineHighlightDecorationId.lineDecorationId,\n\t\t\t\t\t\t\tthis.lineHighlightDecorationId.lineHighlightId\n\t\t\t\t\t\t], []);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.lineHighlightDecorationId = null;\n\t\t}\n\t}\n\n\tpublic onClose(canceled: boolean): void {\n\n\t\t// Clear Highlight Decorations if present\n\t\tthis.clearDecorations();\n\n\t\t// Restore selection if canceled\n\t\tif (canceled && this.lastKnownEditorViewState) {\n\t\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\t\tif (activeEditor) {\n\t\t\t\tlet editor = <IEditor>activeEditor.getControl();\n\t\t\t\teditor.restoreViewState(this.lastKnownEditorViewState);\n\t\t\t}\n\t\t}\n\n\t\tthis.lastKnownEditorViewState = null;\n\t}\n\n\tpublic getAutoFocus(searchValue: string): IAutoFocus {\n\t\treturn {\n\t\t\tautoFocusFirstEntry: searchValue.trim().length > 0\n\t\t};\n\t}\n}"]}