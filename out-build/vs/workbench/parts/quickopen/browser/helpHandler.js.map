{"version":3,"sources":["vs/workbench/parts/quickopen/browser/helpHandler.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/quickopen/browser/helpHandler.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport {Builder, $} from 'vs/base/browser/builder';\nimport types = require('vs/base/common/types');\nimport {Registry} from 'vs/platform/platform';\nimport {Mode, IContext, IAutoFocus} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenEntryItem, QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {ITree, IElementCallback} from 'vs/base/parts/tree/browser/tree';\nimport {IQuickOpenRegistry, Extensions, QuickOpenHandler} from 'vs/workbench/browser/quickopen';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\n\nexport const HELP_PREFIX = '?';\n\nclass HelpEntry extends QuickOpenEntryItem {\n\tprivate prefix: string;\n\tprivate description: string;\n\tprivate groupLabel: string;\n\tprivate useBorder: boolean;\n\tprivate quickOpenService: IQuickOpenService;\n\tprivate openOnPreview: boolean;\n\n\tconstructor(prefix: string, description: string, quickOpenService: IQuickOpenService, openOnPreview: boolean) {\n\t\tsuper();\n\n\t\tthis.prefix = prefix;\n\t\tthis.description = description;\n\t\tthis.quickOpenService = quickOpenService;\n\t\tthis.openOnPreview = openOnPreview;\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.prefix;\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, picker help\", this.getLabel());\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn 22;\n\t}\n\n\tpublic getGroupLabel(): string {\n\t\treturn this.groupLabel;\n\t}\n\n\tpublic setGroupLabel(groupLabel: string): void {\n\t\tthis.groupLabel = groupLabel;\n\t}\n\n\tpublic showBorder(): boolean {\n\t\treturn this.useBorder;\n\t}\n\n\tpublic setShowBorder(showBorder: boolean): void {\n\t\tthis.useBorder = showBorder;\n\t}\n\n\tpublic render(tree: ITree, container: HTMLElement, previousCleanupFn: IElementCallback): IElementCallback {\n\t\tlet builder = $(container);\n\t\tbuilder.addClass('quick-open-entry');\n\n\t\t// Support border\n\t\tif (this.showBorder()) {\n\t\t\t$(container).addClass('results-group-separator');\n\t\t} else {\n\t\t\t$(container).removeClass('results-group-separator');\n\t\t}\n\n\t\t// Add a container for the group\n\t\tif (this.getGroupLabel()) {\n\t\t\t$(container).div((div: Builder) => {\n\t\t\t\tdiv.addClass('results-group');\n\t\t\t\tdiv.attr({\n\t\t\t\t\ttext: this.getGroupLabel()\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// Prefix\n\t\tlet label = builder.clone().div({\n\t\t\ttext: this.prefix,\n\t\t\t'class': 'quick-open-help-entry-label'\n\t\t});\n\n\t\tif (!this.prefix) {\n\t\t\tlabel.text('\\u2026');\n\t\t}\n\n\t\t// Description\n\t\tbuilder.span({\n\t\t\ttext: this.description,\n\t\t\t'class': 'quick-open-entry-description'\n\t\t});\n\n\t\treturn null;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN || this.openOnPreview) {\n\t\t\tthis.quickOpenService.show(this.prefix);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class HelpHandler extends QuickOpenHandler {\n\n\tconstructor( @IQuickOpenService private quickOpenService: IQuickOpenService) {\n\t\tsuper();\n\t}\n\n\tpublic getResults(searchValue: string): TPromise<QuickOpenModel> {\n\t\tsearchValue = searchValue.trim();\n\n\t\tlet registry = (<IQuickOpenRegistry>Registry.as(Extensions.Quickopen));\n\t\tlet handlerDescriptors = registry.getQuickOpenHandlers();\n\n\t\tlet defaultHandlers = registry.getDefaultQuickOpenHandlers();\n\t\tif (defaultHandlers.length > 0) {\n\t\t\thandlerDescriptors.push(...defaultHandlers);\n\t\t}\n\n\t\tlet workbenchScoped: HelpEntry[] = [];\n\t\tlet editorScoped: HelpEntry[] = [];\n\t\tlet entry: HelpEntry;\n\n\t\thandlerDescriptors.sort((h1, h2) => h1.prefix.localeCompare(h2.prefix)).forEach((handlerDescriptor) => {\n\t\t\tif (handlerDescriptor.prefix !== HELP_PREFIX) {\n\n\t\t\t\t// Descriptor has multiple help entries\n\t\t\t\tif (types.isArray(handlerDescriptor.helpEntries)) {\n\t\t\t\t\tfor (let j = 0; j < handlerDescriptor.helpEntries.length; j++) {\n\t\t\t\t\t\tlet helpEntry = handlerDescriptor.helpEntries[j];\n\n\t\t\t\t\t\tif (helpEntry.prefix.indexOf(searchValue) === 0) {\n\t\t\t\t\t\t\tentry = new HelpEntry(helpEntry.prefix, helpEntry.description, this.quickOpenService, searchValue.length > 0);\n\t\t\t\t\t\t\tif (helpEntry.needsEditor) {\n\t\t\t\t\t\t\t\teditorScoped.push(entry);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tworkbenchScoped.push(entry);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Single Help entry for descriptor\n\t\t\t\telse if (handlerDescriptor.prefix.indexOf(searchValue) === 0) {\n\t\t\t\t\tentry = new HelpEntry(handlerDescriptor.prefix, handlerDescriptor.description, this.quickOpenService, searchValue.length > 0);\n\t\t\t\t\tworkbenchScoped.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add separator for workbench scoped handlers\n\t\tif (workbenchScoped.length > 0) {\n\t\t\tworkbenchScoped[0].setGroupLabel(nls.localize('globalCommands', \"global commands\"));\n\t\t}\n\n\t\t// Add separator for editor scoped handlers\n\t\tif (editorScoped.length > 0) {\n\t\t\teditorScoped[0].setGroupLabel(nls.localize('editorCommands', \"editor commands\"));\n\t\t\tif (workbenchScoped.length > 0) {\n\t\t\t\teditorScoped[0].setShowBorder(true);\n\t\t\t}\n\t\t}\n\n\t\treturn TPromise.as(new QuickOpenModel([...workbenchScoped, ...editorScoped]));\n\t}\n\n\tpublic getAutoFocus(searchValue: string): IAutoFocus {\n\t\tsearchValue = searchValue.trim();\n\t\treturn {\n\t\t\tautoFocusFirstEntry: searchValue.length > 0,\n\t\t\tautoFocusPrefixMatch: searchValue\n\t\t};\n\t}\n}"]}