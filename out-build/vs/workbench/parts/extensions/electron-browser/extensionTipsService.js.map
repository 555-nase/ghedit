{"version":3,"file":"vs/workbench/parts/extensions/electron-browser/extensionTipsService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/extensions/electron-browser/extensionTipsService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport URI from 'vs/base/common/uri';\nimport {toObject} from 'vs/base/common/objects';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {TPromise as Promise} from 'vs/base/common/winjs.base';\nimport {match} from 'vs/base/common/glob';\nimport {IGalleryService, IExtensionTipsService, IExtension} from 'vs/workbench/parts/extensions/common/extensions';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IStorageService, StorageScope} from 'vs/platform/storage/common/storage';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\ninterface ExtensionRecommendations {\n\t[id: string]: string;\n}\n\nexport class ExtensionTipsService implements IExtensionTipsService {\n\n\tserviceId: any;\n\tprivate _recommendations: { [id: string]: boolean; };\n\tprivate _disposables: IDisposable[] = [];\n\tprivate _availableRecommendations: ExtensionRecommendations;\n\n\tconstructor(\n\t\t@IGalleryService private _galleryService: IGalleryService,\n\t\t@IModelService private _modelService: IModelService,\n\t\t@IStorageService private _storageService: IStorageService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tif (!this._galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._recommendations = toObject(JSON.parse(_storageService.get('extensionsAssistant/recommendations', StorageScope.GLOBAL, '[]')), id => id, () => true);\n\n\t\tconst extensionTips = contextService.getConfiguration().env.extensionTips;\n\n\t\tif (extensionTips) {\n\t\t\tthis._availableRecommendations = extensionTips;\n\t\t\tthis._disposables.push(this._modelService.onModelAdded(model => {\n\t\t\t\tthis._suggest(model.getAssociatedResource());\n\t\t\t}));\n\n\t\t\tfor (let model of this._modelService.getModels()) {\n\t\t\t\tthis._suggest(model.getAssociatedResource());\n\t\t\t}\n\t\t}\n\t}\n\n\tgetRecommendations(): Promise<IExtension[]> {\n\t\tconst ids = Object.keys(this._recommendations);\n\n\t\treturn this._galleryService.query({ ids, pageSize: ids.length })\n\t\t\t.then(result => result.firstPage, () => []);\n\t}\n\n\tprivate _suggest(uri: URI): Promise<any> {\n\t\tif (!uri) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ids = Object.keys(this._availableRecommendations);\n\t\tconst recommendations = ids\n\t\t\t.filter(id => match(this._availableRecommendations[id], uri.fsPath));\n\n\t\trecommendations.forEach(r => this._recommendations[r] = true);\n\n\t\tthis._storageService.store(\n\t\t\t'extensionsAssistant/recommendations',\n\t\t\tJSON.stringify(Object.keys(this._recommendations)),\n\t\t\tStorageScope.GLOBAL\n\t\t);\n\t}\n\n\tdispose() {\n\t\tthis._disposables = dispose(this._disposables);\n\t}\n}\n"]}