{"version":3,"sources":["vs/workbench/parts/extensions/node/extensionsService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;IAEhG,YAAY,CAAC;IAuBb,uBAAuB,GAAW;QACjC,MAAM,CAAC,IAAI,oBAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YACvB,IAAI,CAAC;gBACJ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YACpB,CAAE;YAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAqD,CAAC,CAAC,CAAC,CAAC;YACtG,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,kBAAkB,OAAe,EAAE,SAAsB,EAAE,OAAwC;QAAxC,uBAAwC,GAAxC,UAAU,SAAS,IAAI,SAAS,CAAC,OAAO;QAClG,MAAM,CAAC,YAAM,CAAC,OAAO,EAAE,wBAAwB,CAAC;aAC9C,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAtC,CAAsC,CAAC;aACtD,IAAI,CAAC,UAAA,QAAQ;YACb,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,oBAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAa,EAAE,IAA4C,CAAC,CAAC,CAAC,CAAC;gBAC5G,CAAC;gBAED,EAAE,CAAC,CAAC,SAAS,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;oBAChD,MAAM,CAAC,oBAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAkB,EAAE,IAAiD,CAAC,CAAC,CAAC,CAAC;gBACtH,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,MAAM,CAAC,oBAAO,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAA+C,CAAC,CAAC,CAAC,CAAC;gBAClH,CAAC;YACF,CAAC;YAED,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB,QAA4B,EAAE,kBAAqC,EAAE,IAAa;QAC1G,IAAM,SAAS,GAAe;YAC7B,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,WAAW,EAAE,QAAQ,CAAC,WAAW,IAAI,QAAQ,CAAC,IAAI;YAClD,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;YAC5C,WAAW,EAAE,QAAQ,CAAC,WAAW,IAAI,EAAE;SACvC,CAAC;QAEF,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACxB,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QACnD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,CAAC;QAED,MAAM,CAAC,SAAS,CAAC;IAClB,CAAC;IAED,wBAAwB,SAA6B,EAAE,OAA2B;QAA3B,uBAA2B,GAA3B,UAAU,SAAS,CAAC,OAAO;QACjF,MAAM,CAAK,SAAS,CAAC,SAAS,SAAM,SAAS,CAAC,IAAI,SAAM,OAAU,CAAC;IACpE,CAAC;IAED;QAoBC,2BACmC,cAAwC;YAAxC,mBAAc,GAAd,cAAc,CAA0B;YAnB3E,cAAS,GAAG,+BAAkB,CAAC;YAMvB,wBAAmB,GAAG,IAAI,eAAO,EAAsB,CAAC;YAClD,uBAAkB,GAA8B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;YAErF,2BAAsB,GAAG,IAAI,eAAO,EAA6C,CAAC;YAC5E,0BAAqB,GAAqD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC;YAElH,0BAAqB,GAAG,IAAI,eAAO,EAAc,CAAC;YAC5C,yBAAoB,GAAsB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YAEjF,6BAAwB,GAAG,IAAI,eAAO,EAAc,CAAC;YAC/C,4BAAuB,GAAsB,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;YAK9F,IAAM,GAAG,GAAG,cAAc,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC;YAClD,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,kBAAkB,CAAC;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;YAChE,IAAI,CAAC,mBAAmB,GAAG,IAAI,eAAO,CAAC,CAAC,CAAC,CAAC;QAC3C,CAAC;QAID,mCAAO,GAAP,UAAQ,GAAQ;YAAhB,iBAaC;YAZA,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;YAED,IAAM,SAAS,GAAG,GAAiB,CAAC;YACpC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;gBAC9C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAa,EAAE,IAA8C,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnI,CAAC;gBAED,MAAM,CAAC,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,8CAAkB,GAA1B,UAA2B,SAAqB;YAAhD,iBA2BC;YA1BA,IAAM,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;YAExD,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAAgC,CAAC,CAAC,CAAC,CAAC;YACnH,CAAC;YAED,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEzC,MAAM,CAAC,IAAI,CAAC,4BAA4B,CAAC,SAAS,EAAE,SAAS,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,WAAW;gBAC1G,IAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;gBACpC,IAAM,GAAG,GAAG,WAAW,CAAC,WAAW,CAAC;gBACpC,IAAM,OAAO,GAAG,WAAW,CAAC,eAAe,CAAC;gBAC5C,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,WAAM,EAAE,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;gBAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;gBACzF,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;gBAE9D,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC;qBACtB,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,gBAAM,CAAC,IAAI,EAAE,EAAE,SAAA,OAAO,EAAE,CAAC,EAAzB,CAAyB,CAAC;qBACvC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,kBAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,EAAvB,CAAuB,CAAC;qBACrC,IAAI,CAAC,cAAM,OAAA,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,EAArC,CAAqC,CAAC;qBACjD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,aAAO,CAAC,OAAO,EAAE,aAAa,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,QAAQ,EAAR,CAAQ,CAAC,EAAlG,CAAkG,CAAC;qBACpH,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,gBAAM,CAAC,EAAE,UAAU,EAAE,kBAAkB,EAAE,EAAE,QAAQ,CAAC,EAApD,CAAoD,CAAC;qBACtE,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,GAAG,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAjE,CAAiE,CAAC;qBACnF,IAAI,CAAC,cAAQ,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,WAAA,SAAS,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;qBAClF,IAAI,CAAC,IAAI,EAAE,UAAA,KAAK,IAAM,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,WAAA,SAAS,EAAE,OAAA,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtH,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,wDAA4B,GAApC,UAAqC,SAAqB,EAAE,QAA2B;YAAvF,iBAsBC;YArBA,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAc,EAAE,IAAsE,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnK,CAAC;YAED,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;iBACtC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,cAAI,CAAqB,IAAI,CAAC,EAA9B,CAA8B,CAAC;iBAC5C,IAAI,CAAC,UAAA,QAAQ;gBACb,IAAM,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC;gBACvE,IAAM,IAAI,GAAG;oBACZ,SAAS,EAAE,KAAK;oBAChB,OAAO,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE;oBAC5C,IAAI,EAAE,QAAQ,CAAC,IAAI;iBACnB,CAAC;gBAEF,EAAE,CAAC,CAAC,CAAC,4CAAuB,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBACrD,MAAM,CAAC,KAAI,CAAC,4BAA4B,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,0CAAc,GAAtB,UAAuB,OAAe;YAAtC,iBASC;YARA,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;gBACrC,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC/E,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,CAAC,aAAO,CAAC,OAAO,EAAE,aAAa,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;qBAClF,IAAI,CAAC,cAAM,OAAA,eAAe,CAAC,QAAQ,EAAS,QAAS,CAAC,UAAU,EAAE,aAAa,CAAC,EAArE,CAAqE,CAAC;qBACjF,IAAI,CAAC,UAAA,SAAS,IAAM,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,WAAA,SAAS,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7F,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,qCAAS,GAAT,UAAU,SAAqB;YAA/B,iBAUC;YATA,IAAM,aAAa,GAAG,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;YAElG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC;iBAC9B,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,GAAG,IAAI,GAAG,oBAAO,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAW,EAAE,IAA0B,CAAC,CAAC,CAAC,EAAnG,CAAmG,CAAC;iBACnH,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,EAA1C,CAA0C,CAAC;iBACtD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAA3B,CAA2B,CAAC;iBACvC,IAAI,CAAC,cAAM,OAAA,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,EAAzB,CAAyB,CAAC;iBACrC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAA7B,CAA6B,CAAC;iBACzC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,EAA7C,CAA6C,CAAC,CAAC;QAC7D,CAAC;QAED,wCAAY,GAAZ,UAAa,wBAAyC;YAAzC,wCAAyC,GAAzC,gCAAyC;YACrD,IAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YAEnC,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,GAAG,CAAC;YACZ,CAAC;YAED,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAA,UAAU;gBACzB,IAAM,IAAI,GAAG,oBAAM,CAAC,qBAAO,CAAC,UAAU,EAAE,UAAA,CAAC,IAAI,OAAA,CAAI,CAAC,CAAC,SAAS,SAAM,CAAC,CAAC,IAAI,CAAG,EAA9B,CAA8B,CAAC,CAAC,CAAC;gBAC9E,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,EAArC,CAAqC,CAAC,CAAC,CAAC,CAAC,EAA1D,CAA0D,CAAC,CAAC;YAClF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,2CAAe,GAAvB;YAAA,iBAmBC;YAlBA,IAAM,OAAO,GAAG,IAAI,eAAO,CAAC,EAAE,CAAC,CAAC;YAEhC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EAAE;iBACjC,IAAI,CAAC,UAAA,QAAQ;gBACb,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC;qBACrC,IAAI,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAZ,CAAY,CAAC,EAApC,CAAoC,CAAC;qBACxD,IAAI,CAAe,UAAA,UAAU,IAAI,OAAA,oBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC;oBAC9D,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;oBAExD,MAAM,CAAC,OAAO,CAAC,KAAK,CACnB,cAAM,OAAA,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC;yBAClE,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,aAAa,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;yBAC/B,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,eAAe,CAAC,QAAQ,EAAS,QAAS,CAAC,UAAU,EAAE,aAAa,CAAC,EAArE,CAAqE,CAAC;yBACvF,IAAI,CAAC,IAAI,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC,EAHlB,CAGkB,CACxB,CAAC;gBACH,CAAC,CAAC,CAAC,EAT+B,CAS/B,CAAC;qBACH,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,EAAvB,CAAuB,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,sDAA0B,GAA1B;YAAA,iBAeC;YAdA,IAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,EAAE;iBAC3C,IAAI,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,cAAc,CAAC,CAAC,CAAC,EAAjB,CAAiB,CAAC,EAAtC,CAAsC,CAAC,CAAC;YAE7D,IAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,EAAE;iBAC3C,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC,CAAC;YAE1C,MAAM,CAAC,qBAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;iBACxC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,gBAAO,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC;iBAC/B,IAAI,CAAO,UAAA,aAAa;gBACxB,MAAM,CAAC,qBAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAA,EAAE;oBACxC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;yBACnD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,sBAAsB,CAAC,UAAA,QAAQ,IAAI,OAAA,OAAO,QAAQ,CAAC,EAAE,CAAC,EAAnB,CAAmB,CAAC,EAA5D,CAA4D,CAAC,CAAC;gBAC5E,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;QAEO,iDAAqB,GAA7B;YACC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBACzC,IAAM,IAAI,GAAG,oBAAM,CAAC,qBAAO,CAAC,OAAO,EAAE,UAAA,CAAC,IAAI,OAAA,CAAI,CAAC,CAAC,SAAS,SAAM,CAAC,CAAC,IAAI,CAAG,EAA9B,CAA8B,CAAC,CAAC,CAAC;gBAC3E,IAAM,UAAU,GAAG,gBAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,EAArC,CAAqC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhE,CAAgE,CAAC,CAAC,CAAC;gBAE5G,MAAM,CAAC,UAAU;qBACf,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAR,CAAQ,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,sCAAU,GAAlB,UAAmB,SAAqB;YACvC,IAAM,EAAE,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAA,QAAQ,IAAI,OAAA,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAd,CAAc,CAAC,CAAC;QAChE,CAAC;QAEO,uCAAW,GAAnB,UAAoB,SAAqB;YACxC,IAAM,EAAE,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAA,QAAQ,IAAI,OAAA,gBAAM,CAAC,QAAQ,EAAE,UAAE,GAAC,EAAE,CAAC,GAAE,IAAI,KAAE,CAAC,UAAhC,CAAgC,CAAC,CAAC;QAClF,CAAC;QAEO,yCAAa,GAArB,UAAsB,SAAqB;YAC1C,IAAM,EAAE,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAO,UAAA,QAAQ,IAAI,OAAA,OAAO,QAAQ,CAAC,EAAE,CAAC,EAAnB,CAAmB,CAAC,CAAC;QAC3E,CAAC;QAEO,iDAAqB,GAA7B;YACC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,EAAR,CAAQ,CAAC,CAAC;QAC1D,CAAC;QAEO,kDAAsB,GAA9B,UAAkC,EAA8C;YAAhF,iBAiBC;YAhBA,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gBACrC,IAAI,MAAM,GAAM,IAAI,CAAC;gBACrB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,EAAE,MAAM,CAAC;qBAC5C,IAAI,CAAC,IAAI,EAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,KAAK,QAAQ,GAAG,qBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,qBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAnE,CAAmE,CAAC;qBACtF,IAAI,CAA4B,UAAA,GAAG,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAf,CAAe,CAAC;qBACvD,IAAI,CAAC,UAAA,QAAQ,IAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;qBAC7D,IAAI,CAAC,UAAA,QAAQ;oBACb,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACxC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;oBACtC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;wBACrC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;oBAC9C,CAAC;gBACF,CAAC,CAAC;qBACD,IAAI,CAAC,cAAM,OAAA,MAAM,EAAN,CAAM,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,yCAAyC;QACzC,iEAAiE;QACzD,mCAAO,GAAf,UAAgB,GAAW;YAC1B,IAAM,QAAQ,GAAG,qBAAQ,CAAC,IAAI,CAAC;gBAC9B,2BAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC;gBACxD,2BAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,qBAAqB,CAAC;aACjE,CAAC,CAAC;YAEH,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,QAAQ;gBAC5B,IAAM,QAAQ,GAAW,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAM,SAAS,GAAY,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAM,KAAK,GAAG,qBAAa,CAAC,GAAG,EAAE,EAAE,UAAA,QAAQ,EAAE,WAAA,SAAS,EAAE,CAAC,CAAC;gBAE1D,MAAM,CAAC,EAAE,KAAA,GAAG,EAAE,OAAA,KAAK,EAAE,WAAA,SAAS,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;QACJ,CAAC;QAnOD;YAAC,sBAAY;qEAAA;QAGb;YAAC,sBAAY;wEAAA;QAGb;YAAC,sBAAY;uEAAA;QAGb;YAAC,sBAAY;0EAAA;QAGZ;uBAAC,yCAAwB;6BAAA;QAwN3B,wBAAC;IAAD,CA7OA,AA6OC,IAAA;IA7OY,yBAAiB,oBA6O7B,CAAA","file":"vs/workbench/parts/extensions/node/extensionsService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport { tmpdir } from 'os';\nimport * as path from 'path';\nimport types = require('vs/base/common/types');\nimport { ServiceEvent } from 'vs/base/common/service';\nimport * as pfs from 'vs/base/node/pfs';\nimport { assign } from 'vs/base/common/objects';\nimport { flatten } from 'vs/base/common/arrays';\nimport { extract, buffer } from 'vs/base/node/zip';\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport { IExtensionsService, IExtension, IExtensionManifest, IGalleryMetadata, IGalleryVersion } from 'vs/workbench/parts/extensions/common/extensions';\nimport { download, json, IRequestOptions } from 'vs/base/node/request';\nimport { getProxyAgent } from 'vs/base/node/proxy';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\nimport { Limiter } from 'vs/base/common/async';\nimport Event, { Emitter } from 'vs/base/common/event';\nimport { UserSettings } from 'vs/workbench/node/userSettings';\nimport * as semver from 'semver';\nimport { groupBy, values } from 'vs/base/common/collections';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/node/extensionValidator';\n\nfunction parseManifest(raw: string): TPromise<IExtensionManifest> {\n\treturn new Promise((c, e) => {\n\t\ttry {\n\t\t\tc(JSON.parse(raw));\n\t\t} catch (err) {\n\t\t\te(new Error(nls.localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t}\n\t});\n}\n\nfunction validate(zipPath: string, extension?: IExtension, version = extension && extension.version): TPromise<IExtension> {\n\treturn buffer(zipPath, 'extension/package.json')\n\t\t.then(buffer => parseManifest(buffer.toString('utf8')))\n\t\t.then(manifest => {\n\t\t\tif (extension) {\n\t\t\t\tif (extension.name !== manifest.name) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidName', \"Extension invalid: manifest name mismatch.\")));\n\t\t\t\t}\n\n\t\t\t\tif (extension.publisher !== manifest.publisher) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidPublisher', \"Extension invalid: manifest publisher mismatch.\")));\n\t\t\t\t}\n\n\t\t\t\tif (version !== manifest.version) {\n\t\t\t\t\treturn Promise.wrapError(Error(nls.localize('invalidVersion', \"Extension invalid: manifest version mismatch.\")));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn TPromise.as(manifest);\n\t\t});\n}\n\nfunction createExtension(manifest: IExtensionManifest, galleryInformation?: IGalleryMetadata, path?: string): IExtension {\n\tconst extension: IExtension = {\n\t\tname: manifest.name,\n\t\tdisplayName: manifest.displayName || manifest.name,\n\t\tpublisher: manifest.publisher,\n\t\tversion: manifest.version,\n\t\tengines: { vscode: manifest.engines.vscode },\n\t\tdescription: manifest.description || ''\n\t};\n\n\tif (galleryInformation) {\n\t\textension.galleryInformation = galleryInformation;\n\t}\n\n\tif (path) {\n\t\textension.path = path;\n\t}\n\n\treturn extension;\n}\n\nfunction getExtensionId(extension: IExtensionManifest, version = extension.version): string {\n\treturn `${ extension.publisher }.${ extension.name }-${ version }`;\n}\n\nexport class ExtensionsService implements IExtensionsService {\n\n\tserviceId = IExtensionsService;\n\n\tprivate extensionsPath: string;\n\tprivate obsoletePath: string;\n\tprivate obsoleteFileLimiter: Limiter<void>;\n\n\tprivate _onInstallExtension = new Emitter<IExtensionManifest>();\n\t@ServiceEvent onInstallExtension: Event<IExtensionManifest> = this._onInstallExtension.event;\n\n\tprivate _onDidInstallExtension = new Emitter<{ extension: IExtension; error?: Error; }>();\n\t@ServiceEvent onDidInstallExtension: Event<{ extension: IExtension; error?: Error; }> = this._onDidInstallExtension.event;\n\n\tprivate _onUninstallExtension = new Emitter<IExtension>();\n\t@ServiceEvent onUninstallExtension: Event<IExtension> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = new Emitter<IExtension>();\n\t@ServiceEvent onDidUninstallExtension: Event<IExtension> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService\n\t) {\n\t\tconst env = contextService.getConfiguration().env;\n\t\tthis.extensionsPath = env.userExtensionsHome;\n\t\tthis.obsoletePath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.obsoleteFileLimiter = new Limiter(1);\n\t}\n\n\tinstall(extension: IExtension): TPromise<IExtension>;\n\tinstall(zipPath: string): TPromise<IExtension>;\n\tinstall(arg: any): TPromise<IExtension> {\n\t\tif (types.isString(arg)) {\n\t\t\treturn this.installFromZip(arg);\n\t\t}\n\n\t\tconst extension = arg as IExtension;\n\t\treturn this.isObsolete(extension).then(obsolete => {\n\t\t\tif (obsolete) {\n\t\t\t\treturn TPromise.wrapError(new Error(nls.localize('restartCode', \"Please restart Code before reinstalling {0}.\", extension.name)));\n\t\t\t}\n\n\t\t\treturn this.installFromGallery(arg);\n\t\t});\n\t}\n\n\tprivate installFromGallery(extension: IExtension): TPromise<IExtension> {\n\t\tconst galleryInformation = extension.galleryInformation;\n\n\t\tif (!galleryInformation) {\n\t\t\treturn TPromise.wrapError(new Error(nls.localize('missingGalleryInformation', \"Gallery information is missing\")));\n\t\t}\n\n\t\tthis._onInstallExtension.fire(extension);\n\n\t\treturn this.getLastValidExtensionVersion(extension, extension.galleryInformation.versions).then(versionInfo => {\n\t\t\tconst version = versionInfo.version;\n\t\t\tconst url = versionInfo.downloadUrl;\n\t\t\tconst headers = versionInfo.downloadHeaders;\n\t\t\tconst zipPath = path.join(tmpdir(), galleryInformation.id);\n\t\t\tconst extensionPath = path.join(this.extensionsPath, getExtensionId(extension, version));\n\t\t\tconst manifestPath = path.join(extensionPath, 'package.json');\n\n\t\t\treturn this.request(url)\n\t\t\t\t.then(opts => assign(opts, { headers }))\n\t\t\t\t.then(opts => download(zipPath, opts))\n\t\t\t\t.then(() => validate(zipPath, extension, version))\n\t\t\t\t.then(manifest => extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true }).then(() => manifest))\n\t\t\t\t.then(manifest => assign({ __metadata: galleryInformation }, manifest))\n\t\t\t\t.then(manifest => pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t')))\n\t\t\t\t.then(() => { this._onDidInstallExtension.fire({ extension }); return extension; })\n\t\t\t\t.then(null, error => { this._onDidInstallExtension.fire({ extension, error }); return TPromise.wrapError(error); });\n\t\t});\n\t}\n\n\tprivate getLastValidExtensionVersion(extension: IExtension, versions: IGalleryVersion[]): TPromise<IGalleryVersion> {\n\t\tif (!versions.length) {\n\t\t\treturn TPromise.wrapError(new Error(nls.localize('noCompatible', \"Couldn't find a compatible version of {0} with this version of Code.\", extension.displayName)));\n\t\t}\n\n\t\tconst version = versions[0];\n\t\treturn this.request(version.manifestUrl)\n\t\t\t.then(opts => json<IExtensionManifest>(opts))\n\t\t\t.then(manifest => {\n\t\t\t\tconst codeVersion = this.contextService.getConfiguration().env.version;\n\t\t\t\tconst desc = {\n\t\t\t\t\tisBuiltin: false,\n\t\t\t\t\tengines: { vscode: manifest.engines.vscode },\n\t\t\t\t\tmain: manifest.main\n\t\t\t\t};\n\n\t\t\t\tif (!isValidExtensionVersion(codeVersion, desc, [])) {\n\t\t\t\t\treturn this.getLastValidExtensionVersion(extension, versions.slice(1));\n\t\t\t\t}\n\n\t\t\t\treturn version;\n\t\t\t});\n\t}\n\n\tprivate installFromZip(zipPath: string): TPromise<IExtension> {\n\t\treturn validate(zipPath).then(manifest => {\n\t\t\tconst extensionPath = path.join(this.extensionsPath, getExtensionId(manifest));\n\t\t\tthis._onInstallExtension.fire(manifest);\n\n\t\t\treturn extract(zipPath, extensionPath, { sourcePath: 'extension', overwrite: true })\n\t\t\t\t.then(() => createExtension(manifest, (<any> manifest).__metadata, extensionPath))\n\t\t\t\t.then(extension => { this._onDidInstallExtension.fire({ extension }); return extension; });\n\t\t});\n\t}\n\n\tuninstall(extension: IExtension): TPromise<void> {\n\t\tconst extensionPath = extension.path || path.join(this.extensionsPath, getExtensionId(extension));\n\n\t\treturn pfs.exists(extensionPath)\n\t\t\t.then(exists => exists ? null : Promise.wrapError(new Error(nls.localize('notExists', \"Could not find extension\"))))\n\t\t\t.then(() => this._onUninstallExtension.fire(extension))\n\t\t\t.then(() => this.setObsolete(extension))\n\t\t\t.then(() => pfs.rimraf(extensionPath))\n\t\t\t.then(() => this.unsetObsolete(extension))\n\t\t\t.then(() => this._onDidUninstallExtension.fire(extension));\n\t}\n\n\tgetInstalled(includeDuplicateVersions: boolean = false): TPromise<IExtension[]> {\n\t\tconst all = this.getAllInstalled();\n\n\t\tif (includeDuplicateVersions) {\n\t\t\treturn all;\n\t\t}\n\n\t\treturn all.then(extensions => {\n\t\t\tconst byId = values(groupBy(extensions, p => `${ p.publisher }.${ p.name }`));\n\t\t\treturn byId.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t});\n\t}\n\n\tprivate getAllInstalled(): TPromise<IExtension[]> {\n\t\tconst limiter = new Limiter(10);\n\n\t\treturn this.getObsoleteExtensions()\n\t\t\t.then(obsolete => {\n\t\t\t\treturn pfs.readdir(this.extensionsPath)\n\t\t\t\t\t.then(extensions => extensions.filter(e => !obsolete[e]))\n\t\t\t\t\t.then<IExtension[]>(extensions => Promise.join(extensions.map(e => {\n\t\t\t\t\t\tconst extensionPath = path.join(this.extensionsPath, e);\n\n\t\t\t\t\t\treturn limiter.queue(\n\t\t\t\t\t\t\t() => pfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t\t\t\t\t.then(raw => parseManifest(raw))\n\t\t\t\t\t\t\t\t.then(manifest => createExtension(manifest, (<any> manifest).__metadata, extensionPath))\n\t\t\t\t\t\t\t\t.then(null, () => null)\n\t\t\t\t\t\t);\n\t\t\t\t\t})))\n\t\t\t\t\t.then(result => result.filter(a => !!a));\n\t\t\t});\n\t}\n\n\tremoveDeprecatedExtensions(): TPromise<void> {\n\t\tconst outdated = this.getOutdatedExtensions()\n\t\t\t.then(extensions => extensions.map(e => getExtensionId(e)));\n\n\t\tconst obsolete = this.getObsoleteExtensions()\n\t\t\t.then(obsolete => Object.keys(obsolete));\n\n\t\treturn TPromise.join([outdated, obsolete])\n\t\t\t.then(result => flatten(result))\n\t\t\t.then<void>(extensionsIds => {\n\t\t\t\treturn TPromise.join(extensionsIds.map(id => {\n\t\t\t\t\treturn pfs.rimraf(path.join(this.extensionsPath, id))\n\t\t\t\t\t\t.then(() => this.withObsoleteExtensions(obsolete => delete obsolete[id]));\n\t\t\t\t}));\n\t\t\t});\n\t}\n\n\tprivate getOutdatedExtensions(): TPromise<IExtension[]> {\n\t\treturn this.getAllInstalled().then(plugins => {\n\t\t\tconst byId = values(groupBy(plugins, p => `${ p.publisher }.${ p.name }`));\n\t\t\tconst extensions = flatten(byId.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version)).slice(1)));\n\n\t\t\treturn extensions\n\t\t\t\t.filter(e => !!e.path);\n\t\t});\n\t}\n\n\tprivate isObsolete(extension: IExtension): TPromise<boolean> {\n\t\tconst id = getExtensionId(extension);\n\t\treturn this.withObsoleteExtensions(obsolete => !!obsolete[id]);\n\t}\n\n\tprivate setObsolete(extension: IExtension): TPromise<void> {\n\t\tconst id = getExtensionId(extension);\n\t\treturn this.withObsoleteExtensions(obsolete => assign(obsolete, { [id]: true }));\n\t}\n\n\tprivate unsetObsolete(extension: IExtension): TPromise<void> {\n\t\tconst id = getExtensionId(extension);\n\t\treturn this.withObsoleteExtensions<void>(obsolete => delete obsolete[id]);\n\t}\n\n\tprivate getObsoleteExtensions(): TPromise<{ [id:string]: boolean; }> {\n\t\treturn this.withObsoleteExtensions(obsolete => obsolete);\n\t}\n\n\tprivate withObsoleteExtensions<T>(fn: (obsolete: { [id:string]: boolean; }) => T): TPromise<T> {\n\t\treturn this.obsoleteFileLimiter.queue(() => {\n\t\t\tlet result: T = null;\n\t\t\treturn pfs.readFile(this.obsoletePath, 'utf8')\n\t\t\t\t.then(null, err => err.code === 'ENOENT' ? TPromise.as('{}') : TPromise.wrapError(err))\n\t\t\t\t.then<{ [id: string]: boolean }>(raw => JSON.parse(raw))\n\t\t\t\t.then(obsolete => { result = fn(obsolete); return obsolete; })\n\t\t\t\t.then(obsolete => {\n\t\t\t\t\tif (Object.keys(obsolete).length === 0) {\n\t\t\t\t\t\treturn pfs.rimraf(this.obsoletePath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst raw = JSON.stringify(obsolete);\n\t\t\t\t\t\treturn pfs.writeFile(this.obsoletePath, raw);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => result);\n\t\t});\n\t}\n\n\t// Helper for proxy business... shameful.\n\t// This should be pushed down and not rely on the context service\n\tprivate request(url: string): TPromise<IRequestOptions> {\n\t\tconst settings = TPromise.join([\n\t\t\tUserSettings.getValue(this.contextService, 'http.proxy'),\n\t\t\tUserSettings.getValue(this.contextService, 'http.proxyStrictSSL')\n\t\t]);\n\n\t\treturn settings.then(settings => {\n\t\t\tconst proxyUrl: string = settings[0];\n\t\t\tconst strictSSL: boolean = settings[1];\n\t\t\tconst agent = getProxyAgent(url, { proxyUrl, strictSSL });\n\n\t\t\treturn { url, agent, strictSSL };\n\t\t});\n\t}\n}\n"]}