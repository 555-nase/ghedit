{"version":3,"file":"vs/workbench/parts/extensions/common/vsoGalleryService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/extensions/common/vsoGalleryService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport { IExtension, IGalleryService, IGalleryVersion, IQueryOptions, IQueryResult } from 'vs/workbench/parts/extensions/common/extensions';\nimport { isUndefined } from 'vs/base/common/types';\nimport { assign, getOrDefault } from 'vs/base/common/objects';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface IGalleryExtensionFile {\n\tassetType: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfiles: IGalleryExtensionFile[];\n}\n\nexport interface IGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IGalleryExtensionVersion[];\n\tgalleryApiUrl: string;\n\tstatistics: IGalleryExtensionStatistics[];\n}\n\nexport interface IGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10\n}\n\nenum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6\n}\n\nenum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) {}\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query(assign({}, this.state, { pageNumber, pageSize }));\n\t}\n\n\twithFilter(filterType: FilterType, value?: string): Query {\n\t\tconst criterium: ICriterium = { filterType };\n\n\t\tif (!isUndefined(value)) {\n\t\t\tcriterium.value = value;\n\t\t}\n\n\t\tconst criteria = this.state.criteria.slice();\n\t\tcriteria.push(criterium);\n\t\treturn new Query(assign({}, this.state, { criteria }));\n\t}\n\n\twithSort(sortBy: SortBy, sortOrder = SortOrder.Default): Query {\n\t\treturn new Query(assign({}, this.state, { sortBy, sortOrder }));\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query(assign({}, this.state, { flags: flags.reduce((r, f) => r | f, 0) }));\n\t}\n\n\tget raw(): any {\n\t\treturn {\n\t\t\tfilters: [{\n\t\t\t\tcriteria: this.state.criteria,\n\t\t\t\tpageNumber: this.state.pageNumber,\n\t\t\t\tpageSize: this.state.pageSize,\n\t\t\t\tsortBy: this.state.sortBy,\n\t\t\t\tsortOrder: this.state.sortOrder\n\t\t\t}],\n\t\t\tflags: this.state.flags\n\t\t};\n\t}\n}\n\nfunction getInstallCount(statistics: IGalleryExtensionStatistics[]): number {\n\tif (!statistics) {\n\t\treturn 0;\n\t}\n\n\tconst result = statistics.filter(s => s.statisticName === 'install')[0];\n\treturn result ? result.value : 0;\n}\n\nfunction toExtension(galleryExtension: IGalleryExtension, extensionsGalleryUrl: string, downloadHeaders: any): IExtension {\n\tconst versions = galleryExtension.versions.map<IGalleryVersion>(v => ({\n\t\tversion: v.version,\n\t\tdate: v.lastUpdated,\n\t\tdownloadHeaders,\n\t\tdownloadUrl: `${ v.assetUri }/Microsoft.VisualStudio.Services.VSIXPackage?install=true`,\n\t\tmanifestUrl: `${ v.assetUri }/Microsoft.VisualStudio.Code.Manifest`\n\t}));\n\n\treturn {\n\t\tname: galleryExtension.extensionName,\n\t\tdisplayName: galleryExtension.displayName || galleryExtension.extensionName,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tversion: versions[0].version,\n\t\tengines: { vscode: void 0 }, // TODO: ugly\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tgalleryInformation: {\n\t\t\tgalleryApiUrl: extensionsGalleryUrl,\n\t\t\tid: galleryExtension.extensionId,\n\t\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\t\tinstallCount: getInstallCount(galleryExtension.statistics),\n\t\t\tversions\n\t\t}\n\t};\n}\n\nexport class GalleryService implements IGalleryService {\n\n\tserviceId = IGalleryService;\n\n\tprivate extensionsGalleryUrl: string;\n\tprivate machineId: TPromise<string>;\n\n\tconstructor(\n\t\t@IRequestService private requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tconst config = contextService.getConfiguration().env.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.machineId = telemetryService.getTelemetryInfo().then(({ machineId }) => machineId);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${ this.extensionsGalleryUrl }${ path }`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tquery(options: IQueryOptions = {}): TPromise<IQueryResult> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn TPromise.wrapError(new Error('No extension gallery service configured.'));\n\t\t}\n\n\t\tconst text = getOrDefault(options, o => o.text, '');\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 30);\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeAssetUri, Flags.IncludeStatistics)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withSort(SortBy.InstallCount);\n\n\t\tif (text) {\n\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t} else if (options.ids) {\n\t\t\toptions.ids.forEach(id => {\n\t\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t\t});\n\t\t}\n\n\t\treturn this.queryGallery(query).then(({ galleryExtensions, total }) => {\n\t\t\treturn this.getRequestHeaders().then(downloadHeaders => {\n\t\t\t\tconst extensions = galleryExtensions.map(e => toExtension(e, this.extensionsGalleryUrl, downloadHeaders));\n\t\t\t\tconst pageSize = query.pageSize;\n\t\t\t\tconst getPage = pageIndex => this.queryGallery(query.withPage(pageIndex + 1))\n\t\t\t\t\t.then(({ galleryExtensions }) => galleryExtensions.map(e => toExtension(e, this.extensionsGalleryUrl, downloadHeaders)));\n\n\t\t\t\treturn { firstPage: extensions, total, pageSize, getPage };\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate queryGallery(query: Query): TPromise<{ galleryExtensions: IGalleryExtension[], total: number; }> {\n\t\tconst data = JSON.stringify(query.raw);\n\n\t\treturn this.getRequestHeaders()\n\t\t\t.then(headers => {\n\t\t\t\theaders = assign(headers, {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t\t\t'Content-Length': data.length\n\t\t\t\t});\n\n\t\t\t\tconst request = {\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\t\tdata,\n\t\t\t\t\theaders\n\t\t\t\t};\n\n\t\t\t\treturn this.requestService.makeRequest(request);\n\t\t\t})\n\t\t\t.then(r => JSON.parse(r.responseText).results[0])\n\t\t\t.then(r => {\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t});\n\t}\n\n\tprivate getRequestHeaders(): TPromise<any> {\n\t\treturn this.machineId.then(machineId => {\n\t\t\tconst result = {\n\t\t\t\t'X-Market-Client-Id': 'VSCode',\n\t\t\t\t'User-Agent': 'VSCode'\n\t\t\t};\n\n\t\t\tif (machineId) {\n\t\t\t\tresult['X-Market-User-Id'] = machineId;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n}"]}