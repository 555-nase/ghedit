{"version":3,"file":"vs/workbench/parts/telemetry/node/nodeAppInsightsTelemetryAppender.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/telemetry/node/nodeAppInsightsTelemetryAppender.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/* tslint:disable:semicolon */\n\nimport errors = require('vs/base/common/errors');\nimport {IStorageService} from 'vs/platform/storage/common/storage';\nimport {ITelemetryAppender} from 'vs/platform/telemetry/common/telemetry';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {AIAdapter, IAIAdapter} from 'vs/base/node/aiAdapter';\n\nimport winreg = require('winreg');\nimport os = require('os');\n\nclass StorageKeys {\n\tpublic static sqmUserId: string = 'telemetry.sqm.userId';\n\tpublic static sqmMachineId: string = 'telemetry.sqm.machineId';\n\tpublic static lastSessionDate: string = 'telemetry.lastSessionDate';\n\tpublic static firstSessionDate: string = 'telemetry.firstSessionDate';\n}\n\nexport class NodeAppInsightsTelemetryAppender implements ITelemetryAppender {\n\n\tpublic static EVENT_NAME_PREFIX: string = 'monacoworkbench';\n\n\tprivate static SQM_KEY: string = '\\\\Software\\\\Microsoft\\\\SQMClient';\n\n\tprivate storageService:IStorageService;\n\tprivate contextService: IWorkspaceContextService;\n\n\tprivate appInsights: IAIAdapter;\n\tprivate appInsightsVortex: IAIAdapter;\n\n\tprotected commonProperties: {[key:string] : string};\n\tprotected commonMetrics: {[key: string]: number};\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t/* for test only */\n\t\tclient: any\n\t) {\n\t\tthis.commonProperties = {};\n\t\tthis.commonMetrics = {};\n\n\t\tthis.contextService = contextService;\n\t\tthis.storageService = storageService;\n\n\t\tlet config = this.contextService.getConfiguration().env.aiConfig;\n\t\tlet key = config ? config.key: null;\n\t\tlet asimovKey = config ? config.asimovKey: null;\n\n\t\t// for test\n\t\tif (client) {\n\t\t\tthis.appInsights = client;\n\n\t\t\tif (asimovKey) {\n\t\t\t\tthis.appInsightsVortex = client;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (key) {\n\t\t\tthis.appInsights = new AIAdapter(key, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX);\n\t\t}\n\n\t\tif(asimovKey) {\n\t\t\tthis.appInsightsVortex = new AIAdapter(asimovKey, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX);\n\t\t}\n\n\t\tthis.loadAddtionaProperties();\n\t}\n\n\tprivate loadAddtionaProperties(): void {\n\t\t// add shell & render version\n\t\tif (process.versions) {\n\t\t\tthis.commonProperties['version.shell'] = (<any>process).versions['electron'];\n\t\t\tthis.commonProperties['version.renderer'] = (<any>process).versions['chrome'];\n\t\t}\n\n\t\t// add SQM data for windows machines\n\t\tif (process.platform === 'win32') {\n\t\t\tvar sqmUserId = this.storageService.get(StorageKeys.sqmUserId);\n\t\t\tif (sqmUserId) {\n\t\t\t\tthis.commonProperties['sqm.userid'] = sqmUserId;\n\t\t\t} else {\n\t\t\t\tthis.getWinRegKeyData(NodeAppInsightsTelemetryAppender.SQM_KEY, 'UserId', winreg.HKCU, (error, result: string) => {\n\t\t\t\t\tif (!error && result) {\n\t\t\t\t\t\tthis.commonProperties['sqm.userid'] = result;\n\t\t\t\t\t\tthis.storageService.store(StorageKeys.sqmUserId, result);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar sqmMachineId = this.storageService.get(StorageKeys.sqmMachineId);\n\t\t\tif (sqmMachineId) {\n\t\t\t\tthis.commonProperties['sqm.machineid'] = sqmMachineId;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.getWinRegKeyData(NodeAppInsightsTelemetryAppender.SQM_KEY, 'MachineId', winreg.HKLM,(error, result) => {\n\t\t\t\t\tif (!error && result) {\n\t\t\t\t\t\tthis.commonProperties['sqm.machineid'] = result;\n\t\t\t\t\t\tthis.storageService.store(StorageKeys.sqmMachineId, result);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar firstSessionDate = this.storageService.get(StorageKeys.firstSessionDate);\n\t\tif(!firstSessionDate) {\n\t\t\tfirstSessionDate = (new Date()).toUTCString();\n\t\t\tthis.storageService.store(StorageKeys.firstSessionDate, firstSessionDate);\n\t\t}\n\t\tthis.commonProperties['firstSessionDate'] = firstSessionDate;\n\n\t\t//report last session date and isNewSession flag\n\t\tvar lastSessionDate = this.storageService.get(StorageKeys.lastSessionDate);\n\t\tif(!lastSessionDate) {\n\t\t\tthis.commonMetrics['isNewSession'] = 1;\n\t\t} else {\n\t\t\tthis.commonMetrics['isNewSession'] = 0;\n\t\t\tthis.commonProperties['lastSessionDate'] = lastSessionDate;\n\t\t}\n\n\t\tthis.storageService.store(StorageKeys.lastSessionDate, (new Date()).toUTCString());\n\n\t\tif (os) {\n\t\t\tthis.commonProperties['osVersion'] = os.release();\n\t\t}\n\t}\n\n\tprivate getWinRegKeyData(key: string, name: string, hive: string, callback: (error: Error, userId: string) => void): void {\n\t\tif (process.platform === 'win32') {\n\t\t\ttry {\n\t\t\t\tvar reg = new winreg({\n\t\t\t\t\thive: hive,\n\t\t\t\t\tkey: key\n\t\t\t\t});\n\n\t\t\t\treg.get(name, (e, result) => {\n\t\t\t\t\tif (e || !result) {\n\t\t\t\t\t\tcallback(e, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback(null, result.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\tcallback(err, null);\n\t\t\t}\n\t\t} else {\n\t\t\tcallback(null, null);\n\t\t}\n\t}\n\n\tpublic log(eventName: string, data?: any): void {\n\n\t\tdata = data || Object.create(null);\n\t\tdata = this.addCommonMetrics(data);\n\t\tdata = this.addCommonProperties(data);\n\n\t\tif (this.appInsights) {\n\t\t\tthis.appInsights.log(eventName, data);\n\t\t}\n\n\t\tif (this.appInsightsVortex) {\n\t\t\tthis.appInsightsVortex.log(eventName, data);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.appInsights) {\n\t\t\tthis.appInsights.dispose();\n\t\t}\n\n\t\tif (this.appInsightsVortex) {\n\t\t\tthis.appInsightsVortex.dispose();\n\t\t}\n\n\t\tthis.appInsights = null;\n\t\tthis.appInsightsVortex = null;\n\t}\n\n\tprotected addCommonProperties(properties: any): any {\n\t\tfor (var prop in this.commonProperties) {\n\t\t\tproperties['common.' + prop] = this.commonProperties[prop];\n\t\t}\n\t\treturn properties;\n\t}\n\n\tprotected addCommonMetrics(metrics: any): any {\n\t\tfor (var prop in this.commonMetrics) {\n\t\t\tmetrics['common.' + prop] = this.commonMetrics[prop];\n\t\t}\n\t\treturn metrics;\n\t}\n}"]}