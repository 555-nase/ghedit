{"version":3,"file":"vs/workbench/parts/execution/electron-browser/terminalService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/execution/electron-browser/terminalService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport errors = require('vs/base/common/errors');\nimport uri from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ITerminalService} from 'vs/workbench/parts/execution/common/execution';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IMessageService} from 'vs/platform/message/common/message';\n\nimport cp = require('child_process');\nimport processes = require('vs/base/node/processes');\n\nexport class WinTerminalService implements ITerminalService {\n\tpublic serviceId = ITerminalService;\n\n\tconstructor(\n\t\t@IConfigurationService private _configurationService: IConfigurationService,\n\t\t@IMessageService private _messageService: IMessageService\n\t) {\n\t}\n\n\tpublic openTerminal(path: string): void {\n\t\tcp.spawn(processes.getWindowsShell(), ['/c', 'start', '/wait'], { cwd: path });\n\t}\n}\n\nexport class MacTerminalService implements ITerminalService {\n\tpublic serviceId = ITerminalService;\n\tprivate _terminalApplicationScriptPath: TPromise<string>;\n\n\tpublic openTerminal(path: string): void {\n\t\tthis.getTerminalHelperScriptPath().done(helperPath => {\n\t\t\tcp.spawn('/usr/bin/osascript', [helperPath, path]);\n\t\t}, errors.onUnexpectedError);\n\t}\n\n\tprivate getTerminalHelperScriptPath(): TPromise<string> {\n\t\tif (this._terminalApplicationScriptPath) {\n\t\t\treturn this._terminalApplicationScriptPath;\n\t\t}\n\n\t\treturn this._terminalApplicationScriptPath = new TPromise<string>((c, e) => {\n\t\t\tlet version = '';\n\t\t\tlet child = cp.spawn('/usr/bin/osascript', ['-e', 'version of application \"iTerm\"']);\n\t\t\tchild.on('error', e);\n\t\t\tchild.stdout.on('data', (data) => {\n\t\t\t\tversion += data.toString();\n\t\t\t});\n\t\t\tchild.on('exit', (code: number) => {\n\t\t\t\tlet script = 'terminal.scpt';\n\t\t\t\tif (code === 0) {\n\t\t\t\t\tconst match = /(\\d+).(\\d+).(\\d+)/.exec(version);\n\t\t\t\t\tif (match.length >= 4) {\n\t\t\t\t\t\tconst major = +match[1];\n\t\t\t\t\t\tconst minor = +match[2];\n\t\t\t\t\t\tconst veryMinor = +match[3];\n\t\t\t\t\t\tif ((major < 2) || (major === 2 && minor < 9) || (major === 2 && minor === 9 && veryMinor < 20150414)) {\n\t\t\t\t\t\t\tscript = 'iterm.scpt';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscript = 'itermNew.scpt';\t// versions >= 2.9.20150414 use new script syntax\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc(script);\n\t\t\t});\n\t\t}).then(name => uri.parse(require.toUrl(`vs/workbench/parts/execution/electron-browser/${ name }`)).fsPath);\n\t}\n}\n\nexport class LinuxTerminalService implements ITerminalService {\n\tpublic serviceId = ITerminalService;\n\n\tpublic openTerminal(path: string): void {\n\t\tcp.spawn('x-terminal-emulator', [], { cwd: path });\n\t}\n}\n"]}