{"version":3,"sources":["vs/workbench/parts/tasks/electron-browser/task.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/tasks/electron-browser/task.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/task.contribution';\nimport 'vs/workbench/parts/tasks/browser/taskQuickOpen';\n\nimport * as nls from 'vs/nls';\nimport * as Env from 'vs/base/common/flags';\n\nimport { TPromise, Promise } from 'vs/base/common/winjs.base';\nimport Severity from 'vs/base/common/severity';\nimport * as Objects from 'vs/base/common/objects';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Action } from 'vs/base/common/actions';\nimport * as Dom from 'vs/base/browser/dom';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { EventEmitter, ListenerUnbind } from 'vs/base/common/eventEmitter';\nimport * as Builder from 'vs/base/browser/builder';\nimport * as Types from 'vs/base/common/types';\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport { match } from 'vs/base/common/glob';\nimport { setTimeout } from 'vs/base/common/platform';\nimport { TerminateResponse } from 'vs/base/common/processes';\n\nimport { Registry } from 'vs/platform/platform';\nimport { ILifecycleService } from 'vs/platform/lifecycle/common/lifecycle';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IEventService } from 'vs/platform/event/common/event';\nimport { IEditor } from 'vs/platform/editor/common/editor';\nimport { IMessageService } from 'vs/platform/message/common/message';\nimport { IMarkerService, MarkerStatistics } from 'vs/platform/markers/common/markers';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IConfigurationService, ConfigurationServiceEventTypes } from 'vs/platform/configuration/common/configuration';\nimport { IFileService, FileChangesEvent, FileChangeType, EventType as FileEventType } from 'vs/platform/files/common/files';\nimport { IExtensionService } from 'vs/platform/extensions/common/extensions';\n\nimport { IModeService } from 'vs/editor/common/services/modeService';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\nimport jsonContributionRegistry = require('vs/platform/jsonschemas/common/jsonContributionRegistry');\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\n\nimport { IWorkbenchActionRegistry, Extensions as WorkbenchActionExtensions } from 'vs/workbench/common/actionRegistry';\nimport { IStatusbarItem, IStatusbarRegistry, Extensions as StatusbarExtensions, StatusbarItemDescriptor, StatusbarAlignment }  from 'vs/workbench/browser/parts/statusbar/statusbar';\nimport { IQuickOpenRegistry, Extensions as QuickOpenExtensions, QuickOpenHandlerDescriptor } from 'vs/workbench/browser/quickopen';\n\nimport { IQuickOpenService } from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\n\nimport { SystemVariables } from 'vs/workbench/parts/lib/node/systemVariables';\nimport { ITextFileService, EventType } from 'vs/workbench/parts/files/common/files';\nimport { IOutputService, IOutputChannelRegistry, Extensions as OutputExt, IOutputChannel } from 'vs/workbench/parts/output/common/output';\n\nimport { ITaskSystem, ITaskSummary, ITaskRunResult, TaskError, TaskErrors, TaskConfiguration, TaskDescription, TaskSystemEvents } from 'vs/workbench/parts/tasks/common/taskSystem';\nimport { ITaskService, TaskServiceEvents } from 'vs/workbench/parts/tasks/common/taskService';\nimport { templates as taskTemplates } from 'vs/workbench/parts/tasks/common/taskTemplates';\n\nimport { LanguageServiceTaskSystem, LanguageServiceTaskConfiguration }  from 'vs/workbench/parts/tasks/common/languageServiceTaskSystem';\nimport * as FileConfig  from 'vs/workbench/parts/tasks/node/processRunnerConfiguration';\nimport { ProcessRunnerSystem } from 'vs/workbench/parts/tasks/node/processRunnerSystem';\nimport { ProcessRunnerDetector }  from 'vs/workbench/parts/tasks/node/processRunnerDetector';\n\nlet $ = Builder.$;\n\nclass AbstractTaskAction extends Action {\n\n\tprotected taskService: ITaskService;\n\tprotected telemetryService: ITelemetryService;\n\n\tconstructor(id:string, label:string, @ITaskService taskService:ITaskService,\n\t\t@ITelemetryService telemetryService: ITelemetryService) {\n\n\t\tsuper(id, label);\n\t\tthis.taskService = taskService;\n\t\tthis.telemetryService = telemetryService;\n\t}\n}\n\nclass BuildAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.build';\n\tpublic static TEXT = nls.localize('BuildAction.label','Run Build Task');\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService) {\n\t\tsuper(id, label, taskService, telemetryService);\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.taskService.build();\n\t}\n}\n\nclass TestAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.test';\n\tpublic static TEXT = nls.localize('TestAction.label','Run Test Task');\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService) {\n\t\tsuper(id, label, taskService, telemetryService);\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.taskService.runTest();\n\t}\n}\n\nclass RebuildAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.rebuild';\n\tpublic static TEXT = nls.localize('RebuildAction.label', 'Run Rebuild Task');\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService) {\n\t\tsuper(id, label, taskService, telemetryService);\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.taskService.rebuild();\n\t}\n}\n\nclass CleanAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.clean';\n\tpublic static TEXT = nls.localize('CleanAction.label', 'Run Clean Task');\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService) {\n\t\tsuper(id, label, taskService, telemetryService);\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.taskService.clean();\n\t}\n}\n\nclass ConfigureTaskRunnerAction extends Action {\n\n\tpublic static ID = 'workbench.action.tasks.configureTaskRunner';\n\tpublic static TEXT = nls.localize('ConfigureTaskRunnerAction.label', 'Configure Task Runner');\n\n\tprivate configurationService: IConfigurationService;\n\tprivate fileService: IFileService;\n\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate outputService: IOutputService;\n\tprivate messageService: IMessageService;\n\tprivate quickOpenService: IQuickOpenService;\n\n\tconstructor(id: string, label: string, @IConfigurationService configurationService: IConfigurationService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService, @IFileService fileService: IFileService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService, @IOutputService outputService: IOutputService,\n\t\t@IMessageService messageService: IMessageService, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\n\t\tsuper(id, label);\n\t\tthis.configurationService = configurationService;\n\t\tthis.editorService = editorService;\n\t\tthis.fileService = fileService;\n\t\tthis.contextService = contextService;\n\t\tthis.outputService = outputService;\n\t\tthis.messageService = messageService;\n\t\tthis.quickOpenService = quickOpenService;\n\t}\n\n\tpublic run(event?:any): TPromise<IEditor> {\n\t\tif (!this.contextService.getWorkspace()) {\n\t\t\tthis.messageService.show(Severity.Info, nls.localize('ConfigureTaskRunnerAction.noWorkspace', 'Tasks are only available on a workspace folder.'));\n\t\t\treturn TPromise.as(undefined);\n\t\t}\n\t\tlet sideBySide = !!(event && (event.ctrlKey || event.metaKey));\n\t\treturn this.fileService.resolveFile(this.contextService.toResource('.vscode/tasks.json')).then((success) => {\n\t\t\treturn success;\n\t\t}, (err:any) => {\n\t\t\t;\n\t\t\treturn this.quickOpenService.pick(taskTemplates, { placeHolder: nls.localize('ConfigureTaskRunnerAction.quickPick.template', 'Select a Task Runner')}).then(selection => {\n\t\t\t\tif (!selection) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tlet contentPromise: TPromise<string>;\n\t\t\t\tif (selection.autoDetect) {\n\t\t\t\t\tconst outputChannel = this.outputService.getChannel(TaskService.OutputChannelId);\n\t\t\t\t\toutputChannel.show();\n\t\t\t\t\toutputChannel.append(nls.localize('ConfigureTaskRunnerAction.autoDetecting', 'Auto detecting tasks for {0}', selection.id) + '\\n');\n\t\t\t\t\tlet detector = new ProcessRunnerDetector(this.fileService, this.contextService, new SystemVariables(this.editorService, this.contextService));\n\t\t\t\t\tcontentPromise = detector.detect(false, selection.id).then((value) => {\n\t\t\t\t\t\tlet config = value.config;\n\t\t\t\t\t\tif (value.stderr && value.stderr.length > 0) {\n\t\t\t\t\t\t\tvalue.stderr.forEach((line) => {\n\t\t\t\t\t\t\t\toutputChannel.append(line + '\\n');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis.messageService.show(Severity.Warning, nls.localize('ConfigureTaskRunnerAction.autoDetect', 'Auto detecting the task system failed. Using default template. Consult the task output for details.'));\n\t\t\t\t\t\t\treturn selection.content;\n\t\t\t\t\t\t} else if (config) {\n\t\t\t\t\t\t\tif (value.stdout && value.stdout.length > 0) {\n\t\t\t\t\t\t\t\tvalue.stdout.forEach(line => outputChannel.append(line + '\\n'));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet content = JSON.stringify(config, null, '\\t');\n\t\t\t\t\t\t\tcontent = [\n\t\t\t\t\t\t\t\t'{',\n\t\t\t\t\t\t\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t\t\t\t\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t\t\t\t\t].join('\\n') + content.substr(1);\n\t\t\t\t\t\t\treturn content;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn selection.content;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tcontentPromise = TPromise.as(selection.content);\n\t\t\t\t}\n\t\t\t\treturn contentPromise.then(content => {\n\t\t\t\t\treturn this.fileService.createFile(this.contextService.toResource('.vscode/tasks.json'), content);\n\t\t\t\t});\n\t\t\t});\n\t\t}).then((stat) => {\n\t\t\tif (!stat) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// // (2) Open editor with configuration file\n\t\t\treturn this.editorService.openEditor({\n\t\t\t\tresource: stat.resource,\n\t\t\t\toptions: {\n\t\t\t\t\tforceOpen: true\n\t\t\t\t}\n\t\t\t}, sideBySide);\n\t\t}, (error) => {\n\t\t\tthrow new Error(nls.localize('ConfigureTaskRunnerAction.failed', \"Unable to create the 'tasks.json' file inside the '.vscode' folder. Consult the task output for details.\"));\n\t\t});\n\t}\n}\n\nclass CloseMessageAction extends Action {\n\n\tpublic static ID = 'workbench.action.build.closeMessage';\n\tpublic static TEXT = nls.localize('CloseMessageAction.label', 'Close');\n\n\tpublic closeFunction: () => void;\n\n\tconstructor() {\n\t\tsuper(CloseMessageAction.ID, CloseMessageAction.TEXT);\n\t}\n\tpublic run(): Promise {\n\t\tif (this.closeFunction) {\n\t\t\tthis.closeFunction();\n\t\t}\n\t\treturn TPromise.as(null);\n\t}\n}\n\nclass TerminateAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.terminate';\n\tpublic static TEXT = nls.localize('TerminateAction.label', 'Terminate Running Task');\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService) {\n\t\tsuper(id, label, taskService, telemetryService);\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.taskService.isActive().then((active) => {\n\t\t\tif (active) {\n\t\t\t\treturn this.taskService.terminate().then((response) => {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.wrapError(nls.localize('TerminateAction.failed', 'Failed to terminate running task'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ShowLogAction extends AbstractTaskAction {\n\tpublic static ID = 'workbench.action.tasks.showLog';\n\tpublic static TEXT = nls.localize('ShowLogAction.label', 'Show Task Log');\n\n\tprivate outputService: IOutputService;\n\n\tconstructor(id: string, label: string, @ITaskService taskService:ITaskService, @ITelemetryService telemetryService: ITelemetryService,\n\t\t@IOutputService outputService:IOutputService) {\n\n\t\tsuper(id, label, taskService, telemetryService);\n\t\tthis.outputService = outputService;\n\t}\n\n\tpublic run(): Promise {\n\t\treturn this.outputService.getChannel(TaskService.OutputChannelId).show();\n\t}\n}\n\nclass RunTaskAction extends Action {\n\n\tpublic static ID = 'workbench.action.tasks.runTask';\n\tpublic static TEXT = nls.localize('RunTaskAction.label', \"Run Task\");\n\tprivate quickOpenService: IQuickOpenService;\n\n\tconstructor(id: string, label: string, @IQuickOpenService quickOpenService:IQuickOpenService) {\n\t\tsuper(id, label);\n\t\tthis.quickOpenService = quickOpenService;\n\t}\n\n\tpublic run(event?:any): Promise {\n\t\tthis.quickOpenService.show('task ');\n\t\treturn TPromise.as(null);\n\t}\n}\n\n\nclass StatusBarItem implements IStatusbarItem {\n\n\tprivate quickOpenService: IQuickOpenService;\n\tprivate markerService: IMarkerService;\n\tprivate taskService:ITaskService;\n\tprivate outputService: IOutputService;\n\n\tprivate intervalToken: any;\n\tprivate activeCount: number;\n\tprivate static progressChars:string = '|/-\\\\';\n\n\tconstructor(@IQuickOpenService quickOpenService:IQuickOpenService,\n\t\t@IMarkerService markerService:IMarkerService, @IOutputService outputService:IOutputService,\n\t\t@ITaskService taskService:ITaskService) {\n\n\t\tthis.quickOpenService = quickOpenService;\n\t\tthis.markerService = markerService;\n\t\tthis.outputService = outputService;\n\t\tthis.taskService = taskService;\n\t\tthis.activeCount = 0;\n\t}\n\n\tpublic render(container: HTMLElement): IDisposable {\n\n\t\tlet callOnDispose: IDisposable[] = [],\n\t\t\telement = document.createElement('div'),\n\t\t\t// icon = document.createElement('a'),\n\t\t\tprogress = document.createElement('div'),\n\t\t\tlabel = document.createElement('a'),\n\t\t\terror = document.createElement('div'),\n\t\t\twarning = document.createElement('div'),\n\t\t\tinfo = document.createElement('div');\n\n\t\tDom.addClass(element, 'task-statusbar-item');\n\n\t\t// dom.addClass(icon, 'task-statusbar-item-icon');\n\t\t// element.appendChild(icon);\n\n\t\tDom.addClass(progress, 'task-statusbar-item-progress');\n\t\telement.appendChild(progress);\n\t\tprogress.innerHTML = StatusBarItem.progressChars[0];\n\t\t$(progress).hide();\n\n\t\tDom.addClass(label, 'task-statusbar-item-label');\n\t\telement.appendChild(label);\n\n\t\tDom.addClass(error, 'task-statusbar-item-label-error');\n\t\terror.innerHTML = '0';\n\t\tlabel.appendChild(error);\n\n\t\tDom.addClass(warning, 'task-statusbar-item-label-warning');\n\t\twarning.innerHTML = '0';\n\t\tlabel.appendChild(warning);\n\n\t\tDom.addClass(info, 'task-statusbar-item-label-info');\n\t\tlabel.appendChild(info);\n\t\t$(info).hide();\n\n//\t\tcallOnDispose.push(dom.addListener(icon, 'click', (e:MouseEvent) => {\n//\t\t\tthis.outputService.showOutput(TaskService.OutputChannel, e.ctrlKey || e.metaKey, true);\n//\t\t}));\n\n\t\tcallOnDispose.push(Dom.addDisposableListener(label, 'click', (e:MouseEvent) => {\n\t\t\tthis.quickOpenService.show('!');\n\t\t}));\n\n\t\tlet updateStatus = (element:HTMLDivElement, stats:number): boolean => {\n\t\t\tif (stats > 0) {\n\t\t\t\telement.innerHTML = stats.toString();\n\t\t\t\t$(element).show();\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t$(element).hide();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\n\t\tlet manyMarkers = nls.localize('manyMarkers', \"99+\");\n\t\tlet updateLabel = (stats: MarkerStatistics) => {\n\t\t\terror.innerHTML = stats.errors < 100 ? stats.errors.toString() : manyMarkers;\n\t\t\twarning.innerHTML = stats.warnings < 100 ? stats.warnings.toString() : manyMarkers;\n\t\t\tupdateStatus(info, stats.infos);\n\t\t};\n\n\t\tthis.markerService.onMarkerChanged((changedResources) => {\n\t\t\tupdateLabel(this.markerService.getStatistics());\n\t\t});\n\n\t\tcallOnDispose.push(this.taskService.addListener2(TaskServiceEvents.Active, () => {\n\t\t\tthis.activeCount++;\n\t\t\tif (this.activeCount === 1) {\n\t\t\t\tlet index = 1;\n\t\t\t\tlet chars = StatusBarItem.progressChars;\n\t\t\t\tprogress.innerHTML = chars[0];\n\t\t\t\tthis.intervalToken = setInterval(() => {\n\t\t\t\t\tprogress.innerHTML = chars[index];\n\t\t\t\t\tindex++;\n\t\t\t\t\tif (index >= chars.length) {\n\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t}\n\t\t\t\t}, 50);\n\t\t\t\t$(progress).show();\n\t\t\t}\n\t\t}));\n\n\t\tcallOnDispose.push(this.taskService.addListener2(TaskServiceEvents.Inactive, (data:TaskServiceEventData) => {\n\t\t\tthis.activeCount--;\n\t\t\tif (this.activeCount === 0) {\n\t\t\t\t$(progress).hide();\n\t\t\t\tclearInterval(this.intervalToken);\n\t\t\t\tthis.intervalToken = null;\n\t\t\t}\n\t\t}));\n\n\t\tcallOnDispose.push(this.taskService.addListener2(TaskServiceEvents.Terminated, () => {\n\t\t\tif (this.activeCount !== 0) {\n\t\t\t\t$(progress).hide();\n\t\t\t\tif (this.intervalToken) {\n\t\t\t\t\tclearInterval(this.intervalToken);\n\t\t\t\t\tthis.intervalToken = null;\n\t\t\t\t}\n\t\t\t\tthis.activeCount = 0;\n\t\t\t}\n\t\t}));\n\n\t\tcontainer.appendChild(element);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tcallOnDispose = dispose(callOnDispose);\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface TaskServiceEventData {\n\terror?: any;\n}\n\nclass TaskService extends EventEmitter implements ITaskService {\n\tpublic serviceId = ITaskService;\n\tpublic static SERVICE_ID: string = 'taskService';\n\tpublic static OutputChannelId:string = 'tasks';\n\tpublic static OutputChannelLabel:string = nls.localize('tasks', \"Tasks\");\n\n\tprivate modeService: IModeService;\n\tprivate configurationService: IConfigurationService;\n\tprivate markerService: IMarkerService;\n\tprivate outputService: IOutputService;\n\tprivate messageService: IMessageService;\n\tprivate fileService: IFileService;\n\tprivate telemetryService: ITelemetryService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate textFileService: ITextFileService;\n\tprivate eventService: IEventService;\n\tprivate modelService: IModelService;\n\tprivate extensionService: IExtensionService;\n\tprivate quickOpenService: IQuickOpenService;\n\n\tprivate _taskSystemPromise: TPromise<ITaskSystem>;\n\tprivate _taskSystem: ITaskSystem;\n\tprivate taskSystemListeners: ListenerUnbind[];\n\tprivate clearTaskSystemPromise: boolean;\n\tprivate outputChannel: IOutputChannel;\n\n\tprivate fileChangesListener: ListenerUnbind;\n\n\tconstructor(@IModeService modeService: IModeService, @IConfigurationService configurationService: IConfigurationService,\n\t\t@IMarkerService markerService: IMarkerService, @IOutputService outputService: IOutputService,\n\t\t@IMessageService messageService: IMessageService, @IWorkbenchEditorService editorService:IWorkbenchEditorService,\n\t\t@IFileService fileService:IFileService, @IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@ITelemetryService telemetryService: ITelemetryService, @ITextFileService textFileService:ITextFileService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService, @IEventService eventService: IEventService,\n\t\t@IModelService modelService: IModelService, @IExtensionService extensionService: IExtensionService,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService) {\n\n\t\tsuper();\n\t\tthis.modeService = modeService;\n\t\tthis.configurationService = configurationService;\n\t\tthis.markerService = markerService;\n\t\tthis.outputService = outputService;\n\t\tthis.messageService = messageService;\n\t\tthis.editorService = editorService;\n\t\tthis.fileService = fileService;\n\t\tthis.contextService = contextService;\n\t\tthis.telemetryService = telemetryService;\n\t\tthis.textFileService = textFileService;\n\t\tthis.eventService = eventService;\n\t\tthis.modelService = modelService;\n\t\tthis.extensionService = extensionService;\n\t\tthis.quickOpenService = quickOpenService;\n\n\t\tthis.taskSystemListeners = [];\n\t\tthis.clearTaskSystemPromise = false;\n\t\tthis.outputChannel = this.outputService.getChannel(TaskService.OutputChannelId);\n\t\tthis.configurationService.addListener(ConfigurationServiceEventTypes.UPDATED, () => {\n\t\t\tthis.emit(TaskServiceEvents.ConfigChanged);\n\t\t\tif (this._taskSystem && this._taskSystem.isActiveSync()) {\n\t\t\t\tthis.clearTaskSystemPromise = true;\n\t\t\t} else {\n\t\t\t\tthis._taskSystem = null;\n\t\t\t\tthis._taskSystemPromise = null;\n\t\t\t}\n\t\t\tthis.disposeTaskSystemListeners();\n\t\t});\n\n\t\tlifecycleService.addBeforeShutdownParticipant(this);\n\t}\n\n\tprivate disposeTaskSystemListeners(): void {\n\t\tthis.taskSystemListeners.forEach(unbind => unbind());\n\t\tthis.taskSystemListeners = [];\n\t}\n\n\tprivate disposeFileChangesListener(): void {\n\t\tif (this.fileChangesListener) {\n\t\t\tthis.fileChangesListener();\n\t\t\tthis.fileChangesListener = null;\n\t\t}\n\t}\n\n\tprivate get taskSystemPromise(): TPromise<ITaskSystem> {\n\t\tif (!this._taskSystemPromise) {\n\t\t\tlet variables = new SystemVariables(this.editorService, this.contextService);\n\t\t\tlet clearOutput = true;\n\t\t\tthis._taskSystemPromise = TPromise.as(this.configurationService.getConfiguration<TaskConfiguration>('tasks')).then((config: TaskConfiguration) => {\n\t\t\t\tlet parseErrors: string[] = config ? (<any>config).$parseErrors : null;\n\t\t\t\tif (parseErrors) {\n\t\t\t\t\tlet isAffected = false;\n\t\t\t\t\tfor (let i = 0; i < parseErrors.length; i++) {\n\t\t\t\t\t\tif (/tasks\\.json$/.test(parseErrors[i])) {\n\t\t\t\t\t\t\tisAffected = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (isAffected) {\n\t\t\t\t\t\tthis.outputChannel.append(nls.localize('TaskSystem.invalidTaskJson', 'Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\\n'));\n\t\t\t\t\t\tthis.outputChannel.show(true);\n\t\t\t\t\t\treturn TPromise.wrapError({});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet configPromise: TPromise<TaskConfiguration>;\n\t\t\t\tif (config) {\n\t\t\t\t\tif (this.isRunnerConfig(config) && this.hasDetectorSupport(<FileConfig.ExternalTaskRunnerConfiguration>config)) {\n\t\t\t\t\t\tlet fileConfig = <FileConfig.ExternalTaskRunnerConfiguration>config;\n\t\t\t\t\t\tconfigPromise = new ProcessRunnerDetector(this.fileService, this.contextService, variables, fileConfig).detect(true).then((value) => {\n\t\t\t\t\t\t\tclearOutput = this.printStderr(value.stderr);\n\t\t\t\t\t\t\tlet detectedConfig = value.config;\n\t\t\t\t\t\t\tif (!detectedConfig) {\n\t\t\t\t\t\t\t\treturn config;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet result: FileConfig.ExternalTaskRunnerConfiguration = Objects.clone(fileConfig);\n\t\t\t\t\t\t\tlet configuredTasks: IStringDictionary<FileConfig.TaskDescription> = Object.create(null);\n\t\t\t\t\t\t\tif (!result.tasks) {\n\t\t\t\t\t\t\t\tif (detectedConfig.tasks) {\n\t\t\t\t\t\t\t\t\tresult.tasks = detectedConfig.tasks;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.tasks.forEach(task => configuredTasks[task.taskName] = task);\n\t\t\t\t\t\t\t\tdetectedConfig.tasks.forEach((task) => {\n\t\t\t\t\t\t\t\t\tif (!configuredTasks[task.taskName]) {\n\t\t\t\t\t\t\t\t\t\tresult.tasks.push(task);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconfigPromise = TPromise.as<TaskConfiguration>(config);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconfigPromise = new ProcessRunnerDetector(this.fileService, this.contextService, variables).detect(true).then((value) => {\n\t\t\t\t\t\tclearOutput = this.printStderr(value.stderr);\n\t\t\t\t\t\treturn value.config;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn configPromise.then((config) => {\n\t\t\t\t\tif (!config) {\n\t\t\t\t\t\tthis._taskSystemPromise = null;\n\t\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskSystem.noConfiguration', 'No task runner configured.'), TaskErrors.NotConfigured);\n\t\t\t\t\t}\n\t\t\t\t\tlet result: ITaskSystem = null;\n\t\t\t\t\tif (config.buildSystem === 'service') {\n\t\t\t\t\t\tresult = new LanguageServiceTaskSystem(<LanguageServiceTaskConfiguration>config, this.telemetryService, this.modeService);\n\t\t\t\t\t} else if (this.isRunnerConfig(config)) {\n\t\t\t\t\t\tresult = new ProcessRunnerSystem(<FileConfig.ExternalTaskRunnerConfiguration>config, variables, this.markerService, this.modelService, this.telemetryService, this.outputService, TaskService.OutputChannelId, clearOutput);\n\t\t\t\t\t}\n\t\t\t\t\tif (result === null) {\n\t\t\t\t\t\tthis._taskSystemPromise = null;\n\t\t\t\t\t\tthrow new TaskError(Severity.Info, nls.localize('TaskSystem.noBuildType', \"No valid task runner configured. Supported task runners are 'service' and 'program'.\"), TaskErrors.NoValidTaskRunner);\n\t\t\t\t\t}\n\t\t\t\t\tthis.taskSystemListeners.push(result.addListener(TaskSystemEvents.Active, (event) => this.emit(TaskServiceEvents.Active, event)));\n\t\t\t\t\tthis.taskSystemListeners.push(result.addListener(TaskSystemEvents.Inactive, (event) => this.emit(TaskServiceEvents.Inactive, event)));\n\t\t\t\t\tthis._taskSystem = result;\n\t\t\t\t\treturn result;\n\t\t\t\t}, (err: any) => {\n\t\t\t\t\tthis.handleError(err);\n\t\t\t\t\treturn Promise.wrapError(err);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn this._taskSystemPromise;\n\t}\n\n\tprivate printStderr(stderr: string[]): boolean {\n\t\tlet result = true;\n\t\tif (stderr && stderr.length > 0) {\n\t\t\tstderr.forEach((line) => {\n\t\t\t\tresult = false;\n\t\t\t\tthis.outputChannel.append(line + '\\n');\n\t\t\t});\n\t\t\tthis.outputChannel.show(true);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate isRunnerConfig(config: TaskConfiguration): boolean {\n\t\treturn !config.buildSystem || config.buildSystem === 'program';\n\t}\n\n\tprivate hasDetectorSupport(config: FileConfig.ExternalTaskRunnerConfiguration): boolean {\n\t\tif (!config.command) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ProcessRunnerDetector.supports(config.command);\n\t}\n\n\tpublic configureAction(): Action {\n\t\treturn new ConfigureTaskRunnerAction(ConfigureTaskRunnerAction.ID, ConfigureTaskRunnerAction.TEXT,\n\t\t\tthis.configurationService, this.editorService, this.fileService, this.contextService,\n\t\t\tthis.outputService, this.messageService, this.quickOpenService);\n\t}\n\n\tpublic build(): TPromise<ITaskSummary> {\n\t\treturn this.executeTarget(taskSystem => taskSystem.build());\n\t}\n\n\tpublic rebuild(): TPromise<ITaskSummary> {\n\t\treturn this.executeTarget(taskSystem => taskSystem.rebuild());\n\t}\n\n\tpublic clean(): TPromise<ITaskSummary> {\n\t\treturn this.executeTarget(taskSystem => taskSystem.clean());\n\t}\n\n\tpublic runTest(): TPromise<ITaskSummary> {\n\t\treturn this.executeTarget(taskSystem => taskSystem.runTest());\n\t}\n\n\tpublic run(taskIdentifier: string): TPromise<ITaskSummary> {\n\t\treturn this.executeTarget(taskSystem => taskSystem.run(taskIdentifier));\n\t}\n\n\tprivate executeTarget(fn: (taskSystem: ITaskSystem) => ITaskRunResult): TPromise<ITaskSummary> {\n\t\treturn this.textFileService.saveAll().then((value) => {\n\t\t\treturn this.taskSystemPromise.\n\t\t\t\tthen((taskSystem) => {\n\t\t\t\t\treturn taskSystem.isActive().then((active) => {\n\t\t\t\t\t\tif (!active) {\n\t\t\t\t\t\t\treturn fn(taskSystem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new TaskError(Severity.Warning, nls.localize('TaskSystem.active', 'There is an active running task right now. Terminate it first before executing another task.'), TaskErrors.RunningTask);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}).\n\t\t\t\tthen((runResult: ITaskRunResult) => {\n\t\t\t\t\tif (runResult.restartOnFileChanges) {\n\t\t\t\t\t\tlet pattern = runResult.restartOnFileChanges;\n\t\t\t\t\t\tthis.fileChangesListener = this.eventService.addListener(FileEventType.FILE_CHANGES, (event: FileChangesEvent) => {\n\t\t\t\t\t\t\tlet needsRestart = event.changes.some((change) => {\n\t\t\t\t\t\t\t\treturn (change.type === FileChangeType.ADDED || change.type === FileChangeType.DELETED) && !!match(pattern, change.resource.fsPath);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (needsRestart) {\n\t\t\t\t\t\t\t\tthis.terminate().done(() => {\n\t\t\t\t\t\t\t\t\t// We need to give the child process a change to stop.\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tthis.executeTarget(fn);\n\t\t\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn runResult.promise.then((value) => {\n\t\t\t\t\t\tif (this.clearTaskSystemPromise) {\n\t\t\t\t\t\t\tthis._taskSystemPromise = null;\n\t\t\t\t\t\t\tthis.clearTaskSystemPromise = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t});\n\t\t\t\t}, (err: any) => {\n\t\t\t\t\tthis.handleError(err);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic isActive(): TPromise<boolean> {\n\t\tif (this._taskSystemPromise) {\n\t\t\treturn this.taskSystemPromise.then(taskSystem => taskSystem.isActive());\n\t\t}\n\t\treturn TPromise.as(false);\n\t}\n\n\tpublic terminate(): TPromise<TerminateResponse> {\n\t\tif (this._taskSystemPromise) {\n\t\t\treturn this.taskSystemPromise.then(taskSystem => {\n\t\t\t\t\treturn taskSystem.terminate();\n\t\t\t\t}).then(response => {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tif (this.clearTaskSystemPromise) {\n\t\t\t\t\t\t\tthis._taskSystemPromise = null;\n\t\t\t\t\t\t\tthis.clearTaskSystemPromise = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(TaskServiceEvents.Terminated, {});\n\t\t\t\t\t\tthis.disposeFileChangesListener();\n\t\t\t\t\t}\n\t\t\t\t\treturn response;\n\t\t\t\t});\n\t\t}\n\t\treturn TPromise.as( { success: true} );\n\t}\n\n\tpublic tasks(): TPromise<TaskDescription[]> {\n\t\treturn this.taskSystemPromise.then(taskSystem => taskSystem.tasks());\n\t}\n\n\tpublic beforeShutdown(): boolean | TPromise<boolean> {\n\t\tif (this._taskSystem && this._taskSystem.isActiveSync()) {\n\t\t\tif (this._taskSystem.canAutoTerminate() || this.messageService.confirm({\n\t\t\t\tmessage: nls.localize('TaskSystem.runningTask', 'There is a task running. Do you want to terminate it?'),\n\t\t\t\tprimaryButton: nls.localize({ key: 'TaskSystem.terminateTask', comment: ['&& denotes a mnemonic'] }, \"&&Terminate Task\")\n\t\t\t})) {\n\t\t\t\treturn this._taskSystem.terminate().then((response) => {\n\t\t\t\t\tif (response.success) {\n\t\t\t\t\t\tthis.emit(TaskServiceEvents.Terminated, {});\n\t\t\t\t\t\tthis._taskSystem = null;\n\t\t\t\t\t\tthis.disposeFileChangesListener();\n\t\t\t\t\t\tthis.disposeTaskSystemListeners();\n\t\t\t\t\t\treturn false; // no veto\n\t\t\t\t\t}\n\t\t\t\t\treturn true; // veto\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn true; // veto\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn true; // veto\n\t\t\t}\n\t\t}\n\t\treturn false; // Nothing to do here\n\t}\n\n\tprivate handleError(err:any):void {\n\t\tlet showOutput = true;\n\t\tif (err instanceof TaskError) {\n\t\t\tlet buildError = <TaskError>err;\n\t\t\tlet needsConfig = buildError.code === TaskErrors.NotConfigured || buildError.code === TaskErrors.NoBuildTask || buildError.code === TaskErrors.NoTestTask;\n\t\t\tlet needsTerminate = buildError.code === TaskErrors.RunningTask;\n\t\t\tif (needsConfig || needsTerminate) {\n\t\t\t\tlet closeAction = new CloseMessageAction();\n\t\t\t\tlet action = needsConfig\n\t\t\t\t\t? this.configureAction()\n\t\t\t\t\t: new TerminateAction(TerminateAction.ID, TerminateAction.TEXT, this, this.telemetryService);\n\n\t\t\t\tcloseAction.closeFunction = this.messageService.show(buildError.severity, { message: buildError.message, actions: [closeAction, action ] });\n\t\t\t} else {\n\t\t\t\tthis.messageService.show(buildError.severity, buildError.message);\n\t\t\t}\n\t\t} else if (err instanceof Error) {\n\t\t\tlet error = <Error>err;\n\t\t\tthis.messageService.show(Severity.Error, error.message);\n\t\t} else if (Types.isString(err)) {\n\t\t\tthis.messageService.show(Severity.Error, <string>err);\n\t\t} else {\n\t\t\tthis.messageService.show(Severity.Error, nls.localize('TaskSystem.unknownError', 'An error has occurred while running a task. See task log for details.'));\n\t\t}\n\t\tif (showOutput) {\n\t\t\tthis.outputChannel.show(true);\n\t\t}\n\t}\n}\n\nlet tasksCategory = nls.localize('tasksCategory', \"Tasks\");\nlet workbenchActionsRegistry = <IWorkbenchActionRegistry>Registry.as(WorkbenchActionExtensions.WorkbenchActions);\nworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(ConfigureTaskRunnerAction, ConfigureTaskRunnerAction.ID, ConfigureTaskRunnerAction.TEXT), tasksCategory);\nif (Env.enableTasks) {\n\n\t// Task Service\n\tregisterSingleton(ITaskService, TaskService);\n\n\t// Actions\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(BuildAction, BuildAction.ID, BuildAction.TEXT, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_B }), tasksCategory);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(TestAction, TestAction.ID, TestAction.TEXT, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_T }), tasksCategory);\n\t// workbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(RebuildAction, RebuildAction.ID, RebuildAction.TEXT), tasksCategory);\n\t// workbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(CleanAction, CleanAction.ID, CleanAction.TEXT), tasksCategory);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(TerminateAction, TerminateAction.ID, TerminateAction.TEXT), tasksCategory);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(ShowLogAction, ShowLogAction.ID, ShowLogAction.TEXT), tasksCategory);\n\tworkbenchActionsRegistry.registerWorkbenchAction(new SyncActionDescriptor(RunTaskAction, RunTaskAction.ID, RunTaskAction.TEXT), tasksCategory);\n\n\t// Register Quick Open\n\t(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\t\tnew QuickOpenHandlerDescriptor(\n\t\t\t'vs/workbench/parts/tasks/browser/taskQuickOpen',\n\t\t\t'QuickOpenHandler',\n\t\t\t'task ',\n\t\t\tnls.localize('taskCommands', \"Run Task\")\n\t\t)\n\t);\n\n\t// Status bar\n\tlet statusbarRegistry = <IStatusbarRegistry>Registry.as(StatusbarExtensions.Statusbar);\n\tstatusbarRegistry.registerStatusbarItem(new StatusbarItemDescriptor(StatusBarItem, StatusbarAlignment.LEFT, 50 /* Medium Priority */));\n\n\t// Output channel\n\tlet outputChannelRegistry = <IOutputChannelRegistry>Registry.as(OutputExt.OutputChannels);\n\toutputChannelRegistry.registerChannel(TaskService.OutputChannelId, TaskService.OutputChannelLabel);\n\n\t// (<IWorkbenchContributionsRegistry>Registry.as(WorkbenchExtensions.Workbench)).registerWorkbenchContribution(TaskServiceParticipant);\n\n\t// tasks.json validation\n\tlet schemaId = 'vscode://schemas/tasks';\n\tlet schema : IJSONSchema =\n\t\t{\n\t\t\t'id': schemaId,\n\t\t\t'description': 'Task definition file',\n\t\t\t'type': 'object',\n\t\t\t'default': {\n\t\t\t\t'version': '0.1.0',\n\t\t\t\t'command': 'myCommand',\n\t\t\t\t'isShellCommand': false,\n\t\t\t\t'args': [],\n\t\t\t\t'showOutput': 'always',\n\t\t\t\t'tasks': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'taskName': 'build',\n\t\t\t\t\t\t'showOutput': 'silent',\n\t\t\t\t\t\t'isBuildCommand': true,\n\t\t\t\t\t\t'problemMatcher': ['$tsc', '$lessCompile']\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t'definitions': {\n\t\t\t\t'showOutputType': {\n\t\t\t\t\t'type': 'string',\n\t\t\t\t\t'enum': ['always', 'silent', 'never'],\n\t\t\t\t\t'default': 'silent'\n\t\t\t\t},\n\t\t\t\t'patternType': {\n\t\t\t\t\t'anyOf': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['$tsc', '$tsc-watch' ,'$msCompile', '$lessCompile', '$gulp-tsc', '$cpp', '$csc', '$vb', '$jshint', '$jshint-stylish', '$eslint-compact', '$eslint-stylish', '$go']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'$ref': '#/definitions/pattern'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t'$ref': '#/definitions/pattern'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'pattern': {\n\t\t\t\t\t'default': {\n\t\t\t\t\t\t'regexp': '^([^\\\\\\\\s].*)\\\\\\\\((\\\\\\\\d+,\\\\\\\\d+)\\\\\\\\):\\\\\\\\s*(.*)$',\n\t\t\t\t\t\t'file': 1,\n\t\t\t\t\t\t'location': 2,\n\t\t\t\t\t\t'message': 3\n\t\t\t\t\t},\n\t\t\t\t\t'additionalProperties': false,\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'regexp': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.regexp', 'The regular expression to find an error, warning or info in the output.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'file': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.file', 'The match group index of the filename. If omitted 1 is used.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'location': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.location', 'The match group index of the problem\\'s location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted line and column is assumed.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'line': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.line', 'The match group index of the problem\\'s line. Defaults to 2')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'column': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.column', 'The match group index of the problem\\'s column. Defaults to 3')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'endLine': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.endLine', 'The match group index of the problem\\'s end line. Defaults to undefined')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'endColumn': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.endColumn', 'The match group index of the problem\\'s end column. Defaults to undefined')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'severity': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.severity', 'The match group index of the problem\\'s severity. Defaults to undefined')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'code': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.code', 'The match group index of the problem\\'s code. Defaults to undefined')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'message': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.message', 'The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'loop': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.pattern.loop', 'In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'problemMatcherType': {\n\t\t\t\t\t'oneOf': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['$tsc', '$tsc-watch', '$msCompile', '$lessCompile', '$gulp-tsc', '$jshint', '$jshint-stylish', '$eslint-compact', '$eslint-stylish', '$go']\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'$ref': '#/definitions/problemMatcher'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t'anyOf': [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'$ref': '#/definitions/problemMatcher'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t\t\t'enum': ['$tsc', '$tsc-watch', '$msCompile', '$lessCompile', '$gulp-tsc', '$jshint', '$jshint-stylish', '$eslint-compact', '$eslint-stylish', '$go']\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t'watchingPattern': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'additionalProperties': false,\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'regexp': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.watchingPattern.regexp', 'The regular expression to detect the begin or end of a watching task.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'file': {\n\t\t\t\t\t\t\t'type': 'integer',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.watchingPattern.file', 'The match group index of the filename. Can be omitted.')\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'problemMatcher': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'additionalProperties': false,\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'base': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['$tsc', '$tsc-watch', '$msCompile', '$lessCompile', '$gulp-tsc', '$jshint', '$jshint-stylish', '$eslint-compact', '$eslint-stylish', '$go'],\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.base', 'The name of a base problem matcher to use.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'owner': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.owner', 'The owner of the problem inside Code. Can be omitted if base is specified. Defaults to \\'external\\' if omitted and base is not specified.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'severity': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['error', 'warning', 'info'],\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.severity', 'The default severity for captures problems. Is used if the pattern doesn\\'t define a match group for severity.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'applyTo': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['allDocuments', 'openDocuments', 'closedDocuments'],\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.applyTo', 'Controls if a problem reported on a text document is applied only to open, closed or all documents.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'pattern': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/patternType',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.pattern', 'A problem pattern or the name of a predefined problem pattern. Can be omitted if base is specified.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'fileLocation': {\n\t\t\t\t\t\t\t'oneOf': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t\t'enum': ['absolute', 'relative']\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.fileLocation', 'Defines how file names reported in a problem pattern should be interpreted.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'watching': {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'additionalProperties': false,\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'activeOnStart': {\n\t\t\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.watching.activeOnStart', 'If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern')\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'beginsPattern': {\n\t\t\t\t\t\t\t\t\t'oneOf': [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'type': '#/definitions/watchingPattern'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.watching.beginsPattern', 'If matched in the output the start of a watching task is signaled.')\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'endsPattern': {\n\t\t\t\t\t\t\t\t\t'oneOf': [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'type': '#/definitions/watchingPattern'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.watching.endsPattern', 'If matched in the output the end of a watching task is signaled.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'watchedTaskBeginsRegExp': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.watchedBegin', 'A regular expression signaling that a watched tasks begins executing triggered through file watching.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'watchedTaskEndsRegExp': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.problemMatcher.watchedEnd', 'A regular expression signaling that a watched tasks ends executing.')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'baseTaskRunnerConfiguration': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'command': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.command', 'The command to be executed. Can be an external program or a shell command.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'isShellCommand': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'default': true,\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.shell', 'Specifies whether the command is a shell command or an external program. Defaults to false if omitted.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.args', 'Additional arguments passed to the command.'),\n\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'options': {\n\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.options', 'Additional command options'),\n\t\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t\t'cwd': {\n\t\t\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.options.cwd', 'The current working directory of the executed program or script. If omitted Code\\'s current workspace root is used.')\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t'env': {\n\t\t\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t\t\t'additionalProperties': {\n\t\t\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.options.env', 'The environment of the executed program or shell. If omitted the parent process\\' environment is used.')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'additionalProperties': {\n\t\t\t\t\t\t\t\t'type': ['string', 'array', 'object']\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'showOutput': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/showOutputType',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.showOutput', 'Controls whether the output of the running task is shown or not. If omitted \\'always\\' is used.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'isWatching': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'promptOnClose': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.promptOnClose', 'Whether the user is prompted when VS Code closes with a running background task.'),\n\t\t\t\t\t\t\t'default': false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'echoCommand': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'suppressTaskName': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.suppressTaskName', 'Controls whether the task name is added as an argument to the command. Default is false.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'taskSelector': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.taskSelector', 'Prefix to indicate that an argument is task.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'problemMatcher': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'tasks': {\n\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks', 'The task configurations. Usually these are enrichments of task already defined in the external task runner.'),\n\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t\t\t'$ref': '#/definitions/taskDescription'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'taskDescription': {\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['taskName'],\n\t\t\t\t\t'additionalProperties': false,\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'taskName': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.taskName', \"The task's name\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.args', 'Additional arguments passed to the command when this task is invoked.'),\n\t\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t\t'type': 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'suppressTaskName': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.suppressTaskName', 'Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'showOutput': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/showOutputType',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.showOutput', 'Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'echoCommand': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.echoCommand', 'Controls whether the executed command is echoed to the output. Default is false.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'isWatching': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.watching', 'Whether the executed task is kept alive and is watching the file system.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'isBuildCommand': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.build', 'Maps this task to Code\\'s default build command.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'isTestCommand': {\n\t\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.test', 'Maps this task to Code\\'s default test command.'),\n\t\t\t\t\t\t\t'default': true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'problemMatcher': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/problemMatcherType',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.tasks.matchers', 'The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.')\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'defaultSnippets': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'label': 'Empty task',\n\t\t\t\t\t\t\t'body': {\n\t\t\t\t\t\t\t\t'taskName': '{{taskName}}'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'allOf': [\n\t\t\t\t{\n\t\t\t\t\t'type': 'object',\n\t\t\t\t\t'required': ['version'],\n\t\t\t\t\t'properties': {\n\t\t\t\t\t\t'version': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'enum': ['0.1.0'],\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.version', 'The config\\'s version number')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'windows': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/baseTaskRunnerConfiguration',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.windows', 'Windows specific build configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'osx': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/baseTaskRunnerConfiguration',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.mac', 'Mac specific build configuration')\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'linux': {\n\t\t\t\t\t\t\t'$ref': '#/definitions/baseTaskRunnerConfiguration',\n\t\t\t\t\t\t\t'description': nls.localize('JsonSchema.linux', 'Linux specific build configuration')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'$ref': '#/definitions/baseTaskRunnerConfiguration'\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\tlet jsonRegistry = <jsonContributionRegistry.IJSONContributionRegistry>Registry.as(jsonContributionRegistry.Extensions.JSONContribution);\n\tjsonRegistry.registerSchema(schemaId, schema);\n\tjsonRegistry.addSchemaFileAssociation('/.vscode/tasks.json', schemaId);\n}\n"]}