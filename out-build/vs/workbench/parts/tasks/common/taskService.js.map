{"version":3,"file":"vs/workbench/parts/tasks/common/taskService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/tasks/common/taskService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IASsC,gBAAQ;IAEhD,oBAAY,GAAG,+BAAe,CAAe,aAAa,CAAC,CAAC;IAEvE,IAAiB,iBAAiB,CAKjC;IALD,WAAiB,iBAAiB,EAAC,CAAC;QACxB,wBAAM,GAAW,QAAQ,CAAC;QAC1B,0BAAQ,GAAW,UAAU,CAAC;QAC9B,+BAAa,GAAW,eAAe,CAAC;QACxC,4BAAU,GAAW,YAAY,CAAC;IAC9C,CAAC,EALgB,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAKjC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport { Action } from 'vs/base/common/actions';\nimport { IEventEmitter } from 'vs/base/common/eventEmitter';\nimport { TerminateResponse } from 'vs/base/common/processes';\nimport { createDecorator, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { ITaskSummary, TaskDescription, TaskEvent, TaskType } from 'vs/workbench/parts/tasks/common/taskSystem';\n\nexport { ITaskSummary, TaskDescription, TaskEvent, TaskType };\n\nexport var ITaskService = createDecorator<ITaskService>('taskService');\n\nexport namespace TaskServiceEvents {\n\texport let Active: string = 'active';\n\texport let Inactive: string = 'inactive';\n\texport let ConfigChanged: string = 'configChanged';\n\texport let Terminated: string = 'terminated';\n}\n\nexport interface ITaskService extends IEventEmitter {\n\tserviceId: ServiceIdentifier<any>;\n\tconfigureAction(): Action;\n\tbuild(): TPromise<ITaskSummary>;\n\trebuild(): TPromise<ITaskSummary>;\n\tclean(): TPromise<ITaskSummary>;\n\trunTest(): TPromise<ITaskSummary>;\n\trun(taskIdentifier: string): TPromise<ITaskSummary>;\n\tisActive(): TPromise<boolean>;\n\tterminate(): TPromise<TerminateResponse>;\n\ttasks(): TPromise<TaskDescription[]>;\n}"]}