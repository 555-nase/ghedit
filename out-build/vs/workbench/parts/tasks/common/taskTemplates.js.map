{"version":3,"sources":["vs/workbench/parts/tasks/common/taskTemplates.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/tasks/common/taskTemplates.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\n\nimport { IPickOpenEntry } from 'vs/workbench/services/quickopen/common/quickOpenService';\n\nexport interface TaskEntry extends IPickOpenEntry {\n\tsort?: string;\n\tautoDetect: boolean;\n\tcontent: string;\n}\n\nconst gulp: TaskEntry = {\n\tid: 'gulp',\n\tlabel: 'Gulp',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"gulp\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst grunt: TaskEntry = {\n\tid: 'grunt',\n\tlabel: 'Grunt',\n\tautoDetect: true,\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"grunt\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [\"--no-color\"],',\n\t\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst npm: TaskEntry = {\n\tid: 'npm',\n\tlabel: 'npm',\n\tsort: 'NPM',\n\tautoDetect: false,\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"npm\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"showOutput\": \"always\",',\n\t\t\t'\\t\"suppressTaskName\": true,',\n\t\t\t'\\t\"tasks\": [',\n\t\t\t\t'\\t\\t{',\n\t\t\t\t\t'\\t\\t\\t\"taskName\": \"install\",',\n\t\t\t\t\t'\\t\\t\\t\"args\": [\"install\"]',\n\t\t\t\t'\\t\\t},',\n\t\t\t\t'\\t\\t{',\n\t\t\t\t\t'\\t\\t\\t\"taskName\": \"update\",',\n\t\t\t\t\t'\\t\\t\\t\"args\": [\"update\"]',\n\t\t\t\t'\\t\\t},',\n\t\t\t\t'\\t\\t{',\n\t\t\t\t\t'\\t\\t\\t\"taskName\": \"test\",',\n\t\t\t\t\t'\\t\\t\\t\"args\": [\"run\", \"test\"]',\n\t\t\t\t'\\t\\t}',\n\t\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscConfig: TaskEntry = {\n\tid: 'tsc.config',\n\tlabel: 'TypeScript - tsconfig.json',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.config', 'Compiles a TypeScript project'),\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"tsc\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [\"-p\", \".\"],',\n\t\t\t'\\t\"showOutput\": \"silent\",',\n\t\t\t'\\t\"problemMatcher\": \"$tsc\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst tscWatch: TaskEntry = {\n\tid: 'tsc.watch',\n\tlabel: 'TypeScript - Watch Mode',\n\tautoDetect: false,\n\tdescription: nls.localize('tsc.watch', 'Compiles a TypeScript project in watch mode'),\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"tsc\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [\"-w\", \"-p\", \".\"],',\n\t\t\t'\\t\"showOutput\": \"silent\",',\n\t\t\t'\\t\"isWatching\": true,',\n\t\t\t'\\t\"problemMatcher\": \"$tsc-watch\"',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst dotnetBuild: TaskEntry = {\n\tid: 'dotnetCore',\n\tlabel: '.NET Core',\n\tsort: 'NET Core',\n\tautoDetect: false,\n\tdescription: nls.localize('dotnetCore', 'Executes .NET Core build command'),\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"dotnet\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [],',\n\t\t\t'\\t\"tasks\": [',\n\t\t\t\t'\\t\\t{',\n\t\t\t\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t\t\t\t'\\t\\t\\t\"args\": [ ],',\n\t\t\t\t\t'\\t\\t\\t\"isBuildCommand\": true,',\n\t\t\t\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t\t\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t\t\t'\\t\\t}',\n\t\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst msbuild: TaskEntry = {\n\tid: 'msbuild',\n\tlabel: 'MSBuild',\n\tautoDetect: false,\n\tdescription: nls.localize('msbuild', 'Executes the build target'),\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"msbuild\",',\n\t\t\t'\\t\"args\": [',\n\t\t\t\t'\\t\\t// Ask msbuild to generate full paths for file names.',\n\t\t\t\t'\\t\\t\"/property:GenerateFullPaths=true\"',\n\t\t\t'\\t],',\n\t\t\t'\\t\"taskSelector\": \"/t:\",',\n\t\t\t'\\t\"showOutput\": \"silent\",',\n\t\t\t'\\t\"tasks\": [',\n\t\t\t\t'\\t\\t{',\n\t\t\t\t\t'\\t\\t\\t\"taskName\": \"build\",',\n\t\t\t\t\t'\\t\\t\\t// Show the output window only if unrecognized errors occur.',\n\t\t\t\t\t'\\t\\t\\t\"showOutput\": \"silent\",',\n\t\t\t\t\t'\\t\\t\\t// Use the standard MS compiler pattern to detect errors, warnings and infos',\n\t\t\t\t\t'\\t\\t\\t\"problemMatcher\": \"$msCompile\"',\n\t\t\t\t'\\t\\t}',\n\t\t\t'\\t]',\n\t\t'}'\n\t].join('\\n')\n};\n\nconst command: TaskEntry = {\n\tid: 'externalCommand',\n\tlabel: 'Others',\n\tautoDetect: false,\n\tdescription: nls.localize('externalCommand', 'Example to run an arbitrary external command'),\n\tcontent: [\n\t\t'{',\n\t\t\t'\\t// See http://go.microsoft.com/fwlink/?LinkId=733558',\n\t\t\t'\\t// for the documentation about the tasks.json format',\n\t\t\t'\\t\"version\": \"0.1.0\",',\n\t\t\t'\\t\"command\": \"echo\",',\n\t\t\t'\\t\"isShellCommand\": true,',\n\t\t\t'\\t\"args\": [\"Hello World\"],',\n\t\t\t'\\t\"showOutput\": \"always\"',\n\t\t'}'\n\t].join('\\n')\n};\n\n\nexport let templates: TaskEntry[] = [gulp, grunt, tscConfig, tscWatch, dotnetBuild, msbuild, npm].sort((a, b) => {\n\treturn (a.sort || a.label).localeCompare(b.sort || b.label);\n});\ntemplates.push(command);"]}