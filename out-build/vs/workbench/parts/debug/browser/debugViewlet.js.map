{"version":3,"sources":["vs/workbench/parts/debug/browser/debugViewlet.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/browser/debugViewlet.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/debugViewlet';\nimport nls = require('vs/nls');\nimport builder = require('vs/base/browser/builder');\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport lifecycle = require('vs/base/common/lifecycle');\nimport actions = require('vs/base/common/actions');\nimport actionbar = require('vs/base/browser/ui/actionbar/actionbar');\nimport { SplitView } from 'vs/base/browser/ui/splitview/splitview';\nimport memento = require('vs/workbench/common/memento');\nimport { IViewletView, Viewlet } from 'vs/workbench/browser/viewlet';\nimport debug = require('vs/workbench/parts/debug/common/debug');\nimport debugactions = require('vs/workbench/parts/debug/electron-browser/debugActions');\nimport dbgactionitems = require('vs/workbench/parts/debug/browser/debugActionItems');\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IProgressService, IProgressRunner } from 'vs/platform/progress/common/progress';\nimport { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\n\nimport IDebugService = debug.IDebugService;\nconst $ = builder.$;\n\nexport class DebugViewlet extends Viewlet {\n\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate actions: actions.IAction[];\n\tprivate progressRunner: IProgressRunner;\n\tprivate viewletSettings: any;\n\n\tprivate $el: builder.Builder;\n\tprivate splitView: SplitView;\n\tprivate views: IViewletView[];\n\n\tprivate lastFocusedView: IViewletView;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IProgressService private progressService: IProgressService,\n\t\t@IDebugService private debugService: IDebugService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper(debug.VIEWLET_ID, telemetryService);\n\n\t\tthis.progressRunner = null;\n\t\tthis.viewletSettings = this.getMemento(storageService, memento.Scope.WORKSPACE);\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.debugService.addListener2(debug.ServiceEvents.STATE_CHANGED, () => {\n\t\t\tthis.onDebugServiceStateChange();\n\t\t}));\n\t}\n\n\t// viewlet\n\n\tpublic create(parent: builder.Builder): TPromise<void> {\n\t\tsuper.create(parent);\n\t\tthis.$el = parent.div().addClass('debug-viewlet');\n\n\t\tif (this.contextService.getWorkspace()) {\n\t\t\tconst actionRunner = this.getActionRunner();\n\t\t\tthis.views = debug.DebugViewRegistry.getDebugViews().map(viewConstructor => this.instantiationService.createInstance(\n\t\t\t\tviewConstructor,\n\t\t\t\tactionRunner,\n\t\t\t\tthis.viewletSettings)\n\t\t\t);\n\n\t\t\tthis.splitView = new SplitView(this.$el.getHTMLElement());\n\t\t\tthis.toDispose.push(this.splitView);\n\t\t\tthis.views.forEach(v => this.splitView.addView(v));\n\n\t\t\t// Track focus\n\t\t\tthis.toDispose.push(this.splitView.onFocus((view: IViewletView) => {\n\t\t\t\tthis.lastFocusedView = view;\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.$el.append($([\n\t\t\t\t'<div class=\"noworkspace-view\">',\n\t\t\t\t'<p>', nls.localize('noWorkspace', \"There is no currently opened folder.\"), '</p>',\n\t\t\t\t'<p>', nls.localize('pleaseRestartToDebug', \"Open a folder in order to start debugging.\"), '</p>',\n\t\t\t\t'</div>'\n\t\t\t].join('')));\n\t\t}\n\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<any> {\n\t\treturn super.setVisible(visible).then(() => {\n\t\t\treturn TPromise.join(this.views.map(view => view.setVisible(visible)));\n\t\t});\n\t}\n\n\tpublic layout(dimension: builder.Dimension): void {\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.layout(dimension.height);\n\t\t}\n\t}\n\n\tpublic focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.lastFocusedView && this.lastFocusedView.isExpanded()) {\n\t\t\tthis.lastFocusedView.focusBody();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.views.length > 0) {\n\t\t\tthis.views[0].focusBody();\n\t\t}\n\t}\n\n\tpublic getActions(): actions.IAction[] {\n\t\tif (this.debugService.getState() === debug.State.Disabled) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (!this.actions) {\n\t\t\tthis.actions = [\n\t\t\t\tthis.instantiationService.createInstance(debugactions.StartDebugAction, debugactions.StartDebugAction.ID, debugactions.StartDebugAction.LABEL),\n\t\t\t\tthis.instantiationService.createInstance(debugactions.SelectConfigAction, debugactions.SelectConfigAction.ID, debugactions.SelectConfigAction.LABEL),\n\t\t\t\tthis.instantiationService.createInstance(debugactions.ConfigureAction, debugactions.ConfigureAction.ID, debugactions.ConfigureAction.LABEL),\n\t\t\t\tthis.instantiationService.createInstance(debugactions.ToggleReplAction, debugactions.ToggleReplAction.ID, debugactions.ToggleReplAction.LABEL)\n\t\t\t];\n\n\t\t\tthis.actions.forEach(a => {\n\t\t\t\tthis.toDispose.push(a);\n\t\t\t});\n\t\t}\n\n\t\treturn this.actions;\n\t}\n\n\tpublic getActionItem(action: actions.IAction): actionbar.IActionItem {\n\t\tif (action.id === debugactions.SelectConfigAction.ID) {\n\t\t\treturn this.instantiationService.createInstance(dbgactionitems.SelectConfigActionItem, action);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate onDebugServiceStateChange(): void {\n\t\tif (this.progressRunner) {\n\t\t\tthis.progressRunner.done();\n\t\t}\n\n\t\tif (this.debugService.getState() === debug.State.Initializing) {\n\t\t\tthis.progressRunner = this.progressService.show(true);\n\t\t} else {\n\t\t\tthis.progressRunner = null;\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n\n\tpublic shutdown(): void {\n\t\tthis.views.forEach(v => v.shutdown());\n\t\tsuper.shutdown();\n\t}\n}\n"]}