{"version":3,"sources":["vs/workbench/parts/debug/browser/repl.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/browser/repl.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!./media/repl';\nimport nls = require('vs/nls');\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport errors = require('vs/base/common/errors');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport actions = require('vs/base/common/actions');\nimport builder = require('vs/base/browser/builder');\nimport dom = require('vs/base/browser/dom');\nimport platform = require('vs/base/common/platform');\nimport tree = require('vs/base/parts/tree/browser/tree');\nimport treeimpl = require('vs/base/parts/tree/browser/treeImpl');\nimport viewer = require('vs/workbench/parts/debug/browser/replViewer');\nimport debug = require('vs/workbench/parts/debug/common/debug');\nimport debugactions = require('vs/workbench/parts/debug/electron-browser/debugActions');\nimport replhistory = require('vs/workbench/parts/debug/common/replHistory');\nimport { Panel } from 'vs/workbench/browser/panel';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IContextViewService, IContextMenuService } from 'vs/platform/contextview/browser/contextView';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { CommonKeybindings } from 'vs/base/common/keyCodes';\nimport {IKeyboardEvent} from 'vs/base/browser/keyboardEvent';\n\nconst $ = dom.emmet;\n\nconst replTreeOptions: tree.ITreeOptions = {\n\tindentPixels: 8,\n\ttwistiePixels: 20,\n\tpaddingOnRow: false,\n\tariaLabel: nls.localize('replAriaLabel', \"Read Eval Print Loop Panel\")\n};\n\nconst HISTORY_STORAGE_KEY = 'debug.repl.history';\n\nexport class Repl extends Panel {\n\n\tprivate static HALF_WIDTH_TYPICAL = 'n';\n\n\tprivate static HISTORY: replhistory.ReplHistory;\n\tprivate static REFRESH_DELAY = 500; // delay in ms to refresh the repl for new elements to show\n\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate tree: tree.ITree;\n\tprivate renderer: viewer.ReplExpressionsRenderer;\n\tprivate characterWidthSurveyor: HTMLElement;\n\tprivate treeContainer: HTMLElement;\n\tprivate replInput: HTMLInputElement;\n\tprivate refreshTimeoutHandle: number;\n\tprivate actions: actions.IAction[];\n\n\tconstructor(\n\t\t@debug.IDebugService private debugService: debug.IDebugService,\n\t\t@IContextMenuService private contextMenuService: IContextMenuService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IContextViewService private contextViewService: IContextViewService,\n\t\t@IStorageService private storageService: IStorageService\n\t) {\n\t\tsuper(debug.REPL_ID, telemetryService);\n\n\t\tthis.toDispose = [];\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.debugService.getModel().addListener2(debug.ModelEvents.REPL_ELEMENTS_UPDATED, (re: debug.ITreeElement|debug.ITreeElement[]) => {\n\t\t\tthis.onReplElementsUpdated(re);\n\t\t}));\n\t}\n\n\tprivate onReplElementsUpdated(re: debug.ITreeElement | debug.ITreeElement[]): void {\n\t\tif (this.tree) {\n\t\t\tif (this.refreshTimeoutHandle) {\n\t\t\t\treturn; // refresh already triggered\n\t\t\t}\n\n\t\t\tthis.refreshTimeoutHandle = setTimeout(() => {\n\t\t\t\tthis.refreshTimeoutHandle = null;\n\n\t\t\t\tconst scrollPosition = this.tree.getScrollPosition();\n\t\t\t\tthis.tree.refresh().then(() => {\n\t\t\t\t\tif (scrollPosition === 0 || scrollPosition === 1) {\n\t\t\t\t\t\treturn this.tree.setScrollPosition(1); // keep scrolling to the end unless user scrolled up\n\t\t\t\t\t}\n\t\t\t\t}, errors.onUnexpectedError);\n\t\t\t}, Repl.REFRESH_DELAY);\n\t\t}\n\t}\n\n\tpublic create(parent: builder.Builder): TPromise<void> {\n\t\tsuper.create(parent);\n\t\tconst container = dom.append(parent.getHTMLElement(), $('.repl'));\n\t\tthis.treeContainer = dom.append(container, $('.repl-tree'));\n\t\tconst replInputContainer = dom.append(container, $(platform.isWindows ? '.repl-input-wrapper.windows' : platform.isMacintosh ? '.repl-input-wrapper.mac' : '.repl-input-wrapper.linux'));\n\t\tthis.replInput = <HTMLInputElement>dom.append(replInputContainer, $('input.repl-input'));\n\t\tthis.replInput.type = 'text';\n\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.replInput, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tlet trimmedValue = this.replInput.value.trim();\n\n\t\t\tif (e.equals(CommonKeybindings.ENTER) && trimmedValue) {\n\t\t\t\tthis.debugService.addReplExpression(trimmedValue);\n\t\t\t\tRepl.HISTORY.evaluated(trimmedValue);\n\t\t\t\tthis.replInput.value = '';\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.equals(CommonKeybindings.UP_ARROW) || e.equals(CommonKeybindings.DOWN_ARROW)) {\n\t\t\t\tconst historyInput = e.equals(CommonKeybindings.UP_ARROW) ? Repl.HISTORY.previous() : Repl.HISTORY.next();\n\t\t\t\tif (historyInput) {\n\t\t\t\t\tRepl.HISTORY.remember(this.replInput.value, e.equals(CommonKeybindings.UP_ARROW));\n\t\t\t\t\tthis.replInput.value = historyInput;\n\t\t\t\t\t// always leave cursor at the end.\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.replInput, dom.EventType.FOCUS, () => dom.addClass(replInputContainer, 'synthetic-focus')));\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.replInput, dom.EventType.BLUR, () => dom.removeClass(replInputContainer, 'synthetic-focus')));\n\n\t\tthis.characterWidthSurveyor = dom.append(container, $('.surveyor'));\n\t\tthis.characterWidthSurveyor.textContent = Repl.HALF_WIDTH_TYPICAL;\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tthis.characterWidthSurveyor.textContent += this.characterWidthSurveyor.textContent;\n\t\t}\n\t\tthis.characterWidthSurveyor.style.fontSize = platform.isMacintosh ? '12px' : '14px';\n\n\t\tthis.renderer = this.instantiationService.createInstance(viewer.ReplExpressionsRenderer);\n\t\tthis.tree = new treeimpl.Tree(this.treeContainer, {\n\t\t\tdataSource: new viewer.ReplExpressionsDataSource(this.debugService),\n\t\t\trenderer: this.renderer,\n\t\t\taccessibilityProvider: new viewer.ReplExpressionsAccessibilityProvider(),\n\t\t\tcontroller: new viewer.ReplExpressionsController(this.debugService, this.contextMenuService, new viewer.ReplExpressionsActionProvider(this.instantiationService), this.replInput, false)\n\t\t}, replTreeOptions);\n\n\t\tif (!Repl.HISTORY) {\n\t\t\tRepl.HISTORY = new replhistory.ReplHistory(JSON.parse(this.storageService.get(HISTORY_STORAGE_KEY, StorageScope.WORKSPACE, '[]')));\n\t\t}\n\n\t\treturn this.tree.setInput(this.debugService.getModel());\n\t}\n\n\tpublic layout(dimension: builder.Dimension): void {\n\t\tif (this.tree) {\n\t\t\tthis.renderer.setWidth(dimension.width - 25, this.characterWidthSurveyor.clientWidth / this.characterWidthSurveyor.textContent.length);\n\t\t\tthis.tree.layout(dimension.height - 22);\n\t\t\t// refresh the tree because layout might require some elements be word wrapped differently\n\t\t\tthis.tree.refresh().done(undefined, errors.onUnexpectedError);\n\t\t}\n\t}\n\n\tpublic focus(): void {\n\t\tthis.replInput.focus();\n\t}\n\n\tpublic reveal(element: debug.ITreeElement): TPromise<void> {\n\t\treturn this.tree.reveal(element);\n\t}\n\n\tpublic getActions(): actions.IAction[] {\n\t\tif (!this.actions) {\n\t\t\tthis.actions = [\n\t\t\t\tthis.instantiationService.createInstance(debugactions.ClearReplAction, debugactions.ClearReplAction.ID, debugactions.ClearReplAction.LABEL)\n\t\t\t];\n\n\t\t\tthis.actions.forEach(a => {\n\t\t\t\tthis.toDispose.push(a);\n\t\t\t});\n\t\t}\n\n\t\treturn this.actions;\n\t}\n\n\tpublic shutdown(): void {\n\t\tthis.storageService.store(HISTORY_STORAGE_KEY, JSON.stringify(Repl.HISTORY.save()), StorageScope.WORKSPACE);\n\t}\n\n\tpublic dispose(): void {\n\t\t// destroy container\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}