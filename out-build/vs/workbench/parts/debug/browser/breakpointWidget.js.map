{"version":3,"sources":["vs/workbench/parts/debug/browser/breakpointWidget.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/browser/breakpointWidget.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport 'vs/css!../browser/media/breakpointWidget';\nimport async = require('vs/base/common/async');\nimport errors = require('vs/base/common/errors');\nimport { CommonKeybindings, KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport platform = require('vs/base/common/platform');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport dom = require('vs/base/browser/dom');\nimport { InputBox } from 'vs/base/browser/ui/inputbox/inputBox';\nimport { CommonEditorRegistry } from 'vs/editor/common/editorCommonExtensions';\nimport editorcommon = require('vs/editor/common/editorCommon');\nimport editorbrowser = require('vs/editor/browser/editorBrowser');\nimport { ZoneWidget } from 'vs/editor/contrib/zoneWidget/browser/zoneWidget';\nimport { IContextViewService } from 'vs/platform/contextview/browser/contextView';\nimport { IKeybindingService, IKeybindingContextKey } from 'vs/platform/keybinding/common/keybindingService';\nimport debug = require('vs/workbench/parts/debug/common/debug');\nimport {IKeyboardEvent} from 'vs/base/browser/keyboardEvent';\n\nconst $ = dom.emmet;\nconst CONTEXT_BREAKPOINT_WIDGET_VISIBLE = 'breakpointWidgetVisible';\nconst CLOSE_BREAKPOINT_WIDGET_COMMAND_ID = 'closeBreakpointWidget';\n\nexport class BreakpointWidget extends ZoneWidget {\n\n\tpublic static INSTANCE: BreakpointWidget;\n\n\tprivate inputBox: InputBox;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate breakpointWidgetVisible: IKeybindingContextKey<boolean>;\n\n\tconstructor(editor: editorbrowser.ICodeEditor, private lineNumber: number,\n\t\t@IContextViewService private contextViewService: IContextViewService,\n\t\t@debug.IDebugService private debugService: debug.IDebugService,\n\t\t@IKeybindingService keybindingService: IKeybindingService\n\t) {\n\t\tsuper(editor, { showFrame: true, showArrow: false });\n\n\t\tthis.toDispose = [];\n\t\tthis.create();\n\t\tthis.breakpointWidgetVisible = keybindingService.createKey(CONTEXT_BREAKPOINT_WIDGET_VISIBLE, false);\n\t\tthis.breakpointWidgetVisible.set(true);\n\t\tBreakpointWidget.INSTANCE = this;\n\t\tthis.toDispose.push(editor.addListener2(editorcommon.EventType.ModelChanged, () => this.dispose()));\n\t}\n\n\tpublic fillContainer(container: HTMLElement): void {\n\t\tdom.addClass(container, 'breakpoint-widget');\n\t\tconst uri = this.editor.getModel().getAssociatedResource();\n\t\tconst breakpoint = this.debugService.getModel().getBreakpoints().filter(bp => bp.lineNumber === this.lineNumber && bp.source.uri.toString() === uri.toString()).pop();\n\n\t\tconst inputBoxContainer = dom.append(container, $('.inputBoxContainer'));\n\t\tthis.inputBox = new InputBox(inputBoxContainer, this.contextViewService, {\n\t\t\tplaceholder: nls.localize('breakpointWidgetPlaceholder', \"Breakpoint on line {0} will only stop if this condition is true. 'Enter' to accept, 'esc' to cancel.\", this.lineNumber),\n\t\t\tariaLabel: nls.localize('breakpointWidgetAriaLabel', \"Type the breakpoint condition for line {0}. The program will only stop here if this condition is true. Press Enter to accept or Escape to cancel.\")\n\t\t});\n\t\tthis.toDispose.push(this.inputBox);\n\n\t\tdom.addClass(this.inputBox.inputElement, platform.isWindows ? 'windows' : platform.isMacintosh ? 'mac' : 'linux');\n\t\tthis.inputBox.value = (breakpoint && breakpoint.condition) ? breakpoint.condition : '';\n\t\t// Due to an electron bug we have to do the timeout, otherwise we do not get focus\n\t\tsetTimeout(() => this.inputBox.focus(), 0);\n\n\t\tlet disposed = false;\n\t\tconst wrapUp = async.once<any, void>((success: boolean) => {\n\t\t\tif (!disposed) {\n\t\t\t\tdisposed = true;\n\t\t\t\tif (success) {\n\t\t\t\t\tconst raw = {\n\t\t\t\t\t\turi,\n\t\t\t\t\t\tlineNumber: this.lineNumber,\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tcondition: this.inputBox.value\n\t\t\t\t\t};\n\n\t\t\t\t\t// if there is already a breakpoint on this location - remove it.\n\t\t\t\t\tif (this.debugService.getModel().getBreakpoints().some(bp => bp.lineNumber === this.lineNumber && bp.source.uri.toString() === uri.toString())) {\n\t\t\t\t\t\tthis.debugService.toggleBreakpoint(raw).done(null, errors.onUnexpectedError);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.debugService.toggleBreakpoint(raw).done(null, errors.onUnexpectedError);\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t});\n\n\t\tthis.toDispose.push(dom.addStandardDisposableListener(this.inputBox.inputElement, 'keydown', (e: IKeyboardEvent) => {\n\t\t\tconst isEscape = e.equals(CommonKeybindings.ESCAPE);\n\t\t\tconst isEnter = e.equals(CommonKeybindings.ENTER);\n\t\t\tif (isEscape || isEnter) {\n\t\t\t\te.stopPropagation();\n\t\t\t\twrapUp(isEnter);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.breakpointWidgetVisible.reset();\n\t\tBreakpointWidget.INSTANCE = undefined;\n\t\tlifecycle.dispose(this.toDispose);\n\t\tsetTimeout(() => this.editor.focus(), 0);\n\t}\n}\n\nCommonEditorRegistry.registerEditorCommand(CLOSE_BREAKPOINT_WIDGET_COMMAND_ID, CommonEditorRegistry.commandWeight(8), { primary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape]  }, false, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, (ctx, editor, args) => {\n\tif (BreakpointWidget.INSTANCE) {\n\t\tBreakpointWidget.INSTANCE.dispose();\n\t}\n});\n"]}