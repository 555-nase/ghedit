{"version":3,"sources":["vs/workbench/parts/debug/browser/debugEditorModelManager.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/browser/debugEditorModelManager.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport objects = require('vs/base/common/objects');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport editorcommon = require('vs/editor/common/editorCommon');\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { IDebugService, ModelEvents, ViewModelEvents, IBreakpoint, IRawBreakpoint, State, ServiceEvents } from 'vs/workbench/parts/debug/common/debug';\nimport { IModelService } from 'vs/editor/common/services/modelService';\n\nfunction toMap(arr: string[]): { [key: string]: boolean; } {\n\tconst result: { [key: string]: boolean; } = {};\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tresult[arr[i]] = true;\n\t}\n\n\treturn result;\n}\n\nfunction createRange(startLineNUmber: number, startColumn: number, endLineNumber: number, endColumn: number): editorcommon.IRange {\n\treturn {\n\t\tstartLineNumber: startLineNUmber,\n\t\tstartColumn: startColumn,\n\t\tendLineNumber: endLineNumber,\n\t\tendColumn: endColumn\n\t};\n}\n\ninterface IDebugEditorModelData {\n\tmodel: editorcommon.IModel;\n\ttoDispose: lifecycle.IDisposable[];\n\tbreakpointDecorationIds: string[];\n\tbreakpointLines: number[];\n\tbreakpointDecorationsAsMap: { [decorationId: string]: boolean; };\n\tcurrentStackDecorations: string[];\n\ttopStackFrameRange: editorcommon.IRange;\n\tdirty: boolean;\n}\n\nexport class DebugEditorModelManager implements IWorkbenchContribution {\n\tstatic ID = 'breakpointManager';\n\n\tprivate modelData: {\n\t\t[modelUrl: string]: IDebugEditorModelData;\n\t};\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(\n\t\t@IModelService private modelService: IModelService,\n\t\t@IDebugService private debugService: IDebugService\n\t) {\n\t\tthis.modelData = {};\n\t\tthis.toDispose = [];\n\t\tthis.registerListeners();\n\t}\n\n\tpublic getId(): string {\n\t\treturn DebugEditorModelManager.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tfor (let modelUrlStr in this.modelData) {\n\t\t\tif (this.modelData.hasOwnProperty(modelUrlStr)) {\n\t\t\t\tconst modelData = this.modelData[modelUrlStr];\n\t\t\t\tlifecycle.dispose(modelData.toDispose);\n\t\t\t\tmodelData.model.deltaDecorations(modelData.breakpointDecorationIds, []);\n\t\t\t\tmodelData.model.deltaDecorations(modelData.currentStackDecorations, []);\n\t\t\t}\n\t\t}\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\n\t\tthis.modelData = null;\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis.toDispose.push(this.modelService.onModelAdded(this.onModelAdded, this));\n\t\tthis.modelService.getModels().forEach(model => this.onModelAdded(model));\n\t\tthis.toDispose.push(this.modelService.onModelRemoved(this.onModelRemoved, this));\n\n\t\tthis.toDispose.push(this.debugService.getModel().addListener2(ModelEvents.BREAKPOINTS_UPDATED, () => this.onBreakpointsChanged()));\n\t\tthis.toDispose.push(this.debugService.getViewModel().addListener2(ViewModelEvents.FOCUSED_STACK_FRAME_UPDATED, () => this.onFocusedStackFrameUpdated()));\n\t\tthis.toDispose.push(this.debugService.addListener2(ServiceEvents.STATE_CHANGED, () => {\n\t\t\tif (this.debugService.getState() === State.Inactive) {\n\t\t\t\tObject.keys(this.modelData).forEach(key => this.modelData[key].dirty = false);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onModelAdded(model: editorcommon.IModel): void {\n\t\tconst modelUrlStr = model.getAssociatedResource().toString();\n\t\tconst breakpoints = this.debugService.getModel().getBreakpoints().filter(bp => bp.source.uri.toString() === modelUrlStr);\n\n\t\tconst currentStackDecorations = model.deltaDecorations([], this.createCallStackDecorations(modelUrlStr));\n\t\tconst breakPointDecorations = model.deltaDecorations([], this.createBreakpointDecorations(breakpoints));\n\n\t\tconst toDispose: lifecycle.IDisposable[] = [model.addListener2(editorcommon.EventType.ModelDecorationsChanged, (e: editorcommon.IModelDecorationsChangedEvent) =>\n\t\t\tthis.onModelDecorationsChanged(modelUrlStr, e))];\n\n\t\tthis.modelData[modelUrlStr] = {\n\t\t\tmodel: model,\n\t\t\ttoDispose: toDispose,\n\t\t\tbreakpointDecorationIds: breakPointDecorations,\n\t\t\tbreakpointLines: breakpoints.map(bp => bp.lineNumber),\n\t\t\tbreakpointDecorationsAsMap: toMap(breakPointDecorations),\n\t\t\tcurrentStackDecorations: currentStackDecorations,\n\t\t\ttopStackFrameRange: null,\n\t\t\tdirty: false\n\t\t};\n\t}\n\n\tprivate onModelRemoved(model: editorcommon.IModel): void {\n\t\tconst modelUrlStr = model.getAssociatedResource().toString();\n\t\tif (this.modelData.hasOwnProperty(modelUrlStr)) {\n\t\t\tconst modelData = this.modelData[modelUrlStr];\n\t\t\tdelete this.modelData[modelUrlStr];\n\n\t\t\tlifecycle.dispose(modelData.toDispose);\n\t\t}\n\t}\n\n\t// call stack management. Represent data coming from the debug service.\n\n\tprivate onFocusedStackFrameUpdated(): void {\n\t\tObject.keys(this.modelData).forEach(modelUrlStr => {\n\t\t\tconst modelData = this.modelData[modelUrlStr];\n\t\t\tmodelData.currentStackDecorations = modelData.model.deltaDecorations(modelData.currentStackDecorations, this.createCallStackDecorations(modelUrlStr));\n\t\t});\n\t}\n\n\tprivate createCallStackDecorations(modelUrlStr: string): editorcommon.IModelDeltaDecoration[] {\n\t\tconst result: editorcommon.IModelDeltaDecoration[] = [];\n\t\tconst focusedStackFrame = this.debugService.getViewModel().getFocusedStackFrame();\n\t\tconst allThreads = this.debugService.getModel().getThreads();\n\t\tif (!focusedStackFrame || !allThreads[focusedStackFrame.threadId] || !allThreads[focusedStackFrame.threadId].getCachedCallStack()) {\n\t\t\treturn result;\n\t\t}\n\n\t\t// only show decorations for the currently focussed thread.\n\t\tconst thread = allThreads[focusedStackFrame.threadId];\n\t\tthread.getCachedCallStack().filter(sf => sf.source.uri.toString() === modelUrlStr).forEach(sf => {\n\t\t\tconst wholeLineRange = createRange(sf.lineNumber, sf.column, sf.lineNumber, Number.MAX_VALUE);\n\n\t\t\t// compute how to decorate the editor. Different decorations are used if this is a top stack frame, focussed stack frame,\n\t\t\t// an exception or a stack frame that did not change the line number (we only decorate the columns, not the whole line).\n\t\t\tif (sf === thread.getCachedCallStack()[0]) {\n\t\t\t\tresult.push({\n\t\t\t\t\toptions: DebugEditorModelManager.TOP_STACK_FRAME_MARGIN,\n\t\t\t\t\trange: createRange(sf.lineNumber, sf.column, sf.lineNumber, sf.column + 1)\n\t\t\t\t});\n\n\t\t\t\tif (thread.stoppedDetails.reason === 'exception') {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\toptions: DebugEditorModelManager.TOP_STACK_FRAME_EXCEPTION_DECORATION,\n\t\t\t\t\t\trange: wholeLineRange\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\toptions: DebugEditorModelManager.TOP_STACK_FRAME_DECORATION,\n\t\t\t\t\t\trange: wholeLineRange\n\t\t\t\t\t});\n\n\t\t\t\t\tif (this.modelData[modelUrlStr]) {\n\t\t\t\t\t\tif (this.modelData[modelUrlStr].topStackFrameRange && this.modelData[modelUrlStr].topStackFrameRange.startLineNumber === wholeLineRange.startLineNumber &&\n\t\t\t\t\t\t\tthis.modelData[modelUrlStr].topStackFrameRange.startColumn !== wholeLineRange.startColumn) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\toptions: DebugEditorModelManager.TOP_STACK_FRAME_COLUMN_DECORATION,\n\t\t\t\t\t\t\t\trange: wholeLineRange\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.modelData[modelUrlStr].topStackFrameRange = wholeLineRange;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (sf === focusedStackFrame) {\n\t\t\t\tresult.push({\n\t\t\t\t\toptions: DebugEditorModelManager.FOCUSED_STACK_FRAME_MARGIN,\n\t\t\t\t\trange: createRange(sf.lineNumber, sf.column, sf.lineNumber, sf.column + 1)\n\t\t\t\t});\n\n\t\t\t\tresult.push({\n\t\t\t\t\toptions: DebugEditorModelManager.FOCUSED_STACK_FRAME_DECORATION,\n\t\t\t\t\trange: wholeLineRange\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t// breakpoints management. Represent data coming from the debug service and also send data back.\n\tprivate onModelDecorationsChanged(modelUrlStr: string, e: editorcommon.IModelDecorationsChangedEvent): void {\n\t\tconst modelData = this.modelData[modelUrlStr];\n\t\tif (!e.addedOrChangedDecorations.some(d => modelData.breakpointDecorationsAsMap.hasOwnProperty(d.id))) {\n\t\t\t// nothing to do, my decorations did not change.\n\t\t\treturn;\n\t\t}\n\n\t\tconst data: IRawBreakpoint[] = [];\n\n\t\tconst enabledAndConditions: { [key: number]: { enabled: boolean, condition: string } } = {};\n\t\tthis.debugService.getModel().getBreakpoints().filter(bp => bp.source.uri.toString() === modelUrlStr).forEach(bp => {\n\t\t\tenabledAndConditions[bp.lineNumber] = {\n\t\t\t\tenabled: bp.enabled,\n\t\t\t\tcondition: bp.condition\n\t\t\t};\n\t\t});\n\n\t\tconst modelUrl = modelData.model.getAssociatedResource();\n\t\tfor (let i = 0, len = modelData.breakpointDecorationIds.length; i < len; i++) {\n\t\t\tconst decorationRange = modelData.model.getDecorationRange(modelData.breakpointDecorationIds[i]);\n\t\t\t// check if the line got deleted.\n\t\t\tif (decorationRange.endColumn - decorationRange.startColumn > 0) {\n\t\t\t\t// since we know it is collapsed, it cannot grow to multiple lines\n\t\t\t\tdata.push({\n\t\t\t\t\turi: modelUrl,\n\t\t\t\t\tlineNumber: decorationRange.startLineNumber,\n\t\t\t\t\tenabled: enabledAndConditions[modelData.breakpointLines[i]].enabled,\n\t\t\t\t\tcondition: enabledAndConditions[modelData.breakpointLines[i]].condition\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tmodelData.dirty = !!this.debugService.getActiveSession();\n\n\t\tthis.debugService.setBreakpointsForModel(modelUrl, data);\n\t}\n\n\tprivate onBreakpointsChanged(): void {\n\t\tconst breakpointsMap: { [key: string]: IBreakpoint[] } = {};\n\t\tthis.debugService.getModel().getBreakpoints().forEach(bp => {\n\t\t\tconst uriStr = bp.source.uri.toString();\n\t\t\tif (breakpointsMap[uriStr]) {\n\t\t\t\tbreakpointsMap[uriStr].push(bp);\n\t\t\t} else {\n\t\t\t\tbreakpointsMap[uriStr] = [bp];\n\t\t\t}\n\t\t});\n\n\t\tObject.keys(breakpointsMap).forEach(modelUriStr => {\n\t\t\tif (this.modelData.hasOwnProperty(modelUriStr)) {\n\t\t\t\tthis.updateBreakpoints(this.modelData[modelUriStr], breakpointsMap[modelUriStr]);\n\t\t\t}\n\t\t});\n\t\tObject.keys(this.modelData).forEach(modelUriStr => {\n\t\t\tif (!breakpointsMap.hasOwnProperty(modelUriStr)) {\n\t\t\t\tthis.updateBreakpoints(this.modelData[modelUriStr], []);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate updateBreakpoints(modelData: IDebugEditorModelData, newBreakpoints: IBreakpoint[]): void {\n\t\tmodelData.breakpointDecorationIds = modelData.model.deltaDecorations(modelData.breakpointDecorationIds, this.createBreakpointDecorations(newBreakpoints));\n\t\tmodelData.breakpointDecorationsAsMap = toMap(modelData.breakpointDecorationIds);\n\t\tmodelData.breakpointLines = newBreakpoints.map(bp => bp.lineNumber);\n\t}\n\n\tprivate createBreakpointDecorations(breakpoints: IBreakpoint[]): editorcommon.IModelDeltaDecoration[] {\n\t\treturn breakpoints.map((breakpoint) => {\n\t\t\treturn {\n\t\t\t\toptions: this.getBreakpointDecorationOptions(breakpoint),\n\t\t\t\trange: createRange(breakpoint.lineNumber, 1, breakpoint.lineNumber, 2)\n\t\t\t};\n\t\t});\n\t}\n\n\tprivate getBreakpointDecorationOptions(breakpoint: IBreakpoint): editorcommon.IModelDecorationOptions {\n\t\tconst activated = this.debugService.getModel().areBreakpointsActivated();\n\t\tconst state = this.debugService.getState();\n\t\tconst debugActive = state === State.Running || state === State.Stopped || state === State.Initializing;\n\t\tconst modelData = this.modelData[breakpoint.source.uri.toString()];\n\t\tconst session = this.debugService.getActiveSession();\n\n\t\tlet result = (!breakpoint.enabled || !activated) ? DebugEditorModelManager.BREAKPOINT_DISABLED_DECORATION :\n\t\t\tdebugActive && modelData && modelData.dirty ? DebugEditorModelManager.BREAKPOINT_DIRTY_DECORATION :\n\t\t\tdebugActive && !breakpoint.verified ? DebugEditorModelManager.BREAKPOINT_UNVERIFIED_DECORATION :\n\t\t\t!breakpoint.condition ? DebugEditorModelManager.BREAKPOINT_DECORATION : null;\n\n\t\tif (result && breakpoint.message) {\n\t\t\tresult = objects.clone(result);\n\t\t\tresult.hoverMessage = breakpoint.message;\n\t\t}\n\n\t\treturn result ? result :\n\t\t\t!session || session.capabilities.supportsConditionalBreakpoints ? {\n\t\t\t\tglyphMarginClassName: 'debug-breakpoint-conditional-glyph',\n\t\t\t\thoverMessage: breakpoint.condition,\n\t\t\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t\t\t} : DebugEditorModelManager.BREAKPOINT_UNSUPPORTED_DECORATION;\n\t}\n\n\t// editor decorations\n\n\tprivate static BREAKPOINT_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-glyph',\n\t\thoverMessage: nls.localize('breakpointHover', \"Breakpoint\"),\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static BREAKPOINT_DISABLED_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-disabled-glyph',\n\t\thoverMessage: nls.localize('breakpointDisabledHover', \"Disabled Breakpoint\"),\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static BREAKPOINT_UNVERIFIED_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-unverified-glyph',\n\t\thoverMessage: nls.localize('breakpointUnverifieddHover', \"Unverified Breakpoint\"),\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static BREAKPOINT_DIRTY_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-unverified-glyph',\n\t\thoverMessage: nls.localize('breakpointDirtydHover', \"Unverified breakpoint. File is modified, please restart debug session.\"),\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static BREAKPOINT_UNSUPPORTED_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-breakpoint-unsupported-glyph',\n\t\thoverMessage: nls.localize('breakpointUnsupported', \"Conditional breakpoints not supported by this debug type\"),\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\t// we need a separate decoration for glyph margin, since we do not want it on each line of a multi line statement.\n\tprivate static TOP_STACK_FRAME_MARGIN: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-top-stack-frame-glyph',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static FOCUSED_STACK_FRAME_MARGIN: editorcommon.IModelDecorationOptions = {\n\t\tglyphMarginClassName: 'debug-focused-stack-frame-glyph',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static TOP_STACK_FRAME_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tisWholeLine: true,\n\t\tclassName: 'debug-top-stack-frame-line',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static TOP_STACK_FRAME_EXCEPTION_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tisWholeLine: true,\n\t\tclassName: 'debug-top-stack-frame-exception-line',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static TOP_STACK_FRAME_COLUMN_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tisWholeLine: false,\n\t\tclassName: 'debug-top-stack-frame-column',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n\n\tprivate static FOCUSED_STACK_FRAME_DECORATION: editorcommon.IModelDecorationOptions = {\n\t\tisWholeLine: true,\n\t\tclassName: 'debug-focused-stack-frame-line',\n\t\tstickiness: editorcommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n\t};\n}\n"]}