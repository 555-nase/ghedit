{"version":3,"file":"vs/workbench/parts/debug/test/common/mockDebugService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/debug/test/common/mockDebugService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport debug = require('vs/workbench/parts/debug/common/debug');\nimport editor = require('vs/editor/common/editorCommon');\nimport ee = require('vs/base/common/eventEmitter');\nimport uri from 'vs/base/common/uri';\nimport editorbrowser = require('vs/editor/browser/editorBrowser');\nimport severity from 'vs/base/common/severity';\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport { Source } from 'vs/workbench/parts/debug/common/debugSource';\n\nexport class MockDebugService extends ee.EventEmitter implements debug.IDebugService {\n\tprivate session: MockRawSession;\n\tpublic serviceId = debug.IDebugService;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.session = new MockRawSession();\n\t}\n\n\tpublic getState(): debug.State {\n\t\treturn null;\n\t}\n\n\tpublic canSetBreakpointsIn(model: editor.IModel): boolean {\n\t\treturn false;\n\t}\n\n\tpublic getConfigurationName(): string {\n\t\treturn null;\n\t}\n\n\tpublic setConfiguration(name: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic openConfigFile(sideBySide: boolean): TPromise<boolean> {\n\t\treturn TPromise.as(false);\n\t}\n\n\tpublic loadLaunchConfig(): TPromise<debug.IGlobalConfig> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic setFocusedStackFrameAndEvaluate(focusedStackFrame: debug.IStackFrame): void {}\n\n\tpublic setBreakpointsForModel(modelUri: uri, rawData: debug.IRawBreakpoint[]): void {}\n\n\tpublic toggleBreakpoint(IRawBreakpoint): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic enableOrDisableAllBreakpoints(enabled: boolean): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic toggleEnablement(element: debug.IEnablement): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic toggleBreakpointsActivated(): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic removeAllBreakpoints(): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic sendAllBreakpoints(): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic editBreakpoint(editor: editorbrowser.ICodeEditor, lineNumber: number): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic addFunctionBreakpoint(): void {}\n\n\tpublic renameFunctionBreakpoint(id: string, newFunctionName: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic removeFunctionBreakpoints(id?: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic addReplExpression(name: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic clearReplExpressions(): void {}\n\n\tpublic logToRepl(value: string, severity?: severity): void;\n\tpublic logToRepl(value: { [key: string]: any }, severity?: severity): void;\n\tpublic logToRepl(value: any, severity?: severity): void {}\n\n\tpublic appendReplOutput(value: string, severity?: severity): void {}\n\n\tpublic addWatchExpression(name?: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic renameWatchExpression(id: string, newName: string): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic clearWatchExpressions(id?: string): void {}\n\n\tpublic createSession(noDebug: boolean): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic restartSession(): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic getActiveSession(): debug.IRawDebugSession {\n\t\treturn this.session;\n\t}\n\n\tpublic getModel(): debug.IModel {\n\t\treturn null;\n\t}\n\n\tpublic getViewModel(): debug.IViewModel {\n\t\treturn null;\n\t}\n\n\tpublic openOrRevealEditor(source: Source, lineNumber: number, preserveFocus: boolean, sideBySide: boolean): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic revealRepl(focus?: boolean): TPromise<void> {\n\t\treturn TPromise.as(null);\n\t}\n}\n\n\nclass MockRawSession extends ee.EventEmitter implements debug.IRawDebugSession {\n\tpublic isAttach: boolean = false;\n\tpublic capabilities: DebugProtocol.Capabilites;\n\n\tpublic getType(): string {\n\t\treturn null;\n\t}\n\n\tpublic disconnect(restart?: boolean, force?: boolean): TPromise<DebugProtocol.DisconnectResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic next(args: DebugProtocol.NextArguments): TPromise<DebugProtocol.NextResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic stepIn(args: DebugProtocol.StepInArguments): TPromise<DebugProtocol.StepInResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic stepOut(args: DebugProtocol.StepOutArguments): TPromise<DebugProtocol.StepOutResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic continue(args: DebugProtocol.ContinueArguments): TPromise<DebugProtocol.ContinueResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic pause(args: DebugProtocol.PauseArguments): TPromise<DebugProtocol.PauseResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic stackTrace(args: DebugProtocol.StackTraceArguments): TPromise<DebugProtocol.StackTraceResponse> {\n\t\treturn TPromise.as({\n\t\t\tbody: {\n\t\t\t\tstackFrames: []\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic scopes(args: DebugProtocol.ScopesArguments): TPromise<DebugProtocol.ScopesResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tpublic variables(args: DebugProtocol.VariablesArguments): TPromise<DebugProtocol.VariablesResponse> {\n\t\treturn TPromise.as(null);\n\t}\n\n\tevaluate(args: DebugProtocol.EvaluateArguments): TPromise<DebugProtocol.EvaluateResponse> {\n\t\treturn TPromise.as(null);\n\t}\n}\n"]}