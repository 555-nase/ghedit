{"version":3,"file":"vs/workbench/parts/debug/test/common/replHistory.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/debug/test/common/replHistory.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;IAKhG,KAAK,CAAC,sBAAsB,EAAE;QAC7B,IAAI,OAAoB,CAAC;QAEzB,KAAK,CAAC;YACL,OAAO,GAAG,IAAI,yBAAW,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC;YACR,OAAO,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE;YACzB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,EAAE;YAC9B,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;YAEpC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;YAExC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,OAAO,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert = require('assert');\nimport { ReplHistory } from 'vs/workbench/parts/debug/common/replHistory';\n\nsuite('Debug - Repl History', () => {\n\tvar history: ReplHistory;\n\n\tsetup(() => {\n\t\thistory = new ReplHistory(['one', 'two', 'three', 'four', 'five']);\n\t});\n\n\tteardown(() => {\n\t\thistory = null;\n\t});\n\n\ttest('previous and next', () => {\n\t\tassert.equal(history.previous(), 'five');\n\t\tassert.equal(history.previous(), 'four');\n\t\tassert.equal(history.previous(), 'three');\n\t\tassert.equal(history.previous(), 'two');\n\t\tassert.equal(history.previous(), 'one');\n\t\tassert.equal(history.previous(), null);\n\t\tassert.equal(history.next(), 'two');\n\t\tassert.equal(history.next(), 'three');\n\t\tassert.equal(history.next(), 'four');\n\t\tassert.equal(history.next(), 'five');\n\t});\n\n\ttest('evaluated and remember', () => {\n\t\thistory.evaluated('six');\n\t\tassert.equal(history.previous(), 'six');\n\t\tassert.equal(history.previous(), 'five');\n\t\tassert.equal(history.next(), 'six');\n\n\t\thistory.remember('six++', true);\n\t\tassert.equal(history.next(), 'six++');\n\t\tassert.equal(history.previous(), 'six');\n\n\t\thistory.evaluated('seven');\n\t\tassert.equal(history.previous(), 'seven');\n\t\tassert.equal(history.previous(), 'six');\n\t});\n});\n"]}