{"version":3,"file":"vs/platform/actions/test/common/actions.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/actions/test/common/actions.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAWb;QAAgC,8BAAc;QAK7C,oBAAY,KAAa,EAAE,MAAc,EAAiB,YAA2B;YACpF,kBAAM,KAAK,CAAC,CAAC;YACb,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,CAAC;QAGM,wBAAG,GAAV;YACC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;QAC5F,CAAC;QAV0C;uBAAC,qBAAa;sBAAA;QAW1D,iBAAC;IAAD,CAAC,AAhBD,CAAgC,OAAO,CAAC,MAAM,GAgB7C;IAhBY,kBAAU,aAgBtB,CAAA;IAED;QAA+B,oCAAyB;QAAxD;YAA+B,8BAAyB;QACxD,CAAC;QAAD,uBAAC;IAAD,CAAC,AADD,CAA+B,YAAY,CAAC,YAAY,GACvD;IAED,KAAK,CAAC,kBAAkB,EAAE;QACzB,IAAI,CAAC,gBAAgB,EAAE,UAAC,IAAI;YAE3B,IAAI,QAAQ,GAAQ;gBACnB,YAAY,EAAE,EAAE;aAChB,CAAC;YAEF,IAAI,oBAAoB,GAAG,oBAAoB,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;YAErF,IAAI,MAAM,GAAG,IAAI,wBAAc,CAC9B,oBAAoB,EACpB,IAAI,6BAAe,CAAiB,8CAA8C,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,EACpH,gBAAgB,EAChB,aAAa,EACb,KAAK,CACL,CAAC;YAEF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;gBACxB,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACjC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;gBACvC,IAAI,EAAE,CAAC;YACR,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport assert = require('assert');\nimport WinJS = require('vs/base/common/winjs.base');\nimport {DeferredAction} from 'vs/platform/actions/common/actions';\nimport Actions = require('vs/base/common/actions');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport InstantiationService = require('vs/platform/instantiation/common/instantiationService');\nimport {AsyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {IEventService} from 'vs/platform/event/common/event';\n\nexport class TestAction extends Actions.Action {\n\tprivate service;\n\tprivate first: string;\n\tprivate second: string;\n\n\tconstructor(first: string, second: string, @IEventService eventService: IEventService) {\n\t\tsuper(first);\n\t\tthis.service = eventService;\n\t\tthis.first = first;\n\t\tthis.second = second;\n\t}\n\n\n\tpublic run(): WinJS.Promise {\n\t\treturn WinJS.TPromise.as((!!this.service && !!this.first && !!this.second) ? true : false);\n\t}\n}\n\nclass TestEventService extends EventEmitter.EventEmitter {\n}\n\nsuite('Platform actions', () => {\n\ttest('DeferredAction', (done) => {\n\n\t\tlet services: any = {\n\t\t\teventService: {}\n\t\t};\n\n\t\tlet instantiationService = InstantiationService.createInstantiationService(services);\n\n\t\tlet action = new DeferredAction(\n\t\t\tinstantiationService,\n\t\t\tnew AsyncDescriptor<Actions.Action>('vs/platform/actions/test/common/actions.test', 'TestAction', 'my.id', 'Second'),\n\t\t\t'my.test.action',\n\t\t\t'Hello World',\n\t\t\t'css'\n\t\t);\n\n\t\tassert.strictEqual(action.id, 'my.test.action');\n\t\taction.run().then((result) => {\n\t\t\tassert.strictEqual(result, true);\n\t\t\tassert.strictEqual(action.id, 'my.id');\n\t\t\tdone();\n\t\t});\n\t});\n});\n"]}