{"version":3,"sources":["vs/platform/actions/common/actionsService.ts"],"names":[],"mappings":"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","file":"vs/platform/actions/common/actionsService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {localize} from 'vs/nls';\nimport {Action, IAction} from 'vs/base/common/actions';\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport {IExtensionService} from 'vs/platform/extensions/common/extensions';\nimport {IExtensionMessageCollector, ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {IActionsService} from './actions';\n\ninterface Commands {\n\tcommands: Command | Command[];\n}\n\ninterface Command {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nfunction isCommands(thing: Command | Command[]): thing is Command[] {\n\treturn Array.isArray(thing);\n}\n\nfunction isValidCommand(candidate: Command, rejects: string[]): boolean {\n\tif (!candidate) {\n\t\trejects.push(localize('nonempty', \"expected non-empty value.\"));\n\t\treturn false;\n\t}\n\tif (typeof candidate.command !== 'string') {\n\t\trejects.push(localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'command'));\n\t\treturn false;\n\t}\n\tif (typeof candidate.title !== 'string') {\n\t\trejects.push(localize('requirestring', \"property `{0}` is mandatory and must be of type `string`\", 'title'));\n\t\treturn false;\n\t}\n\tif (candidate.category && typeof candidate.category !== 'string') {\n\t\trejects.push(localize('optstring', \"property `{0}` can be omitted or must be of type `string`\", 'category'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nlet commandType: IJSONSchema = {\n\ttype: 'object',\n\tproperties: {\n\t\tcommand: {\n\t\t\tdescription: localize('vscode.extension.contributes.commandType.command', 'Identifier of the command to execute'),\n\t\t\ttype: 'string'\n\t\t},\n\t\ttitle: {\n\t\t\tdescription: localize('vscode.extension.contributes.commandType.title', 'Title by which the command is represented in the UI.'),\n\t\t\ttype: 'string'\n\t\t},\n\t\tcategory: {\n\t\t\tdescription: localize('vscode.extension.contributes.commandType.category', '(Optional) category string by the command is grouped in the UI'),\n\t\t\ttype: 'string'\n\t\t}\n\t}\n};\nlet commandsExtPoint = ExtensionsRegistry.registerExtensionPoint<Command | Command[]>('commands', {\n\tdescription: localize('vscode.extension.contributes.commands', \"Contributes commands to the command palette.\"),\n\toneOf: [\n\t\tcommandType,\n\t\t{\n\t\t\ttype: 'array',\n\t\t\titems: commandType\n\t\t}\n\t]\n});\n\nexport default class ActionsService implements IActionsService {\n\n\tprivate _extensionService: IExtensionService;\n\tprivate _keybindingsService: IKeybindingService;\n\tprivate _extensionsActions: IAction[] = [];\n\n\tserviceId: any;\n\n\tconstructor( @IExtensionService extensionService: IExtensionService, @IKeybindingService keybindingsService: IKeybindingService) {\n\t\tthis._extensionService = extensionService;\n\t\tthis._keybindingsService = keybindingsService;\n\t\tcommandsExtPoint.setHandler((extensions) => {\n\t\t\tfor (let d of extensions) {\n\t\t\t\tthis._onDescription(d.value, d.collector);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onDescription(commands: Command | Command[], collector: IExtensionMessageCollector): void {\n\t\tif (isCommands(commands)) {\n\t\t\tfor (let command of commands) {\n\t\t\t\tthis._handleCommand(command, collector);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._handleCommand(commands, collector);\n\t\t}\n\t}\n\n\tprivate _handleCommand(command: Command, collector: IExtensionMessageCollector): void {\n\n\t\tlet rejects: string[] = [];\n\n\t\tif (isValidCommand(command, rejects)) {\n\t\t\t// make sure this extension is activated by this command\n\t\t\tlet activationEvent = `onCommand:${command.command}`;\n\n\t\t\t// action that (1) activates the extension and dispatches the command\n\t\t\tlet label = command.category ? localize('category.label', \"{0}: {1}\", command.category, command.title) : command.title;\n\t\t\tlet action = new Action(command.command, label, undefined, true, () => {\n\t\t\t\treturn this._extensionService.activateByEvent(activationEvent).then(() => {\n\t\t\t\t\treturn this._keybindingsService.executeCommand(command.command);\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis._extensionsActions.push(action);\n\t\t}\n\n\t\tif (rejects.length > 0) {\n\t\t\tcollector.error(localize(\n\t\t\t\t'error',\n\t\t\t\t\"Invalid `contributes.{0}`: {1}\",\n\t\t\t\tcommandsExtPoint.name,\n\t\t\t\trejects.join('\\n')\n\t\t\t));\n\t\t}\n\n\t}\n\n\tgetActions(): IAction[] {\n\t\treturn this._extensionsActions.slice(0);\n\t}\n}\n"]}