{"version":3,"file":"vs/platform/instantiation/test/common/instantiationService.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/instantiation/test/common/instantiationService.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n\nimport assert = require('assert');\nimport instantiation = require('vs/platform/instantiation/common/instantiation');\nimport instantiationService = require('vs/platform/instantiation/common/instantiationService');\n\nimport {SyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\n\nlet IService1 = instantiation.createDecorator<IService1>('service1');\n\ninterface IService1 {\n\tserviceId: instantiation.ServiceIdentifier<any>;\n\tc: number;\n}\n\nclass Service1 implements IService1 {\n\tserviceId = IService1;\n\tc = 1;\n}\n\nlet IService2 = instantiation.createDecorator<IService2>('service2');\n\ninterface IService2 {\n\tserviceId: instantiation.ServiceIdentifier<any>;\n\td: boolean;\n}\n\nclass Service2 implements IService2 {\n\tserviceId = IService2;\n\td = true;\n}\n\nlet IService3 = instantiation.createDecorator<IService3>('service3');\n\ninterface IService3 {\n\tserviceId: instantiation.ServiceIdentifier<any>;\n\ts: string;\n}\n\nclass Service3 implements IService3 {\n\tserviceId = IService3;\n\ts = 'farboo';\n}\n\nlet IDependentService = instantiation.createDecorator<IDependentService>('dependentService');\n\ninterface IDependentService {\n\tserviceId: instantiation.ServiceIdentifier<any>;\n\tname: string;\n}\n\nclass DependentService implements IDependentService {\n\tserviceId = IDependentService;\n\tconstructor( @IService1 service: IService1) {\n\t\tassert.equal(service.c, 1);\n\t}\n\n\tname = 'farboo';\n}\n\nclass ParameterTarget {\n\n\tconstructor( @IService1 service1: IService1) {\n\t\tassert.ok(service1);\n\t\tassert.equal(service1.c, 1);\n\t}\n}\n\nclass ParameterTarget2 {\n\tconstructor(v: boolean, @IService1 service1: IService1) {\n\t\tassert.ok(v);\n\t\tassert.ok(service1);\n\t\tassert.equal(service1.c, 1);\n\t}\n}\n\nclass TargetOptional {\n\tconstructor( @IService1 service1: IService1, @IService2 service2?: IService2) {\n\t\tassert.ok(service1);\n\t\tassert.equal(service1.c, 1);\n\t\tassert.ok(service2 === void 0);\n\t}\n}\n\nclass DependentServiceTarget {\n\tconstructor( @IDependentService d) {\n\t\tassert.ok(d);\n\t\tassert.equal(d.name, 'farboo');\n\t}\n}\n\nclass DependentServiceTarget2 {\n\tconstructor( @IDependentService d: IDependentService, @IService1 s: IService1) {\n\t\tassert.ok(d);\n\t\tassert.equal(d.name, 'farboo');\n\t\tassert.ok(s);\n\t\tassert.equal(s.c, 1);\n\t}\n}\n\n\nclass ServiceLoop1 implements IService1 {\n\tserviceId = IService1;\n\tc = 1;\n\n\tconstructor( @IService2 s: IService2) {\n\n\t}\n}\n\nclass ServiceLoop2 implements IService2 {\n\tserviceId = IService2;\n\td = true;\n\n\tconstructor( @IService1 s: IService1) {\n\n\t}\n}\n\nsuite('Instantiation Service', () => {\n\ttest('@Param - simple clase', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\tservice.addSingleton(IService2, new Service2());\n\t\tservice.addSingleton(IService3, new Service3());\n\n\t\tservice.createInstance(ParameterTarget);\n\t});\n\n\ttest('@Param - fixed args', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\tservice.addSingleton(IService2, new Service2());\n\t\tservice.addSingleton(IService3, new Service3());\n\n\t\tservice.createInstance(ParameterTarget2, true);\n\t});\n\n\ttest('@Param - optional', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\t// service.addSingleton(IService2, new Service2());\n\n\t\tservice.createInstance(TargetOptional);\n\t});\n\n\t// we made this a warning\n\t// test('@Param - too many args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2, true, 2));\n\t// });\n\n\t// test('@Param - too few args', function () {\n\t// \tlet service = instantiationService.create(Object.create(null));\n\t// \tservice.addSingleton(IService1, new Service1());\n\t// \tservice.addSingleton(IService2, new Service2());\n\t// \tservice.addSingleton(IService3, new Service3());\n\n\t// \tassert.throws(() => service.createInstance(ParameterTarget2));\n\t// });\n\n\ttest('SyncDesc - no dependencies', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new SyncDescriptor<IService1>(Service1));\n\n\t\tlet service1 = service.getInstance(IService1);\n\t\tassert.ok(service1);\n\t\tassert.equal(service1.c, 1);\n\n\t\tlet service2 = service.getInstance(IService1);\n\t\tassert.ok(service1 === service2);\n\t});\n\n\ttest('SyncDesc - service with service dependency', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tservice.addSingleton(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tlet d = service.getInstance(IDependentService);\n\t\tassert.ok(d);\n\t\tassert.equal(d.name, 'farboo');\n\t});\n\n\ttest('SyncDesc - target depends on service future', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new SyncDescriptor<IService1>(Service1));\n\t\tservice.addSingleton(IDependentService, new SyncDescriptor<IDependentService>(DependentService));\n\n\t\tlet d = service.createInstance(DependentServiceTarget);\n\t\tassert.ok(d instanceof DependentServiceTarget);\n\n\t\tlet d2 = service.createInstance(DependentServiceTarget2);\n\t\tassert.ok(d2 instanceof DependentServiceTarget2);\n\t});\n\n\ttest('SyncDesc - explode on loop', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new SyncDescriptor<IService1>(ServiceLoop1));\n\t\tservice.addSingleton(IService2, new SyncDescriptor<IService2>(ServiceLoop2));\n\n\t\tassert.throws(() => service.getInstance(IService1));\n\t\tassert.throws(() => service.getInstance(IService2));\n\n\t\ttry {\n\t\t\tservice.getInstance(IService1);\n\t\t} catch (err) {\n\t\t\tassert.ok(err.name);\n\t\t\tassert.ok(err.message);\n\t\t}\n\t});\n\n\ttest('Invoke - get services', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\tservice.addSingleton(IService2, new Service2());\n\n\t\tfunction test(accessor: instantiation.ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.equal(accessor.get(IService1).c, 1);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.equal(service.invokeFunction(test), true);\n\t});\n\n\ttest('Invoke - keeping accessor NOT allowed', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\tservice.addSingleton(IService2, new Service2());\n\n\t\tlet cached: instantiation.ServicesAccessor;\n\n\t\tfunction test(accessor: instantiation.ServicesAccessor) {\n\t\t\tassert.ok(accessor.get(IService1) instanceof Service1);\n\t\t\tassert.equal(accessor.get(IService1).c, 1);\n\t\t\tcached = accessor;\n\t\t\treturn true;\n\t\t}\n\n\t\tassert.equal(service.invokeFunction(test), true);\n\n\t\tassert.throws(() => cached.get(IService2));\n\t});\n\n\ttest('Invoke - throw error', function() {\n\t\tlet service = instantiationService.createInstantiationService(Object.create(null));\n\t\tservice.addSingleton(IService1, new Service1());\n\t\tservice.addSingleton(IService2, new Service2());\n\n\t\tfunction test(accessor: instantiation.ServicesAccessor) {\n\t\t\tthrow new Error();\n\t\t}\n\n\t\tassert.throws(() => service.invokeFunction(test));\n\t});\n});\n"]}