{"version":3,"file":"vs/platform/instantiation/common/instantiationService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/instantiation/common/instantiationService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as winjs from 'vs/base/common/winjs.base';\nimport * as errors from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport * as types from 'vs/base/common/types';\nimport * as collections from 'vs/base/common/collections';\nimport * as descriptors from './descriptors';\nimport {Graph} from 'vs/base/common/graph';\nimport * as instantiation from './instantiation';\n\nimport IInstantiationService = instantiation.IInstantiationService;\nimport ServiceIdentifier = instantiation.ServiceIdentifier;\n\n/**\n * Creates a new instance of an instantiation service.\n */\nexport function createInstantiationService(services: any = Object.create(null)): IInstantiationService {\n\tlet result = new InstantiationService(services, new AccessLock());\n\treturn result;\n}\n\nclass AccessLock {\n\n\tprivate _value: number = 0;\n\n\tpublic get locked() {\n\t\treturn this._value === 0;\n\t}\n\n\tpublic runUnlocked<R>(r: () => R): R {\n\t\tthis._value++;\n\t\ttry {\n\t\t\treturn r();\n\t\t} finally {\n\t\t\tthis._value--;\n\t\t}\n\t}\n}\n\nclass ServicesMap {\n\n\tconstructor(private _services: any, private _lock: AccessLock) {\n\t\tcollections.forEach(this._services, (entry) => {\n\n\t\t\t// add a accessor to myselves\n\t\t\tthis.registerService(entry.key, entry.value);\n\t\t});\n\t}\n\n\tpublic registerService(name: string, service: any): void {\n\t\t// add a accessor to myselves\n\t\tObject.defineProperty(this, name, {\n\t\t\tget: () => {\n\t\t\t\tif (this._lock.locked) {\n\t\t\t\t\tthrow errors.illegalState('the services map can only be used during construction');\n\t\t\t\t}\n\t\t\t\tif (!service) {\n\t\t\t\t\tthrow errors.illegalArgument(strings.format('service with \\'{0}\\' not found', name));\n\t\t\t\t}\n\t\t\t\tif (service instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\tlet cached = this._services[name];\n\t\t\t\t\tif (cached instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\t\tthis._ensureInstances(name, service);\n\t\t\t\t\t\tservice = this._services[name];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tservice = cached;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn service;\n\t\t\t},\n\t\t\tset: (value: any) => {\n\t\t\t\tthrow errors.illegalState('services cannot be changed');\n\t\t\t},\n\t\t\tconfigurable: false,\n\t\t\tenumerable: false\n\t\t});\n\t\t// add to services map\n\t\tthis._services[name] = service;\n\t}\n\n\tpublic get lock(): AccessLock {\n\t\treturn this._lock;\n\t}\n\n\tpublic get services(): any {\n\t\treturn this._services;\n\t}\n\n\tprivate _ensureInstances(serviceId: string, desc: descriptors.SyncDescriptor<any>): void {\n\n\t\tlet seen: { [n: string]: boolean } = Object.create(null);\n\t\tlet graph = new Graph<{ serviceId: string, desc: descriptors.SyncDescriptor<any> }>(i => i.serviceId);\n\n\t\tfunction throwCycleError() {\n\t\t\tconst err = new Error('[createInstance cyclic dependency between services]');\n\t\t\terr.message = graph.toString();\n\t\t\tthrow err;\n\t\t}\n\n\t\tlet stack = [{ serviceId, desc }];\n\t\twhile (stack.length) {\n\t\t\tlet item = stack.pop();\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// check for cycles between the descriptors\n\t\t\tif (seen[item.serviceId]) {\n\t\t\t\tthrowCycleError();\n\t\t\t}\n\t\t\tseen[item.serviceId] = true;\n\n\t\t\t// check all dependencies for existence and if the need to be created first\n\t\t\tlet dependencies = instantiation._util.getServiceDependencies(item.desc.ctor);\n\t\t\tif (Array.isArray(dependencies)) {\n\t\t\t\tfor (let dependency of dependencies) {\n\t\t\t\t\tlet instanceOrDesc = this.services[dependency.serviceId];\n\t\t\t\t\tif (!instanceOrDesc) {\n\t\t\t\t\t\tthrow new Error(`[createInstance] ${serviceId} depends on ${dependency.serviceId} which is NOT registered.`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (instanceOrDesc instanceof descriptors.SyncDescriptor) {\n\t\t\t\t\t\tconst d = { serviceId: dependency.serviceId, desc: instanceOrDesc };\n\t\t\t\t\t\tstack.push(d);\n\t\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (graph.length !== 0) {\n\t\t\t\t\tthrowCycleError();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (let root of roots) {\n\t\t\t\tlet instance = this.createInstance(root.data.desc, []);\n\t\t\t\tthis._services[root.data.serviceId] = instance;\n\t\t\t\tgraph.removeNode(root.data);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic invokeFunction<R>(fn: Function, args: any[]): R {\n\n\t\treturn this._lock.runUnlocked(() => {\n\n\t\t\tlet accessor: instantiation.ServicesAccessor = {\n\t\t\t\tget: <T>(id: instantiation.ServiceIdentifier<T>) => {\n\t\t\t\t\tlet value = instantiation._util.getServiceId(id);\n\t\t\t\t\treturn <T>this[value];\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn fn.apply(undefined, [accessor].concat(args));\n\t\t});\n\t}\n\n\tpublic createInstance<T>(descriptor: descriptors.SyncDescriptor<T>, args: any[]): T {\n\t\tlet allArguments: any[] = [];\n\t\tlet serviceInjections = instantiation._util.getServiceDependencies(descriptor.ctor) || [];\n\t\tlet fixedArguments = descriptor.staticArguments().concat(args);\n\t\tlet expectedFirstServiceIndex = fixedArguments.length;\n\t\tlet actualFirstServiceIndex = Number.MAX_VALUE;\n\t\tserviceInjections.forEach(si => {\n\t\t\t// @IServiceName\n\t\t\tlet {serviceId, index} = si;\n\t\t\tlet service = this._lock.runUnlocked(() => this[serviceId]);\n\t\t\tallArguments[index] = service;\n\t\t\tactualFirstServiceIndex = Math.min(actualFirstServiceIndex, si.index);\n\t\t});\n\n\t\t// insert the fixed arguments into the array of all ctor\n\t\t// arguments. don't overwrite existing values tho it indicates\n\t\t// something is off\n\t\tlet i = 0;\n\t\tfor (let arg of fixedArguments) {\n\t\t\tlet hasValue = allArguments[i] !== void 0;\n\t\t\tif (!hasValue) {\n\t\t\t\tallArguments[i] = arg;\n\t\t\t}\n\t\t\ti += 1;\n\t\t}\n\n\t\tallArguments.unshift(descriptor.ctor); // ctor is first arg\n\n\t\t// services are the last arguments of ctor-calls. We check if static ctor arguments\n\t\t// (like those from a [sync|async] desriptor) or args that are passed by createInstance\n\t\t// don't override positions of those arguments\n\t\tif (actualFirstServiceIndex !== Number.MAX_VALUE\n\t\t\t&& actualFirstServiceIndex !== expectedFirstServiceIndex) {\n\n\t\t\tlet msg = `[createInstance] constructor '${descriptor.ctor.name}' has first` +\n\t\t\t\t` service dependency at position ${actualFirstServiceIndex + 1} but is called with` +\n\t\t\t\t` ${expectedFirstServiceIndex - 1} static arguments that are expected to come first`;\n\n\t\t\t// throw new Error(msg);\n\t\t\tconsole.warn(msg);\n\t\t}\n\n\t\treturn this._lock.runUnlocked(() => {\n\t\t\tconst instance = types.create.apply(null, allArguments);\n\t\t\tdescriptor._validate(instance);\n\t\t\treturn <T>instance;\n\t\t});\n\t}\n}\n\nclass InstantiationService implements IInstantiationService {\n\tpublic serviceId = IInstantiationService;\n\n\tprivate _servicesMap: ServicesMap;\n\n\tconstructor(services: any, lock: AccessLock) {\n\t\tservices['instantiationService'] = this;\n\t\tthis._servicesMap = new ServicesMap(services, lock);\n\t}\n\n\tcreateChild(services: any): IInstantiationService {\n\t\tconst childServices = {};\n\t\t// copy existing services\n\t\tcollections.forEach(this._servicesMap.services, (entry) => {\n\t\t\tchildServices[entry.key] = entry.value;\n\t\t});\n\t\t// insert new services (might overwrite)\n\t\tcollections.forEach(services, (entry) => {\n\t\t\tchildServices[entry.key] = entry.value;\n\t\t});\n\t\treturn new InstantiationService(childServices, this._servicesMap.lock);\n\t}\n\n\tregisterService(name: string, service: any): void {\n\t\tthis._servicesMap.registerService(name, service);\n\t}\n\n\taddSingleton<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | descriptors.SyncDescriptor<T>): void {\n\t\tlet name = instantiation._util.getServiceId(id);\n\t\tthis._servicesMap.registerService(name, instanceOrDescriptor);\n\t}\n\n\tgetInstance<T>(id: ServiceIdentifier<T>): T {\n\t\tlet name = instantiation._util.getServiceId(id);\n\t\tlet result = this._servicesMap.lock.runUnlocked(() => this._servicesMap[name]);\n\t\treturn result;\n\t}\n\n\tcreateInstance<T>(ctor: instantiation.IConstructorSignature0<T>, ...rest: any[]): T;\n\tcreateInstance<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, ...rest: any[]): T;\n\tcreateInstance<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, ...rest: any[]): T;\n\tcreateInstance<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, ...rest: any[]): T;\n\tcreateInstance<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<T>(descriptor: descriptors.AsyncDescriptor0<T>): winjs.TPromise<T>;\n\tcreateInstance<A1, T>(descriptor: descriptors.AsyncDescriptor1<A1, T>, a1: A1): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.AsyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.AsyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.AsyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.AsyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.AsyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.AsyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): winjs.TPromise<T>;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.AsyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): winjs.TPromise<T>;\n\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor<T>, ...args: any[]): T;\n\tcreateInstance<T>(descriptor: descriptors.AsyncDescriptor<T>, ...args: any[]): winjs.TPromise<T>;\n\n\tcreateInstance<T>(param: any): any {\n\n\t\tlet rest = new Array<any>(arguments.length - 1);\n\t\tfor (let i = 1, len = arguments.length; i < len; i++) {\n\t\t\trest[i - 1] = arguments[i];\n\t\t}\n\n\t\tif (param instanceof descriptors.SyncDescriptor) {\n\t\t\treturn this._servicesMap.createInstance(<descriptors.SyncDescriptor<T>>param, rest);\n\t\t} else if (param instanceof descriptors.AsyncDescriptor) {\n\t\t\treturn this._createInstanceAsync(<descriptors.AsyncDescriptor<T>>param, rest);\n\t\t} else {\n\t\t\treturn this._servicesMap.createInstance(new descriptors.SyncDescriptor(<instantiation.IConstructorSignature0<T>>param), rest);\n\t\t}\n\t}\n\n\t_createInstanceAsync<T>(descriptor: descriptors.AsyncDescriptor<T>, args: any[]): winjs.TPromise<T> {\n\n\t\tlet canceled: Error;\n\n\t\treturn new winjs.TPromise((c, e, p) => {\n\t\t\trequire([descriptor.moduleName], (_module?: any) => {\n\t\t\t\tif (canceled) {\n\t\t\t\t\te(canceled);\n\t\t\t\t}\n\n\t\t\t\tif (!_module) {\n\t\t\t\t\treturn e(errors.illegalArgument('module not found: ' + descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\tlet ctor: Function;\n\t\t\t\tif (!descriptor.ctorName) {\n\t\t\t\t\tctor = _module;\n\t\t\t\t} else {\n\t\t\t\t\tctor = _module[descriptor.ctorName];\n\t\t\t\t}\n\n\t\t\t\tif (typeof ctor !== 'function') {\n\t\t\t\t\treturn e(errors.illegalArgument('not a function: ' + descriptor.ctorName || descriptor.moduleName));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\targs.unshift.apply(args, descriptor.staticArguments()); // instead of spread in ctor call\n\t\t\t\t\tc(this._servicesMap.createInstance(new descriptors.SyncDescriptor<T>(ctor), args));\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn e(error);\n\t\t\t\t}\n\t\t\t}, e);\n\t\t}, () => {\n\t\t\tcanceled = errors.canceled();\n\t\t});\n\t}\n\n\tinvokeFunction<R>(ctor: instantiation.IFunctionSignature0<R>): R;\n\tinvokeFunction<A1, R>(ctor: instantiation.IFunctionSignature1<A1, R>, first: A1): R;\n\tinvokeFunction<A1, A2, R>(ctor: instantiation.IFunctionSignature2<A1, A2, R>, first: A1, second: A2): R;\n\tinvokeFunction<A1, A2, A3, R>(ctor: instantiation.IFunctionSignature3<A1, A2, A3, R>, first: A1, second: A2, third: A3): R;\n\tinvokeFunction<A1, A2, A3, A4, R>(ctor: instantiation.IFunctionSignature4<A1, A2, A3, A4, R>, first: A1, second: A2, third: A3, fourth: A4): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, R>(ctor: instantiation.IFunctionSignature5<A1, A2, A3, A4, A5, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, R>(ctor: instantiation.IFunctionSignature6<A1, A2, A3, A4, A5, A6, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, R>(ctor: instantiation.IFunctionSignature7<A1, A2, A3, A4, A5, A6, A7, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): R;\n\tinvokeFunction<A1, A2, A3, A4, A5, A6, A7, A8, R>(ctor: instantiation.IFunctionSignature8<A1, A2, A3, A4, A5, A6, A7, A8, R>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): R;\n\tinvokeFunction<R>(signature: any, ...args: any[]): R {\n\t\treturn this._servicesMap.invokeFunction<R>(signature, args);\n\t}\n}\n"]}