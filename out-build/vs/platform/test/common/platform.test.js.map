{"version":3,"file":"vs/platform/test/common/platform.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/test/common/platform.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb,KAAK,CAAC,qBAAqB,EAAE;QAE5B,IAAI,CAAC,gBAAgB,EAAE;YACtB,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE;YAExB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAE5C,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE;YAE5B,IAAI,GAAG,GAAG,EAAE,CAAC;YAEb,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;YAEvC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;YAEpD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC;YACpD,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0CAA0C,EAAE;YAEhD,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YAEhD,IAAI,CAAC;gBACJ,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjD,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAClB,CAAE;YAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport assert = require('assert');\nimport Platform = require('vs/platform/platform');\nimport Types = require('vs/base/common/types');\n\nsuite('Platform / Registry', () => {\n\n\ttest('registry - api', function() {\n\t\tassert.ok(Types.isFunction(Platform.Registry.add));\n\t\tassert.ok(Types.isFunction(Platform.Registry.as));\n\t\tassert.ok(Types.isFunction(Platform.Registry.knows));\n\t});\n\n\ttest('registry - mixin', function() {\n\n\t\tPlatform.Registry.add('foo', { bar: true });\n\n\t\tassert.ok(Platform.Registry.knows('foo'));\n\t\tassert.ok(Platform.Registry.as('foo').bar);\n\t\tassert.equal(Platform.Registry.as('foo').bar, true);\n\t});\n\n\ttest('registry - knows, as', function() {\n\n\t\tlet ext = {};\n\n\t\tPlatform.Registry.add('knows,as', ext);\n\n\t\tassert.ok(Platform.Registry.knows('knows,as'));\n\t\tassert.ok(!Platform.Registry.knows('knows,as1234'));\n\n\t\tassert.ok(Platform.Registry.as('knows,as') === ext);\n\t\tassert.ok(Platform.Registry.as('knows,as1234') === null);\n\t});\n\n\ttest('registry - mixin, fails on duplicate ids', function() {\n\n\t\tPlatform.Registry.add('foo-dup', { bar: true });\n\n\t\ttry {\n\t\t\tPlatform.Registry.add('foo-dup', { bar: false });\n\t\t\tassert.ok(false);\n\t\t} catch (e) {\n\t\t\tassert.ok(true);\n\t\t}\n\t});\n});\n"]}