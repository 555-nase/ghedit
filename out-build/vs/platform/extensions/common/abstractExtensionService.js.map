{"version":3,"file":"abstractExtensionService.js","sourceRoot":"","sources":["../../../../../src/vs/platform/extensions/common/abstractExtensionService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport Severity from 'vs/base/common/severity';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IExtensionDescription, IExtensionService, IExtensionsStatus} from 'vs/platform/extensions/common/extensions';\nimport {ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\n\nconst hasOwnProperty = Object.hasOwnProperty;\n\nexport abstract class ActivatedExtension {\n\tactivationFailed: boolean;\n\n\tconstructor(activationFailed: boolean) {\n\t\tthis.activationFailed = activationFailed;\n\t}\n}\n\nexport interface IActivatedExtensionMap<T extends ActivatedExtension> {\n\t[extensionId: string]: T;\n}\n\ninterface IActivatingExtensionMap {\n\t[extensionId: string]: TPromise<void>;\n}\n\nexport abstract class AbstractExtensionService<T extends ActivatedExtension> implements IExtensionService {\n\tpublic serviceId = IExtensionService;\n\n\tprivate _activatingExtensions: IActivatingExtensionMap;\n\tprotected _activatedExtensions: IActivatedExtensionMap<T>;\n\tprivate _onReady: TPromise<boolean>;\n\tprivate _onReadyC: (v: boolean) => void;\n\n\tconstructor(isReadyByDefault: boolean) {\n\t\tif (isReadyByDefault) {\n\t\t\tthis._onReady = TPromise.as(true);\n\t\t\tthis._onReadyC = (v: boolean) => { /*no-op*/ };\n\t\t} else {\n\t\t\tthis._onReady = new TPromise<boolean>((c, e, p) => {\n\t\t\t\tthis._onReadyC = c;\n\t\t\t}, () => {\n\t\t\t\tconsole.warn('You should really not try to cancel this ready promise!');\n\t\t\t});\n\t\t}\n\t\tthis._activatingExtensions = {};\n\t\tthis._activatedExtensions = {};\n\t}\n\n\tprotected _triggerOnReady(): void {\n\t\tthis._onReadyC(true);\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\treturn this._onReady;\n\t}\n\n\tpublic getExtensionsStatus(): { [id: string]: IExtensionsStatus } {\n\t\treturn null;\n\t}\n\n\tpublic isActivated(extensionId: string): boolean {\n\t\treturn hasOwnProperty.call(this._activatedExtensions, extensionId);\n\t}\n\n\tpublic activateByEvent(activationEvent: string): TPromise<void> {\n\t\treturn this._onReady.then(() => {\n\t\t\tExtensionsRegistry.triggerActivationEventListeners(activationEvent);\n\t\t\tlet activateExtensions = ExtensionsRegistry.getExtensionDescriptionsForActivationEvent(activationEvent);\n\t\t\treturn this._activateExtensions(activateExtensions, 0);\n\t\t});\n\t}\n\n\tpublic activateById(extensionId: string): TPromise<void> {\n\t\treturn this._onReady.then(() => {\n\t\t\tlet desc = ExtensionsRegistry.getExtensionDescription(extensionId);\n\t\t\tif (!desc) {\n\t\t\t\tthrow new Error('Extension `' + extensionId + '` is not known');\n\t\t\t}\n\n\t\t\treturn this._activateExtensions([desc], 0);\n\t\t});\n\t}\n\n\t/**\n\t * Handle semantics related to dependencies for `currentExtension`.\n\t * semantics: `redExtensions` must wait for `greenExtensions`.\n\t */\n\tprivate _handleActivateRequest(currentExtension: IExtensionDescription, greenExtensions: { [id: string]: IExtensionDescription; }, redExtensions: IExtensionDescription[]): void {\n\t\tlet depIds = (typeof currentExtension.extensionDependencies === 'undefined' ? [] : currentExtension.extensionDependencies);\n\t\tlet currentExtensionGetsGreenLight = true;\n\n\t\tfor (let j = 0, lenJ = depIds.length; j < lenJ; j++) {\n\t\t\tlet depId = depIds[j];\n\t\t\tlet depDesc = ExtensionsRegistry.getExtensionDescription(depId);\n\n\t\t\tif (!depDesc) {\n\t\t\t\t// Error condition 1: unknown dependency\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('unknownDep', \"Extension `{1}` failed to activate. Reason: unknown dependency `{0}`.\", depId, currentExtension.id));\n\t\t\t\tthis._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasOwnProperty.call(this._activatedExtensions, depId)) {\n\t\t\t\tlet dep = this._activatedExtensions[depId];\n\t\t\t\tif (dep.activationFailed) {\n\t\t\t\t\t// Error condition 2: a dependency has already failed activation\n\t\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep1', \"Extension `{1}` failed to activate. Reason: dependency `{0}` failed to activate.\", depId, currentExtension.id));\n\t\t\t\t\tthis._activatedExtensions[currentExtension.id] = this._createFailedExtension();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// must first wait for the dependency to activate\n\t\t\t\tcurrentExtensionGetsGreenLight = false;\n\t\t\t\tgreenExtensions[depId] = depDesc;\n\t\t\t}\n\t\t}\n\n\t\tif (currentExtensionGetsGreenLight) {\n\t\t\tgreenExtensions[currentExtension.id] = currentExtension;\n\t\t} else {\n\t\t\tredExtensions.push(currentExtension);\n\t\t}\n\t}\n\n\tprivate _activateExtensions(extensionDescriptions: IExtensionDescription[], recursionLevel: number): TPromise<void> {\n\t\t// console.log(recursionLevel, '_activateExtensions: ', extensionDescriptions.map(p => p.id));\n\t\tif (extensionDescriptions.length === 0) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\textensionDescriptions = extensionDescriptions.filter((p) => !hasOwnProperty.call(this._activatedExtensions, p.id));\n\t\tif (extensionDescriptions.length === 0) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tif (recursionLevel > 10) {\n\t\t\t// More than 10 dependencies deep => most likely a dependency loop\n\t\t\tfor (let i = 0, len = extensionDescriptions.length; i < len; i++) {\n\t\t\t\t// Error condition 3: dependency loop\n\t\t\t\tthis._showMessage(Severity.Error, nls.localize('failedDep2', \"Extension `{0}` failed to activate. Reason: more than 10 levels of dependencies (most likely a dependency loop).\", extensionDescriptions[i].id));\n\t\t\t\tthis._activatedExtensions[extensionDescriptions[i].id] = this._createFailedExtension();\n\t\t\t}\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tlet greenMap: { [id: string]: IExtensionDescription; } = Object.create(null),\n\t\t\tred: IExtensionDescription[] = [];\n\n\t\tfor (let i = 0, len = extensionDescriptions.length; i < len; i++) {\n\t\t\tthis._handleActivateRequest(extensionDescriptions[i], greenMap, red);\n\t\t}\n\n\t\t// Make sure no red is also green\n\t\tfor (let i = 0, len = red.length; i < len; i++) {\n\t\t\tif (greenMap[red[i].id]) {\n\t\t\t\tdelete greenMap[red[i].id];\n\t\t\t}\n\t\t}\n\n\t\tlet green = Object.keys(greenMap).map(id => greenMap[id]);\n\n\t\t// console.log('greenExtensions: ', green.map(p => p.id));\n\t\t// console.log('redExtensions: ', red.map(p => p.id));\n\n\t\tif (red.length === 0) {\n\t\t\t// Finally reached only leafs!\n\t\t\treturn TPromise.join(green.map((p) => this._activateExtension(p))).then(_ => void 0);\n\t\t}\n\n\t\treturn this._activateExtensions(green, recursionLevel + 1).then(_ => {\n\t\t\treturn this._activateExtensions(red, recursionLevel + 1);\n\t\t});\n\t}\n\n\tprotected _activateExtension(extensionDescription: IExtensionDescription): TPromise<void> {\n\t\tif (hasOwnProperty.call(this._activatedExtensions, extensionDescription.id)) {\n\t\t\treturn TPromise.as(void 0);\n\t\t}\n\n\t\tif (hasOwnProperty.call(this._activatingExtensions, extensionDescription.id)) {\n\t\t\treturn this._activatingExtensions[extensionDescription.id];\n\t\t}\n\n\t\tthis._activatingExtensions[extensionDescription.id] = this._actualActivateExtension(extensionDescription).then(null, (err) => {\n\t\t\tthis._showMessage(Severity.Error, nls.localize('activationError', \"Activating extension `{0}` failed: {1}.\", extensionDescription.id, err.message));\n\t\t\tconsole.error('Activating extension `' + extensionDescription.id + '` failed: ', err.message);\n\t\t\tconsole.log('Here is the error stack: ', err.stack);\n\t\t\t// Treat the extension as being empty\n\t\t\treturn this._createFailedExtension();\n\t\t}).then((x: T) => {\n\t\t\tthis._activatedExtensions[extensionDescription.id] = x;\n\t\t\tdelete this._activatingExtensions[extensionDescription.id];\n\t\t});\n\n\t\treturn this._activatingExtensions[extensionDescription.id];\n\t}\n\n\tprotected abstract _showMessage(severity: Severity, message: string): void;\n\n\tprotected abstract _createFailedExtension(): T;\n\n\tprotected abstract _actualActivateExtension(extensionDescription: IExtensionDescription): TPromise<T>;\n}\n"]}