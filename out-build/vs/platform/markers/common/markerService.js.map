{"version":3,"file":"markerService.js","sourceRoot":"","sources":["../../../../../src/vs/platform/markers/common/markerService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport arrays = require('vs/base/common/arrays');\nimport network = require('vs/base/common/network');\nimport strings = require('vs/base/common/strings');\nimport collections = require('vs/base/common/collections');\nimport URI from 'vs/base/common/uri';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport Severity from 'vs/base/common/severity';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMarkerService, IMarkerData, IResourceMarker, IMarker, MarkerStatistics} from './markers';\n\ninterface Key {\n\towner: string;\n\tresource: URI;\n}\n\nmodule Key {\n\n\texport function fromValue(value: string): Key {\n\t\tlet regexp = /^(.*)→(.*)$/.exec(value);\n\t\treturn {\n\t\t\towner: regexp[1],\n\t\t\tresource: URI.parse(regexp[2])\n\t\t};\n\t}\n\n\texport function valueOf(k: Key): string {\n\t\treturn k.owner + '→' + k.resource;\n\t}\n\n\tlet _selectorPattern = '^({0})→({1})$';\n\n\texport function selector(owner?: string, resource?: URI): RegExp {\n\t\treturn new RegExp(strings.format(_selectorPattern, owner ? strings.escapeRegExpCharacters(owner) : '.*', resource ? strings.escapeRegExpCharacters(resource.toString()) : '.*'));\n\t}\n\n\texport function raw(owner: string, resource: URI): string {\n\t\treturn owner + '→' + resource;\n\t}\n}\n\nexport interface MarkerData {\n\t[k: string]: IMarkerData[];\n}\n\n\nexport abstract class MarkerService implements IMarkerService {\n\tpublic serviceId = IMarkerService;\n\tprivate _data: { [k: string]: IMarkerData[] };\n\tprivate _stats: MarkerStatistics;\n\tprivate _onMarkerChanged: Emitter<URI[]>;\n\n\tconstructor() {\n\t\tthis._data = Object.create(null);\n\t\tthis._stats = this._emptyStats();\n\t\tthis._onMarkerChanged = new Emitter<URI[]>();\n\t}\n\n\tpublic getStatistics(): MarkerStatistics {\n\t\treturn this._stats;\n\t}\n\n\t// ---- IMarkerService ------------------------------------------\n\n\tpublic get onMarkerChanged(): Event<URI[]> {\n\t\treturn this._onMarkerChanged ? this._onMarkerChanged.event : null;\n\t}\n\n\tpublic changeOne(owner: string, resource: URI, markers: IMarkerData[]): void {\n\t\tif (this._doChangeOne(owner, resource, markers)) {\n\t\t\tthis._onMarkerChanged.fire([resource]);\n\t\t}\n\t}\n\n\tpublic remove(owner: string, resources: URI[]): void {\n\t\tif (arrays.isFalsyOrEmpty(resources)) {\n\t\t\treturn;\n\t\t}\n\t\tlet changedResources: URI[];\n\t\tfor (let resource of resources) {\n\t\t\tif (this._doChangeOne(owner, resource, undefined)) {\n\t\t\t\tif (!changedResources) {\n\t\t\t\t\tchangedResources = [];\n\t\t\t\t}\n\t\t\t\tchangedResources.push(resource);\n\t\t\t}\n\t\t}\n\t\tif (changedResources) {\n\t\t\tthis._onMarkerChanged.fire(changedResources);\n\t\t}\n\t}\n\n\tprivate _doChangeOne(owner: string, resource: URI, markers: IMarkerData[]): boolean {\n\n\t\tlet key = Key.raw(owner, resource),\n\t\t\toldMarkers = this._data[key],\n\t\t\thasOldMarkers = !arrays.isFalsyOrEmpty(oldMarkers),\n\t\t\tgetsNewMarkers = !arrays.isFalsyOrEmpty(markers),\n\t\t\toldStats = this._computeStats(oldMarkers),\n\t\t\tnewStats = this._computeStats(markers);\n\n\t\tif (!hasOldMarkers && !getsNewMarkers) {\n\t\t\treturn;\n\t\t}\n\t\tif (getsNewMarkers) {\n\t\t\tthis._data[key] = markers;\n\t\t} else if (hasOldMarkers) {\n\t\t\tdelete this._data[key];\n\t\t}\n\t\tif (this._isStatRelevant(resource)) {\n\t\t\tthis._updateStatsMinus(oldStats);\n\t\t\tthis._updateStatsPlus(newStats);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic changeAll(owner: string, data: IResourceMarker[]): void {\n\t\tlet changedResources: { [n: string]: URI } = Object.create(null);\n\n\t\t// remove and record old markers\n\t\tlet oldStats = this._emptyStats();\n\t\tthis._forEach(owner, undefined, undefined, -1, (e, r) => {\n\t\t\tlet resource = Key.fromValue(e.key).resource;\n\t\t\tif (this._isStatRelevant(resource)) {\n\t\t\t\tthis._updateStatsPlus(oldStats, this._computeStats(e.value));\n\t\t\t}\n\t\t\tchangedResources[resource.toString()] = resource;\n\t\t\tr();\n\t\t});\n\t\tthis._updateStatsMinus(oldStats);\n\n\t\t// add and record new markers\n\t\tif (!arrays.isFalsyOrEmpty(data)) {\n\t\t\tlet newStats = this._emptyStats();\n\t\t\tdata.forEach(d => {\n\t\t\t\tchangedResources[d.resource.toString()] = d.resource;\n\t\t\t\tcollections.lookupOrInsert(this._data, Key.raw(owner, d.resource), []).push(d.marker);\n\t\t\t\tif (this._isStatRelevant(d.resource)) {\n\t\t\t\t\tthis._updateStatsMarker(newStats, d.marker);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._updateStatsPlus(newStats);\n\t\t}\n\t\tthis._onMarkerChanged.fire(collections.values(changedResources));\n\t}\n\n\tpublic read(filter: { owner?: string; resource?: URI; selector?: RegExp, take?: number; } = Object.create(null)): IMarker[] {\n\t\tlet ret: IMarker[] = [];\n\t\tthis._forEach(filter.owner, filter.resource, filter.selector, filter.take, entry => this._fromEntry(entry, ret));\n\t\treturn ret;\n\t}\n\n\tprivate _isStatRelevant(resource: URI): boolean {\n\t\t//TODO@Dirk this is a hack\n\t\treturn resource.scheme !== network.Schemas.inMemory;\n\t}\n\n\tprivate _forEach(owner: string, resource: URI, regexp: RegExp, take: number, callback: (entry: { key: string; value: IMarkerData[]; }, remove: Function) => any): void {\n\t\t//TODO@Joh: be smart and use an index\n\t\tlet selector = regexp || Key.selector(owner, resource),\n\t\t\ttook = 0;\n\n\t\tcollections.forEach(this._data, (entry, remove) => {\n\t\t\tif (selector.test(entry.key)) {\n\t\t\t\tcallback(entry, remove);\n\t\t\t\tif (take > 0 && took++ >= take) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _fromEntry(entry: { key: string; value: IMarkerData[]; }, bucket: IMarker[]): void {\n\n\t\tlet key = Key.fromValue(entry.key);\n\n\t\tentry.value.forEach(data => {\n\n\t\t\t// before reading, we sanitize the data\n\t\t\tMarkerService._sanitize(data);\n\n\t\t\tbucket.push({\n\t\t\t\towner: key.owner,\n\t\t\t\tresource: key.resource,\n\t\t\t\tcode: data.code,\n\t\t\t\tmessage: data.message,\n\t\t\t\tsource: data.source,\n\t\t\t\tseverity: data.severity,\n\t\t\t\tstartLineNumber: data.startLineNumber,\n\t\t\t\tstartColumn: data.startColumn,\n\t\t\t\tendLineNumber: data.endLineNumber,\n\t\t\t\tendColumn: data.endColumn\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _computeStats(markers: IMarkerData[]): MarkerStatistics {\n\t\tlet errors = 0, warnings = 0, infos = 0, unknwons = 0;\n\t\tif (markers) {\n\t\t\tfor (let i = 0; i < markers.length; i++) {\n\t\t\t\tlet marker = markers[i];\n\t\t\t\tif (marker.severity) {\n\t\t\t\t\tswitch (marker.severity) {\n\t\t\t\t\t\tcase Severity.Error:\n\t\t\t\t\t\t\terrors++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Severity.Warning:\n\t\t\t\t\t\t\twarnings++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Severity.Info:\n\t\t\t\t\t\t\tinfos++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tunknwons++;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunknwons++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terrors: errors,\n\t\t\twarnings: warnings,\n\t\t\tinfos: infos,\n\t\t\tunknwons: unknwons\n\t\t};\n\t}\n\n\tprivate _emptyStats(): MarkerStatistics {\n\t\treturn { errors: 0, warnings: 0, infos: 0, unknwons: 0 };\n\t}\n\n\tprivate _updateStatsPlus(toAdd: MarkerStatistics): void;\n\tprivate _updateStatsPlus(toUpdate: MarkerStatistics, toAdd: MarkerStatistics): void;\n\tprivate _updateStatsPlus(toUpdate: MarkerStatistics, toAdd?: MarkerStatistics): void {\n\t\tif (!toAdd) {\n\t\t\ttoAdd = toUpdate;\n\t\t\ttoUpdate = this._stats;\n\t\t}\n\t\ttoUpdate.errors += toAdd.errors;\n\t\ttoUpdate.warnings += toAdd.warnings;\n\t\ttoUpdate.infos += toAdd.infos;\n\t\ttoUpdate.unknwons += toAdd.unknwons;\n\t}\n\n\tprivate _updateStatsMinus(toSubtract: MarkerStatistics): void;\n\tprivate _updateStatsMinus(toUpdate: MarkerStatistics, toSubtract: MarkerStatistics): void;\n\tprivate _updateStatsMinus(toUpdate: MarkerStatistics, toSubtract?: MarkerStatistics): void {\n\t\tif (!toSubtract) {\n\t\t\ttoSubtract = toUpdate;\n\t\t\ttoUpdate = this._stats;\n\t\t}\n\t\ttoUpdate.errors -= toSubtract.errors;\n\t\ttoUpdate.warnings -= toSubtract.warnings;\n\t\ttoUpdate.infos -= toSubtract.infos;\n\t\ttoUpdate.unknwons -= toSubtract.unknwons;\n\t}\n\n\tprivate _updateStatsMarker(toUpdate: MarkerStatistics, marker: IMarkerData): void {\n\t\tswitch (marker.severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\ttoUpdate.errors++;\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\ttoUpdate.warnings++;\n\t\t\t\tbreak;\n\t\t\tcase Severity.Info:\n\t\t\t\ttoUpdate.infos++;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttoUpdate.unknwons++;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate static _sanitize(data: IMarkerData): void {\n\t\tdata.code = data.code || null;\n\t\tdata.startLineNumber = data.startLineNumber > 0 ? data.startLineNumber : 1;\n\t\tdata.startColumn = data.startColumn > 0 ? data.startColumn : 1;\n\t\tdata.endLineNumber = data.endLineNumber >= data.startLineNumber ? data.endLineNumber : data.startLineNumber;\n\t\tdata.endColumn = data.endColumn > 0 ? data.endColumn : data.startColumn;\n\t}\n}\n\nexport class SecondaryMarkerService extends MarkerService {\n\n\tprivate _proxy: MainProcessMarkerService;\n\n\tconstructor(threadService: IThreadService) {\n\t\tsuper();\n\t\tthis._proxy = threadService.getRemotable(MainProcessMarkerService);\n\t}\n\n\tpublic changeOne(owner: string, resource: URI, markers: IMarkerData[]): void {\n\t\tthis._proxy.changeOne(owner, resource, markers);\n\t}\n\n\tpublic changeAll(owner: string, data: IResourceMarker[]): void {\n\t\tthis._proxy.changeAll(owner, data);\n\t}\n\n}\n\n@Remotable.MainContext('MainProcessMarkerService')\nexport class MainProcessMarkerService extends MarkerService {\n\n\tconstructor(threadService: IThreadService) {\n\t\tsuper();\n\t\tthreadService.registerRemotableInstance(MainProcessMarkerService, this);\n\t}\n\n\tpublic changeOne(owner: string, resource: URI, markers: IMarkerData[]): void {\n\t\tsuper.changeOne(owner, resource, markers);\n\t}\n\n\tpublic changeAll(owner: string, data: IResourceMarker[]): void {\n\t\tsuper.changeAll(owner, data);\n\t}\n}\n"]}