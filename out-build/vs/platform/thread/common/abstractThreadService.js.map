{"version":3,"file":"vs/platform/thread/common/abstractThreadService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/thread/common/abstractThreadService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport remote = require('vs/base/common/remote');\nimport {ThreadAffinity, Remotable, IThreadSynchronizableObject} from 'vs/platform/thread/common/thread';\nimport {THREAD_SERVICE_PROPERTY_NAME} from 'vs/platform/thread/common/threadService';\nimport instantiation = require('vs/platform/instantiation/common/instantiation');\nimport {SyncDescriptor0, createSyncDescriptor, AsyncDescriptor1} from 'vs/platform/instantiation/common/descriptors';\n\nexport abstract class AbstractThreadService implements remote.IManyHandler {\n\n\tpublic isInMainThread: boolean;\n\n\tprotected _instantiationService: instantiation.IInstantiationService;\n\n\tprotected _boundObjects: { [id: string]: IThreadSynchronizableObject; };\n\tprotected _pendingObjects: TPromise<IThreadSynchronizableObject>[];\n\tprivate _localObjMap: { [id: string]: any; };\n\tprivate _proxyObjMap: { [id: string]: any; };\n\n\tconstructor(isInMainThread: boolean) {\n\t\tthis.isInMainThread = isInMainThread;\n\t\tthis._boundObjects = {};\n\t\tthis._pendingObjects = [];\n\t\tthis._localObjMap = Object.create(null);\n\t\tthis._proxyObjMap = Object.create(null);\n\t}\n\n\tsetInstantiationService(service: instantiation.IInstantiationService): void {\n\t\tthis._instantiationService = service;\n\t}\n\n\tcreateInstance<A1, T extends IThreadSynchronizableObject>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, T extends IThreadSynchronizableObject>(descriptor: AsyncDescriptor1<A1, T>, a1: A1): TPromise<T>;\n\tcreateInstance(...params: any[]): any {\n\t\treturn this._doCreateInstance(params);\n\t}\n\n\tprotected _doCreateInstance(params: any[]): any {\n\t\tlet instanceOrPromise = this._instantiationService.createInstance.apply(this._instantiationService, params);\n\n\t\tif (TPromise.is(instanceOrPromise)) {\n\n\t\t\tlet objInstantiated: TPromise<IThreadSynchronizableObject>;\n\t\t\tobjInstantiated = instanceOrPromise.then((instance: IThreadSynchronizableObject): any => {\n\t\t\t\tif (instance.asyncCtor) {\n\t\t\t\t\tlet initPromise = instance.asyncCtor();\n\t\t\t\t\tif (TPromise.is(initPromise)) {\n\t\t\t\t\t\treturn initPromise.then(() => {\n\t\t\t\t\t\t\treturn instance;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn instance;\n\t\t\t});\n\n\t\t\tthis._pendingObjects.push(objInstantiated);\n\t\t\treturn objInstantiated.then((instance: IThreadSynchronizableObject) => {\n\t\t\t\tlet r = this._finishInstance(instance);\n\n\t\t\t\tfor (let i = 0; i < this._pendingObjects.length; i++) {\n\t\t\t\t\tif (this._pendingObjects[i] === objInstantiated) {\n\t\t\t\t\t\tthis._pendingObjects.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn r;\n\t\t\t});\n\n\t\t}\n\n\t\treturn this._finishInstance(<IThreadSynchronizableObject>instanceOrPromise);\n\t}\n\n\tprivate _finishInstance(instance: IThreadSynchronizableObject): IThreadSynchronizableObject {\n\t\tinstance[THREAD_SERVICE_PROPERTY_NAME] = this;\n\t\tthis._boundObjects[instance.getId()] = instance;\n\n\t\tif (instance.creationDone) {\n\t\t\tinstance.creationDone();\n\t\t}\n\n\t\treturn instance;\n\t}\n\n\tpublic handle(rpcId: string, methodName: string, args: any[]): any {\n\t\tif (!this._localObjMap[rpcId]) {\n\t\t\tthrow new Error('Unknown actor ' + rpcId);\n\t\t}\n\t\tlet actor = this._localObjMap[rpcId];\n\t\tlet method = actor[methodName];\n\t\tif (typeof method !== 'function') {\n\t\t\tthrow new Error('Unknown method ' + methodName + ' on actor ' + rpcId);\n\t\t}\n\t\treturn method.apply(actor, args);\n\t}\n\n\tprotected _getOrCreateProxyInstance(remoteCom: remote.IProxyHelper, id: string, descriptor: SyncDescriptor0<any>): any {\n\t\tif (this._proxyObjMap[id]) {\n\t\t\treturn this._proxyObjMap[id];\n\t\t}\n\t\tlet result = createProxyFromCtor(remoteCom, id, descriptor.ctor);\n\t\tthis._proxyObjMap[id] = result;\n\t\treturn result;\n\t}\n\n\tprotected _registerLocalInstance(id: string, obj: any): any {\n\t\tthis._localObjMap[id] = obj;\n\t}\n\n\tprotected _getOrCreateLocalInstance(id: string, descriptor: SyncDescriptor0<any>): any {\n\t\tif (this._localObjMap[id]) {\n\t\t\treturn this._localObjMap[id];\n\t\t}\n\t\tlet result = this._instantiationService.createInstance(descriptor);\n\t\tthis._registerLocalInstance(id, result);\n\t\treturn result;\n\t}\n\n\tgetRemotable<T>(ctor: instantiation.IConstructorSignature0<T>): T {\n\t\tlet id = Remotable.getId(ctor);\n\t\tif (!id) {\n\t\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t\t}\n\n\t\tlet desc = createSyncDescriptor<T>(ctor);\n\n\t\tif (Remotable.Registry.MainContext[id]) {\n\t\t\treturn this._registerAndInstantiateMainProcessActor(id, desc);\n\t\t}\n\n\t\tif (Remotable.Registry.ExtHostContext[id]) {\n\t\t\treturn this._registerAndInstantiateExtHostActor(id, desc);\n\t\t}\n\n\t\tif (Remotable.Registry.WorkerContext[id]) {\n\t\t\treturn this._registerAndInstantiateWorkerActor(id, desc, Remotable.Registry.WorkerContext[id].affinity);\n\t\t}\n\n\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t}\n\n\tregisterRemotableInstance(ctor: any, instance: any): void {\n\t\tlet id = Remotable.getId(ctor);\n\t\tif (!id) {\n\t\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t\t}\n\n\t\tif (Remotable.Registry.MainContext[id]) {\n\t\t\treturn this._registerMainProcessActor(id, instance);\n\t\t}\n\n\t\tif (Remotable.Registry.ExtHostContext[id]) {\n\t\t\treturn this._registerExtHostActor(id, instance);\n\t\t}\n\n\t\tif (Remotable.Registry.WorkerContext[id]) {\n\t\t\treturn this._registerWorkerActor(id, instance);\n\t\t}\n\n\t\tthrow new Error('Unknown Remotable: <<' + id + '>>');\n\t}\n\n\tprotected abstract _registerAndInstantiateMainProcessActor<T>(id: string, descriptor: SyncDescriptor0<T>): T;\n\tprotected abstract _registerMainProcessActor<T>(id: string, actor: T): void;\n\tprotected abstract _registerAndInstantiateExtHostActor<T>(id: string, descriptor: SyncDescriptor0<T>): T;\n\tprotected abstract _registerExtHostActor<T>(id: string, actor: T): void;\n\tprotected abstract _registerAndInstantiateWorkerActor<T>(id: string, descriptor: SyncDescriptor0<T>, whichWorker: ThreadAffinity): T;\n\tprotected abstract _registerWorkerActor<T>(id: string, actor: T): void;\n}\n\nfunction createProxyFromCtor(remote:remote.IProxyHelper, id:string, ctor:Function): any {\n\tvar result: any = {\n\t\t$__IS_REMOTE_OBJ: true\n\t};\n\tfor (var prop in ctor.prototype) {\n\t\tif (typeof ctor.prototype[prop] === 'function') {\n\t\t\tresult[prop] = createMethodProxy(remote, id, prop);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction createMethodProxy(remote:remote.IProxyHelper, proxyId: string, path: string): (...myArgs: any[]) => TPromise<any> {\n\treturn (...myArgs: any[]) => {\n\t\treturn remote.callOnRemote(proxyId, path, myArgs);\n\t};\n}\n"]}