{"version":3,"file":"vs/platform/thread/common/mainThreadService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/thread/common/mainThreadService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise, decoratePromise} from 'vs/base/common/winjs.base';\nimport Worker = require('vs/base/common/worker/workerClient');\nimport abstractThreadService = require('vs/platform/thread/common/abstractThreadService');\nimport Env = require('vs/base/common/flags');\nimport Platform = require('vs/base/common/platform');\nimport errors = require('vs/base/common/errors');\nimport Timer = require('vs/base/common/timer');\nimport remote = require('vs/base/common/remote');\nimport {SyncDescriptor0} from 'vs/platform/instantiation/common/descriptors';\nimport {IThreadService, IThreadServiceStatusListener, IThreadSynchronizableObject, ThreadAffinity, IThreadServiceStatus} from 'vs/platform/thread/common/thread';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {DefaultWorkerFactory} from 'vs/base/worker/defaultWorkerFactory';\n\ninterface IAffinityMap {\n\t[qualifiedMethodName: string]: number;\n}\n\nexport interface IWorker {\n\tgetRemoteCom(): remote.IRemoteCom;\n}\n\nexport interface IWorkerListenr {\n\t(worker: IWorker): void;\n}\n\nexport class MainThreadService extends abstractThreadService.AbstractThreadService implements IThreadService {\n\tpublic serviceId = IThreadService;\n\tstatic MAXIMUM_WORKER_CREATION_DELAY = 500; // 500ms\n\n\tprivate _workerPool: Worker.WorkerClient[];\n\tprivate _contextService: IWorkspaceContextService;\n\tprivate _affinityScrambler: IAffinityMap;\n\n\tprivate _workersCreatedPromise: TPromise<void>;\n\tprivate _triggerWorkersCreatedPromise: (value: void) => void;\n\tprivate _listeners: IThreadServiceStatusListener[];\n\n\tprivate _workerFactory: Worker.IWorkerFactory;\n\tprivate _workerModuleId: string;\n\tprivate _defaultWorkerCount: number;\n\n\tconstructor(contextService: IWorkspaceContextService, workerModuleId: string, defaultWorkerCount: number) {\n\t\tsuper(true);\n\t\tthis._contextService = contextService;\n\t\tthis._workerModuleId = workerModuleId;\n\t\tthis._defaultWorkerCount = defaultWorkerCount;\n\t\tthis._workerFactory = new DefaultWorkerFactory();\n\n\t\tif (!this.isInMainThread) {\n\t\t\tthrow new Error('Incorrect Service usage: this service must be used only in the main thread');\n\t\t}\n\n\t\tthis._workerPool = [];\n\t\tthis._affinityScrambler = {};\n\t\tthis._listeners = [];\n\n\t\tthis._workersCreatedPromise = new TPromise<void>((c, e, p) => {\n\t\t\tthis._triggerWorkersCreatedPromise = c;\n\t\t}, () => {\n\t\t\t// Not cancelable\n\t\t});\n\n\t\t// If nobody asks for workers to be created in 5s, the workers are created automatically\n\t\tTPromise.timeout(MainThreadService.MAXIMUM_WORKER_CREATION_DELAY).then(() => this.ensureWorkers());\n\t}\n\n\tensureWorkers(): void {\n\t\tif (this._triggerWorkersCreatedPromise) {\n\t\t\t// Workers not created yet\n\n\t\t\tlet createCount = Env.workersCount(this._defaultWorkerCount);\n\t\t\tif (!Platform.hasWebWorkerSupport()) {\n\t\t\t\t// Create at most 1 compatibility worker\n\t\t\t\tcreateCount = Math.min(createCount, 1);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < createCount; i++) {\n\t\t\t\tthis._createWorker();\n\t\t\t}\n\n\t\t\tlet complete = this._triggerWorkersCreatedPromise;\n\t\t\tthis._triggerWorkersCreatedPromise = null;\n\t\t\tcomplete(null);\n\t\t}\n\t}\n\n\taddStatusListener(listener: IThreadServiceStatusListener): void {\n\t\tfor (let i = 0; i < this._listeners.length; i++) {\n\t\t\tif (this._listeners[i] === listener) {\n\t\t\t\t// listener is already in\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._listeners.push(listener);\n\t}\n\n\tremoveStatusListener(listener: IThreadServiceStatusListener): void {\n\t\tfor (let i = 0; i < this._listeners.length; i++) {\n\t\t\tif (this._listeners[i] === listener) {\n\t\t\t\tthis._listeners.splice(i, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _afterWorkers(): TPromise<void> {\n\t\tlet shouldCancelPromise = false;\n\n\t\treturn new TPromise<void>((c, e, p) => {\n\n\t\t\t// hide the initialize promise inside this\n\t\t\t// promise so that it won't be canceled by accident\n\t\t\tthis._workersCreatedPromise.then(() => {\n\t\t\t\tif (!shouldCancelPromise) {\n\t\t\t\t\tc(null);\n\t\t\t\t}\n\t\t\t}, e, p);\n\n\t\t}, () => {\n\t\t\t// mark that this promise is canceled\n\t\t\tshouldCancelPromise = true;\n\t\t});\n\t}\n\n\tprivate _createWorker(): void {\n\t\tthis._workerPool.push(this._doCreateWorker());\n\t}\n\n\tprivate _shortName(major: string, minor: string): string {\n\t\treturn major.substring(major.length - 14) + '.' + minor.substr(0, 14);\n\t}\n\n\tprivate _doCreateWorker(): Worker.WorkerClient {\n\t\tlet worker = new Worker.WorkerClient(\n\t\t\tthis._workerFactory,\n\t\t\tthis._workerModuleId,\n\t\t\t(msg) => {\n\t\t\t\tif (msg.type === 'threadService') {\n\t\t\t\t\treturn this._shortName(msg.payload[0], msg.payload[1]);\n\t\t\t\t}\n\t\t\t\treturn msg.type;\n\t\t\t}\n\t\t);\n\t\tworker.getRemoteCom().setManyHandler(this);\n\t\tworker.onModuleLoaded = worker.request('initialize', {\n\t\t\tcontextService: {\n\t\t\t\tworkspace: this._contextService.getWorkspace(),\n\t\t\t\tconfiguration: this._contextService.getConfiguration(),\n\t\t\t\toptions: this._contextService.getOptions()\n\t\t\t}\n\t\t});\n\n\t\treturn worker;\n\t}\n\n\tprivate _getWorkerIndex(obj: IThreadSynchronizableObject, affinity: ThreadAffinity): number {\n\t\tif (affinity === ThreadAffinity.None) {\n\t\t\tlet winners: number[] = [0],\n\t\t\t\twinnersQueueSize = this._workerPool[0].getQueueSize();\n\n\t\t\tfor (let i = 1; i < this._workerPool.length; i++) {\n\t\t\t\tlet queueSize = this._workerPool[i].getQueueSize();\n\t\t\t\tif (queueSize < winnersQueueSize) {\n\t\t\t\t\twinnersQueueSize = queueSize;\n\t\t\t\t\twinners = [i];\n\t\t\t\t} else if (queueSize === winnersQueueSize) {\n\t\t\t\t\twinners.push(i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn winners[Math.floor(Math.random() * winners.length)];\n\t\t}\n\n\t\tlet scramble = 0;\n\t\tif (this._affinityScrambler.hasOwnProperty(obj.getId())) {\n\t\t\tscramble = this._affinityScrambler[obj.getId()];\n\t\t} else {\n\t\t\tscramble = Math.floor(Math.random() * this._workerPool.length);\n\t\t\tthis._affinityScrambler[obj.getId()] = scramble;\n\t\t}\n\n\t\treturn (scramble + affinity) % this._workerPool.length;\n\t}\n\n\tOneWorker(obj: IThreadSynchronizableObject, methodName: string, target: Function, params: any[], affinity: ThreadAffinity): TPromise<any> {\n\t\treturn this._afterWorkers().then(() => {\n\t\t\tif (this._workerPool.length === 0) {\n\t\t\t\tthrow new Error('Cannot fulfill request...');\n\t\t\t}\n\n\t\t\tlet workerIdx = this._getWorkerIndex(obj, affinity);\n\n\t\t\treturn this._remoteCall(this._workerPool[workerIdx], obj, methodName, params);\n\t\t});\n\t}\n\n\tAllWorkers(obj: IThreadSynchronizableObject, methodName: string, target: Function, params: any[]): TPromise<any> {\n\t\treturn this._afterWorkers().then(() => {\n\t\t\treturn TPromise.join(this._workerPool.map((w) => {\n\t\t\t\treturn this._remoteCall(w, obj, methodName, params);\n\t\t\t}));\n\t\t});\n\t}\n\n\tprivate _remoteCall(worker: Worker.WorkerClient, obj: IThreadSynchronizableObject, methodName: string, params: any[]): TPromise<any> {\n\t\tlet id = obj.getId();\n\t\tif (!id) {\n\t\t\tthrow new Error('Synchronizable Objects must have an identifier');\n\t\t}\n\n\t\tlet timerEvent = Timer.start(Timer.Topic.LANGUAGES, this._shortName(id, methodName));\n\t\tlet stopTimer = () => {\n\t\t\ttimerEvent.stop();\n\t\t\t//\t\t\tconsole.log(timerEvent.timeTaken(), this._workerPool.indexOf(worker), obj.getId() + ' >>> ' + methodName + ': ', params);\n\t\t\tthis._pingListenersIfNecessary();\n\t\t};\n\n\n\t\tlet r = decoratePromise(worker.request('threadService', [id, methodName, params]), stopTimer, stopTimer);\n\n\t\tthis._pingListenersIfNecessary();\n\n\t\treturn r;\n\t}\n\n\tprivate _pingListenersIfNecessary(): void {\n\t\tif (this._listeners.length > 0) {\n\t\t\tlet status = this._buildStatus();\n\t\t\tlet listeners = this._listeners.slice(0);\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\t\tlisteners[i].onThreadServiceStatus(status);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terrors.onUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _buildStatus(): IThreadServiceStatus {\n\t\tlet queueSizes = this._workerPool.map((worker) => {\n\t\t\treturn {\n\t\t\t\tqueueSize: worker.getQueueSize()\n\t\t\t};\n\t\t});\n\n\t\treturn {\n\t\t\tworkers: queueSizes\n\t\t};\n\t}\n\n\tprotected _registerAndInstantiateMainProcessActor<T>(id: string, descriptor: SyncDescriptor0<T>): T {\n\t\treturn this._getOrCreateLocalInstance(id, descriptor);\n\t}\n\n\tprotected _registerMainProcessActor<T>(id: string, actor: T): void {\n\t\tthis._registerLocalInstance(id, actor);\n\t}\n\n\tprotected _registerAndInstantiateExtHostActor<T>(id: string, descriptor: SyncDescriptor0<T>): T {\n\t\tthrow new Error('Not supported in this runtime context: Cannot communicate to non-existant Extension Host!');\n\t}\n\n\tprotected _registerExtHostActor<T>(id: string, actor: T): void {\n\t\tthrow new Error('Not supported in this runtime context!');\n\t}\n\n\tprotected _registerAndInstantiateWorkerActor<T>(id: string, descriptor: SyncDescriptor0<T>, whichWorker: ThreadAffinity): T {\n\t\tlet helper = this._createWorkerProxyHelper(whichWorker);\n\t\treturn this._getOrCreateProxyInstance(helper, id, descriptor);\n\t}\n\n\tprotected _registerWorkerActor<T>(id: string, actor: T): void {\n\t\tthrow new Error('Not supported in this runtime context!');\n\t}\n\n\tprivate _createWorkerProxyHelper(whichWorker: ThreadAffinity): remote.IProxyHelper {\n\t\treturn {\n\t\t\tcallOnRemote: (proxyId: string, path: string, args: any[]): TPromise<any> => {\n\t\t\t\treturn this._callOnWorker(whichWorker, proxyId, path, args);\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate _callOnWorker(whichWorker: ThreadAffinity, proxyId: string, path: string, args: any[]): TPromise<any> {\n\t\tif (whichWorker === ThreadAffinity.None) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\treturn this._afterWorkers().then(() => {\n\t\t\tif (whichWorker === ThreadAffinity.All) {\n\t\t\t\tlet promises = this._workerPool.map(w => w.getRemoteCom()).map(rCom => rCom.callOnRemote(proxyId, path, args));\n\t\t\t\treturn TPromise.join(promises);\n\t\t\t}\n\n\t\t\tlet workerIdx = whichWorker % this._workerPool.length;\n\t\t\tlet worker = this._workerPool[workerIdx];\n\t\t\treturn worker.getRemoteCom().callOnRemote(proxyId, path, args);\n\t\t});\n\t}\n}"]}