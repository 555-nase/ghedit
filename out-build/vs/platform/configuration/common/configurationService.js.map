{"version":3,"file":"configurationService.js","sourceRoot":"","sources":["../../../../../src/vs/platform/configuration/common/configurationService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport paths = require('vs/base/common/paths');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport objects = require('vs/base/common/objects');\nimport errors = require('vs/base/common/errors');\nimport uri from 'vs/base/common/uri';\nimport model = require('./model');\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {IDisposable, cAll} from 'vs/base/common/lifecycle';\nimport collections = require('vs/base/common/collections');\nimport {IConfigurationService, ConfigurationServiceEventTypes}  from './configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {EventType, FileChangeType, FileChangesEvent} from 'vs/platform/files/common/files';\nimport {IConfigurationRegistry, Extensions} from './configurationRegistry';\nimport {Registry} from 'vs/platform/platform';\nimport Event, {fromEventEmitter} from 'vs/base/common/event';\n\n\n// ---- service abstract implementation\n\nexport interface IStat {\n\tresource: uri;\n\tisDirectory: boolean;\n\tchildren?: { resource: uri; }[];\n}\n\nexport interface IContent {\n\tresource: uri;\n\tvalue: string;\n}\n\ninterface ILoadConfigResult {\n\tmerged: any;\n\tconsolidated: { contents: any; parseErrors: string[]; };\n\tglobals: { contents: any; parseErrors: string[]; };\n}\n\nexport abstract class ConfigurationService extends EventEmitter implements IConfigurationService, IDisposable {\n\n\tpublic serviceId = IConfigurationService;\n\n\tprivate static RELOAD_CONFIGURATION_DELAY = 50;\n\n\tpublic onDidUpdateConfiguration: Event<{ config: any }>;\n\n\tprotected contextService: IWorkspaceContextService;\n\tprotected eventService: IEventService;\n\tprotected workspaceSettingsRootFolder: string;\n\n\tprivate cachedConfig: ILoadConfigResult;\n\n\tprivate bulkFetchFromWorkspacePromise: TPromise<any>;\n\tprivate workspaceFilePathToConfiguration: { [relativeWorkspacePath: string]: TPromise<model.IConfigFile> };\n\tprivate callOnDispose: Function;\n\tprivate reloadConfigurationScheduler: RunOnceScheduler;\n\n\tconstructor(contextService: IWorkspaceContextService, eventService: IEventService, workspaceSettingsRootFolder: string = '.vscode') {\n\t\tsuper();\n\n\t\tthis.contextService = contextService;\n\t\tthis.eventService = eventService;\n\n\t\tthis.workspaceSettingsRootFolder = workspaceSettingsRootFolder;\n\t\tthis.workspaceFilePathToConfiguration = Object.create(null);\n\t\tthis.cachedConfig = {\n\t\t\tmerged: {},\n\t\t\tconsolidated: { contents: {}, parseErrors: [] },\n\t\t\tglobals: { contents: {}, parseErrors: [] }\n\t\t};\n\n\t\tthis.onDidUpdateConfiguration = fromEventEmitter(this, ConfigurationServiceEventTypes.UPDATED);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected registerListeners(): void {\n\t\tlet unbind = this.eventService.addListener(EventType.FILE_CHANGES, (events) => this.handleFileEvents(events));\n\t\tlet subscription = Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidRegisterConfiguration(() => this.handleConfigurationChange());\n\t\tthis.callOnDispose = () => {\n\t\t\tunbind();\n\t\t\tsubscription.dispose();\n\t\t};\n\t}\n\n\tpublic initialize(): TPromise<void> {\n\t\treturn this.loadConfiguration().then(() => null);\n\t}\n\n\tprotected abstract resolveContents(resource: uri[]): TPromise<IContent[]>;\n\n\tprotected abstract resolveContent(resource: uri): TPromise<IContent>;\n\n\tprotected abstract resolveStat(resource: uri): TPromise<IStat>;\n\n\tpublic getConfiguration<T>(section?: string): T {\n\t\tlet result = section ? this.cachedConfig.merged[section] : this.cachedConfig.merged;\n\n\t\tlet parseErrors = this.cachedConfig.consolidated.parseErrors;\n\t\tif (this.cachedConfig.globals.parseErrors) {\n\t\t\tparseErrors.push.apply(parseErrors, this.cachedConfig.globals.parseErrors);\n\t\t}\n\n\t\tif (parseErrors.length > 0) {\n\t\t\tif (!result) {\n\t\t\t\tresult = {};\n\t\t\t}\n\t\t\tresult.$parseErrors = parseErrors;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate loadConfiguration(section?: string): TPromise<any> {\n\t\treturn this.doLoadConfiguration().then((res: ILoadConfigResult) => {\n\t\t\tthis.cachedConfig = res;\n\n\t\t\treturn this.getConfiguration(section);\n\t\t});\n\t}\n\n\tprivate doLoadConfiguration(): TPromise<ILoadConfigResult> {\n\n\t\t// Load globals\n\t\tconst globals = this.loadGlobalConfiguration();\n\n\t\t// Load workspace locals\n\t\treturn this.loadWorkspaceConfiguration().then((values) => {\n\n\t\t\t// Consolidate\n\t\t\tlet consolidated = model.consolidate(values);\n\n\t\t\t// Override with workspace locals\n\t\t\tlet merged = objects.mixin(\n\t\t\t\tobjects.clone(globals.contents), \t// target: global/default values (but dont modify!)\n\t\t\t\tconsolidated.contents,\t\t\t\t// source: workspace configured values\n\t\t\t\ttrue\t\t\t\t\t\t\t\t// overwrite\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\tmerged: merged,\n\t\t\t\tconsolidated: consolidated,\n\t\t\t\tglobals: globals\n\t\t\t};\n\t\t});\n\t}\n\n\tprotected loadGlobalConfiguration(): { contents: any; parseErrors?: string[]; } {\n\t\treturn {\n\t\t\tcontents: model.getDefaultValues()\n\t\t};\n\t}\n\n\tpublic hasWorkspaceConfiguration(): boolean {\n\t\treturn !!this.workspaceFilePathToConfiguration['.vscode/' + model.CONFIG_DEFAULT_NAME + '.json'];\n\t}\n\n\tprotected loadWorkspaceConfiguration(section?: string): TPromise<{ [relativeWorkspacePath: string]: model.IConfigFile }> {\n\n\t\t// once: when invoked for the first time we fetch *all* json\n\t\t// files using the bulk stats and content routes\n\t\tif (!this.bulkFetchFromWorkspacePromise) {\n\t\t\tthis.bulkFetchFromWorkspacePromise = this.resolveStat(this.contextService.toResource(this.workspaceSettingsRootFolder)).then((stat) => {\n\t\t\t\tif (!stat.isDirectory) {\n\t\t\t\t\treturn TPromise.as([]);\n\t\t\t\t}\n\n\t\t\t\treturn this.resolveContents(stat.children.filter((stat) => paths.extname(stat.resource.fsPath) === '.json').map(stat => stat.resource));\n\t\t\t}, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn []; // never fail this call\n\t\t\t\t}\n\t\t\t}).then((contents: IContent[]) => {\n\t\t\t\tcontents.forEach(content => this.workspaceFilePathToConfiguration[this.contextService.toWorkspaceRelativePath(content.resource)] = TPromise.as(model.newConfigFile(content.value)));\n\t\t\t}, errors.onUnexpectedError);\n\t\t}\n\n\t\t// on change: join on *all* configuration file promises so that\n\t\t// we can merge them into a single configuration object. this\n\t\t// happens whenever a config file changes, is deleted, or added\n\t\treturn this.bulkFetchFromWorkspacePromise.then(() => {\n\t\t\treturn TPromise.join(this.workspaceFilePathToConfiguration);\n\t\t});\n\t}\n\n\tprotected handleConfigurationChange(): void {\n\t\tif (!this.reloadConfigurationScheduler) {\n\t\t\tthis.reloadConfigurationScheduler = new RunOnceScheduler(() => {\n\t\t\t\tthis.loadConfiguration().then((config) => this.emit(ConfigurationServiceEventTypes.UPDATED, { config: config })).done(null, errors.onUnexpectedError);\n\t\t\t}, ConfigurationService.RELOAD_CONFIGURATION_DELAY);\n\t\t}\n\n\t\tif (!this.reloadConfigurationScheduler.isScheduled()) {\n\t\t\tthis.reloadConfigurationScheduler.schedule();\n\t\t}\n\t}\n\n\tprivate handleFileEvents(event: FileChangesEvent): void {\n\t\tlet events = event.changes;\n\t\tlet affectedByChanges = false;\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet workspacePath = this.contextService.toWorkspaceRelativePath(events[i].resource);\n\t\t\tif (!workspacePath) {\n\t\t\t\tcontinue; // event is not inside workspace\n\t\t\t}\n\n\t\t\t// Handle case where \".vscode\" got deleted\n\t\t\tif (workspacePath === this.workspaceSettingsRootFolder && events[i].type === FileChangeType.DELETED) {\n\t\t\t\tthis.workspaceFilePathToConfiguration = Object.create(null);\n\t\t\t\taffectedByChanges = true;\n\t\t\t}\n\n\t\t\t// outside my folder or not a *.json file\n\t\t\tif (paths.extname(workspacePath) !== '.json' || !paths.isEqualOrParent(workspacePath, this.workspaceSettingsRootFolder)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// insert 'fetch-promises' for add and update events and\n\t\t\t// remove promises for delete events\n\t\t\tswitch (events[i].type) {\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\taffectedByChanges = collections.remove(this.workspaceFilePathToConfiguration, workspacePath);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.workspaceFilePathToConfiguration[workspacePath] = this.resolveContent(events[i].resource).then(content => model.newConfigFile(content.value), errors.onUnexpectedError);\n\t\t\t\t\taffectedByChanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (affectedByChanges) {\n\t\t\tthis.handleConfigurationChange();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.reloadConfigurationScheduler) {\n\t\t\tthis.reloadConfigurationScheduler.dispose();\n\t\t}\n\n\t\tthis.callOnDispose = cAll(this.callOnDispose);\n\n\t\tsuper.dispose();\n\t}\n}\n"]}