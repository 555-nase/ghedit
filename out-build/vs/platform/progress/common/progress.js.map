{"version":3,"file":"vs/platform/progress/common/progress.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/progress/common/progress.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKA,wBAAgB,GAAG,+BAAe,CAAmB,iBAAiB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator, ServiceIdentifier} from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProgressService = createDecorator<IProgressService>('progressService');\n\nexport interface IProgressService {\n\tserviceId: ServiceIdentifier<any>;\n\n\t/**\n\t * Show progress customized with the provided flags.\n\t */\n\tshow(infinite: boolean, delay?: number): IProgressRunner;\n\tshow(total: number, delay?: number): IProgressRunner;\n\n\t/**\n\t * Indicate progress for the duration of the provided promise. Progress will stop in\n\t * any case of promise completion, error or cancellation.\n\t */\n\tshowWhile(promise: TPromise<any>, delay?: number): TPromise<void>;\n}\n\nexport interface IProgressRunner {\n\ttotal(value: number): void;\n\tworked(value: number): void;\n\tdone(): void;\n}\n"]}