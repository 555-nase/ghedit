{"version":3,"file":"vs/platform/keybinding/common/keybindingService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/keybinding/common/keybindingService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport {Keybinding} from 'vs/base/common/keyCodes';\nimport {TypeConstraint} from 'vs/base/common/types';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ServiceIdentifier, ServicesAccessor, createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IUserFriendlyKeybinding {\n\tkey: string;\n\tcommand: string;\n\twhen?: string;\n}\n\nexport interface IKeybindings {\n\tprimary: number;\n\tsecondary?: number[];\n\twin?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n\tlinux?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n\tmac?: {\n\t\tprimary: number;\n\t\tsecondary?: number[];\n\t};\n}\n\nexport interface KbExpr {\n\tequals(other: KbExpr): boolean;\n\tevaluate(context: any): boolean;\n\tnormalize(): KbExpr;\n\tserialize(): string;\n}\n\nexport class KbDefinedExpression implements KbExpr {\n\tconstructor(private key: string) {\n\t}\n\n\tpublic equals(other: KbExpr): boolean {\n\t\tif (other instanceof KbDefinedExpression) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\treturn (!!context[this.key]);\n\t}\n\n\tpublic normalize(): KbExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n}\n\nexport class KbEqualsExpression implements KbExpr {\n\tconstructor(private key: string, private value: any) {\n\t}\n\n\tpublic equals(other: KbExpr): boolean {\n\t\tif (other instanceof KbEqualsExpression) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional ==\n\t\treturn (context[this.key] == this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): KbExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new KbDefinedExpression(this.key);\n\t\t\t}\n\t\t\treturn new KbNotExpression(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n}\n\nexport class KbNotEqualsExpression implements KbExpr {\n\tconstructor(private key: string, private value: any) {\n\t}\n\n\tpublic equals(other: KbExpr): boolean {\n\t\tif (other instanceof KbNotEqualsExpression) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\t/* tslint:disable:triple-equals */\n\t\t// Intentional !=\n\t\treturn (context[this.key] != this.value);\n\t\t/* tslint:enable:triple-equals */\n\t}\n\n\tpublic normalize(): KbExpr {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\tif (this.value) {\n\t\t\t\treturn new KbNotExpression(this.key);\n\t\t\t}\n\t\t\treturn new KbDefinedExpression(this.key);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\tif (typeof this.value === 'boolean') {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n}\n\nexport class KbNotExpression implements KbExpr {\n\tconstructor(private key: string) {\n\t}\n\n\tpublic equals(other: KbExpr): boolean {\n\t\tif (other instanceof KbNotExpression) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\treturn (!context[this.key]);\n\t}\n\n\tpublic normalize(): KbExpr {\n\t\treturn this;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n}\n\nexport class KbAndExpression implements KbExpr {\n\tprivate expr: KbExpr[];\n\n\tconstructor(expr: KbExpr[]) {\n\t\tthis.expr = expr || [];\n\t}\n\n\tpublic equals(other: KbExpr): boolean {\n\t\treturn this === other;\n\t}\n\n\tpublic evaluate(context: any): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic normalize(): KbExpr {\n\t\tlet expr: KbExpr[] = [];\n\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tlet e = this.expr[i];\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\te = e.normalize();\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e instanceof KbAndExpression) {\n\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new KbAndExpression(expr);\n\t}\n\n\tpublic serialize(): string {\n\t\tif (this.expr.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this.expr.length === 1) {\n\t\t\treturn this.normalize().serialize();\n\t\t}\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n}\n\n\nexport let KbExpr = {\n\thas: (key: string) => new KbDefinedExpression(key),\n\tequals: (key: string, value: any) => new KbEqualsExpression(key, value),\n\tnotEquals: (key: string, value: any) => new KbNotEqualsExpression(key, value),\n\tnot: (key: string) => new KbNotExpression(key),\n\tand: (...expr: KbExpr[]) => new KbAndExpression(expr),\n\tdeserialize: (serialized: string): KbExpr => {\n\t\tif (!serialized) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet pieces = serialized.split('&&');\n\t\tlet result = new KbAndExpression(pieces.map(p => KbExpr._deserializeOne(p)));\n\t\treturn result.normalize();\n\t},\n\n\t_deserializeOne: (serializedOne: string): KbExpr => {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn new KbNotEqualsExpression(pieces[0].trim(), KbExpr._deserializeValue(pieces[1]));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn new KbEqualsExpression(pieces[0].trim(), KbExpr._deserializeValue(pieces[1]));\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn new KbNotExpression(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn new KbDefinedExpression(serializedOne);\n\t},\n\n\t_deserializeValue: (serializedValue: string): any => {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n};\n\nexport interface IKeybindingItem {\n\tkeybinding: number;\n\tcommand: string;\n\tcontext: KbExpr;\n\tweight1: number;\n\tweight2: number;\n}\n\nexport interface ICommandHandler {\n\t(accessor: ServicesAccessor, args: any): void;\n\tdescription?: string | ICommandHandlerDescription;\n}\n\nexport interface ICommandHandlerDescription {\n\tdescription: string;\n\targs: { name: string; description?: string; constraint?: TypeConstraint; }[];\n\treturns?: string;\n}\n\nexport interface ICommandsMap {\n\t[id: string]: ICommandHandler;\n}\n\nexport interface IKeybindingContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n}\n\nexport let IKeybindingService = createDecorator<IKeybindingService>('keybindingService');\n\nexport interface IKeybindingScopeLocation {\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n}\n\nexport interface IKeybindingService {\n\tserviceId: ServiceIdentifier<any>;\n\tdispose(): void;\n\n\tcreateKey<T>(key: string, defaultValue: T): IKeybindingContextKey<T>;\n\n\tcreateScoped(domNode: IKeybindingScopeLocation): IKeybindingService;\n\n\tgetDefaultKeybindings(): string;\n\tlookupKeybindings(commandId: string): Keybinding[];\n\tcustomKeybindingsCount(): number;\n\n\tgetLabelFor(keybinding: Keybinding): string;\n\tgetAriaLabelFor(keybinding: Keybinding): string;\n\tgetHTMLLabelFor(keybinding: Keybinding): IHTMLContentElement[];\n\tgetElectronAcceleratorFor(keybinding: Keybinding): string;\n\n\texecuteCommand<T>(commandId: string, args?: any): TPromise<T>;\n\texecuteCommand(commandId: string, args?: any): TPromise<any>;\n\thasCommand(commandId: string): boolean;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n"]}