{"version":3,"file":"keybindingResolver.js","sourceRoot":"","sources":["../../../../../src/vs/platform/keybinding/common/keybindingResolver.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {BinaryKeybindings, ISimplifiedPlatform, Keybinding} from 'vs/base/common/keyCodes';\nimport * as platform from 'vs/base/common/platform';\nimport {IKeybindingItem, IUserFriendlyKeybinding, KbExpr} from 'vs/platform/keybinding/common/keybindingService';\n\nexport interface IResolveResult {\n\tenterChord: number;\n\tcommandId: string;\n}\n\nexport interface IBoundCommands {\n\t[commandId: string]: boolean;\n}\n\ninterface ICommandMap {\n\t[partialKeybinding: number]: ICommandEntry[];\n}\n\ninterface IChordsMap {\n\t[partialKeybinding: number]: ICommandMap;\n}\n\ninterface ICommandEntry {\n\tcontext: KbExpr;\n\tkeybinding: number;\n\tcommandId: string;\n}\n\nexport class KeybindingResolver {\n\tprivate _defaultKeybindings: IKeybindingItem[];\n\tprivate _defaultBoundCommands: IBoundCommands;\n\tprivate _map: ICommandMap;\n\tprivate _chords: IChordsMap;\n\tprivate _lookupMap: {\n\t\t[commandId: string]: IKeybindingItem[];\n\t};\n\tprivate _lookupMapUnreachable: {\n\t\t// The value contains the keybinding or first part of a chord\n\t\t[commandId: string]: number[];\n\t};\n\tprivate _shouldWarnOnConflict: boolean;\n\n\tconstructor(defaultKeybindings: IKeybindingItem[], overrides: IKeybindingItem[], shouldWarnOnConflict: boolean = true) {\n\t\tdefaultKeybindings = defaultKeybindings.slice(0).sort(sorter);\n\n\t\tthis._defaultKeybindings = defaultKeybindings;\n\t\tthis._shouldWarnOnConflict = shouldWarnOnConflict;\n\n\t\tthis._defaultBoundCommands = Object.create(null);\n\t\tfor (let i = 0, len = defaultKeybindings.length; i < len; i++) {\n\t\t\tthis._defaultBoundCommands[defaultKeybindings[i].command] = true;\n\t\t}\n\n\t\tthis._map = Object.create(null);\n\t\tthis._lookupMap = Object.create(null);\n\t\tthis._lookupMapUnreachable = Object.create(null);\n\t\tthis._chords = Object.create(null);\n\n\t\tlet defaultKeybindingsCount = defaultKeybindings.length;\n\t\tlet allKeybindings = defaultKeybindings.concat(overrides);\n\t\tfor (let i = 0, len = allKeybindings.length; i < len; i++) {\n\t\t\tlet k = allKeybindings[i];\n\t\t\tif (k.keybinding === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (k.context) {\n\t\t\t\tk.context = k.context.normalize();\n\t\t\t}\n\n\t\t\tlet entry: ICommandEntry = {\n\t\t\t\tcontext: k.context,\n\t\t\t\tkeybinding: k.keybinding,\n\t\t\t\tcommandId: k.command\n\t\t\t};\n\n\t\t\tif (BinaryKeybindings.hasChord(k.keybinding)) {\n\t\t\t\t// This is a chord\n\t\t\t\tlet keybindingFirstPart = BinaryKeybindings.extractFirstPart(k.keybinding);\n\t\t\t\tlet keybindingChordPart = BinaryKeybindings.extractChordPart(k.keybinding);\n\n\t\t\t\tthis._chords[keybindingFirstPart] = this._chords[keybindingFirstPart] || Object.create(null);\n\t\t\t\tthis._chords[keybindingFirstPart][keybindingChordPart] = this._chords[keybindingFirstPart][keybindingChordPart] || [];\n\t\t\t\tthis._chords[keybindingFirstPart][keybindingChordPart].push(entry);\n\n\t\t\t\tthis._addKeyPress(keybindingFirstPart, entry, k, i < defaultKeybindingsCount);\n\n\t\t\t} else {\n\t\t\t\tthis._addKeyPress(k.keybinding, entry, k, i < defaultKeybindingsCount);\n\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _addKeyPress(keypress: number, entry: ICommandEntry, item: IKeybindingItem, isDefault: boolean): void {\n\n\t\tif (!this._map[keypress]) {\n\t\t\t// There is no conflict so far\n\t\t\tthis._map[keypress] = [entry];\n\t\t\tthis._addToLookupMap(item);\n\t\t\treturn;\n\t\t}\n\n\t\tlet conflicts = this._map[keypress];\n\n\t\tfor (let i = conflicts.length - 1; i >= 0; i--) {\n\t\t\tlet conflict = conflicts[i];\n\n\t\t\tif (conflict.commandId === item.command) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (BinaryKeybindings.hasChord(conflict.keybinding) && BinaryKeybindings.hasChord(entry.keybinding) && conflict.keybinding !== entry.keybinding) {\n\t\t\t\t// The conflict only shares the chord start with this command\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (KeybindingResolver.contextIsEntirelyIncluded(true, conflict.context, item.context)) {\n\t\t\t\t// `item` completely overwrites `conflict`\n\t\t\t\tif (this._shouldWarnOnConflict && isDefault) {\n\t\t\t\t\tconsole.warn('Conflict detected, command `' + conflict.commandId + '` cannot be triggered by ' + Keybinding.toUserSettingsLabel(keypress) + ' due to ' + item.command);\n\t\t\t\t}\n\t\t\t\tthis._lookupMapUnreachable[conflict.commandId] = this._lookupMapUnreachable[conflict.commandId] || [];\n\t\t\t\tthis._lookupMapUnreachable[conflict.commandId].push(conflict.keybinding);\n\t\t\t}\n\t\t}\n\n\t\tconflicts.push(entry);\n\t\tthis._addToLookupMap(item);\n\t}\n\n\t/**\n\t * Returns true if `a` is completely covered by `b`.\n\t * Returns true if `b` is a more relaxed `a`.\n\t * Return true if (`a` === true implies `b` === true).\n\t */\n\tpublic static contextIsEntirelyIncluded(inNormalizedForm: boolean, a: KbExpr, b: KbExpr): boolean {\n\t\tif (!inNormalizedForm) {\n\t\t\ta = a ? a.normalize() : null;\n\t\t\tb = b ? b.normalize() : null;\n\t\t}\n\t\tif (!b) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!a) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet aRulesArr = a.serialize().split(' && ');\n\t\tlet bRulesArr = b.serialize().split(' && ');\n\n\t\tlet aRules: { [rule: string]: boolean; } = Object.create(null);\n\t\tfor (let i = 0, len = aRulesArr.length; i < len; i++) {\n\t\t\taRules[aRulesArr[i]] = true;\n\t\t}\n\n\t\tfor (let i = 0, len = bRulesArr.length; i < len; i++) {\n\t\t\tif (!aRules[bRulesArr[i]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _addToLookupMap(item: IKeybindingItem): void {\n\t\tif (!item.command) {\n\t\t\treturn;\n\t\t}\n\t\tthis._lookupMap[item.command] = this._lookupMap[item.command] || [];\n\t\tthis._lookupMap[item.command].push(item);\n\t}\n\n\tpublic getDefaultBoundCommands(): IBoundCommands {\n\t\treturn this._defaultBoundCommands;\n\t}\n\n\tpublic getDefaultKeybindings(): string {\n\t\tlet out = new OutputBuilder();\n\t\tout.writeLine('[');\n\n\t\tlet lastIndex = this._defaultKeybindings.length - 1;\n\t\tthis._defaultKeybindings.forEach((k, index) => {\n\t\t\tIOSupport.writeKeybindingItem(out, k);\n\t\t\tif (index !== lastIndex) {\n\t\t\t\tout.writeLine(',');\n\t\t\t} else {\n\t\t\t\tout.writeLine();\n\t\t\t}\n\t\t});\n\t\tout.writeLine(']');\n\t\treturn out.toString();\n\t}\n\n\tpublic lookupKeybinding(commandId: string): Keybinding[] {\n\t\tlet rawPossibleTriggers = this._lookupMap[commandId];\n\t\tif (!rawPossibleTriggers) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet possibleTriggers = rawPossibleTriggers.map(possibleTrigger => possibleTrigger.keybinding);\n\n\t\tlet remove = this._lookupMapUnreachable[commandId];\n\t\tif (remove) {\n\t\t\tpossibleTriggers = possibleTriggers.filter((possibleTrigger) => {\n\t\t\t\treturn remove.indexOf(possibleTrigger) === -1;\n\t\t\t});\n\t\t}\n\n\t\tlet seenKeys: number[] = [];\n\t\tlet result = possibleTriggers.filter((possibleTrigger) => {\n\t\t\tif (seenKeys.indexOf(possibleTrigger) >= 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tseenKeys.push(possibleTrigger);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn result.map((trigger) => {\n\t\t\treturn new Keybinding(trigger);\n\t\t}).reverse(); // sort most specific to the top\n\t}\n\n\tpublic resolve(context: any, currentChord: number, keypress: number): IResolveResult {\n\t\t// console.log('resolve: ' + Keybinding.toLabel(keypress));\n\t\tlet lookupMap: ICommandEntry[] = null;\n\n\t\tif (currentChord !== 0) {\n\t\t\tlet chords = this._chords[currentChord];\n\t\t\tif (!chords) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tlookupMap = chords[keypress];\n\t\t} else {\n\t\t\tlookupMap = this._map[keypress];\n\t\t}\n\n\n\t\tlet result = this._findCommand(context, lookupMap);\n\t\tif (!result) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (currentChord === 0 && BinaryKeybindings.hasChord(result.keybinding)) {\n\t\t\treturn {\n\t\t\t\tenterChord: keypress,\n\t\t\t\tcommandId: null\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tenterChord: 0,\n\t\t\tcommandId: result.commandId\n\t\t};\n\t}\n\n\tprivate _findCommand(context: any, matches: ICommandEntry[]): ICommandEntry {\n\t\tif (!matches) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let i = matches.length - 1; i >= 0; i--) {\n\t\t\tlet k = matches[i];\n\n\t\t\tif (!KeybindingResolver.contextMatchesRules(context, k.context)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn k;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic static contextMatchesRules(context: any, rules: KbExpr): boolean {\n\t\tif (!rules) {\n\t\t\treturn true;\n\t\t}\n\t\treturn rules.evaluate(context);\n\t}\n}\n\nfunction rightPaddedString(str: string, minChars: number): string {\n\tif (str.length < minChars) {\n\t\treturn str + (new Array(minChars - str.length).join(' '));\n\t}\n\treturn str;\n}\n\nfunction sorter(a: IKeybindingItem, b: IKeybindingItem): number {\n\tif (a.weight1 !== b.weight1) {\n\t\treturn a.weight1 - b.weight1;\n\t}\n\tif (a.command < b.command) {\n\t\treturn -1;\n\t}\n\tif (a.command > b.command) {\n\t\treturn 1;\n\t}\n\treturn a.weight2 - b.weight2;\n}\n\nexport class OutputBuilder {\n\n\tprivate _lines: string[] = [];\n\tprivate _currentLine: string = '';\n\n\twrite(str: string): void {\n\t\tthis._currentLine += str;\n\t}\n\n\twriteLine(str: string = ''): void {\n\t\tthis._lines.push(this._currentLine + str);\n\t\tthis._currentLine = '';\n\t}\n\n\ttoString(): string {\n\t\tthis.writeLine();\n\t\treturn this._lines.join('\\n');\n\t}\n}\n\nexport class IOSupport {\n\n\tpublic static writeKeybindingItem(out: OutputBuilder, item: IKeybindingItem): void {\n\t\tlet quotedSerializedKeybinding = JSON.stringify(IOSupport.writeKeybinding(item.keybinding));\n\t\tout.write(`{ \"key\": ${rightPaddedString(quotedSerializedKeybinding + ',', 25)} \"command\": `);\n\n\t\tlet serializedContext = item.context ? item.context.serialize() : '';\n\t\tlet quotedSerializeCommand = JSON.stringify(item.command);\n\t\tif (serializedContext.length > 0) {\n\t\t\tout.write(`${quotedSerializeCommand},`);\n\t\t\tout.writeLine();\n\t\t\tout.write(`                                     \"when\": \"${serializedContext}\" `);\n\t\t} else {\n\t\t\tout.write(`${quotedSerializeCommand} `);\n\t\t}\n\t\t//\t\tout.write(String(item.weight));\n\t\tout.write('}');\n\t}\n\n\tpublic static readKeybindingItem(input: IUserFriendlyKeybinding, index: number): IKeybindingItem {\n\t\tlet key = IOSupport.readKeybinding(input.key);\n\t\tlet context = IOSupport.readKeybindingContexts(input.when);\n\t\treturn {\n\t\t\tkeybinding: key,\n\t\t\tcommand: input.command,\n\t\t\tcontext: context,\n\t\t\tweight1: 1000,\n\t\t\tweight2: index\n\t\t};\n\t}\n\n\tpublic static writeKeybinding(input: number, Platform: ISimplifiedPlatform = platform): string {\n\t\treturn Keybinding.toUserSettingsLabel(input, Platform);\n\t}\n\n\tpublic static readKeybinding(input: string, Platform: ISimplifiedPlatform = platform): number {\n\t\treturn Keybinding.fromUserSettingsLabel(input, Platform);\n\t}\n\n\tpublic static readKeybindingContexts(input: string): KbExpr {\n\t\treturn KbExpr.deserialize(input);\n\t}\n}\n"]}