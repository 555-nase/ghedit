{"version":3,"file":"vs/platform/keybinding/test/common/mockKeybindingService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/keybinding/test/common/mockKeybindingService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb;QAKC,kCAAY,GAAW,EAAE,YAAe;YACvC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QAClC,CAAC;QAEM,sCAAG,GAAV,UAAW,KAAQ;YAClB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACrB,CAAC;QAEM,wCAAK,GAAZ;YACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QAClC,CAAC;QACF,+BAAC;IAAD,CAAC,AAlBD,IAkBC;IAED;QAAA;YACQ,cAAS,GAAG,sCAAkB,CAAC;QAyCvC,CAAC;QAvCO,uCAAO,GAAd,cAAyB,CAAC;QACnB,8CAAc,GAArB,UAAsB,SAAiB,EAAE,IAAS,IAAmB,MAAM,CAAC,CAAC,CAAC;QACvE,0CAAU,GAAjB,UAAkB,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvC,yCAAS,GAAhB,UAAoB,GAAW,EAAE,YAAe;YAC/C,MAAM,CAAC,IAAI,wBAAwB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QACxD,CAAC;QAEM,2CAAW,GAAlB,UAAmB,UAAsB;YACxC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAChC,CAAC;QAEM,+CAAe,GAAtB,UAAuB,UAAsB;YAC5C,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QACpC,CAAC;QAEM,+CAAe,GAAtB,UAAuB,UAAsB;YAC5C,MAAM,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;QACpC,CAAC;QAEM,yDAAyB,GAAhC,UAAiC,UAAsB;YACtD,MAAM,CAAC,UAAU,CAAC,sBAAsB,EAAE,CAAC;QAC5C,CAAC;QAEM,4CAAY,GAAnB,UAAoB,OAAoB;YACvC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,qDAAqB,GAA5B;YACC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAEM,iDAAiB,GAAxB,UAAyB,SAAiB;YACzC,MAAM,CAAC,EAAE,CAAC;QACX,CAAC;QAEM,sDAAsB,GAA7B;YACC,MAAM,CAAC,CAAC,CAAC;QACV,CAAC;QACF,4BAAC;IAAD,CAAC,AA1CD,IA0CC;IA1CY,6BAAqB,wBA0CjC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport {Keybinding} from 'vs/base/common/keyCodes';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IKeybindingContextKey, IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\n\nclass MockKeybindingContextKey<T> implements IKeybindingContextKey<T> {\n\tprivate _key: string;\n\tprivate _defaultValue: T;\n\tprivate _value: T;\n\n\tconstructor(key: string, defaultValue: T) {\n\t\tthis._key = key;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._value = this._defaultValue;\n\t}\n\n\tpublic set(value: T): void {\n\t\tthis._value = value;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._value = this._defaultValue;\n\t}\n}\n\nexport class MockKeybindingService implements IKeybindingService {\n\tpublic serviceId = IKeybindingService;\n\n\tpublic dispose(): void { }\n\tpublic executeCommand(commandId: string, args: any): TPromise<any> { return; }\n\tpublic hasCommand(commandId) { return false; }\n\n\tpublic createKey<T>(key: string, defaultValue: T): IKeybindingContextKey<T> {\n\t\treturn new MockKeybindingContextKey(key, defaultValue);\n\t}\n\n\tpublic getLabelFor(keybinding: Keybinding): string {\n\t\treturn keybinding._toUSLabel();\n\t}\n\n\tpublic getHTMLLabelFor(keybinding: Keybinding): IHTMLContentElement[] {\n\t\treturn keybinding._toUSHTMLLabel();\n\t}\n\n\tpublic getAriaLabelFor(keybinding: Keybinding): string {\n\t\treturn keybinding._toUSAriaLabel();\n\t}\n\n\tpublic getElectronAcceleratorFor(keybinding: Keybinding): string {\n\t\treturn keybinding._toElectronAccelerator();\n\t}\n\n\tpublic createScoped(domNode: HTMLElement): IKeybindingService {\n\t\treturn this;\n\t}\n\n\tpublic getDefaultKeybindings(): string {\n\t\treturn null;\n\t}\n\n\tpublic lookupKeybindings(commandId: string): Keybinding[] {\n\t\treturn [];\n\t}\n\n\tpublic customKeybindingsCount(): number {\n\t\treturn 0;\n\t}\n}\n"]}