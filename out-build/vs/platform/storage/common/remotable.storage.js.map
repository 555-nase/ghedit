{"version":3,"file":"vs/platform/storage/common/remotable.storage.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/storage/common/remotable.storage.ts"],"names":[],"mappings":";;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb;QAIC,2BAA8B,cAA+B;YAC5D,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACvC,CAAC;QAED,oCAAQ,GAAR,UAAY,MAAe,EAAE,GAAW;YACvC,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,GAAG,sBAAY,CAAC,MAAM,GAAG,sBAAY,CAAC,SAAS,CAAC,CAAC;YACrG,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAC/B,CAAC;YACD,IAAI,KAAQ,CAAC;YACb,IAAI,CAAC;gBACJ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAC9B,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAE;YAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;QACF,CAAC;QAED,oCAAQ,GAAR,UAAS,MAAe,EAAE,GAAW,EAAE,KAAU;YAChD,IAAI,SAAc,CAAC;YACnB,IAAI,CAAC;gBACJ,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,GAAG,sBAAY,CAAC,MAAM,GAAG,sBAAY,CAAC,SAAS,CAAC,CAAC;YACnG,CAAE;YAAA,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,qBAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;QACF,CAAC;QA/BF;YAAC,kBAAS,CAAC,WAAW,CAAC,mBAAmB,CAAC;uBAK5B,yBAAe;6BALa;QAgC3C,wBAAC;IAAD,CAAC,AA/BD,IA+BC;IA/BY,yBAAiB,oBA+B7B,CAAA;IAED;QAIC,wBAAY,aAA6B;YACxC,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAC7D,CAAC;QAED,iCAAQ,GAAR,UAAY,MAAe,EAAE,GAAW,EAAE,YAAgB;YACzD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,IAAI,YAAY,EAArB,CAAqB,CAAC,CAAC;QAC/E,CAAC;QAED,iCAAQ,GAAR,UAAS,MAAe,EAAE,GAAW,EAAE,KAAU;YAChD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;QACjD,CAAC;QACF,qBAAC;IAAD,CAAC,AAfD,IAeC;IAfY,sBAAc,iBAe1B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IStorageService, StorageScope} from 'vs/platform/storage/common/storage';\n\n@Remotable.MainContext('MainThreadStorage')\nexport class MainThreadStorage {\n\n\tprivate _storageService: IStorageService;\n\n\tconstructor( @IStorageService storageService: IStorageService) {\n\t\tthis._storageService = storageService;\n\t}\n\n\tgetValue<T>(shared: boolean, key: string): TPromise<T> {\n\t\tlet jsonValue = this._storageService.get(key, shared ? StorageScope.GLOBAL : StorageScope.WORKSPACE);\n\t\tif (!jsonValue) {\n\t\t\treturn TPromise.as(undefined);\n\t\t}\n\t\tlet value: T;\n\t\ttry {\n\t\t\tvalue = JSON.parse(jsonValue);\n\t\t\treturn TPromise.as(value);\n\t\t} catch (err) {\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t}\n\n\tsetValue(shared: boolean, key: string, value: any): TPromise<any> {\n\t\tlet jsonValue: any;\n\t\ttry {\n\t\t\tjsonValue = JSON.stringify(value);\n\t\t\tthis._storageService.store(key, jsonValue, shared ? StorageScope.GLOBAL : StorageScope.WORKSPACE);\n\t\t} catch (err) {\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t}\n}\n\nexport class ExtHostStorage {\n\n\tprivate _proxy: MainThreadStorage;\n\n\tconstructor(threadService: IThreadService) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadStorage);\n\t}\n\n\tgetValue<T>(shared: boolean, key: string, defaultValue?: T): TPromise<T> {\n\t\treturn this._proxy.getValue(shared, key).then(value => value || defaultValue);\n\t}\n\n\tsetValue(shared: boolean, key: string, value: any): TPromise<void> {\n\t\treturn this._proxy.setValue(shared, key, value);\n\t}\n}"]}