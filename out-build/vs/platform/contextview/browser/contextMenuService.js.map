{"version":3,"file":"vs/platform/contextview/browser/contextMenuService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/contextview/browser/contextMenuService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb;QAKC,4BAAY,SAAsB,EAAE,gBAAmC,EAAE,cAA+B,EAAE,kBAAuC;YAJ1I,cAAS,GAAG,iCAAmB,CAAC;YAKtC,IAAI,CAAC,kBAAkB,GAAG,IAAI,uCAAkB,CAAC,SAAS,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;QACnH,CAAC;QAEM,oCAAO,GAAd;YACC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC;QAEM,yCAAY,GAAnB,UAAoB,SAAsB;YACzC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC;QAED,cAAc;QAEP,4CAAe,GAAtB,UAAuB,QAA8B;YACpD,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC;QACF,yBAAC;IAAD,CAAC,AAtBD,IAsBC;IAtBY,0BAAkB,qBAsB9B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ContextMenuHandler} from './contextMenuHandler';\nimport {IContextViewService, IContextMenuService, IContextMenuDelegate} from './contextView';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IMessageService} from 'vs/platform/message/common/message';\n\nexport class ContextMenuService implements IContextMenuService {\n\tpublic serviceId = IContextMenuService;\n\n\tprivate contextMenuHandler: ContextMenuHandler;\n\n\tconstructor(container: HTMLElement, telemetryService: ITelemetryService, messageService: IMessageService, contextViewService: IContextViewService) {\n\t\tthis.contextMenuHandler = new ContextMenuHandler(container, contextViewService, telemetryService, messageService);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.contextMenuHandler.dispose();\n\t}\n\n\tpublic setContainer(container: HTMLElement): void {\n\t\tthis.contextMenuHandler.setContainer(container);\n\t}\n\n\t// ContextMenu\n\n\tpublic showContextMenu(delegate: IContextMenuDelegate): void {\n\t\tthis.contextMenuHandler.showContextMenu(delegate);\n\t}\n}"]}