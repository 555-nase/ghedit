{"version":3,"file":"vs/platform/opener/common/opener.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/opener/common/opener.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMA,sBAAc,GAAG,+BAAe,CAAiB,eAAe,CAAC,CAAC;IAgBlE,yBAAiB,GAAmB,MAAM,CAAC,MAAM,CAAC;QAC9D,SAAS,EAAE,SAAS;QACpB,IAAI,gBAAK,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA,CAAC;KACxC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {createDecorator} from 'vs/platform/instantiation/common/instantiation';\n\nexport const IOpenerService = createDecorator<IOpenerService>('openerService');\n\n\nexport interface IOpenerService {\n\n\tserviceId: any;\n\n\t/**\n\t * Opens a resource, like a webadress, a document uri, or executes command.\n\t *\n\t * @param resource A resource\n\t * @return A promise that resolves when the opening is done.\n\t */\n\topen(resource: URI): TPromise<any>;\n}\n\nexport const NullOpenerService: IOpenerService = Object.freeze({\n\tserviceId: undefined,\n\topen() { return TPromise.as(undefined);}\n});\n"]}