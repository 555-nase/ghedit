{"version":3,"file":"vs/platform/selection/common/selection.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/platform/selection/common/selection.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAkBb;QAKC,mBAAY,SAAgB;YAC3B,IAAI,CAAC,UAAU,GAAG,SAAS,IAAI,EAAE,CAAC;QACnC,CAAC;QAED,sBAAW,gCAAS;iBAApB;gBACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACxB,CAAC;;;WAAA;QAEM,2BAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC;QACrC,CAAC;QAdM,eAAK,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;QAelC,gBAAC;IAAD,CAAC,AAhBD,IAgBC;IAhBY,iBAAS,YAgBrB,CAAA;IAED;QAAyC,uCAAS;QAAlD;YAAyC,8BAAS;QAIlD,CAAC;QAHO,qCAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QACF,0BAAC;IAAD,CAAC,AAJD,CAAyC,SAAS,GAIjD;IAJY,2BAAmB,sBAI/B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport interface ISelection {\n\n\t/**\n\t * Returns if the selection is empty or not.\n\t */\n\tisEmpty(): boolean;\n}\n\nexport interface IStructuredSelection extends ISelection {\n\n\t/**\n\t * Returns an array of selected elements.\n\t */\n\ttoArray(): any[];\n}\n\nexport class Selection implements ISelection {\n\tstatic EMPTY = new Selection([]);\n\n\tprivate _selection: any[];\n\n\tconstructor(selection: any[]) {\n\t\tthis._selection = selection || [];\n\t}\n\n\tpublic get selection() {\n\t\treturn this._selection;\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn this._selection.length === 0;\n\t}\n}\n\nexport class StructuredSelection extends Selection implements IStructuredSelection {\n\tpublic toArray(): any[] {\n\t\treturn this.selection;\n\t}\n}"]}