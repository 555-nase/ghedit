{"version":3,"file":"vs/editor/test/common/controller/cursor.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/controller/cursor.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {Cursor} from 'vs/editor/common/controller/cursor';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {EndOfLinePreference, EventType, Handler, IPosition, ISelection, DefaultEndOfLine, ITextModelCreationOptions} from 'vs/editor/common/editorCommon';\nimport {Model} from 'vs/editor/common/model/model';\nimport {IMode, IRichEditSupport, IndentAction} from 'vs/editor/common/modes';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {MockConfiguration} from 'vs/editor/test/common/mocks/mockConfiguration';\nimport {BracketMode} from 'vs/editor/test/common/testModes';\n\nlet H = Handler;\n\n// --------- utils\n\nfunction cursorCommand(cursor: Cursor, command: string, extraData?: any, sizeProvider?: { pageSize: number; }, overwriteSource?: string) {\n\tif (sizeProvider) {\n\t\tcursor.configuration.editor.pageSize = sizeProvider.pageSize;\n\t}\n\tcursor.configuration.handlerDispatcher.trigger(overwriteSource || 'tests', command, extraData);\n}\n\nfunction moveTo(cursor: Cursor, lineNumber: number, column: number, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.MoveToSelect : H.MoveTo, { position: new Position(lineNumber, column) });\n}\n\nfunction moveLeft(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorLeftSelect : H.CursorLeft);\n}\n\nfunction moveWordLeft(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordLeftSelect : H.CursorWordLeft);\n}\nfunction moveWordStartLeft(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordStartLeftSelect : H.CursorWordStartLeft);\n}\nfunction moveWordEndLeft(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordEndLeftSelect : H.CursorWordEndLeft);\n}\n\nfunction moveRight(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorRightSelect : H.CursorRight);\n}\n\nfunction moveWordRight(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordRightSelect : H.CursorWordRight);\n}\nfunction moveWordEndRight(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordEndRightSelect : H.CursorWordEndRight);\n}\nfunction moveWordStartRight(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorWordStartRightSelect : H.CursorWordStartRight);\n}\n\nfunction moveDown(cursor: Cursor, linesCount: number, inSelectionMode: boolean = false) {\n\tif (linesCount === 1) {\n\t\tcursorCommand(cursor, inSelectionMode ? H.CursorDownSelect : H.CursorDown);\n\t} else {\n\t\tcursorCommand(cursor, inSelectionMode ? H.CursorPageDownSelect : H.CursorPageDown, null, { pageSize: linesCount });\n\t}\n}\n\nfunction moveUp(cursor: Cursor, linesCount: number, inSelectionMode: boolean = false) {\n\tif (linesCount === 1) {\n\t\tcursorCommand(cursor, inSelectionMode ? H.CursorUpSelect : H.CursorUp);\n\t} else {\n\t\tcursorCommand(cursor, inSelectionMode ? H.CursorPageUpSelect : H.CursorPageUp, null, { pageSize: linesCount });\n\t}\n}\n\nfunction moveToBeginningOfLine(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorHomeSelect : H.CursorHome);\n}\n\nfunction moveToEndOfLine(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ?  H.CursorEndSelect : H.CursorEnd);\n}\n\nfunction moveToBeginningOfBuffer(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorTopSelect : H.CursorTop);\n}\n\nfunction moveToEndOfBuffer(cursor: Cursor, inSelectionMode: boolean = false) {\n\tcursorCommand(cursor, inSelectionMode ? H.CursorBottomSelect : H.CursorBottom);\n}\n\nfunction deleteWordLeft(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordLeft);\n}\nfunction deleteWordStartLeft(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordStartLeft);\n}\nfunction deleteWordEndLeft(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordEndLeft);\n}\n\nfunction deleteWordRight(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordRight);\n}\nfunction deleteWordStartRight(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordStartRight);\n}\nfunction deleteWordEndRight(cursor: Cursor) {\n\tcursorCommand(cursor, H.DeleteWordEndRight);\n}\n\nfunction positionEqual(position:IPosition, lineNumber: number, column: number) {\n\tassert.deepEqual({\n\t\tlineNumber: position.lineNumber,\n\t\tcolumn: position.column\n\t}, {\n\t\tlineNumber: lineNumber,\n\t\tcolumn: column\n\t}, 'position equal');\n}\n\nfunction selectionEqual(selection:ISelection, posLineNumber: number, posColumn: number, selLineNumber: number, selColumn: number) {\n\tassert.deepEqual({\n\t\tselectionStartLineNumber: selection.selectionStartLineNumber,\n\t\tselectionStartColumn: selection.selectionStartColumn,\n\t\tpositionLineNumber: selection.positionLineNumber,\n\t\tpositionColumn: selection.positionColumn\n\t}, {\n\t\tselectionStartLineNumber: selLineNumber,\n\t\tselectionStartColumn: selColumn,\n\t\tpositionLineNumber: posLineNumber,\n\t\tpositionColumn: posColumn\n\t}, 'selection equal');\n}\n\nfunction cursorEqual(cursor: Cursor, posLineNumber: number, posColumn: number, selLineNumber: number = posLineNumber, selColumn: number = posColumn) {\n\tpositionEqual(cursor.getPosition(), posLineNumber, posColumn);\n\tselectionEqual(cursor.getSelection(), posLineNumber, posColumn, selLineNumber, selColumn);\n}\n\nfunction cursorEquals(cursor: Cursor, selections: Selection[]): void {\n\tlet actual = cursor.getSelections().map(s => s.toString());\n\tlet expected = selections.map(s => s.toString());\n\n\tassert.deepEqual(actual, expected);\n}\n\nsuite('Editor Controller - Cursor', () => {\n\tconst LINE1 = '    \\tMy First Line\\t ';\n\tconst LINE2 = '\\tMy Second Line';\n\tconst LINE3 = '    Third Line💩';\n\tconst LINE4 = '';\n\tconst LINE5 = '1';\n\n\tlet thisModel: Model;\n\tlet thisConfiguration: MockConfiguration;\n\tlet thisCursor: Cursor;\n\n\tsetup(() => {\n\t\tlet text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tthisConfiguration = new MockConfiguration(null);\n\t\tthisCursor = new Cursor(1, thisConfiguration, thisModel, null, false);\n\t});\n\n\tteardown(() => {\n\t\tthisCursor.dispose();\n\t\tthisModel.dispose();\n\t\tthisConfiguration.dispose();\n\t});\n\n\ttest('cursor initialized', () => {\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\t// --------- absolute move\n\n\ttest('no move', () => {\n\t\tmoveTo(thisCursor, 1, 1);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move', () => {\n\t\tmoveTo(thisCursor, 1, 2);\n\t\tcursorEqual(thisCursor, 1, 2);\n\t});\n\n\ttest('move in selection mode', () => {\n\t\tmoveTo(thisCursor, 1, 2, true);\n\t\tcursorEqual(thisCursor, 1, 2, 1, 1);\n\t});\n\n\ttest('move beyond line end', () => {\n\t\tmoveTo(thisCursor, 1, 25);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t});\n\n\ttest('move empty line', () => {\n\t\tmoveTo(thisCursor, 4, 20);\n\t\tcursorEqual(thisCursor, 4, 1);\n\t});\n\n\ttest('move one char line', () => {\n\t\tmoveTo(thisCursor, 5, 20);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t});\n\n\ttest('selection down', () => {\n\t\tmoveTo(thisCursor, 2, 1, true);\n\t\tcursorEqual(thisCursor, 2, 1, 1, 1);\n\t});\n\n\ttest('move and then select', () => {\n\t\tmoveTo(thisCursor, 2, 3);\n\t\tcursorEqual(thisCursor, 2, 3);\n\n\t\tmoveTo(thisCursor, 2, 15, true);\n\t\tcursorEqual(thisCursor, 2, 15, 2, 3);\n\n\t\tmoveTo(thisCursor, 1, 2, true);\n\t\tcursorEqual(thisCursor, 1, 2, 2, 3);\n\t});\n\n\t// --------- move left\n\n\ttest('move left on top left position', () => {\n\t\tmoveLeft(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move left', () => {\n\t\tmoveTo(thisCursor, 1, 3);\n\t\tcursorEqual(thisCursor, 1, 3);\n\t\tmoveLeft(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 2);\n\t});\n\n\ttest('move left with surrogate pair', () => {\n\t\tmoveTo(thisCursor, 3, 17);\n\t\tcursorEqual(thisCursor, 3, 17);\n\t\tmoveLeft(thisCursor);\n\t\tcursorEqual(thisCursor, 3, 15);\n\t});\n\n\ttest('move left goes to previous row', () => {\n\t\tmoveTo(thisCursor, 2, 1);\n\t\tcursorEqual(thisCursor, 2, 1);\n\t\tmoveLeft(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 21);\n\t});\n\n\ttest('move left selection', () => {\n\t\tmoveTo(thisCursor, 2, 1);\n\t\tcursorEqual(thisCursor, 2, 1);\n\t\tmoveLeft(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 21, 2, 1);\n\t});\n\n\t// --------- move word left\n\n\ttest('move word left', () => {\n\t\tmoveTo(thisCursor, 5, 2);\n\t\tlet expectedStops = [\n\t\t\t[5, 1],\n\t\t\t[4, 1],\n\t\t\t[3, 11],\n\t\t\t[3, 5],\n\t\t\t[3, 1],\n\t\t\t[2, 12],\n\t\t\t[2, 5],\n\t\t\t[2, 2],\n\t\t\t[2, 1],\n\t\t\t[1, 15],\n\t\t\t[1, 9],\n\t\t\t[1, 6],\n\t\t\t[1, 1],\n\t\t\t[1, 1],\n\t\t];\n\n\t\tlet actualStops:number[][] = [];\n\t\tfor (let i = 0; i < expectedStops.length; i++) {\n\t\t\tmoveWordLeft(thisCursor);\n\t\t\tlet pos = thisCursor.getPosition();\n\t\t\tactualStops.push([pos.lineNumber, pos.column]);\n\t\t}\n\n\t\tassert.deepEqual(actualStops, expectedStops);\n\t});\n\n\ttest('move word left selection', () => {\n\t\tmoveTo(thisCursor, 5, 2);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t\tmoveWordLeft(thisCursor, true);\n\t\tcursorEqual(thisCursor, 5, 1, 5, 2);\n\t});\n\n\t// --------- move right\n\n\ttest('move right on bottom right position', () => {\n\t\tmoveTo(thisCursor, 5, 2);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t\tmoveRight(thisCursor);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t});\n\n\ttest('move right', () => {\n\t\tmoveTo(thisCursor, 1, 3);\n\t\tcursorEqual(thisCursor, 1, 3);\n\t\tmoveRight(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 4);\n\t});\n\n\ttest('move right with surrogate pair', () => {\n\t\tmoveTo(thisCursor, 3, 15);\n\t\tcursorEqual(thisCursor, 3, 15);\n\t\tmoveRight(thisCursor);\n\t\tcursorEqual(thisCursor, 3, 17);\n\t});\n\n\ttest('move right goes to next row', () => {\n\t\tmoveTo(thisCursor, 1, 21);\n\t\tcursorEqual(thisCursor, 1, 21);\n\t\tmoveRight(thisCursor);\n\t\tcursorEqual(thisCursor, 2, 1);\n\t});\n\n\ttest('move right selection', () => {\n\t\tmoveTo(thisCursor, 1, 21);\n\t\tcursorEqual(thisCursor, 1, 21);\n\t\tmoveRight(thisCursor, true);\n\t\tcursorEqual(thisCursor, 2, 1, 1, 21);\n\t});\n\n\t// --------- move word right\n\n\ttest('move word right', () => {\n\t\tmoveTo(thisCursor, 1, 1);\n\t\tlet expectedStops = [\n\t\t\t[1, 8],\n\t\t\t[1, 14],\n\t\t\t[1, 19],\n\t\t\t[1, 21],\n\t\t\t[2, 4],\n\t\t\t[2, 11],\n\t\t\t[2, 16],\n\t\t\t[3, 10],\n\t\t\t[3, 17],\n\t\t\t[4, 1],\n\t\t\t[5, 2],\n\t\t\t[5, 2],\n\t\t];\n\n\t\tlet actualStops:number[][] = [];\n\t\tfor (let i = 0; i < expectedStops.length; i++) {\n\t\t\tmoveWordRight(thisCursor);\n\t\t\tlet pos = thisCursor.getPosition();\n\t\t\tactualStops.push([pos.lineNumber, pos.column]);\n\t\t}\n\n\t\tassert.deepEqual(actualStops, expectedStops);\n\t});\n\n\ttest('move word right selection', () => {\n\t\tmoveTo(thisCursor, 1, 1);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t\tmoveWordRight(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 8, 1, 1);\n\t});\n\t// --------- move down\n\n\ttest('move down', () => {\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 2, 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 3, 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 4, 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 5, 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t});\n\n\ttest('move down with selection', () => {\n\t\tmoveDown(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 2, 1, 1, 1);\n\t\tmoveDown(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 3, 1, 1, 1);\n\t\tmoveDown(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 4, 1, 1, 1);\n\t\tmoveDown(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 5, 1, 1, 1);\n\t\tmoveDown(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 5, 2, 1, 1);\n\t});\n\n\ttest('move down with tabs', () => {\n\t\tmoveTo(thisCursor, 1, 5);\n\t\tcursorEqual(thisCursor, 1, 5);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 2, 2);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 3, 5);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 4, 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t});\n\n\t// --------- move up\n\n\ttest('move up', () => {\n\t\tmoveTo(thisCursor, 3, 5);\n\t\tcursorEqual(thisCursor, 3, 5);\n\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 2, 2);\n\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 1, 5);\n\t});\n\n\ttest('move up with selection', () => {\n\t\tmoveTo(thisCursor, 3, 5);\n\t\tcursorEqual(thisCursor, 3, 5);\n\n\t\tmoveUp(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 2, 2, 3, 5);\n\n\t\tmoveUp(thisCursor, 1, true);\n\t\tcursorEqual(thisCursor, 1, 5, 3, 5);\n\t});\n\n\ttest('move up and down with tabs', () => {\n\t\tmoveTo(thisCursor, 1, 5);\n\t\tcursorEqual(thisCursor, 1, 5);\n\t\tmoveDown(thisCursor, 4);\n\t\tcursorEqual(thisCursor, 5, 2);\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 4, 1);\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 3, 5);\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 2, 2);\n\t\tmoveUp(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 1, 5);\n\t});\n\n\ttest('move up and down with end of lines starting from a long one', () => {\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length - 1);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 2, LINE2.length + 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 3, LINE3.length + 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 4, LINE4.length + 1);\n\t\tmoveDown(thisCursor, 1);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1);\n\t\tmoveUp(thisCursor, 4);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t});\n\n\t// --------- move to beginning of line\n\n\ttest('move to beginning of line', () => {\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 6);\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move to beginning of line from within line', () => {\n\t\tmoveTo(thisCursor, 1, 8);\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 6);\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move to beginning of line from whitespace at beginning of line', () => {\n\t\tmoveTo(thisCursor, 1, 2);\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t\tmoveToBeginningOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 6);\n\t});\n\n\ttest('move to beginning of line from within line selection', () => {\n\t\tmoveTo(thisCursor, 1, 8);\n\t\tmoveToBeginningOfLine(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 6, 1, 8);\n\t\tmoveToBeginningOfLine(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 1, 1, 8);\n\t});\n\n\t// --------- move to end of line\n\n\ttest('move to end of line', () => {\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length - 1);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t});\n\n\ttest('move to end of line from within line', () => {\n\t\tmoveTo(thisCursor, 1, 6);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length - 1);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t});\n\n\ttest('move to end of line from whitespace at end of line', () => {\n\t\tmoveTo(thisCursor, 1, 20);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1);\n\t\tmoveToEndOfLine(thisCursor);\n\t\tcursorEqual(thisCursor, 1, LINE1.length - 1);\n\t});\n\n\ttest('move to end of line from within line selection', () => {\n\t\tmoveTo(thisCursor, 1, 6);\n\t\tmoveToEndOfLine(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, LINE1.length - 1, 1, 6);\n\t\tmoveToEndOfLine(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 6);\n\t});\n\n\t// --------- move to beginning of buffer\n\n\ttest('move to beginning of buffer', () => {\n\t\tmoveToBeginningOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move to beginning of buffer from within first line', () => {\n\t\tmoveTo(thisCursor, 1, 3);\n\t\tmoveToBeginningOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move to beginning of buffer from within another line', () => {\n\t\tmoveTo(thisCursor, 3, 3);\n\t\tmoveToBeginningOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('move to beginning of buffer from within first line selection', () => {\n\t\tmoveTo(thisCursor, 1, 3);\n\t\tmoveToBeginningOfBuffer(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 1, 1, 3);\n\t});\n\n\ttest('move to beginning of buffer from within another line selection', () => {\n\t\tmoveTo(thisCursor, 3, 3);\n\t\tmoveToBeginningOfBuffer(thisCursor, true);\n\t\tcursorEqual(thisCursor, 1, 1, 3, 3);\n\t});\n\n\t// --------- move to end of buffer\n\n\ttest('move to end of buffer', () => {\n\t\tmoveToEndOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1);\n\t});\n\n\ttest('move to end of buffer from within last line', () => {\n\t\tmoveTo(thisCursor, 5, 1);\n\t\tmoveToEndOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1);\n\t});\n\n\ttest('move to end of buffer from within another line', () => {\n\t\tmoveTo(thisCursor, 3, 3);\n\t\tmoveToEndOfBuffer(thisCursor);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1);\n\t});\n\n\ttest('move to end of buffer from within last line selection', () => {\n\t\tmoveTo(thisCursor, 5, 1);\n\t\tmoveToEndOfBuffer(thisCursor, true);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1, 5, 1);\n\t});\n\n\ttest('move to end of buffer from within another line selection', () => {\n\t\tmoveTo(thisCursor, 3, 3);\n\t\tmoveToEndOfBuffer(thisCursor, true);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1, 3, 3);\n\t});\n\n\t// --------- delete word left/right\n\n\ttest('delete word left for non-empty selection', () => {\n\t\tmoveTo(thisCursor, 3, 7);\n\t\tmoveRight(thisCursor, true);\n\t\tmoveRight(thisCursor, true);\n\t\tdeleteWordLeft(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(3), '    Thd Line💩');\n\t\tcursorEqual(thisCursor, 3, 7);\n\t});\n\n\ttest('delete word left for caret at beginning of document', () => {\n\t\tmoveTo(thisCursor, 1, 1);\n\t\tdeleteWordLeft(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(1), '    \\tMy First Line\\t ');\n\t\tcursorEqual(thisCursor, 1, 1);\n\t});\n\n\ttest('delete word left for caret at end of whitespace', () => {\n\t\tmoveTo(thisCursor, 3, 11);\n\t\tdeleteWordLeft(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(3), '    Line💩');\n\t\tcursorEqual(thisCursor, 3, 5);\n\t});\n\n\ttest('delete word left for caret just behind a word', () => {\n\t\tmoveTo(thisCursor, 2, 11);\n\t\tdeleteWordLeft(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(2), '\\tMy  Line');\n\t\tcursorEqual(thisCursor, 2, 5);\n\t});\n\n\ttest('delete word left for caret inside of a word', () => {\n\t\tmoveTo(thisCursor, 1, 12);\n\t\tdeleteWordLeft(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(1), '    \\tMy st Line\\t ');\n\t\tcursorEqual(thisCursor, 1, 9);\n\t});\n\n\ttest('delete word right for non-empty selection', () => {\n\t\tmoveTo(thisCursor, 3, 7);\n\t\tmoveRight(thisCursor, true);\n\t\tmoveRight(thisCursor, true);\n\t\tdeleteWordRight(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(3), '    Thd Line💩');\n\t\tcursorEqual(thisCursor, 3, 7);\n\t});\n\n\ttest('delete word right for caret at end of document', () => {\n\t\tmoveTo(thisCursor, 5, 3);\n\t\tdeleteWordRight(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(5), '1');\n\t\tcursorEqual(thisCursor, 5, 2);\n\t});\n\n\ttest('delete word right for caret at beggining of whitespace', () => {\n\t\tmoveTo(thisCursor, 3, 1);\n\t\tdeleteWordRight(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(3), 'Third Line💩');\n\t\tcursorEqual(thisCursor, 3, 1);\n\t});\n\n\ttest('delete word right for caret just before a word', () => {\n\t\tmoveTo(thisCursor, 2, 5);\n\t\tdeleteWordRight(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(2), '\\tMy  Line');\n\t\tcursorEqual(thisCursor, 2, 5);\n\t});\n\n\ttest('delete word right for caret inside of a word', () => {\n\t\tmoveTo(thisCursor, 1, 11);\n\t\tdeleteWordRight(thisCursor);\n\t\tassert.equal(thisModel.getLineContent(1), '    \\tMy Fi Line\\t ');\n\t\tcursorEqual(thisCursor, 1, 11);\n\t});\n\n\t// --------- misc\n\n\ttest('select all', () => {\n\t\tcursorCommand(thisCursor, H.SelectAll);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1, 1, 1);\n\t});\n\n\ttest('expandLineSelection', () => {\n\t\t//              0          1         2\n\t\t//              01234 56789012345678 0\n\t\t// let LINE1 = '    \\tMy First Line\\t ';\n\t\tmoveTo(thisCursor, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\n\t\tmoveTo(thisCursor, 1, 2);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\n\t\tmoveTo(thisCursor, 1, 5);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\n\t\tmoveTo(thisCursor, 1, 19);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\n\t\tmoveTo(thisCursor, 1, 20);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\n\t\tmoveTo(thisCursor, 1, 21);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 1, LINE1.length + 1, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 2, LINE2.length + 1, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 3, LINE3.length + 1, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 4, LINE4.length + 1, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1, 1, 1);\n\t\tcursorCommand(thisCursor, H.ExpandLineSelection);\n\t\tcursorEqual(thisCursor, 5, LINE5.length + 1, 1, 1);\n\t});\n\n\t// --------- eventing\n\n\ttest('no move doesn\\'t trigger event', () => {\n\t\tthisCursor.addListener(EventType.CursorPositionChanged, (e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisCursor.addListener(EventType.CursorSelectionChanged, (e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tmoveTo(thisCursor, 1, 1);\n\t});\n\n\ttest('move eventing', () => {\n\t\tlet events = 0;\n\t\tthisCursor.addListener(EventType.CursorPositionChanged, (e) => {\n\t\t\tevents++;\n\t\t\tpositionEqual(e.position, 1, 2);\n\t\t});\n\t\tthisCursor.addListener(EventType.CursorSelectionChanged, (e) => {\n\t\t\tevents++;\n\t\t\tselectionEqual(e.selection, 1, 2, 1, 2);\n\t\t});\n\t\tmoveTo(thisCursor, 1, 2);\n\t\tassert.equal(events, 2, 'receives 2 events');\n\t});\n\n\ttest('move in selection mode eventing', () => {\n\t\tlet events = 0;\n\t\tthisCursor.addListener(EventType.CursorPositionChanged, (e) => {\n\t\t\tevents++;\n\t\t\tpositionEqual(e.position, 1, 2);\n\t\t});\n\t\tthisCursor.addListener(EventType.CursorSelectionChanged, (e) => {\n\t\t\tevents++;\n\t\t\tselectionEqual(e.selection, 1, 2, 1, 1);\n\t\t});\n\t\tmoveTo(thisCursor, 1, 2, true);\n\t\tassert.equal(events, 2, 'receives 2 events');\n\t});\n\n\t// --------- state save & restore\n\n\ttest('saveState & restoreState', () => {\n\t\tmoveTo(thisCursor, 2, 1, true);\n\t\tcursorEqual(thisCursor, 2, 1, 1, 1);\n\n\t\tlet savedState = JSON.stringify(thisCursor.saveState());\n\n\t\tmoveTo(thisCursor, 1, 1, false);\n\t\tcursorEqual(thisCursor, 1, 1);\n\n\t\tthisCursor.restoreState(JSON.parse(savedState));\n\t\tcursorEqual(thisCursor, 2, 1, 1, 1);\n\t});\n\n\t// --------- updating cursor\n\n\ttest('Independent model edit 1', () => {\n\t\tmoveTo(thisCursor, 2, 16, true);\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(2, 1, 2, 2))]);\n\t\tcursorEqual(thisCursor, 2, 15, 1, 1);\n\t});\n\n\ttest('column select 1', () => {\n\t\tlet model = new Model([\n\t\t\t'\\tprivate compute(a:number): boolean {',\n\t\t\t'\\t\\tif (a + 3 === 0 || a + 5 === 0) {',\n\t\t\t'\\t\\t\\treturn false;',\n\t\t\t'\\t\\t}',\n\t\t\t'\\t}'\n\t\t].join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tlet cursor = new Cursor(1, new MockConfiguration(null), model, null, true);\n\n\t\tmoveTo(cursor, 1, 7, false);\n\t\tcursorEqual(cursor, 1, 7);\n\n\t\tcursorCommand(cursor, H.ColumnSelect, {\n\t\t\tposition: new Position(4, 4),\n\t\t\tviewPosition: new Position(4, 4),\n\t\t\tmouseColumn: 15\n\t\t});\n\n\t\tlet expectedSelections = [\n\t\t\tnew Selection(1, 7, 1, 12),\n\t\t\tnew Selection(2, 4, 2, 9),\n\t\t\tnew Selection(3, 3, 3, 6),\n\t\t\tnew Selection(4, 4, 4, 4),\n\t\t];\n\n\t\tcursorEquals(cursor, expectedSelections);\n\n\t\tcursor.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('issue #4905 - column select is biased to the right', () => {\n\t\tlet model = new Model([\n\t\t\t'var gulp = require(\"gulp\");',\n\t\t\t'var path = require(\"path\");',\n\t\t\t'var rimraf = require(\"rimraf\");',\n\t\t\t'var isarray = require(\"isarray\");',\n\t\t\t'var merge = require(\"merge-stream\");',\n\t\t\t'var concat = require(\"gulp-concat\");',\n\t\t\t'var newer = require(\"gulp-newer\");',\n\t\t].join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tlet cursor = new Cursor(1, new MockConfiguration(null), model, null, true);\n\n\t\tmoveTo(cursor, 1, 4, false);\n\t\tcursorEqual(cursor, 1, 4);\n\n\t\tcursorCommand(cursor, H.ColumnSelect, {\n\t\t\tposition: new Position(4, 1),\n\t\t\tviewPosition: new Position(4, 1),\n\t\t\tmouseColumn: 1\n\t\t});\n\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 1),\n\t\t\tnew Selection(2, 4, 2, 1),\n\t\t\tnew Selection(3, 4, 3, 1),\n\t\t\tnew Selection(4, 4, 4, 1),\n\t\t]);\n\n\t\tcursor.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('column select with keyboard', () => {\n\t\tlet model = new Model([\n\t\t\t'var gulp = require(\"gulp\");',\n\t\t\t'var path = require(\"path\");',\n\t\t\t'var rimraf = require(\"rimraf\");',\n\t\t\t'var isarray = require(\"isarray\");',\n\t\t\t'var merge = require(\"merge-stream\");',\n\t\t\t'var concat = require(\"gulp-concat\");',\n\t\t\t'var newer = require(\"gulp-newer\");',\n\t\t].join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tlet cursor = new Cursor(1, new MockConfiguration(null), model, null, true);\n\n\t\tmoveTo(cursor, 1, 4, false);\n\t\tcursorEqual(cursor, 1, 4);\n\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 5)\n\t\t]);\n\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\tnew Selection(2, 4, 2, 5)\n\t\t]);\n\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\tnew Selection(2, 4, 2, 5),\n\t\t\tnew Selection(3, 4, 3, 5),\n\t\t]);\n\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorCommand(cursor, H.CursorColumnSelectDown);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 5),\n\t\t\tnew Selection(2, 4, 2, 5),\n\t\t\tnew Selection(3, 4, 3, 5),\n\t\t\tnew Selection(4, 4, 4, 5),\n\t\t\tnew Selection(5, 4, 5, 5),\n\t\t\tnew Selection(6, 4, 6, 5),\n\t\t\tnew Selection(7, 4, 7, 5),\n\t\t]);\n\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 6),\n\t\t\tnew Selection(2, 4, 2, 6),\n\t\t\tnew Selection(3, 4, 3, 6),\n\t\t\tnew Selection(4, 4, 4, 6),\n\t\t\tnew Selection(5, 4, 5, 6),\n\t\t\tnew Selection(6, 4, 6, 6),\n\t\t\tnew Selection(7, 4, 7, 6),\n\t\t]);\n\n\t\t// 10 times\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 16),\n\t\t\tnew Selection(2, 4, 2, 16),\n\t\t\tnew Selection(3, 4, 3, 16),\n\t\t\tnew Selection(4, 4, 4, 16),\n\t\t\tnew Selection(5, 4, 5, 16),\n\t\t\tnew Selection(6, 4, 6, 16),\n\t\t\tnew Selection(7, 4, 7, 16),\n\t\t]);\n\n\t\t// 10 times\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 26),\n\t\t\tnew Selection(2, 4, 2, 26),\n\t\t\tnew Selection(3, 4, 3, 26),\n\t\t\tnew Selection(4, 4, 4, 26),\n\t\t\tnew Selection(5, 4, 5, 26),\n\t\t\tnew Selection(6, 4, 6, 26),\n\t\t\tnew Selection(7, 4, 7, 26),\n\t\t]);\n\n\t\t// 2 times => reaching the ending of lines 1 and 2\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 28),\n\t\t\tnew Selection(4, 4, 4, 28),\n\t\t\tnew Selection(5, 4, 5, 28),\n\t\t\tnew Selection(6, 4, 6, 28),\n\t\t\tnew Selection(7, 4, 7, 28),\n\t\t]);\n\n\t\t// 4 times => reaching the ending of line 3\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 32),\n\t\t\tnew Selection(5, 4, 5, 32),\n\t\t\tnew Selection(6, 4, 6, 32),\n\t\t\tnew Selection(7, 4, 7, 32),\n\t\t]);\n\n\t\t// 2 times => reaching the ending of line 4\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 34),\n\t\t\tnew Selection(6, 4, 6, 34),\n\t\t\tnew Selection(7, 4, 7, 34),\n\t\t]);\n\n\t\t// 1 time => reaching the ending of line 7\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 35),\n\t\t\tnew Selection(6, 4, 6, 35),\n\t\t\tnew Selection(7, 4, 7, 35),\n\t\t]);\n\n\t\t// 3 times => reaching the ending of lines 5 & 6\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\tnew Selection(7, 4, 7, 35),\n\t\t]);\n\n\t\t// cannot go anywhere anymore\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\tnew Selection(7, 4, 7, 35),\n\t\t]);\n\n\t\t// cannot go anywhere anymore even if we insist\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorCommand(cursor, H.CursorColumnSelectRight);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 37),\n\t\t\tnew Selection(6, 4, 6, 37),\n\t\t\tnew Selection(7, 4, 7, 35),\n\t\t]);\n\n\t\t// can easily go back\n\t\tcursorCommand(cursor, H.CursorColumnSelectLeft);\n\t\tcursorEquals(cursor, [\n\t\t\tnew Selection(1, 4, 1, 28),\n\t\t\tnew Selection(2, 4, 2, 28),\n\t\t\tnew Selection(3, 4, 3, 32),\n\t\t\tnew Selection(4, 4, 4, 34),\n\t\t\tnew Selection(5, 4, 5, 36),\n\t\t\tnew Selection(6, 4, 6, 36),\n\t\t\tnew Selection(7, 4, 7, 35),\n\t\t]);\n\n\t\tcursor.dispose();\n\t\tmodel.dispose();\n\t});\n});\n\nclass TestMode {\n\tpublic getId():string {\n\t\treturn 'testing';\n\t}\n\n\tpublic toSimplifiedMode(): IMode {\n\t\treturn this;\n\t}\n}\n\nclass SurroundingMode extends TestMode {\n\tpublic richEditSupport: IRichEditSupport;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.richEditSupport = new RichEditSupport(this.getId(), null, {\n\t\t\t__characterPairSupport: {\n\t\t\t\tautoClosingPairs: [{ open: '(', close: ')' }]\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass OnEnterMode extends TestMode {\n\tpublic richEditSupport: IRichEditSupport;\n\n\tconstructor(indentAction: IndentAction) {\n\t\tsuper();\n\t\tthis.richEditSupport = {\n\t\t\tonEnter: {\n\t\t\t\tonEnter: (model, position) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tindentAction: indentAction\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n\nsuite('Editor Controller - Regression tests', () => {\n\ttest('Bug 9121: Auto indent + undo + redo is funky', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t''\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF,\n\t\t\t\tdetectIndentation: false,\n\t\t\t\tinsertSpaces: false,\n\t\t\t\ttabSize: 4\n\t\t\t}\n\t\t}, (model, cursor) => {\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n' }, null, 'keyboard');\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n', 'assert1');\n\n\t\t\tcursorCommand(cursor, H.Tab, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t', 'assert2');\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n'}, null, 'keyboard');\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\t', 'assert3');\n\n\t\t\tcursorCommand(cursor, H.Type, { text: 'x' });\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert4');\n\n\t\t\tcursorCommand(cursor, H.CursorLeft, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert5');\n\n\t\t\tcursorCommand(cursor, H.DeleteLeft, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert6');\n\n\t\t\tcursorCommand(cursor, H.DeleteLeft, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\tx', 'assert7');\n\n\t\t\tcursorCommand(cursor, H.DeleteLeft, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert8');\n\n\t\t\tcursorCommand(cursor, H.DeleteLeft, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), 'x', 'assert9');\n\n\t\t\tcursorCommand(cursor, H.Undo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert10');\n\n\t\t\tcursorCommand(cursor, H.Undo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert11');\n\n\t\t\tcursorCommand(cursor, H.Undo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\n\\tx', 'assert12');\n\n\t\t\tcursorCommand(cursor, H.Redo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\n\\t\\nx', 'assert13');\n\n\t\t\tcursorCommand(cursor, H.Redo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), '\\nx', 'assert14');\n\n\t\t\tcursorCommand(cursor, H.Redo, {});\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.LF), 'x', 'assert15');\n\t\t});\n\t});\n\n\ttest('issue #183: jump to matching bracket position', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'var x = (3 + (5-7));'\n\t\t\t],\n\t\t\tmode: new BracketMode()\n\t\t}, (model, cursor) => {\n\t\t\t// ensure is tokenized\n\t\t\tmodel.getLineContext(1);\n\n\t\t\tmoveTo(cursor, 1, 20);\n\n\t\t\tcursorCommand(cursor, H.JumpToBracket, null, null, 'keyboard');\n\t\t\tcursorEqual(cursor, 1, 10);\n\n\t\t\tcursorCommand(cursor, H.JumpToBracket, null, null, 'keyboard');\n\t\t\tcursorEqual(cursor, 1, 20);\n\n\t\t\tcursorCommand(cursor, H.JumpToBracket, null, null, 'keyboard');\n\t\t\tcursorEqual(cursor, 1, 10);\n\t\t});\n\t});\n\n\ttest('bug #16543: Tab should indent to correct indentation spot immediately', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tfunction hello() { // something here',\n\t\t\t\t'\\t',\n\t\t\t\t'',\n\t\t\t\t'\\t}',\n\t\t\t\t'}'\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF,\n\t\t\t\tdetectIndentation: false,\n\t\t\t\tinsertSpaces: false,\n\t\t\t\ttabSize: 4\n\t\t\t},\n\t\t\tmode: new OnEnterMode(IndentAction.Indent),\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 4, 1, false);\n\t\t\tcursorEqual(cursor, 4, 1, 4, 1);\n\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(4), '\\t\\t');\n\t\t});\n\t});\n\n\ttest('Bug 18276:[editor] Indentation broken when selection is empty', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {'\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF,\n\t\t\t\tdetectIndentation: false,\n\t\t\t\tinsertSpaces: false,\n\t\t\t\ttabSize: 4\n\t\t\t},\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 2, false);\n\t\t\tcursorEqual(cursor, 1, 2, 1, 2);\n\n\t\t\tcursorCommand(cursor, H.Indent, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(1), '\\tfunction baz() {');\n\n\t\t\tcursorEqual(cursor, 1, 3, 1, 3);\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(1), '\\tf\\tunction baz() {');\n\t\t});\n\t});\n\n\ttest('bug #16815:Shift+Tab doesn\\'t go back to tabstop', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'     function baz() {'\n\t\t\t],\n\t\t\tmode: new OnEnterMode(IndentAction.IndentOutdent),\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 6, false);\n\t\t\tcursorEqual(cursor, 1, 6, 1, 6);\n\n\t\t\tcursorCommand(cursor, H.Outdent, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(1), '    function baz() {');\n\t\t\tcursorEqual(cursor, 1, 5, 1, 5);\n\t\t});\n\t});\n\n\ttest('Bug #18293:[regression][editor] Can\\'t outdent whitespace line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'      '\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 7, false);\n\t\t\tcursorEqual(cursor, 1, 7, 1, 7);\n\n\t\t\tcursorCommand(cursor, H.Outdent, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(1), '    ');\n\t\t\tcursorEqual(cursor, 1, 5, 1, 5);\n\t\t});\n\t});\n\n\ttest('Bug #16657: [editor] Tab on empty line of zero indentation moves cursor to position (1,1)', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {',\n\t\t\t\t'\\tfunction hello() { // something here',\n\t\t\t\t'\\t',\n\t\t\t\t'',\n\t\t\t\t'\\t}',\n\t\t\t\t'}',\n\t\t\t\t''\n\t\t\t],\n\t\t\tmodelOpts: {\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF,\n\t\t\t\tdetectIndentation: false,\n\t\t\t\tinsertSpaces: false,\n\t\t\t\ttabSize: 4\n\t\t\t},\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 7, 1, false);\n\t\t\tcursorEqual(cursor, 7, 1, 7, 1);\n\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(7), '\\t');\n\t\t\tcursorEqual(cursor, 7, 2, 7, 2);\n\t\t});\n\t});\n\n\ttest('bug #16740: [editor] Cut line doesn\\'t quite cut the last line', () => {\n\t\t// Part 1 => there is text on the last line\n\t\tlet text = [\n\t\t\t'asdasd',\n\t\t\t'qwerty'\n\t\t];\n\t\tlet model = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tlet cursor = new Cursor(1, new MockConfiguration(null), model, null, true);\n\n\t\tmoveTo(cursor, 2, 1, false);\n\t\tcursorEqual(cursor, 2, 1, 2, 1);\n\n\t\tcursorCommand(cursor, H.Cut, null, null, 'keyboard');\n\t\tassert.equal(model.getLineCount(), 1);\n\t\tassert.equal(model.getLineContent(1), 'asdasd');\n\n\t\tcursor.dispose();\n\t\tmodel.dispose();\n\n\t\t// Part 2 => there is no text on the last line\n\t\ttext = [\n\t\t\t'asdasd',\n\t\t\t''\n\t\t];\n\t\tmodel = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tcursor = new Cursor(1, new MockConfiguration(null), model, null, true);\n\n\t\tmoveTo(cursor, 2, 1, false);\n\t\tcursorEqual(cursor, 2, 1, 2, 1);\n\n\t\tcursorCommand(cursor, H.Cut, null, null, 'keyboard');\n\t\tassert.equal(model.getLineCount(), 1);\n\t\tassert.equal(model.getLineContent(1), 'asdasd');\n\n\t\tcursorCommand(cursor, H.Cut, null, null, 'keyboard');\n\t\tassert.equal(model.getLineCount(), 1);\n\t\tassert.equal(model.getLineContent(1), '');\n\n\t\tcursor.dispose();\n\t\tmodel.dispose();\n\t});\n\n\ttest('Bug #11476: Double bracket surrounding + undo is broken', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'hello'\n\t\t\t],\n\t\t\tmode: new SurroundingMode(),\n\t\t\tmodelOpts: { tabSize: 4, insertSpaces: true, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 3, false);\n\t\t\tmoveTo(cursor, 1, 5, true);\n\t\t\tcursorEqual(cursor, 1, 5, 1, 3);\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '(' }, null, 'keyboard');\n\t\t\tcursorEqual(cursor, 1, 6, 1, 4);\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '(' }, null, 'keyboard');\n\t\t\tcursorEqual(cursor, 1, 7, 1, 5);\n\t\t});\n\t});\n\n\ttest('issue #1140: Backspace stops prematurely', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function baz() {',\n\t\t\t\t'  return 1;',\n\t\t\t\t'};'\n\t\t\t],\n\t\t\tmode: new SurroundingMode(),\n\t\t\tmodelOpts: { tabSize: 4, insertSpaces: true, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 3, 2, false);\n\t\t\tmoveTo(cursor, 1, 14, true);\n\t\t\tcursorEqual(cursor, 1, 14, 3, 2);\n\n\t\t\tcursorCommand(cursor, H.DeleteLeft);\n\t\t\tcursorEqual(cursor, 1, 14, 1, 14);\n\t\t\tassert.equal(model.getLineCount(), 1);\n\t\t\tassert.equal(model.getLineContent(1), 'function baz(;');\n\t\t});\n\t});\n\n\ttest('issue #1336: Insert cursor below on last line adds a cursor to the end of the current line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'abc'\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tcursorCommand(cursor, H.AddCursorDown);\n\t\t\tassert.equal(cursor.getSelections().length, 1);\n\t\t});\n\t});\n\n\ttest('issue #2205: Multi-cursor pastes in reverse order', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'abc',\n\t\t\t\t'def'\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 2, 1, false);\n\t\t\tcursorCommand(cursor, H.AddCursorUp);\n\t\t\tassert.equal(cursor.getSelections().length, 2);\n\n\t\t\tcursorCommand(cursor, H.Paste, { text: '1\\n2' });\n\t\t\tassert.equal(model.getLineContent(1), '1abc');\n\t\t\tassert.equal(model.getLineContent(2), '2def');\n\t\t});\n\t});\n\n\ttest('issue #3071: Investigate why undo stack gets corrupted', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t],\n\t\t\tmode: null,\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\t\t\tmoveTo(cursor, 3, 4, true);\n\n\t\t\tlet isFirst = true;\n\t\t\tmodel.addListener2(EventType.ModelContentChanged, (e) => {\n\t\t\t\tif (isFirst) {\n\t\t\t\t\tisFirst = false;\n\t\t\t\t\tcursorCommand(cursor, H.Type, { text: '\\t' }, null, 'keyboard');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcursorCommand(cursor, H.Tab);\n\t\t\tassert.equal(model.getValue(), [\n\t\t\t\t'\\t just some text'\n\t\t\t].join('\\n'), '001');\n\n\t\t\tcursorCommand(cursor, H.Undo);\n\t\t\tassert.equal(model.getValue(), [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t].join('\\n'), '002');\n\n\t\t\tcursorCommand(cursor, H.Undo);\n\t\t\tassert.equal(model.getValue(), [\n\t\t\t\t'some lines',\n\t\t\t\t'and more lines',\n\t\t\t\t'just some text',\n\t\t\t].join('\\n'), '003');\n\t\t});\n\t});\n\n\ttest('issue #3463: pressing tab adds spaces, but not as many as for a tab', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'function a() {',\n\t\t\t\t'\\tvar a = {',\n\t\t\t\t'\\t\\tx: 3',\n\t\t\t\t'\\t};',\n\t\t\t\t'}',\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF\t}\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 3, 2, false);\n\t\t\tcursorCommand(cursor, H.Tab);\n\t\t\tassert.equal(model.getLineContent(3), '\\t    \\tx: 3');\n\t\t});\n\t});\n\n\ttest('issue #832: deleteWordLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 37, false);\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +5 */', '001');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +5 ', '002');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +', '003');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 ', '004');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= ', '005');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a', '006');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text ', '007');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some ', '008');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just ', '009');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   /* ', '010');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '   ', '011');\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), '', '012');\n\t\t});\n\t});\n\n\ttest('deleteWordStartLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 37, false);\n\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +5 ', '001');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +', '002');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 ', '003');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= ', '004');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a', '005');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text ', '006');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some ', '007');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just ', '008');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   /* ', '009');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '   ', '010');\n\t\t\tdeleteWordStartLeft(cursor); assert.equal(model.getLineContent(1), '', '011');\n\t\t});\n\t});\n\n\ttest('deleteWordEndLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 37, false);\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +5 */', '001');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +5', '002');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3 +', '003');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+= 3', '004');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a+=', '005');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text a', '006');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some text', '007');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just some', '008');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /* Just', '009');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '   /*', '010');\n\t\t\tdeleteWordEndLeft(cursor); assert.equal(model.getLineContent(1), '', '011');\n\t\t});\n\t});\n\n\ttest('issue #832: deleteWordRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5-3 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '/* Just some text a+= 3 +5-3 */  ', '001');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' Just some text a+= 3 +5-3 */  ', '002');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' some text a+= 3 +5-3 */  ', '003');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' text a+= 3 +5-3 */  ', '004');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' a+= 3 +5-3 */  ', '005');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '+= 3 +5-3 */  ', '006');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' 3 +5-3 */  ', '007');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' +5-3 */  ', '008');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '5-3 */  ', '009');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '-3 */  ', '010');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '3 */  ', '011');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), ' */  ', '012');\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), '  ', '013');\n\t\t});\n\t});\n\n\ttest('deleteWordStartRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5-3 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '/* Just some text a+= 3 +5-3 */  ', '001');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), 'Just some text a+= 3 +5-3 */  ', '002');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), 'some text a+= 3 +5-3 */  ', '003');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), 'text a+= 3 +5-3 */  ', '004');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), 'a+= 3 +5-3 */  ', '005');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '+= 3 +5-3 */  ', '006');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '3 +5-3 */  ', '007');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '+5-3 */  ', '008');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '5-3 */  ', '009');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '-3 */  ', '010');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '3 */  ', '011');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '*/  ', '012');\n\t\t\tdeleteWordStartRight(cursor); assert.equal(model.getLineContent(1), '', '013');\n\t\t});\n\t});\n\n\ttest('deleteWordEndRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some text a+= 3 +5-3 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' Just some text a+= 3 +5-3 */  ', '001');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' some text a+= 3 +5-3 */  ', '002');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' text a+= 3 +5-3 */  ', '003');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' a+= 3 +5-3 */  ', '004');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), '+= 3 +5-3 */  ', '005');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' 3 +5-3 */  ', '006');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' +5-3 */  ', '007');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), '5-3 */  ', '008');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), '-3 */  ', '009');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), '3 */  ', '010');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), ' */  ', '011');\n\t\t\tdeleteWordEndRight(cursor); assert.equal(model.getLineContent(1), '  ', '012');\n\t\t});\n\t});\n\n\ttest('issue #832: moveWordLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 50, false);\n\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 '.length + 1, '001');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + '.length + 1, '002');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 '.length + 1, '003');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '004');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '005');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '006');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 '.length + 1, '007');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= '.length + 1, '008');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '009');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text '.length + 1, '010');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   '.length + 1, '011');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   '.length + 1, '012');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just '.length + 1, '013');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   /* '.length + 1, '014');\n\t\t\tmoveWordLeft(cursor); assert.equal(cursor.getPosition().column, '   '.length + 1, '015');\n\t\t});\n\t});\n\n\ttest('moveWordStartLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 50, false);\n\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 '.length + 1, '001');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + '.length + 1, '002');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 '.length + 1, '003');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '004');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '005');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '006');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 '.length + 1, '007');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= '.length + 1, '008');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '009');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text '.length + 1, '010');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   '.length + 1, '011');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   '.length + 1, '012');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just '.length + 1, '013');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   /* '.length + 1, '014');\n\t\t\tmoveWordStartLeft(cursor); assert.equal(cursor.getPosition().column, '   '.length + 1, '015');\n\t\t});\n\t});\n\n\ttest('moveWordEndLeft', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 50, false);\n\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */'.length + 1, '001');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7'.length + 1, '002');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 +'.length + 1, '003');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3'.length + 1, '004');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '005');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '006');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '007');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3'.length + 1, '008');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+='.length + 1, '009');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '010');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text'.length + 1, '011');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more'.length + 1, '012');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just some'.length + 1, '013');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /* Just'.length + 1, '014');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, '   /*'.length + 1, '015');\n\t\t\tmoveWordEndLeft(cursor); assert.equal(cursor.getPosition().column, ''.length + 1, '016');\n\t\t});\n\t});\n\n\ttest('issue #832: moveWordRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /*'.length + 1, '001');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just'.length + 1, '003');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some'.length + 1, '004');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more'.length + 1, '005');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text'.length + 1, '006');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '007');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+='.length + 1, '008');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3'.length + 1, '009');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '010');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '011');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '012');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3'.length + 1, '013');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 +'.length + 1, '014');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7'.length + 1, '015');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */'.length + 1, '016');\n\t\t\tmoveWordRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */  '.length + 1, '016');\n\n\t\t});\n\t});\n\n\ttest('moveWordEndRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /*'.length + 1, '001');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just'.length + 1, '003');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some'.length + 1, '004');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more'.length + 1, '005');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text'.length + 1, '006');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '007');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+='.length + 1, '008');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3'.length + 1, '009');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '010');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '011');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '012');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3'.length + 1, '013');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 +'.length + 1, '014');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7'.length + 1, '015');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */'.length + 1, '016');\n\t\t\tmoveWordEndRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */  '.length + 1, '016');\n\n\t\t});\n\t});\n\n\ttest('moveWordStartRight', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   '.length + 1, '001');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* '.length + 1, '002');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just '.length + 1, '003');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   '.length + 1, '004');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   '.length + 1, '005');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text '.length + 1, '006');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a'.length + 1, '007');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= '.length + 1, '008');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 '.length + 1, '009');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +'.length + 1, '010');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5'.length + 1, '011');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-'.length + 1, '012');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 '.length + 1, '013');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + '.length + 1, '014');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 '.length + 1, '015');\n\t\t\tmoveWordStartRight(cursor); assert.equal(cursor.getPosition().column, '   /* Just some   more   text a+= 3 +5-3 + 7 */  '.length + 1, '016');\n\t\t});\n\t});\n\n\ttest('issue #832: word right', () => {\n\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'   /* Just some   more   text a+= 3 +5-3 + 7 */  '\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 1, false);\n\n\t\t\tfunction assertWordRight(col, expectedCol) {\n\t\t\t\tcursorCommand(cursor, col === 1 ? H.WordSelect : H.WordSelectDrag, {\n\t\t\t\t\tposition: {\n\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\tcolumn: col\n\t\t\t\t\t},\n\t\t\t\t\tpreference: 'right'\n\t\t\t\t});\n\n\t\t\t\tassert.equal(cursor.getSelection().startColumn, 1, 'TEST FOR ' + col);\n\t\t\t\tassert.equal(cursor.getSelection().endColumn, expectedCol, 'TEST FOR ' + col);\n\t\t\t}\n\n\t\t\tassertWordRight( 1, '   '.length + 1);\n\t\t\tassertWordRight( 2, '   '.length + 1);\n\t\t\tassertWordRight( 3, '   '.length + 1);\n\t\t\tassertWordRight( 4, '   '.length + 1);\n\t\t\tassertWordRight( 5, '   /'.length + 1);\n\t\t\tassertWordRight( 6, '   /*'.length + 1);\n\t\t\tassertWordRight( 7, '   /* '.length + 1);\n\t\t\tassertWordRight( 8, '   /* Just'.length + 1);\n\t\t\tassertWordRight( 9, '   /* Just'.length + 1);\n\t\t\tassertWordRight(10, '   /* Just'.length + 1);\n\t\t\tassertWordRight(11, '   /* Just'.length + 1);\n\t\t\tassertWordRight(12, '   /* Just '.length + 1);\n\t\t\tassertWordRight(13, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(14, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(15, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(16, '   /* Just some'.length + 1);\n\t\t\tassertWordRight(17, '   /* Just some '.length + 1);\n\t\t\tassertWordRight(18, '   /* Just some  '.length + 1);\n\t\t\tassertWordRight(19, '   /* Just some   '.length + 1);\n\t\t\tassertWordRight(20, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(21, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(22, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(23, '   /* Just some   more'.length + 1);\n\t\t\tassertWordRight(24, '   /* Just some   more '.length + 1);\n\t\t\tassertWordRight(25, '   /* Just some   more  '.length + 1);\n\t\t\tassertWordRight(26, '   /* Just some   more   '.length + 1);\n\t\t\tassertWordRight(27, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(28, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(29, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(30, '   /* Just some   more   text'.length + 1);\n\t\t\tassertWordRight(31, '   /* Just some   more   text '.length + 1);\n\t\t\tassertWordRight(32, '   /* Just some   more   text a'.length + 1);\n\t\t\tassertWordRight(33, '   /* Just some   more   text a+'.length + 1);\n\t\t\tassertWordRight(34, '   /* Just some   more   text a+='.length + 1);\n\t\t\tassertWordRight(35, '   /* Just some   more   text a+= '.length + 1);\n\t\t\tassertWordRight(36, '   /* Just some   more   text a+= 3'.length + 1);\n\t\t\tassertWordRight(37, '   /* Just some   more   text a+= 3 '.length + 1);\n\t\t\tassertWordRight(38, '   /* Just some   more   text a+= 3 +'.length + 1);\n\t\t\tassertWordRight(39, '   /* Just some   more   text a+= 3 +5'.length + 1);\n\t\t\tassertWordRight(40, '   /* Just some   more   text a+= 3 +5-'.length + 1);\n\t\t\tassertWordRight(41, '   /* Just some   more   text a+= 3 +5-3'.length + 1);\n\t\t\tassertWordRight(42, '   /* Just some   more   text a+= 3 +5-3 '.length + 1);\n\t\t\tassertWordRight(43, '   /* Just some   more   text a+= 3 +5-3 +'.length + 1);\n\t\t\tassertWordRight(44, '   /* Just some   more   text a+= 3 +5-3 + '.length + 1);\n\t\t\tassertWordRight(45, '   /* Just some   more   text a+= 3 +5-3 + 7'.length + 1);\n\t\t\tassertWordRight(46, '   /* Just some   more   text a+= 3 +5-3 + 7 '.length + 1);\n\t\t\tassertWordRight(47, '   /* Just some   more   text a+= 3 +5-3 + 7 *'.length + 1);\n\t\t\tassertWordRight(48, '   /* Just some   more   text a+= 3 +5-3 + 7 */'.length + 1);\n\t\t\tassertWordRight(49, '   /* Just some   more   text a+= 3 +5-3 + 7 */ '.length + 1);\n\t\t\tassertWordRight(50, '   /* Just some   more   text a+= 3 +5-3 + 7 */  '.length + 1);\n\t\t});\n\t});\n\n\ttest('issue #3882 (1): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'A line with text.',\n\t\t\t\t'   And another one'\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 18, false);\n\t\t\tdeleteWordRight(cursor); assert.equal(model.getLineContent(1), 'A line with text.   And another one', '001');\n\t\t});\n\t});\n\n\ttest('issue #3882 (2): Ctrl+Delete removing entire line when used at the end of line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'A line with text.',\n\t\t\t\t'   And another one'\n\t\t\t],\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 2, 1, false);\n\t\t\tdeleteWordLeft(cursor); assert.equal(model.getLineContent(1), 'A line with text.   And another one', '001');\n\t\t});\n\t});\n});\n\nsuite('Editor Controller - Cursor Configuration', () => {\n\n\ttest('Cursor honors insertSpaces configuration on new line', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'    \\tMy First Line\\t ',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(1, 21) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n' }, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(1), '    \\tMy First Line\\t ');\n\t\t\tassert.equal(model.getLineContent(2), '        ');\n\t\t});\n\t});\n\n\ttest('Cursor honors insertSpaces configuration on tab', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'    \\tMy First Line\\t ',\n\t\t\t\t'My Second Line123',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'1'\n\t\t\t],\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 13, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\t// Tab on column 1\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 1) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), '             My Second Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 2\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 2) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'M            y Second Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 3\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 3) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My            Second Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 4\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 4) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My           Second Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 5\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 5) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My S         econd Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 5\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 5) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My S         econd Line123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 13\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 13) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Li ne123');\n\t\t\tcursorCommand(cursor, H.Undo, null, null, 'keyboard');\n\n\t\t\t// Tab on column 14\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Line123');\n\t\t\tcursorCommand(cursor, H.MoveTo, { position: new Position(2, 14) }, null, 'keyboard');\n\t\t\tcursorCommand(cursor, H.Tab, null, null, 'keyboard');\n\t\t\tassert.equal(model.getLineContent(2), 'My Second Lin             e123');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 1', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thello'\n\t\t\t],\n\t\t\tmode: new OnEnterMode(IndentAction.Indent),\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 7, false);\n\t\t\tcursorEqual(cursor, 1, 7, 1, 7);\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n' }, null, 'keyboard');\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.CRLF), '\\thello\\r\\n        ');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 2', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thello'\n\t\t\t],\n\t\t\tmode: new OnEnterMode(IndentAction.None),\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 7, false);\n\t\t\tcursorEqual(cursor, 1, 7, 1, 7);\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n' }, null, 'keyboard');\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.CRLF), '\\thello\\r\\n    ');\n\t\t});\n\t});\n\n\ttest('Enter auto-indents with insertSpaces setting 3', () => {\n\t\tusingCursor({\n\t\t\ttext: [\n\t\t\t\t'\\thell()'\n\t\t\t],\n\t\t\tmode: new OnEnterMode(IndentAction.IndentOutdent),\n\t\t\tmodelOpts: { insertSpaces: true, tabSize: 4, detectIndentation: false, defaultEOL: DefaultEndOfLine.LF }\n\t\t}, (model, cursor) => {\n\t\t\tmoveTo(cursor, 1, 7, false);\n\t\t\tcursorEqual(cursor, 1, 7, 1, 7);\n\n\t\t\tcursorCommand(cursor, H.Type, { text: '\\n' }, null, 'keyboard');\n\t\t\tassert.equal(model.getValue(EndOfLinePreference.CRLF), '\\thell(\\r\\n        \\r\\n    )');\n\t\t});\n\t});\n\n\ttest('Insert line before', () => {\n\t\tlet testInsertLineBefore = (lineNumber:number, column:number, callback:(model:Model, cursor:Cursor) => void) => {\n\t\t\tusingCursor({\n\t\t\t\ttext: [\n\t\t\t\t\t'First line',\n\t\t\t\t\t'Second line',\n\t\t\t\t\t'Third line'\n\t\t\t\t],\n\t\t\t}, (model, cursor) => {\n\t\t\t\tmoveTo(cursor, lineNumber, column, false);\n\t\t\t\tcursorEqual(cursor, lineNumber, column, lineNumber, column);\n\n\t\t\t\tcursorCommand(cursor, H.LineInsertBefore, null, null, 'keyboard');\n\t\t\t\tcallback(model, cursor);\n\t\t\t});\n\t\t};\n\n\t\ttestInsertLineBefore(1, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 1, 1, 1, 1);\n\t\t\tassert.equal(model.getLineContent(1), '');\n\t\t\tassert.equal(model.getLineContent(2), 'First line');\n\t\t\tassert.equal(model.getLineContent(3), 'Second line');\n\t\t\tassert.equal(model.getLineContent(4), 'Third line');\n\t\t});\n\n\t\ttestInsertLineBefore(2, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 2, 1, 2, 1);\n\t\t\tassert.equal(model.getLineContent(1), 'First line');\n\t\t\tassert.equal(model.getLineContent(2), '');\n\t\t\tassert.equal(model.getLineContent(3), 'Second line');\n\t\t\tassert.equal(model.getLineContent(4), 'Third line');\n\t\t});\n\n\t\ttestInsertLineBefore(3, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 3, 1, 3, 1);\n\t\t\tassert.equal(model.getLineContent(1), 'First line');\n\t\t\tassert.equal(model.getLineContent(2), 'Second line');\n\t\t\tassert.equal(model.getLineContent(3), '');\n\t\t\tassert.equal(model.getLineContent(4), 'Third line');\n\t\t});\n\t});\n\n\ttest('Insert line after', () => {\n\t\tlet testInsertLineAfter = (lineNumber:number, column:number, callback:(model:Model, cursor:Cursor) => void) => {\n\t\t\tusingCursor({\n\t\t\t\ttext: [\n\t\t\t\t\t'First line',\n\t\t\t\t\t'Second line',\n\t\t\t\t\t'Third line'\n\t\t\t\t],\n\t\t\t}, (model, cursor) => {\n\t\t\t\tmoveTo(cursor, lineNumber, column, false);\n\t\t\t\tcursorEqual(cursor, lineNumber, column, lineNumber, column);\n\n\t\t\t\tcursorCommand(cursor, H.LineInsertAfter, null, null, 'keyboard');\n\t\t\t\tcallback(model, cursor);\n\t\t\t});\n\t\t};\n\n\t\ttestInsertLineAfter(1, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 2, 1, 2, 1);\n\t\t\tassert.equal(model.getLineContent(1), 'First line');\n\t\t\tassert.equal(model.getLineContent(2), '');\n\t\t\tassert.equal(model.getLineContent(3), 'Second line');\n\t\t\tassert.equal(model.getLineContent(4), 'Third line');\n\t\t});\n\n\t\ttestInsertLineAfter(2, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 3, 1, 3, 1);\n\t\t\tassert.equal(model.getLineContent(1), 'First line');\n\t\t\tassert.equal(model.getLineContent(2), 'Second line');\n\t\t\tassert.equal(model.getLineContent(3), '');\n\t\t\tassert.equal(model.getLineContent(4), 'Third line');\n\t\t});\n\n\t\ttestInsertLineAfter(3, 3, (model, cursor) => {\n\t\t\tcursorEqual(cursor, 4, 1, 4, 1);\n\t\t\tassert.equal(model.getLineContent(1), 'First line');\n\t\t\tassert.equal(model.getLineContent(2), 'Second line');\n\t\t\tassert.equal(model.getLineContent(3), 'Third line');\n\t\t\tassert.equal(model.getLineContent(4), '');\n\t\t});\n\t});\n});\n\ninterface ICursorOpts {\n\ttext: string[];\n\tmode?: IMode;\n\tmodelOpts?: ITextModelCreationOptions;\n}\n\nfunction usingCursor(opts:ICursorOpts, callback:(model:Model, cursor:Cursor)=>void): void {\n\tlet model = new Model(opts.text.join('\\n'), opts.modelOpts || Model.DEFAULT_CREATION_OPTIONS, opts.mode);\n\tlet config = new MockConfiguration(null);\n\tlet cursor = new Cursor(1, config, model, null, false);\n\n\tcallback(model, cursor);\n\n\tcursor.dispose();\n\tconfig.dispose();\n\tmodel.dispose();\n}\n"]}