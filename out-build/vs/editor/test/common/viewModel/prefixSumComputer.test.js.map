{"version":3,"file":"vs/editor/test/common/viewModel/prefixSumComputer.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/viewModel/prefixSumComputer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {PrefixSumComputer, PrefixSumIndexOfResult} from 'vs/editor/common/viewModel/prefixSumComputer';\n\nsuite('Editor ViewModel - PrefixSumComputer', () => {\n\n\ttest('PrefixSumComputer', () => {\n\t\tlet indexOfResult:PrefixSumIndexOfResult;\n\n\t\tvar psc = new PrefixSumComputer([1, 1, 2, 1, 3]);\n\t\tassert.equal(psc.getTotalValue(), 8);\n\t\tassert.equal(psc.getAccumulatedValue(-1), 0);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 2);\n\t\tassert.equal(psc.getAccumulatedValue(2), 4);\n\t\tassert.equal(psc.getAccumulatedValue(3), 5);\n\t\tassert.equal(psc.getAccumulatedValue(4), 8);\n\t\tindexOfResult = psc.getIndexOf(0);\n\t\tassert.equal(indexOfResult.index, 0);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(1);\n\t\tassert.equal(indexOfResult.index, 1);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(2);\n\t\tassert.equal(indexOfResult.index, 2);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(3);\n\t\tassert.equal(indexOfResult.index, 2);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(4);\n\t\tassert.equal(indexOfResult.index, 3);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(5);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(6);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(7);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 2);\n\t\tindexOfResult = psc.getIndexOf(8);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 3);\n\n\t\t// [1, 2, 2, 1, 3]\n\t\tpsc.changeValue(1, 2);\n\t\tassert.equal(psc.getTotalValue(), 9);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 3);\n\t\tassert.equal(psc.getAccumulatedValue(2), 5);\n\t\tassert.equal(psc.getAccumulatedValue(3), 6);\n\t\tassert.equal(psc.getAccumulatedValue(4), 9);\n\n\t\t// [1, 0, 2, 1, 3]\n\t\tpsc.changeValue(1, 0);\n\t\tassert.equal(psc.getTotalValue(), 7);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 1);\n\t\tassert.equal(psc.getAccumulatedValue(2), 3);\n\t\tassert.equal(psc.getAccumulatedValue(3), 4);\n\t\tassert.equal(psc.getAccumulatedValue(4), 7);\n\t\tindexOfResult = psc.getIndexOf(0);\n\t\tassert.equal(indexOfResult.index, 0);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(1);\n\t\tassert.equal(indexOfResult.index, 2);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(2);\n\t\tassert.equal(indexOfResult.index, 2);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(3);\n\t\tassert.equal(indexOfResult.index, 3);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(4);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(5);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(6);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 2);\n\t\tindexOfResult = psc.getIndexOf(7);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 3);\n\n\t\t// [1, 0, 0, 1, 3]\n\t\tpsc.changeValue(2, 0);\n\t\tassert.equal(psc.getTotalValue(), 5);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 1);\n\t\tassert.equal(psc.getAccumulatedValue(2), 1);\n\t\tassert.equal(psc.getAccumulatedValue(3), 2);\n\t\tassert.equal(psc.getAccumulatedValue(4), 5);\n\t\tindexOfResult = psc.getIndexOf(0);\n\t\tassert.equal(indexOfResult.index, 0);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(1);\n\t\tassert.equal(indexOfResult.index, 3);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(2);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(3);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(4);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 2);\n\t\tindexOfResult = psc.getIndexOf(5);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 3);\n\n\t\t// [1, 0, 0, 0, 3]\n\t\tpsc.changeValue(3, 0);\n\t\tassert.equal(psc.getTotalValue(), 4);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 1);\n\t\tassert.equal(psc.getAccumulatedValue(2), 1);\n\t\tassert.equal(psc.getAccumulatedValue(3), 1);\n\t\tassert.equal(psc.getAccumulatedValue(4), 4);\n\t\tindexOfResult = psc.getIndexOf(0);\n\t\tassert.equal(indexOfResult.index, 0);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(1);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(2);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t\tindexOfResult = psc.getIndexOf(3);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 2);\n\t\tindexOfResult = psc.getIndexOf(4);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 3);\n\n\t\t// [1, 1, 0, 1, 1]\n\t\tpsc.changeValue(1, 1);\n\t\tpsc.changeValue(3, 1);\n\t\tpsc.changeValue(4, 1);\n\t\tassert.equal(psc.getTotalValue(), 4);\n\t\tassert.equal(psc.getAccumulatedValue(0), 1);\n\t\tassert.equal(psc.getAccumulatedValue(1), 2);\n\t\tassert.equal(psc.getAccumulatedValue(2), 2);\n\t\tassert.equal(psc.getAccumulatedValue(3), 3);\n\t\tassert.equal(psc.getAccumulatedValue(4), 4);\n\t\tindexOfResult = psc.getIndexOf(0);\n\t\tassert.equal(indexOfResult.index, 0);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(1);\n\t\tassert.equal(indexOfResult.index, 1);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(2);\n\t\tassert.equal(indexOfResult.index, 3);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(3);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 0);\n\t\tindexOfResult = psc.getIndexOf(4);\n\t\tassert.equal(indexOfResult.index, 4);\n\t\tassert.equal(indexOfResult.remainder, 1);\n\t});\n});\n"]}