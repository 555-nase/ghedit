{"version":3,"file":"vs/editor/test/common/viewModel/characterHardWrappingLineMapper.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/viewModel/characterHardWrappingLineMapper.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {WrappingIndent} from 'vs/editor/common/editorCommon';\nimport {CharacterHardWrappingLineMapperFactory} from 'vs/editor/common/viewModel/characterHardWrappingLineMapper';\nimport {ILineMapperFactory, ILineMapping, OutputPosition} from 'vs/editor/common/viewModel/splitLinesCollection';\n\nfunction safeGetOutputLineCount(mapper:ILineMapping): number {\n\tif (!mapper) {\n\t\treturn 1;\n\t}\n\treturn mapper.getOutputLineCount();\n}\n\nfunction safeGetOutputPositionOfInputOffset(mapper:ILineMapping, inputOffset:number): OutputPosition {\n\tif (!mapper) {\n\t\treturn new OutputPosition(0, inputOffset);\n\t}\n\treturn mapper.getOutputPositionOfInputOffset(inputOffset);\n}\n\nfunction safeGetInputOffsetOfOutputPosition(mapper:ILineMapping, outputLineIndex:number, outputOffset:number): number {\n\tif (!mapper) {\n\t\treturn outputOffset;\n\t}\n\treturn mapper.getInputOffsetOfOutputPosition(outputLineIndex, outputOffset);\n}\n\nfunction assertMappingIdentity(mapper:ILineMapping, offset:number, expectedLineIndex:number) {\n\n\tlet result = safeGetOutputPositionOfInputOffset(mapper, offset);\n\tassert.ok(result.outputLineIndex !== -1);\n\tassert.ok(result.outputOffset !== -1);\n\tassert.equal(result.outputLineIndex, expectedLineIndex);\n\n\tlet actualOffset = safeGetInputOffsetOfOutputPosition(mapper, result.outputLineIndex, result.outputOffset);\n\tassert.equal(actualOffset, offset);\n}\n\nfunction assertLineMapping(factory:ILineMapperFactory, tabSize:number, breakAfter:number, annotatedText:string) {\n\n\tlet rawText = '';\n\tlet currentLineIndex = 0;\n\tlet lineIndices:number[] = [];\n\tfor (let i = 0, len = annotatedText.length; i < len; i++) {\n\t\tif (annotatedText.charAt(i) === '|') {\n\t\t\tcurrentLineIndex++;\n\t\t} else {\n\t\t\trawText += annotatedText.charAt(i);\n\t\t\tlineIndices[rawText.length - 1] = currentLineIndex;\n\t\t}\n\t}\n\n\tvar mapper = factory.createLineMapping(rawText, tabSize, breakAfter, 2, WrappingIndent.None);\n\n\tassert.equal(safeGetOutputLineCount(mapper), (lineIndices.length > 0 ? lineIndices[lineIndices.length - 1] + 1 : 1));\n\tfor (let i = 0, len = rawText.length; i < len; i++) {\n\t\tassertMappingIdentity(mapper, i, lineIndices[i]);\n\t}\n}\n\nsuite('Editor ViewModel - CharacterHardWrappingLineMapper', () => {\n\ttest('CharacterHardWrappingLineMapper', () => {\n\n\t\tlet factory = new CharacterHardWrappingLineMapperFactory('(', ')', '.');\n\n\t\t// Empty string\n\t\tassertLineMapping(factory, 4, 5, '');\n\n\t\t// No wrapping if not necessary\n\t\tassertLineMapping(factory, 4, 5, 'aaa');\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa');\n\t\tassertLineMapping(factory, 4, -1, 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');\n\n\t\t// Acts like hard wrapping if no char found\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|a');\n\n\t\t// Honors obtrusive wrapping character\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|.');\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|a.|aaa.|aa');\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|a..|aaa.|aa');\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|a...|aaa.|aa');\n\t\tassertLineMapping(factory, 4, 5, 'aaaaa|a....|aaa.|aa');\n\n\t\t// Honors tabs when computing wrapping position\n\t\tassertLineMapping(factory, 4, 5, '\\t');\n\t\tassertLineMapping(factory, 4, 5, '\\ta|aa');\n\t\tassertLineMapping(factory, 4, 5, '\\ta|\\ta|a');\n\t\tassertLineMapping(factory, 4, 5, 'aa\\ta');\n\t\tassertLineMapping(factory, 4, 5, 'aa\\ta|a');\n\n\t\t// Honors wrapping before characters (& gives it priority)\n\t\tassertLineMapping(factory, 4, 5, 'aaa.|aa');\n\t\tassertLineMapping(factory, 4, 5, 'aaa|(.aa');\n\n\t\t// Honors wrapping after characters (& gives it priority)\n\t\tassertLineMapping(factory, 4, 5, 'aaa))|).aaa');\n\t\tassertLineMapping(factory, 4, 5, 'aaa))|)|.aaaa');\n\t\tassertLineMapping(factory, 4, 5, 'aaa)|()|.aaa');\n\t\tassertLineMapping(factory, 4, 5, 'aaa(|()|.aaa');\n\t\tassertLineMapping(factory, 4, 5, 'aa.(|()|.aaa');\n\t\tassertLineMapping(factory, 4, 5, 'aa.|(.)|.aaa');\n\t});\n\ttest('CharacterHardWrappingLineMapper - CJK and Kinsoku Shori', () => {\n\t\tvar factory = new CharacterHardWrappingLineMapperFactory('(', ')', '.');\n\t\tassertLineMapping(factory, 4, 5, 'aa \\u5b89|\\u5b89');\n\t\tassertLineMapping(factory, 4, 5, '\\u3042 \\u5b89|\\u5b89');\n\t\tassertLineMapping(factory, 4, 5, '\\u3042\\u3042|\\u5b89\\u5b89');\n\t\tassertLineMapping(factory, 4, 5, 'aa |\\u5b89)\\u5b89|\\u5b89');\n\t\tassertLineMapping(factory, 4, 5, 'aa \\u3042|\\u5b89\\u3042)|\\u5b89');\n\t\tassertLineMapping(factory, 4, 5, 'aa |(\\u5b89aa|\\u5b89');\n\t});\n});\n"]}