{"version":3,"file":"vs/editor/test/common/modes/languageSelector.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/modes/languageSelector.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport URI from 'vs/base/common/uri';\nimport {score} from 'vs/editor/common/modes/languageSelector';\n\nsuite('LanguageSelector', function() {\n\n\tlet model = {\n\t\tlanguage: 'farboo',\n\t\turi: URI.parse('file:///testbed/file.fb')\n\t};\n\n\ttest('score, invalid selector', function() {\n\t\tassert.equal(score({}, model.uri, model.language), 0);\n\t\tassert.equal(score(undefined, model.uri, model.language), undefined);\n\t\tassert.equal(score(null, model.uri, model.language), undefined);\n\t\tassert.equal(score('', model.uri, model.language), 0);\n\t});\n\n\ttest('score, any language', function() {\n\t\tassert.equal(score({ language: '*'}, model.uri, model.language), 5);\n\t\tassert.equal(score('*', model.uri, model.language), 5);\n\t});\n\n\ttest('score, filter', function() {\n\t\tassert.equal(score('farboo', model.uri, model.language), 10);\n\t\tassert.equal(score({ language: 'farboo'}, model.uri, model.language), 10);\n\t\tassert.equal(score({ language: 'farboo', scheme: 'file' }, model.uri, model.language), 20);\n\t\tassert.equal(score({ language: 'farboo', scheme: 'http' }, model.uri, model.language), 0);\n\n\t\tassert.equal(score({ pattern: '**/*.fb' }, model.uri, model.language), 5);\n\t\t// assert.equal(score({ pattern: '/testbed/file.fb' }, model.uri, model.language), 10); fails on windows\n\t});\n\n\ttest('score, max(filters)', function() {\n\t\tlet match = { language: 'farboo', scheme: 'file' };\n\t\tlet fail = { language: 'farboo', scheme: 'http' };\n\n\t\tassert.equal(score(match, model.uri, model.language), 20);\n\t\tassert.equal(score(fail, model.uri, model.language), 0);\n\t\tassert.equal(score([match, fail], model.uri, model.language), 20);\n\t\tassert.equal(score(['farboo', '*'], model.uri, model.language), 10);\n\t\tassert.equal(score(['*', 'farboo'], model.uri, model.language), 10);\n\t});\n});"]}