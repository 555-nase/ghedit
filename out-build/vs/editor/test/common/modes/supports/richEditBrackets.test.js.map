{"version":3,"file":"vs/editor/test/common/modes/supports/richEditBrackets.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/modes/supports/richEditBrackets.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {BracketsUtils} from 'vs/editor/common/modes/supports/richEditBrackets';\nimport {IEditorRange} from 'vs/editor/common/editorCommon';\n\nsuite('richEditBrackets', () => {\n\n\tfunction findPrevBracketInToken(reversedBracketRegex:RegExp, lineText:string, currentTokenStart:number, currentTokenEnd:number): IEditorRange {\n\t\treturn BracketsUtils.findPrevBracketInToken(reversedBracketRegex, 1, lineText, currentTokenStart, currentTokenEnd);\n\t}\n\n\tfunction findNextBracketInToken(forwardBracketRegex:RegExp, lineText:string, currentTokenStart:number, currentTokenEnd:number): IEditorRange {\n\t\treturn BracketsUtils.findNextBracketInToken(forwardBracketRegex, 1, lineText, currentTokenStart, currentTokenEnd);\n\t}\n\n\ttest('findPrevBracketInToken one char 1', () => {\n\t\tlet result = findPrevBracketInToken(/(\\{)|(\\})/i, '{', 0, 1);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 2);\n\t});\n\n\ttest('findPrevBracketInToken one char 2', () => {\n\t\tlet result = findPrevBracketInToken(/(\\{)|(\\})/i, '{{', 0, 1);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 2);\n\t});\n\n\ttest('findPrevBracketInToken one char 3', () => {\n\t\tlet result = findPrevBracketInToken(/(\\{)|(\\})/i, '{hello world!', 0, 13);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 2);\n\t});\n\n\ttest('findPrevBracketInToken more chars 1', () => {\n\t\tlet result = findPrevBracketInToken(/(olleh)/i, 'hello world!', 0, 12);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 6);\n\t});\n\n\ttest('findPrevBracketInToken more chars 2', () => {\n\t\tlet result = findPrevBracketInToken(/(olleh)/i, 'hello world!', 0, 5);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 6);\n\t});\n\n\ttest('findPrevBracketInToken more chars 3', () => {\n\t\tlet result = findPrevBracketInToken(/(olleh)/i, ' hello world!', 0, 6);\n\t\tassert.equal(result.startColumn, 2);\n\t\tassert.equal(result.endColumn, 7);\n\t});\n\n\ttest('findNextBracketInToken one char', () => {\n\t\tlet result = findNextBracketInToken(/(\\{)|(\\})/i, '{', 0, 1);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 2);\n\t});\n\n\ttest('findNextBracketInToken more chars', () => {\n\t\tlet result = findNextBracketInToken(/(world)/i, 'hello world!', 0, 12);\n\t\tassert.equal(result.startColumn, 7);\n\t\tassert.equal(result.endColumn, 12);\n\t});\n\n\ttest('issue #3894: [Handlebars] Curly braces edit issues', () => {\n\t\tlet result = findPrevBracketInToken(/(\\-\\-!<)|(>\\-\\-)|(\\{\\{)|(\\}\\})/i, '{{asd}}', 0, 2);\n\t\tassert.equal(result.startColumn, 1);\n\t\tassert.equal(result.endColumn, 3);\n\t});\n\n});"]}