{"version":3,"file":"vs/editor/test/common/modes/supports/onEnter.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/modes/supports/onEnter.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {IndentAction, CharacterPair} from 'vs/editor/common/modes';\nimport {OnEnterSupport} from 'vs/editor/common/modes/supports/onEnter';\n\nsuite('OnEnter', () => {\n\n\ttest('uses indentationRules', () => {\n\t\tvar support = new OnEnterSupport(null, {\n\t\t\tindentationRules: {\n\t\t\t\tdecreaseIndentPattern: /^\\s*((?!\\S.*\\/[*]).*[*]\\/\\s*)?[})\\]]|^\\s*(case\\b.*|default):\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$/,\n\t\t\t\tincreaseIndentPattern: /(\\{[^}\"']*|\\([^)\"']*|\\[[^\\]\"']*|^\\s*(\\{\\}|\\(\\)|\\[\\]|(case\\b.*|default):))\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$/,\n\t\t\t\tindentNextLinePattern: /^\\s*(for|while|if|else)\\b(?!.*[;{}]\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)/,\n\t\t\t\tunIndentedLinePattern: /^(?!.*([;{}]|\\S:)\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!.*(\\{[^}\"']*|\\([^)\"']*|\\[[^\\]\"']*|^\\s*(\\{\\}|\\(\\)|\\[\\]|(case\\b.*|default):))\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!^\\s*((?!\\S.*\\/[*]).*[*]\\/\\s*)?[})\\]]|^\\s*(case\\b.*|default):\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$)(?!^\\s*(for|while|if|else)\\b(?!.*[;{}]\\s*(\\/\\/.*|\\/[*].*[*]\\/\\s*)?$))/\n\t\t\t}\n\t\t});\n\n\t\tvar testIndentAction = (oneLineAboveText:string, beforeText:string, afterText:string, expected:IndentAction) => {\n\t\t\tvar actual = support._actualOnEnter(oneLineAboveText, beforeText, afterText);\n\t\t\tif (expected === IndentAction.None) {\n\t\t\t\tassert.equal(actual, null);\n\t\t\t} else {\n\t\t\t\tassert.equal(actual.indentAction, expected);\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('', 'case', '', IndentAction.None);\n\t\ttestIndentAction('', 'case:', '', IndentAction.Indent);\n\t\ttestIndentAction('', 'if (true) {', '', IndentAction.Indent);\n\t\ttestIndentAction('', 'if (true)', '', IndentAction.Indent);\n\t\ttestIndentAction('', ' ', '}', IndentAction.Outdent);\n\t\ttestIndentAction('if(true)', '\\treturn false', '', IndentAction.Outdent);\n\t});\n\n\ttest('uses brackets', () => {\n\t\tvar brackets: CharacterPair[] = [\n\t\t\t['(', ')'],\n\t\t\t['begin', 'end']\n\t\t];\n\t\tvar support = new OnEnterSupport(null, {\n\t\t\tbrackets: brackets\n\t\t});\n\t\tvar testIndentAction = (beforeText:string, afterText:string, expected:IndentAction) => {\n\t\t\tvar actual = support._actualOnEnter('', beforeText, afterText);\n\t\t\tif (expected === IndentAction.None) {\n\t\t\t\tassert.equal(actual, null);\n\t\t\t} else {\n\t\t\t\tassert.equal(actual.indentAction, expected);\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('a', '', IndentAction.None);\n\t\ttestIndentAction('', 'b', IndentAction.None);\n\t\ttestIndentAction('(', 'b', IndentAction.Indent);\n\t\ttestIndentAction('a', ')', IndentAction.None);\n\t\ttestIndentAction('begin', 'ending', IndentAction.Indent);\n\t\ttestIndentAction('abegin', 'end', IndentAction.None);\n\t\ttestIndentAction('begin', ')', IndentAction.Indent);\n\t\ttestIndentAction('begin', 'end', IndentAction.IndentOutdent);\n\t\ttestIndentAction('begin ', ' end', IndentAction.IndentOutdent);\n\t\ttestIndentAction(' begin', 'end//as', IndentAction.IndentOutdent);\n\t\ttestIndentAction('(', ')', IndentAction.IndentOutdent);\n\t\ttestIndentAction('( ', ')', IndentAction.IndentOutdent);\n\t\ttestIndentAction('a(', ')b', IndentAction.IndentOutdent);\n\n\t\ttestIndentAction('(', '', IndentAction.Indent);\n\t\ttestIndentAction('(', 'foo', IndentAction.Indent);\n\t\ttestIndentAction('begin', 'foo', IndentAction.Indent);\n\t\ttestIndentAction('begin', '', IndentAction.Indent);\n\t});\n\n\ttest('uses regExpRules', () => {\n\t\tvar support = new OnEnterSupport(null, {\n\t\t\tregExpRules: [\n\t\t\t\t{\n\t\t\t\t\tbeforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n\t\t\t\t\tafterText: /^\\s*\\*\\/$/,\n\t\t\t\t\taction: { indentAction: IndentAction.IndentOutdent, appendText: ' * ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbeforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, appendText: ' * ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbeforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, appendText: '* ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbeforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, removeText: 1 }\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tvar testIndentAction = (beforeText:string, afterText:string, expectedIndentAction:IndentAction, expectedAppendText:string, removeText:number = 0) => {\n\t\t\tvar actual = support._actualOnEnter('', beforeText, afterText);\n\t\t\tif (expectedIndentAction === null) {\n\t\t\t\tassert.equal(actual, null, 'isNull:' + beforeText);\n\t\t\t} else {\n\t\t\t\tassert.equal(actual !== null, true, 'isNotNull:' + beforeText);\n\t\t\t\tassert.equal(actual.indentAction, expectedIndentAction, 'indentAction:' + beforeText);\n\t\t\t\tif (expectedAppendText !== null) {\n\t\t\t\t\tassert.equal(actual.appendText, expectedAppendText, 'appendText:' + beforeText);\n\t\t\t\t}\n\t\t\t\tif (removeText !== 0) {\n\t\t\t\t\tassert.equal(actual.removeText, removeText, 'removeText:' + beforeText);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\ttestIndentAction('\\t/**', ' */', IndentAction.IndentOutdent, ' * ');\n\t\ttestIndentAction('\\t/**', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('\\t/** * / * / * /', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('\\t/** /*', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('/**', '', IndentAction.None, ' * ');\n\t\ttestIndentAction('\\t/**/', '', null, null);\n\t\ttestIndentAction('\\t/***/', '', null, null);\n\t\ttestIndentAction('\\t/*******/', '', null, null);\n\t\ttestIndentAction('\\t/** * * * * */', '', null, null);\n\t\ttestIndentAction('\\t/** */', '', null, null);\n\t\ttestIndentAction('\\t/** asdfg */', '', null, null);\n\t\ttestIndentAction('\\t/* asdfg */', '', null, null);\n\t\ttestIndentAction('\\t/* asdfg */', '', null, null);\n\t\ttestIndentAction('\\t/** asdfg */', '', null, null);\n\t\ttestIndentAction('*/', '', null, null);\n\t\ttestIndentAction('\\t/*', '', null, null);\n\t\ttestIndentAction('\\t*', '', null, null);\n\t\ttestIndentAction('\\t *', '', IndentAction.None, '* ');\n\t\ttestIndentAction('\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('\\t * */', '', null, null);\n\t\ttestIndentAction('\\t * * / * / * / */', '', null, null);\n\t\ttestIndentAction('\\t * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * asdfsfagadfg', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * asdfsfagadfg * * * ', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * asdfsfagadfg * / * / * /', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' * asdfsfagadfg * / * / * /*', '', IndentAction.None, '* ');\n\t\ttestIndentAction(' */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('\\t\\t */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('   */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('     */', '', IndentAction.None, null, 1);\n\t\ttestIndentAction('\\t     */', '', IndentAction.None, null, 1);\n\t});\n});"]}