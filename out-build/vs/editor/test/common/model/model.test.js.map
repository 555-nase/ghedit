{"version":3,"file":"vs/editor/test/common/model/model.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/model/model.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {EventType, IModelContentChangedEvent, IModelContentChangedFlushEvent} from 'vs/editor/common/editorCommon';\nimport {Model} from 'vs/editor/common/model/model';\nimport {BracketMode} from 'vs/editor/test/common/testModes';\n\n// --------- utils\n\nfunction isNotABracket(model, lineNumber, column) {\n\tvar match = model.matchBracket(new Position(lineNumber, column));\n\tassert.equal(match.isAccurate, true, 'is not matching brackets at ' + lineNumber + ', ' + column);\n\tassert.equal(match.brackets, null, 'is not matching brackets at ' + lineNumber + ', ' + column);\n}\n\nfunction isBracket(model, lineNumber1, column11, column12, lineNumber2, column21, column22) {\n\tvar match = model.matchBracket(new Position(lineNumber1, column11));\n\tassert.deepEqual(match, {\n\t\tbrackets: [\n\t\t\tnew Range(lineNumber1, column11, lineNumber1, column12),\n\t\t\tnew Range(lineNumber2, column21, lineNumber2, column22)\n\t\t],\n\t\tisAccurate: true\n\t}, 'is matching brackets at ' + lineNumber1 + ', ' + column11);\n}\n\n\n\nfunction rangeEqual(range, startLineNumber, startColumn, endLineNumber, endColumn) {\n\tassert.deepEqual(range, new Range(startLineNumber, startColumn, endLineNumber, endColumn));\n}\n\n\nvar LINE1 = 'My First Line';\nvar LINE2 = '\\t\\tMy Second Line';\nvar LINE3 = '    Third Line';\nvar LINE4 = '';\nvar LINE5 = '1';\n\nsuite('Editor Model - Model', () => {\n\n\tvar thisModel: Model;\n\n\tsetup(() => {\n\t\tvar text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, null);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\t// --------- insert text\n\n\ttest('model getValue', () => {\n\t\tassert.equal(thisModel.getValue(), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n\\n1');\n\t});\n\n\ttest('model insert empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model insert text without newline 1', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'foo My First Line');\n\t});\n\n\ttest('model insert text without newline 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' foo')]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'My foo First Line');\n\t});\n\n\ttest('model insert text with one newline', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.equal(thisModel.getLineCount(), 6);\n\t\tassert.equal(thisModel.getLineContent(1), 'My new line');\n\t\tassert.equal(thisModel.getLineContent(2), 'No longer First Line');\n\t});\n\n\ttest('model insert text with two newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nOne more line in the middle\\nNo longer')]);\n\t\tassert.equal(thisModel.getLineCount(), 7);\n\t\tassert.equal(thisModel.getLineContent(1), 'My new line');\n\t\tassert.equal(thisModel.getLineContent(2), 'One more line in the middle');\n\t\tassert.equal(thisModel.getLineContent(3), 'No longer First Line');\n\t});\n\n\ttest('model insert text with many newlines', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), '\\n\\n\\n\\n')]);\n\t\tassert.equal(thisModel.getLineCount(), 9);\n\t\tassert.equal(thisModel.getLineContent(1), 'My');\n\t\tassert.equal(thisModel.getLineContent(2), '');\n\t\tassert.equal(thisModel.getLineContent(3), '');\n\t\tassert.equal(thisModel.getLineContent(4), '');\n\t\tassert.equal(thisModel.getLineContent(5), ' First Line');\n\t});\n\n\n\t// --------- insert text eventing\n\n\ttest('model insert empty text does not trigger eventing', () => {\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), '')]);\n\t});\n\n\ttest('model insert text without newline eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\t\t\tassert.equal(e.changeType, EventType.ModelContentChangedLineChanged);\n\t\t\tassert.equal(e.lineNumber, 1);\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'foo ')]);\n\t\tassert.equal(listenerCalls, 1, 'listener calls');\n\t});\n\n\ttest('model insert text with one newline eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tvar order = 0;\n\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\n\t\t\tif (e.changeType === EventType.ModelContentChangedLineChanged) {\n\t\t\t\tif (order === 0) {\n\t\t\t\t\tassert.equal(++order, 1, 'ModelContentChangedLineChanged first');\n\t\t\t\t\tassert.equal(e.lineNumber, 1, 'ModelContentChangedLineChanged line number 1');\n\t\t\t\t} else {\n\t\t\t\t\tassert.equal(++order, 2, 'ModelContentChangedLineChanged first');\n\t\t\t\t\tassert.equal(e.lineNumber, 1, 'ModelContentChangedLineChanged line number 1');\n\t\t\t\t}\n\t\t\t} else if (e.changeType === EventType.ModelContentChangedLinesInserted) {\n\t\t\t\tassert.equal(++order, 3, 'ModelContentChangedLinesInserted second');\n\t\t\t\tassert.equal(e.fromLineNumber, 2, 'ModelContentChangedLinesInserted fromLineNumber');\n\t\t\t\tassert.equal(e.toLineNumber, 2, 'ModelContentChangedLinesInserted toLineNumber');\n\t\t\t} else {\n\t\t\t\tassert.ok (false);\n\t\t\t}\n\n\t\t});\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), ' new line\\nNo longer')]);\n\t\tassert.equal(listenerCalls, 3, 'listener calls');\n\t});\n\n\n\t// --------- delete text\n\n\ttest('model delete empty text', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'My First Line');\n\t});\n\n\ttest('model delete text from one line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'y First Line');\n\t});\n\n\ttest('model delete text from one line 2', () => {\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'a')]);\n\t\tassert.equal(thisModel.getLineContent(1), 'aMy First Line');\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 2, 1, 4))]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), 'a First Line');\n\t});\n\n\ttest('model delete all text from a line', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.equal(thisModel.getLineCount(), 5);\n\t\tassert.equal(thisModel.getLineContent(1), '');\n\t});\n\n\ttest('model delete text from two lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.equal(thisModel.getLineCount(), 4);\n\t\tassert.equal(thisModel.getLineContent(1), 'My Second Line');\n\t});\n\n\ttest('model delete text from many lines', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\t\tassert.equal(thisModel.getLineCount(), 3);\n\t\tassert.equal(thisModel.getLineContent(1), 'My Third Line');\n\t});\n\n\ttest('model delete everything', () => {\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 5, 2))]);\n\t\tassert.equal(thisModel.getLineCount(), 1);\n\t\tassert.equal(thisModel.getLineContent(1), '');\n\t});\n\n\t// --------- delete text eventing\n\n\ttest('model delete empty text does not trigger eventing', () => {\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tassert.ok(false, 'was not expecting event');\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 1))]);\n\t});\n\n\ttest('model delete text from one line eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\t\t\tassert.equal(e.changeType, EventType.ModelContentChangedLineChanged);\n\t\t\tassert.equal(e.lineNumber, 1);\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tassert.equal(listenerCalls, 1, 'listener calls');\n\t});\n\n\ttest('model delete all text from a line eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\t\t\tassert.equal(e.changeType, EventType.ModelContentChangedLineChanged);\n\t\t\tassert.equal(e.lineNumber, 1);\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 14))]);\n\t\tassert.equal(listenerCalls, 1, 'listener calls');\n\t});\n\n\ttest('model delete text from two lines eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tvar order = 0;\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\n\t\t\tif (e.changeType === EventType.ModelContentChangedLineChanged) {\n\t\t\t\tif (order === 0) {\n\t\t\t\t\tassert.equal(++order, 1);\n\t\t\t\t\tassert.equal(e.lineNumber, 1);\n\t\t\t\t} else {\n\t\t\t\t\tassert.equal(++order, 2);\n\t\t\t\t\tassert.equal(e.lineNumber, 1);\n\t\t\t\t}\n\t\t\t} else if (e.changeType === EventType.ModelContentChangedLinesDeleted) {\n\t\t\t\tassert.equal(++order, 3);\n\t\t\t\tassert.equal(e.fromLineNumber, 2);\n\t\t\t\tassert.equal(e.toLineNumber, 2);\n\t\t\t} else {\n\t\t\t\tassert.ok (false);\n\t\t\t}\n\n\t\t});\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 2, 6))]);\n\t\tassert.equal(listenerCalls, 3, 'listener calls');\n\t});\n\n\ttest('model delete text from many lines eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tvar order = 0;\n\n\t\tthisModel.addListener(EventType.ModelContentChanged, (e) => {\n\t\t\tlistenerCalls++;\n\n\t\t\tif (e.changeType === EventType.ModelContentChangedLineChanged) {\n\t\t\t\tif (order === 0) {\n\t\t\t\t\tassert.equal(++order, 1);\n\t\t\t\t\tassert.equal(e.lineNumber, 1);\n\t\t\t\t} else {\n\t\t\t\t\tassert.equal(++order, 2);\n\t\t\t\t\tassert.equal(e.lineNumber, 1);\n\t\t\t\t}\n\t\t\t} else if (e.changeType === EventType.ModelContentChangedLinesDeleted) {\n\t\t\t\tassert.equal(++order, 3);\n\t\t\t\tassert.equal(e.fromLineNumber, 2);\n\t\t\t\tassert.equal(e.toLineNumber, 3);\n\t\t\t} else {\n\t\t\t\tassert.ok (false);\n\t\t\t}\n\n\t\t});\n\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 4, 3, 5))]);\n\n\t\tassert.equal(listenerCalls, 3, 'listener calls');\n\t});\n\n\t// --------- getValueInRange\n\n\ttest('getValueInRange', () => {\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 1, 1)), '');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 1, 2)), 'M');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 2, 1, 3)), 'y');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 1, 14)), 'My First Line');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 2, 1)), 'My First Line\\n');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n');\n\t\tassert.equal(thisModel.getValueInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n');\n\t});\n\n\t// --------- getValueLengthInRange\n\n\ttest('getValueLengthInRange', () => {\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\n'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 2, 2)), 'My First Line\\n\\t'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 2, 3)), 'My First Line\\n\\t\\t'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 2, 17)), 'My First Line\\n\\t\\tMy Second Line'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 3, 1)), 'My First Line\\n\\t\\tMy Second Line\\n'.length);\n\t\tassert.equal(thisModel.getValueLengthInRange(new Range(1, 1, 4, 1)), 'My First Line\\n\\t\\tMy Second Line\\n    Third Line\\n'.length);\n\t});\n\n\t// --------- setValue\n\ttest('setValue eventing', () => {\n\t\tvar listenerCalls = 0;\n\t\tthisModel.addOneTimeListener(EventType.ModelContentChanged, (e:IModelContentChangedEvent) => {\n\t\t\tlistenerCalls++;\n\n\t\t\tassert.equal(e.changeType, EventType.ModelContentChangedFlush);\n\n\t\t\tassert.deepEqual((<IModelContentChangedFlushEvent>e).detail.lines, [ 'new value' ]);\n\t\t});\n\t\tthisModel.setValue('new value');\n\t\tassert.equal(listenerCalls, 1, 'listener calls');\n\t});\n\n\t//\tvar LINE1 = 'My First Line';\n\t//\tvar LINE2 = '\\t\\tMy Second Line';\n\t//\tvar LINE3 = '    Third Line';\n\t//\tvar LINE4 = '';\n\t//\tvar LINE5 = '1';\n});\n\n\n// --------- Special Unicode LINE SEPARATOR character\nsuite('Editor Model - Model Line Separators', () => {\n\n\tvar thisModel: Model;\n\n\tsetup(() => {\n\t\tvar text =\n\t\t\tLINE1 + '\\u2028' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\u2028' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, null);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.destroy();\n\t});\n\n\ttest('model getValue', () => {\n\t\tassert.equal(thisModel.getValue(), 'My First Line\\u2028\\t\\tMy Second Line\\n    Third Line\\u2028\\n1');\n\t});\n\n\ttest('model lines', () => {\n\t\tassert.equal(thisModel.getLineCount(), 3);\n\t});\n\n\ttest('Bug 13333:Model should line break on lonely CR too', () => {\n\t\tvar model = new Model('Hello\\rWorld!\\r\\nAnother line', Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tassert.equal(model.getLineCount(), 3);\n\t\tassert.equal(model.getValue(), 'Hello\\r\\nWorld!\\r\\nAnother line');\n\t\tmodel.dispose();\n\t});\n});\n\n\n// --------- bracket matching\n\nsuite('Editor Model - bracket Matching', () => {\n\n\tvar thisModel: Model;\n\tvar bracketMode = new BracketMode();\n\n\tsetup(() => {\n\t\tvar text =\n\t\t\t'var bar = {' + '\\n' +\n\t\t\t'foo: {' + '\\n' +\n\t\t\t'}, bar: {hallo: [{' + '\\n' +\n\t\t\t'}, {' + '\\n' +\n\t\t\t'}]}}';\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, bracketMode);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.destroy();\n\t});\n\n\ttest('Model bracket matching 1', () => {\n\n\t\tvar brackets = [\n\t\t\t[1, 11, 12, 5, 4, 5],\n\t\t\t[1, 12, 11, 5, 4, 5],\n\t\t\t[5, 5, 4, 1, 11, 12],\n\n\t\t\t[2, 6, 7, 3, 1, 2],\n\t\t\t[2, 7, 6, 3, 1, 2],\n\t\t\t[3, 1, 2, 2, 6, 7],\n\t\t\t[3, 2, 1, 2, 6, 7],\n\n\t\t\t[3, 9, 10, 5, 3, 4],\n\t\t\t[3, 10, 9, 5, 3, 4],\n\t\t\t[5, 4, 3, 3, 9, 10],\n\n\t\t\t[3, 17, 18, 5, 2, 3],\n\t\t\t[3, 18, 17, 5, 2, 3],\n\t\t\t[5, 3, 2, 3, 17, 18],\n\n\t\t\t[3, 19, 18, 4, 1, 2],\n\t\t\t[4, 2, 1, 3, 18, 19],\n\t\t\t[4, 1, 2, 3, 18, 19],\n\n\t\t\t[4, 4, 5, 5, 1, 2],\n\t\t\t[4, 5, 4, 5, 1, 2],\n\t\t\t[5, 2, 1, 4, 4, 5],\n\t\t\t[5, 1, 2, 4, 4, 5]\n\t\t];\n\t\tvar i, len, b, isABracket = {1:{}, 2:{}, 3:{}, 4:{}, 5:{}};\n\n\t\tfor (i = 0, len = brackets.length; i < len; i++) {\n\t\t\tb = brackets[i];\n\t\t\tisBracket(thisModel, b[0], b[1], b[2], b[3], b[4], b[5]);\n\t\t\tisABracket[b[0]][b[1]] = true;\n\t\t}\n\n\t\tfor (i = 1, len = thisModel.getLineCount(); i <= len; i++) {\n\t\t\tvar line = thisModel.getLineContent(i), j, lenJ;\n\t\t\tfor (j = 1, lenJ = line.length + 1; j <= lenJ; j++) {\n\t\t\t\tif (!isABracket[i].hasOwnProperty(j)) {\n\t\t\t\t\tisNotABracket(thisModel, i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\n\nsuite('Editor Model - bracket Matching 2', () => {\n\n\tvar thisModel: Model;\n\tvar bracketMode = new BracketMode();\n\n\tsetup(() => {\n\t\tvar text =\n\t\t\t')]}{[(' + '\\n' +\n\t\t\t')]}{[(';\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, bracketMode);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.destroy();\n\t});\n\n\ttest('Model bracket matching', () => {\n\t\tisNotABracket(thisModel, 1, 1);\n\t\tisNotABracket(thisModel, 1, 2);\n\t\tisNotABracket(thisModel, 1, 3);\n\t\tisBracket(thisModel, 1, 4, 5, 2, 3, 4);\n\t\tisBracket(thisModel, 1, 5, 4, 2, 3, 4);\n\t\tisBracket(thisModel, 1, 6, 5, 2, 2, 3);\n\t\tisBracket(thisModel, 1, 7, 6, 2, 1, 2);\n\n\t\tisBracket(thisModel, 2, 1, 2, 1, 6, 7);\n\t\tisBracket(thisModel, 2, 2, 1, 1, 6, 7);\n\t\tisBracket(thisModel, 2, 3, 2, 1, 5, 6);\n\t\tisBracket(thisModel, 2, 4, 3, 1, 4, 5);\n\t\tisNotABracket(thisModel, 2, 5);\n\t\tisNotABracket(thisModel, 2, 6);\n\t\tisNotABracket(thisModel, 2, 7);\n\t});\n});\n\n\n// --------- Words\n\nsuite('Editor Model - Words', () => {\n\n\tvar thisModel: Model;\n\n\tsetup(() => {\n\t\tvar text = [ 'This text has some  words. ' ];\n\t\tthisModel = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.destroy();\n\t});\n\n\ttest('Get all words', () => {\n\t\tvar words = [\n\t\t\t{ start: 0,\t\tend: 4 },\n\t\t\t{ start: 5,\t\tend: 9 },\n\t\t\t{ start: 10,\tend: 13 },\n\t\t\t{ start: 14,\tend: 18 },\n\t\t\t{ start: 20,\tend: 25 },\n\t\t\t{ start: 25,\tend: 26 }\n\t\t];\n\n\t\tvar modelWords = thisModel.getWords(1);\n\n\t\tfor (var i = 0; i < modelWords.length; i++) {\n\t\t\tassert.deepEqual(modelWords[i], words[i]);\n\t\t}\n\t});\n\n\ttest('Get word at position', () => {\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 1)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 2)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 4)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 5)), { word: 'This', startColumn: 1, endColumn: 5 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 6)), { word: 'text', startColumn: 6, endColumn: 10 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 19)), { word: 'some', startColumn: 15, endColumn: 19 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 20)), null);\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 21)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 26)), { word: 'words', startColumn: 21, endColumn: 26 });\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 27)), null);\n\t\tassert.deepEqual(thisModel.getWordAtPosition(new Position(1, 28)), null);\n\t});\n});\n\n\n// --------- Find\nsuite('Editor Model - Find', () => {\n\n\tvar thisModel: Model;\n\n\tsetup(() => {\n\t\tvar text = [\n\t\t\t'This is some foo - bar text which contains foo and bar - as in Barcelona.',\n\t\t\t'Now it begins a word fooBar and now it is caps Foo-isn\\'t this great?',\n\t\t\t'And here\\'s a dull line with nothing interesting in it',\n\t\t\t'It is also interesting if it\\'s part of a word like amazingFooBar',\n\t\t\t'Again nothing interesting here'\n\t\t];\n\t\tthisModel = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t});\n\n\ttest('Simple find', () => {\n\t\tvar ranges = [\n\t\t\t[1, 14, 1, 17],\n\t\t\t[1, 44, 1, 47],\n\t\t\t[2, 22, 2, 25],\n\t\t\t[2, 48, 2, 51],\n\t\t\t[4, 59, 4, 62]\n\t\t];\n\t\tvar matches = thisModel.findMatches('foo', false, false, false, false);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\t});\n\n\ttest('Case sensitive find', () => {\n\t\tvar ranges = [\n\t\t\t[1, 14, 1, 17],\n\t\t\t[1, 44, 1, 47],\n\t\t\t[2, 22, 2, 25]\n\t\t];\n\t\tvar matches = thisModel.findMatches('foo', false, false, true, false);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\t});\n\n\ttest('Whole words find', () => {\n\t\tvar ranges = [\n\t\t\t[1, 14, 1, 17],\n\t\t\t[1, 44, 1, 47],\n\t\t\t[2, 48, 2, 51]\n\t\t];\n\t\tvar matches = thisModel.findMatches('foo', false, false, false, true);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\t});\n\n\ttest('/^/ find', () => {\n\t\tvar ranges = [\n\t\t\t[1, 1, 1, 1],\n\t\t\t[2, 1, 2, 1],\n\t\t\t[3, 1, 3, 1],\n\t\t\t[4, 1, 4, 1],\n\t\t\t[5, 1, 5, 1]\n\t\t];\n\t\tvar matches = thisModel.findMatches('^', false, true, false, false);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\t});\n\n\ttest('/$/ find', () => {\n\t\tvar ranges = [\n\t\t\t[1, 74, 1, 74],\n\t\t\t[2, 69, 2, 69],\n\t\t\t[3, 54, 3, 54],\n\t\t\t[4, 65, 4, 65],\n\t\t\t[5, 31, 5, 31]\n\t\t];\n\t\tvar matches = thisModel.findMatches('$', false, true, false, false);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\t});\n\n\ttest('/^$/ find', () => {\n\t\tvar text = [\n\t\t\t'This is some foo - bar text which contains foo and bar - as in Barcelona.',\n\t\t\t'',\n\t\t\t'And here\\'s a dull line with nothing interesting in it',\n\t\t\t'',\n\t\t\t'Again nothing interesting here'\n\t\t];\n\t\tvar model = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\n\t\tvar ranges = [\n\t\t\t[2, 1, 2, 1],\n\t\t\t[4, 1, 4, 1]\n\t\t];\n\t\tvar matches = model.findMatches('^$', false, true, false, false);\n\t\tassert.equal(matches.length, ranges.length);\n\t\tfor (var i = 0; i < matches.length; i++) {\n\t\t\trangeEqual(matches[i], ranges[i][0], ranges[i][1], ranges[i][2], ranges[i][3]);\n\t\t}\n\n\t\tmodel.dispose();\n\t});\n});\n"]}