{"version":3,"file":"vs/editor/test/common/viewLayout/viewLineParts.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/viewLayout/viewLineParts.test.ts"],"names":[],"mappings":"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E,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;YAC3C,6BAA6B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {DecorationSegment, ILineDecoration, LineDecorationsNormalizer, getColumnOfLinePartOffset, createLineParts} from 'vs/editor/common/viewLayout/viewLineParts';\nimport {Range} from 'vs/editor/common/core/range';\nimport {ViewLineToken, ViewLineTokens} from 'vs/editor/common/editorCommon';\nimport {RenderLineInput, renderLine} from 'vs/editor/common/viewLayout/viewLineRenderer';\n\nsuite('Editor ViewLayout - ViewLineParts', () => {\n\n\tfunction newDecoration(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number, inlineClassName:string): ILineDecoration {\n\t\treturn {\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\toptions: {\n\t\t\t\tinlineClassName: inlineClassName\n\t\t\t}\n\t\t};\n\t}\n\n\ttest('Bug 9827:Overlapping inline decorations can cause wrong inline class to be applied', () => {\n\n\t\tvar result = LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 11, 'c1'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]);\n\n\t\tassert.deepEqual(result, [\n\t\t\tnew DecorationSegment(0, 1, 'c1'),\n\t\t\tnew DecorationSegment(2, 2, 'c2 c1'),\n\t\t\tnew DecorationSegment(3, 9, 'c1'),\n\t\t]);\n\t});\n\n\ttest('issue #3462: no whitespace shown at the end of a decorated line', () => {\n\n\t\tvar result = LineDecorationsNormalizer.normalize(3, 1, [\n\t\t\tnewDecoration(3, 15, 3, 21, 'trailing whitespace'),\n\t\t\tnewDecoration(3, 20, 3, 21, 'inline-folded'),\n\t\t]);\n\n\t\tassert.deepEqual(result, [\n\t\t\tnew DecorationSegment(14, 18, 'trailing whitespace'),\n\t\t\tnew DecorationSegment(19, 19, 'trailing whitespace inline-folded')\n\t\t]);\n\t});\n\n\ttest('issue #3661: Link decoration bleeds to next line when wrapping', () => {\n\n\t\tvar result = LineDecorationsNormalizer.normalize(3, 12, [\n\t\t\tnewDecoration(2, 12, 3, 30, 'detected-link')\n\t\t]);\n\n\t\tassert.deepEqual(result, [\n\t\t\tnew DecorationSegment(11, 28, 'detected-link'),\n\t\t]);\n\t});\n\n\tfunction testCreateLineParts(lineContent: string, tokens: ViewLineToken[], fauxIndentLength: number, renderWhitespace:boolean, indentGuides:boolean, expected:ViewLineToken[]): void {\n\t\tlet lineParts = createLineParts(1, 1, lineContent, 4, new ViewLineTokens(tokens, fauxIndentLength, lineContent.length), [], renderWhitespace, indentGuides);\n\t\tlet actual = lineParts.getParts();\n\n\t\tassert.deepEqual(actual, expected);\n\t}\n\n\ttest('createLineParts simple', () => {\n\t\ttestCreateLineParts(\n\t\t\t'Hello world!',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, '')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, '')\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts simple two tokens', () => {\n\t\ttestCreateLineParts(\n\t\t\t'Hello world!',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 4 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\t'    Hello world!    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b'),\n\t\t\t\tnew ViewLineToken(16, 'b trailing whitespace')\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 8 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\t'        Hello world!        ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(8, 'a'),\n\t\t\t\tnew ViewLineToken(10, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(4, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(8, 'a'),\n\t\t\t\tnew ViewLineToken(10, 'b'),\n\t\t\t\tnew ViewLineToken(20, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(24, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - 2 leading tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\t'\\t\\tHello world!\\t',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(2, 'a'),\n\t\t\t\tnew ViewLineToken(4, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(1, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(2, 'a'),\n\t\t\t\tnew ViewLineToken(4, 'b'),\n\t\t\t\tnew ViewLineToken(14, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render whitespace - mixed leading spaces and tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\t'  \\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(3, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(4, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b'),\n\t\t\t\tnew ViewLineToken(18, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(20, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(23, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(27, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render indent guides - 4 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\t'    Hello world!    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render indent guides - 8 leading spaces', () => {\n\t\ttestCreateLineParts(\n\t\t\t'        Hello world!        ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(8, 'a'),\n\t\t\t\tnew ViewLineToken(10, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(4, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(8, 'a'),\n\t\t\t\tnew ViewLineToken(10, 'b')\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render indent guides - 2 leading tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\t'\\t\\tHello world!\\t',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(2, 'a'),\n\t\t\t\tnew ViewLineToken(4, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(1, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(2, 'a'),\n\t\t\t\tnew ViewLineToken(4, 'b'),\n\t\t\t]\n\t\t);\n\t});\n\ttest('createLineParts render indent guides - mixed leading spaces and tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\t'  \\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(3, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(4, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b'),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace and indent guides - mixed leading spaces and tabs', () => {\n\t\ttestCreateLineParts(\n\t\t\t'  \\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b')\n\t\t\t],\n\t\t\t0,\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' leading whitespace indent-guide'),\n\t\t\t\tnew ViewLineToken(3, ' leading whitespace indent-guide'),\n\t\t\t\tnew ViewLineToken(4, ' leading whitespace indent-guide'),\n\t\t\t\tnew ViewLineToken(6, 'a'),\n\t\t\t\tnew ViewLineToken(8, 'b'),\n\t\t\t\tnew ViewLineToken(18, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(20, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(23, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(27, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace skips faux indent', () => {\n\t\ttestCreateLineParts(\n\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t2,\n\t\t\ttrue,\n\t\t\tfalse,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(2, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b'),\n\t\t\t\tnew ViewLineToken(16, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(18, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(21, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(25, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('createLineParts render indent guides uses faux indent', () => {\n\t\ttestCreateLineParts(\n\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t2,\n\t\t\tfalse,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(1, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(2, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('createLineParts render whitespace and indent guides for line with faux indent', () => {\n\t\ttestCreateLineParts(\n\t\t\t'\\t\\t  Hello world! \\t  \\t   \\t    ',\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b')\n\t\t\t],\n\t\t\t2,\n\t\t\ttrue,\n\t\t\ttrue,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(1, ' indent-guide'),\n\t\t\t\tnew ViewLineToken(2, ' leading whitespace'),\n\t\t\t\tnew ViewLineToken(4, 'a'),\n\t\t\t\tnew ViewLineToken(6, 'b'),\n\t\t\t\tnew ViewLineToken(16, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(18, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(21, 'b trailing whitespace'),\n\t\t\t\tnew ViewLineToken(25, 'b trailing whitespace'),\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('ViewLineParts', () => {\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 2, 'c1'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 0, 'c1'),\n\t\t\tnew DecorationSegment(2, 2, 'c2')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 3, 'c1'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1'),\n\t\t\tnew DecorationSegment(2, 2, 'c2')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1'),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c2')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1*'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1*'),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c2')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1*'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1**'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**'),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1*'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1**'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2*')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**'),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2 c2*')\n\t\t]);\n\n\t\tassert.deepEqual(LineDecorationsNormalizer.normalize(1, 1, [\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1*'),\n\t\t\tnewDecoration(1, 1, 1, 4, 'c1**'),\n\t\t\tnewDecoration(1, 3, 1, 4, 'c2'),\n\t\t\tnewDecoration(1, 3, 1, 5, 'c2*')\n\t\t]), [\n\t\t\tnew DecorationSegment(0, 1, 'c1 c1* c1**'),\n\t\t\tnew DecorationSegment(2, 2, 'c1 c1* c1** c2 c2*'),\n\t\t\tnew DecorationSegment(3, 3, 'c2*')\n\t\t]);\n\t});\n\n\tfunction createTestGetColumnOfLinePartOffset(lineContent:string, tabSize:number, parts:ViewLineToken[]): (partIndex:number, partLength:number, offset:number, expected:number)=>void {\n\t\tlet renderLineOutput = renderLine(new RenderLineInput(lineContent, tabSize, 10, -1, false, parts));\n\n\t\treturn (partIndex:number, partLength:number, offset:number, expected:number) => {\n\t\t\tlet actual = getColumnOfLinePartOffset(-1, parts, lineContent.length + 1, renderLineOutput.charOffsetInPart, partIndex, partLength, offset);\n\t\t\tassert.equal(actual, expected, 'getColumnOfLinePartOffset for ' + partIndex + ' @ ' + offset);\n\t\t};\n\t}\n\n\ttest('getColumnOfLinePartOffset 1 - simple text', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'hello world',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, 'aToken')\n\t\t\t]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  0,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  1,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  2,  3);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  3,  4);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  4,  5);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  5,  6);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  6,  7);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  7,  8);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  8,  9);\n\t\ttestGetColumnOfLinePartOffset(0, 11,  9, 10);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 10, 11);\n\t\ttestGetColumnOfLinePartOffset(0, 11, 11, 12);\n\t});\n\n\ttest('getColumnOfLinePartOffset 2 - regular JS', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'var x = 3;',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, 'meta type js storage var expr'),\n\t\t\t\tnew ViewLineToken(3, 'meta js var expr'),\n\t\t\t\tnew ViewLineToken(4, 'meta js var expr var-single-variable variable'),\n\t\t\t\tnew ViewLineToken(5, 'meta js var expr var-single-variable'),\n\t\t\t\tnew ViewLineToken(8, 'meta js var expr var-single-variable constant numeric'),\n\t\t\t\tnew ViewLineToken(9, ''),\n\t\t\t]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 0,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 1,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 2,  3);\n\t\ttestGetColumnOfLinePartOffset(0, 3, 3,  4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 0,  4);\n\t\ttestGetColumnOfLinePartOffset(1, 1, 1,  5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 0,  5);\n\t\ttestGetColumnOfLinePartOffset(2, 1, 1,  6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 0,  6);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 1,  7);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 2,  8);\n\t\ttestGetColumnOfLinePartOffset(3, 3, 3,  9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 0,  9);\n\t\ttestGetColumnOfLinePartOffset(4, 1, 1, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 0, 10);\n\t\ttestGetColumnOfLinePartOffset(5, 1, 1, 11);\n\t});\n\n\ttest('getColumnOfLinePartOffset 3 - tab with tab size 6', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t',\n\t\t\t6,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, 'leading whitespace')\n\t\t\t]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 0,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 1,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 2,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 3,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 4,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 5,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 6, 6,  2);\n\t});\n\n\ttest('getColumnOfLinePartOffset 4 - once indented line, tab size 4', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(1, 'meta type js function storage'),\n\t\t\t]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 0,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 1,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 2,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 3,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 4, 4,  2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0,  2);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1,  3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2,  4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3,  5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4,  6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5,  7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6,  8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7,  9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 10);\n\t});\n\n\ttest('getColumnOfLinePartOffset 5 - twice indented line, tab size 4', () => {\n\t\tlet testGetColumnOfLinePartOffset = createTestGetColumnOfLinePartOffset(\n\t\t\t'\\t\\tfunction',\n\t\t\t4,\n\t\t\t[\n\t\t\t\tnew ViewLineToken(0, ''),\n\t\t\t\tnew ViewLineToken(2, 'meta type js function storage'),\n\t\t\t]\n\t\t);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 0,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 1,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 2,  1);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 3,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 4,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 5,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 6,  2);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 7,  3);\n\t\ttestGetColumnOfLinePartOffset(0, 8, 8,  3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 0,  3);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 1,  4);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 2,  5);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 3,  6);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 4,  7);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 5,  8);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 6,  9);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 7, 10);\n\t\ttestGetColumnOfLinePartOffset(1, 8, 8, 11);\n\t});\n});\n\n\n"]}