{"version":3,"file":"vs/editor/test/common/diff/diffComputer.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/diff/diffComputer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {DiffComputer} from 'vs/editor/common/diff/diffComputer';\nimport {IChange, ICharChange, ILineChange} from 'vs/editor/common/editorCommon';\n\nfunction extractCharChangeRepresentation(change, expectedChange): ICharChange {\n\tvar hasOriginal = expectedChange && expectedChange.originalStartLineNumber > 0;\n\tvar hasModified = expectedChange && expectedChange.modifiedStartLineNumber > 0;\n\treturn {\n\t\toriginalStartLineNumber: hasOriginal ? change.originalStartLineNumber : 0,\n\t\toriginalStartColumn: hasOriginal ? change.originalStartColumn : 0,\n\t\toriginalEndLineNumber: hasOriginal ? change.originalEndLineNumber : 0,\n\t\toriginalEndColumn: hasOriginal ? change.originalEndColumn : 0,\n\n\t\tmodifiedStartLineNumber: hasModified ? change.modifiedStartLineNumber : 0,\n\t\tmodifiedStartColumn: hasModified ? change.modifiedStartColumn : 0,\n\t\tmodifiedEndLineNumber: hasModified ? change.modifiedEndLineNumber : 0,\n\t\tmodifiedEndColumn: hasModified ? change.modifiedEndColumn : 0,\n\t};\n}\n\nfunction extractLineChangeRepresentation(change, expectedChange): ILineChange {\n\tvar result:ILineChange = <any>{\n\t\toriginalStartLineNumber:change.originalStartLineNumber,\n\t\toriginalEndLineNumber: change.originalEndLineNumber,\n\t\tmodifiedStartLineNumber: change.modifiedStartLineNumber,\n\t\tmodifiedEndLineNumber: change.modifiedEndLineNumber\n\t};\n\tif (change.charChanges) {\n\t\tvar charChanges = [];\n\t\tfor (var i = 0; i < change.charChanges.length; i++) {\n\t\t\tcharChanges.push(extractCharChangeRepresentation(change.charChanges[i],\n\t\t\t\texpectedChange && expectedChange.charChanges && i < expectedChange.charChanges.length ? expectedChange.charChanges[i] : null));\n\t\t}\n\t\tresult.charChanges = charChanges;\n\t}\n\treturn result;\n}\n\nfunction assertDiff(originalLines:string[], modifiedLines:string[], expectedChanges:IChange[], shouldPostProcessCharChanges:boolean = false, shouldIgnoreTrimWhitespace:boolean=false) {\n\tvar diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\tshouldPostProcessCharChanges: shouldPostProcessCharChanges || false,\n\t\tshouldIgnoreTrimWhitespace: shouldIgnoreTrimWhitespace || false,\n\t\tshouldConsiderTrimWhitespaceInEmptyCase: true\n\t});\n\tvar changes = diffComputer.computeDiff();\n\n\tvar extracted = [];\n\tfor (var i = 0; i < changes.length; i++) {\n\t\textracted.push(extractLineChangeRepresentation(changes[i], i < expectedChanges.length ? expectedChanges[i] : null));\n\t}\n\tassert.deepEqual(extracted, expectedChanges);\n}\n\nfunction createLineDeletion(startLineNumber, endLineNumber, modifiedLineNumber): IChange {\n\treturn {\n\t\toriginalStartLineNumber: startLineNumber,\n\t\toriginalEndLineNumber: endLineNumber,\n\t\tmodifiedStartLineNumber: modifiedLineNumber,\n\t\tmodifiedEndLineNumber: 0\n\t};\n}\n\nfunction createLineInsertion(startLineNumber, endLineNumber, originalLineNumber): IChange {\n\treturn {\n\t\toriginalStartLineNumber: originalLineNumber,\n\t\toriginalEndLineNumber: 0,\n\t\tmodifiedStartLineNumber: startLineNumber,\n\t\tmodifiedEndLineNumber: endLineNumber\n\t};\n}\n\nfunction createLineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges): ILineChange {\n\treturn {\n\t\toriginalStartLineNumber: originalStartLineNumber,\n\t\toriginalEndLineNumber: originalEndLineNumber,\n\t\tmodifiedStartLineNumber: modifiedStartLineNumber,\n\t\tmodifiedEndLineNumber: modifiedEndLineNumber,\n\t\tcharChanges: charChanges\n\t};\n}\n\nfunction createCharInsertion(startLineNumber, startColumn, endLineNumber, endColumn) {\n\treturn {\n\t\toriginalStartLineNumber: 0,\n\t\toriginalStartColumn: 0,\n\t\toriginalEndLineNumber: 0,\n\t\toriginalEndColumn: 0,\n\t\tmodifiedStartLineNumber: startLineNumber,\n\t\tmodifiedStartColumn: startColumn,\n\t\tmodifiedEndLineNumber: endLineNumber,\n\t\tmodifiedEndColumn: endColumn\n\t};\n}\n\nfunction createCharDeletion(startLineNumber, startColumn, endLineNumber, endColumn) {\n\treturn {\n\t\toriginalStartLineNumber: startLineNumber,\n\t\toriginalStartColumn: startColumn,\n\t\toriginalEndLineNumber: endLineNumber,\n\t\toriginalEndColumn: endColumn,\n\t\tmodifiedStartLineNumber: 0,\n\t\tmodifiedStartColumn: 0,\n\t\tmodifiedEndLineNumber: 0,\n\t\tmodifiedEndColumn: 0\n\t};\n}\n\nfunction createCharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn,\n\t\t\tmodifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n\treturn {\n\t\toriginalStartLineNumber: originalStartLineNumber,\n\t\toriginalStartColumn: originalStartColumn,\n\t\toriginalEndLineNumber: originalEndLineNumber,\n\t\toriginalEndColumn: originalEndColumn,\n\t\tmodifiedStartLineNumber: modifiedStartLineNumber,\n\t\tmodifiedStartColumn: modifiedStartColumn,\n\t\tmodifiedEndLineNumber: modifiedEndLineNumber,\n\t\tmodifiedEndColumn: modifiedEndColumn\n\t};\n}\n\nsuite('Editor Diff - DiffComputer', () => {\n\n\t// ---- insertions\n\n\ttest('one inserted line below', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'line', 'new line' ];\n\t\tvar expected = [ createLineInsertion(2, 2, 1) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two inserted lines below', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'line', 'new line', 'another new line' ];\n\t\tvar expected = [ createLineInsertion(2, 3, 1) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one inserted line above', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'new line', 'line' ];\n\t\tvar expected = [ createLineInsertion(1, 1, 0) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two inserted lines above', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'new line', 'another new line', 'line' ];\n\t\tvar expected = [ createLineInsertion(1, 2, 0) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one inserted line in middle', () => {\n\t\tvar original = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'new line', 'line3', 'line4' ];\n\t\tvar expected = [ createLineInsertion(3, 3, 2) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two inserted lines in middle', () => {\n\t\tvar original = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'new line', 'another new line', 'line3', 'line4' ];\n\t\tvar expected = [ createLineInsertion(3, 4, 2) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two inserted lines in middle interrupted', () => {\n\t\tvar original = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'new line', 'line3', 'another new line', 'line4' ];\n\t\tvar expected = [ createLineInsertion(3, 3, 2), createLineInsertion(5, 5, 3) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\t// ---- deletions\n\n\ttest('one deleted line below', () => {\n\t\tvar original = [ 'line', 'new line' ];\n\t\tvar modified = [ 'line' ];\n\t\tvar expected = [ createLineDeletion(2, 2, 1) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two deleted lines below', () => {\n\t\tvar original = [ 'line', 'new line', 'another new line' ];\n\t\tvar modified = [ 'line' ];\n\t\tvar expected = [ createLineDeletion(2, 3, 1) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one deleted lines above', () => {\n\t\tvar original = [ 'new line', 'line' ];\n\t\tvar modified = [ 'line' ];\n\t\tvar expected = [ createLineDeletion(1, 1, 0) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two deleted lines above', () => {\n\t\tvar original = [ 'new line', 'another new line', 'line' ];\n\t\tvar modified = [ 'line' ];\n\t\tvar expected = [ createLineDeletion(1, 2, 0) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one deleted line in middle', () => {\n\t\tvar original = [ 'line1', 'line2', 'new line', 'line3', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar expected = [ createLineDeletion(3, 3, 2) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two deleted lines in middle', () => {\n\t\tvar original = [ 'line1', 'line2', 'new line', 'another new line', 'line3', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar expected = [ createLineDeletion(3, 4, 2) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two deleted lines in middle interrupted', () => {\n\t\tvar original = [ 'line1', 'line2', 'new line', 'line3', 'another new line', 'line4' ];\n\t\tvar modified = [ 'line1', 'line2', 'line3', 'line4' ];\n\t\tvar expected = [ createLineDeletion(3, 3, 2), createLineDeletion(5, 5, 3) ];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\t// ---- changes\n\n\ttest('one line changed: chars inserted at the end', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'line changed' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharInsertion(1, 5, 1, 13)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one line changed: chars inserted at the beginning', () => {\n\t\tvar original = [ 'line' ];\n\t\tvar modified = [ 'my line' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharInsertion(1, 1, 1, 4)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one line changed: chars inserted in the middle', () => {\n\t\tvar original = [ 'abba' ];\n\t\tvar modified = [ 'abzzba' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharInsertion(1, 3, 1, 5)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one line changed: chars inserted in the middle (two spots)', () => {\n\t\tvar original = [ 'abba' ];\n\t\tvar modified = [ 'abzzbzza' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharInsertion(1, 3, 1, 5),\n\t\t\t\tcreateCharInsertion(1, 6, 1, 8)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one line changed: chars deleted 1', () => {\n\t\tvar original = [ 'abcdefg' ];\n\t\tvar modified = [ 'abcfg' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharDeletion(1, 4, 1, 6)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('one line changed: chars deleted 2', () => {\n\t\tvar original = [ 'abcdefg' ];\n\t\tvar modified = [ 'acfg' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharDeletion(1, 2, 1, 3),\n\t\t\t\tcreateCharDeletion(1, 4, 1, 6)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two lines changed 1', () => {\n\t\tvar original = [ 'abcd', 'efgh' ];\n\t\tvar modified = [ 'abcz' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 2, 1, 1, [\n\t\t\t\tcreateCharChange(1, 4, 2, 5, 1, 4, 1, 5)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two lines changed 2', () => {\n\t\tvar original = [ 'foo', 'abcd', 'efgh', 'BAR' ];\n\t\tvar modified = [ 'foo', 'abcz', 'BAR' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(2, 3, 2, 2, [\n\t\t\t\tcreateCharChange(2, 4, 3, 5, 2, 4, 2, 5)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('two lines changed 3', () => {\n\t\tvar original = [ 'foo', 'abcd', 'efgh', 'BAR' ];\n\t\tvar modified = [ 'foo', 'abcz', 'zzzzefgh', 'BAR' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(2, 3, 2, 3, [\n\t\t\t\tcreateCharChange(2, 4, 2, 5, 2, 4, 3, 5)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('three lines changed', () => {\n\t\tvar original = [ 'foo', 'abcd', 'efgh', 'BAR' ];\n\t\tvar modified = [ 'foo', 'zzzefgh', 'xxx', 'BAR' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(2, 3, 2, 3, [\n\t\t\t\tcreateCharChange(2, 1, 2, 5, 2, 1, 2, 4),\n\t\t\t\tcreateCharInsertion(3, 1, 3, 4)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('big change part 1', () => {\n\t\tvar original = [ 'foo', 'abcd', 'efgh', 'BAR' ];\n\t\tvar modified = [ 'hello', 'foo', 'zzzefgh', 'xxx', 'BAR' ];\n\t\tvar expected = [\n\t\t\tcreateLineInsertion(1, 1, 0),\n\t\t\tcreateLineChange(2, 3, 3, 4, [\n\t\t\t\tcreateCharChange(2, 1, 2, 5, 3, 1, 3, 4),\n\t\t\t\tcreateCharInsertion(4, 1, 4, 4)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('big change part 2', () => {\n\t\tvar original = [ 'foo', 'abcd', 'efgh', 'BAR', 'RAB' ];\n\t\tvar modified = [ 'hello', 'foo', 'zzzefgh', 'xxx', 'BAR' ];\n\t\tvar expected = [\n\t\t\tcreateLineInsertion(1, 1, 0),\n\t\t\tcreateLineChange(2, 3, 3, 4, [\n\t\t\t\tcreateCharChange(2, 1, 2, 5, 3, 1, 3, 4),\n\t\t\t\tcreateCharInsertion(4, 1, 4, 4)\n\t\t\t]),\n\t\t\tcreateLineDeletion(5, 5, 5)\n\t\t];\n\t\tassertDiff(original, modified, expected);\n\t});\n\n\ttest('char change postprocessing merges', () => {\n\t\tvar original = [ 'abba' ];\n\t\tvar modified = [ 'azzzbzzzbzzza' ];\n\t\tvar expected = [\n\t\t\tcreateLineChange(1, 1, 1, 1, [\n\t\t\t\tcreateCharChange(1, 2, 1, 4, 1, 2, 1, 13)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected, true);\n\t});\n\n\ttest('ignore trim whitespace', () => {\n\t\tvar original = [ '\\t\\t foo ', 'abcd', 'efgh', '\\t\\t BAR\\t\\t' ];\n\t\tvar modified = [ '  hello\\t', '\\t foo   \\t', 'zzzefgh', 'xxx', '   BAR   \\t' ];\n\t\tvar expected = [\n\t\t\tcreateLineInsertion(1, 1, 0),\n\t\t\tcreateLineChange(2, 3, 3, 4, [\n\t\t\t\tcreateCharChange(2, 1, 2, 5, 3, 1, 3, 4),\n\t\t\t\tcreateCharInsertion(4, 1, 4, 4)\n\t\t\t])\n\t\t];\n\t\tassertDiff(original, modified, expected, false, true);\n\t});\n});\n"]}