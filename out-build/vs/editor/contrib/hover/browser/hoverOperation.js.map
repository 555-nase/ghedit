{"version":3,"file":"vs/editor/contrib/hover/browser/hoverOperation.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/hover/browser/hoverOperation.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {TPromise} from 'vs/base/common/winjs.base';\n\nexport interface IHoverComputer<Result> {\n\n\t/**\n\t * Overwrite the default hover time\n\t */\n\tgetHoverTimeMillis?: () => number;\n\n\t/**\n\t * This is called after half the hover time\n\t */\n\tcomputeAsync?: () => TPromise<Result>;\n\n\t/**\n\t * This is called after all the hover time\n\t */\n\tcomputeSync?: () => Result;\n\n\t/**\n\t * This is called whenever one of the compute* methods returns a truey value\n\t */\n\tonResult: (result:Result, isFromSynchronousComputation: boolean) => void;\n\n\t/**\n\t * This is what will be sent as progress/complete to the computation promise\n\t */\n\tgetResult: () => Result;\n\n\tgetResultWithLoadingMessage: () => Result;\n\n}\n\nenum ComputeHoverOperationState {\n\tIDLE = 0,\n\tFIRST_WAIT = 1,\n\tSECOND_WAIT = 2,\n\tWAITING_FOR_ASYNC_COMPUTATION = 3\n}\n\nexport class HoverOperation<Result> {\n\n\tstatic HOVER_TIME = 300;\n\n\tprivate _computer: IHoverComputer<Result>;\n\tprivate _state:ComputeHoverOperationState;\n\n\tprivate _firstWaitScheduler: RunOnceScheduler;\n\tprivate _secondWaitScheduler: RunOnceScheduler;\n\tprivate _loadingMessageScheduler: RunOnceScheduler;\n\tprivate _asyncComputationPromise:TPromise<Result>;\n\tprivate _asyncComputationPromiseDone:boolean;\n\n\tprivate _completeCallback:(r:Result)=>void;\n\tprivate _errorCallback:(err:any)=>void;\n\tprivate _progressCallback:(progress:any)=>void;\n\n\tconstructor(computer: IHoverComputer<Result>, success:(r:Result)=>void, error:(err:any)=>void, progress:(progress:any)=>void) {\n\t\tthis._computer = computer;\n\t\tthis._state = ComputeHoverOperationState.IDLE;\n\n\t\tthis._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), this._getHoverTimeMillis() / 2);\n\t\tthis._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), this._getHoverTimeMillis() / 2);\n\t\tthis._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 3 * this._getHoverTimeMillis());\n\n\t\tthis._asyncComputationPromise = null;\n\t\tthis._asyncComputationPromiseDone = false;\n\n\t\tthis._completeCallback = success;\n\t\tthis._errorCallback = error;\n\t\tthis._progressCallback = progress;\n\t}\n\n\tpublic getComputer(): IHoverComputer<Result> {\n\t\treturn this._computer;\n\t}\n\n\tprivate _getHoverTimeMillis(): number {\n\t\tif (this._computer.getHoverTimeMillis) {\n\t\t\treturn this._computer.getHoverTimeMillis();\n\t\t}\n\t\treturn HoverOperation.HOVER_TIME;\n\t}\n\n\tprivate _triggerAsyncComputation(): void {\n\t\tthis._state = ComputeHoverOperationState.SECOND_WAIT;\n\t\tthis._secondWaitScheduler.schedule();\n\n\t\tif (this._computer.computeAsync) {\n\t\t\tthis._asyncComputationPromiseDone = false;\n\t\t\tthis._asyncComputationPromise = this._computer.computeAsync();\n\n\t\t\tthis._asyncComputationPromise.then((asyncResult: Result) => {\n\t\t\t\tthis._asyncComputationPromiseDone = true;\n\t\t\t\tthis._withAsyncResult(asyncResult);\n\t\t\t}).done(null, () => this._onError);\n\t\t} else {\n\t\t\tthis._asyncComputationPromiseDone = true;\n\t\t}\n\t}\n\n\tprivate _triggerSyncComputation(): void {\n\t\tif (this._computer.computeSync) {\n\t\t\tthis._computer.onResult(this._computer.computeSync(), true);\n\t\t}\n\n\t\tif (this._asyncComputationPromiseDone) {\n\t\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t\t\tthis._onComplete(this._computer.getResult());\n\t\t} else {\n\t\t\tthis._state = ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION;\n\t\t\tthis._onProgress(this._computer.getResult());\n\t\t}\n\t}\n\n\tprivate _showLoadingMessage(): void {\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tthis._onProgress(this._computer.getResultWithLoadingMessage());\n\t\t}\n\t}\n\n\tprivate _withAsyncResult(asyncResult: Result): void {\n\t\tif (asyncResult) {\n\t\t\tthis._computer.onResult(asyncResult, false);\n\t\t}\n\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t\t\tthis._onComplete(this._computer.getResult());\n\t\t}\n\t}\n\n\tprivate _onComplete(value:Result): void {\n\t\tif (this._completeCallback) {\n\t\t\tthis._completeCallback(value);\n\t\t}\n\t}\n\n\tprivate _onError(error:any): void {\n\t\tif (this._errorCallback) {\n\t\t\tthis._errorCallback(error);\n\t\t} else {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n\n\tprivate _onProgress(value:Result): void {\n\t\tif (this._progressCallback) {\n\t\t\tthis._progressCallback(value);\n\t\t}\n\t}\n\n\tpublic start(): void {\n\t\tif (this._state === ComputeHoverOperationState.IDLE) {\n\t\t\tthis._state = ComputeHoverOperationState.FIRST_WAIT;\n\t\t\tthis._firstWaitScheduler.schedule();\n\t\t\tthis._loadingMessageScheduler.schedule();\n\t\t}\n\t}\n\n\tpublic cancel(): void {\n\t\tthis._loadingMessageScheduler.cancel();\n\t\tif (this._state === ComputeHoverOperationState.FIRST_WAIT) {\n\t\t\tthis._firstWaitScheduler.cancel();\n\t\t}\n\t\tif (this._state === ComputeHoverOperationState.SECOND_WAIT) {\n\t\t\tthis._secondWaitScheduler.cancel();\n\t\t\tif (this._asyncComputationPromise) {\n\t\t\t\tthis._asyncComputationPromise.cancel();\n\t\t\t}\n\t\t}\n\t\tif (this._state === ComputeHoverOperationState.WAITING_FOR_ASYNC_COMPUTATION) {\n\t\t\tif (this._asyncComputationPromise) {\n\t\t\t\tthis._asyncComputationPromise.cancel();\n\t\t\t}\n\t\t}\n\t\tthis._state = ComputeHoverOperationState.IDLE;\n\t}\n\n}\n\n"]}