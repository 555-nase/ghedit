{"version":3,"file":"vs/editor/contrib/hover/browser/modesGlyphHover.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/hover/browser/modesGlyphHover.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IModelDecoration, IRange} from 'vs/editor/common/editorCommon';\nimport {ICodeEditor} from 'vs/editor/browser/editorBrowser';\nimport {HoverOperation, IHoverComputer} from './hoverOperation';\nimport {GlyphHoverWidget} from './hoverWidgets';\n\nexport interface IHoverMessage {\n\tvalue?: string;\n\trange?: IRange;\n\tclassName?: string;\n}\n\nclass MarginComputer implements IHoverComputer<IHoverMessage[]> {\n\n\tprivate _editor: ICodeEditor;\n\tprivate _lineNumber: number;\n\tprivate _result: IHoverMessage[];\n\n\tconstructor(editor:ICodeEditor) {\n\t\tthis._editor = editor;\n\t\tthis._lineNumber = -1;\n\t}\n\n\tpublic setLineNumber(lineNumber: number): void {\n\t\tthis._lineNumber = lineNumber;\n\t\tthis._result = [];\n\t}\n\n\tpublic clearResult(): void {\n\t\tthis._result = [];\n\t}\n\n\tpublic computeSync(): IHoverMessage[] {\n\t\tvar result: IHoverMessage[] = [],\n\t\t\tlineDecorations = this._editor.getLineDecorations(this._lineNumber),\n\t\t\ti: number,\n\t\t\tlen: number,\n\t\t\td: IModelDecoration;\n\n\t\tfor (i = 0, len = lineDecorations.length; i < len; i++) {\n\t\t\td = lineDecorations[i];\n\n\t\t\tif (d.options.glyphMarginClassName && d.options.hoverMessage) {\n\t\t\t\tresult.push({\n\t\t\t\t\tvalue: d.options.hoverMessage\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic onResult(result: IHoverMessage[], isFromSynchronousComputation: boolean): void {\n\t\tthis._result = this._result.concat(result);\n\t}\n\n\tpublic getResult(): IHoverMessage[] {\n\t\treturn this._result;\n\t}\n\n\tpublic getResultWithLoadingMessage(): IHoverMessage[] {\n\t\treturn this.getResult();\n\t}\n}\n\nexport class ModesGlyphHoverWidget extends GlyphHoverWidget {\n\n\tstatic ID = 'editor.contrib.modesGlyphHoverWidget';\n\tprivate _messages: IHoverMessage[];\n\tprivate _lastLineNumber: number;\n\n\tprivate _computer: MarginComputer;\n\tprivate _hoverOperation: HoverOperation<IHoverMessage[]>;\n\n\tconstructor(editor: ICodeEditor) {\n\t\tsuper(ModesGlyphHoverWidget.ID, editor);\n\n\t\tthis._lastLineNumber = -1;\n\n\t\tthis._computer = new MarginComputer(this._editor);\n\n\t\tthis._hoverOperation = new HoverOperation(\n\t\t\tthis._computer,\n\t\t\t(result:IHoverMessage[]) => this._withResult(result),\n\t\t\tnull,\n\t\t\t(result:any) => this._withResult(result)\n\t\t);\n\n\t}\n\n\tpublic onModelDecorationsChanged(): void {\n\t\tif (this._isVisible) {\n\t\t\t// The decorations have changed and the hover is visible,\n\t\t\t// we need to recompute the displayed text\n\t\t\tthis._hoverOperation.cancel();\n\t\t\tthis._computer.clearResult();\n\t\t\tthis._hoverOperation.start();\n\t\t}\n\t}\n\n\tpublic startShowingAt(lineNumber: number): void {\n\t\tif (this._lastLineNumber === lineNumber) {\n\t\t\t// We have to show the widget at the exact same line number as before, so no work is needed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._hoverOperation.cancel();\n\n\t\tthis.hide();\n\n\t\tthis._lastLineNumber = lineNumber;\n\t\tthis._computer.setLineNumber(lineNumber);\n\t\tthis._hoverOperation.start();\n\t}\n\n\tpublic hide(): void {\n\t\tthis._lastLineNumber = -1;\n\t\tthis._hoverOperation.cancel();\n\t\tsuper.hide();\n\t}\n\n\tpublic _withResult(result:IHoverMessage[]): void {\n\t\tthis._messages = result;\n\n\t\tif (this._messages.length > 0) {\n\t\t\tthis._renderMessages(this._lastLineNumber, this._messages);\n\t\t} else {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\tprivate _renderMessages(lineNumber: number, messages: IHoverMessage[]): void {\n\n\t\tvar fragment = document.createDocumentFragment();\n\n\t\tmessages.forEach((msg) => {\n\n\t\t\tvar row:HTMLElement = document.createElement('div');\n\t\t\tvar span:HTMLElement = null;\n\n\t\t\tif (msg.className) {\n\t\t\t\tspan = document.createElement('span');\n\t\t\t\tspan.textContent = msg.value;\n\t\t\t\tspan.className = msg.className;\n\t\t\t\trow.appendChild(span);\n\t\t\t} else {\n\t\t\t\trow.textContent = msg.value;\n\t\t\t}\n\n\t\t\tfragment.appendChild(row);\n\t\t});\n\n\t\tthis._domNode.textContent = '';\n\t\tthis._domNode.appendChild(fragment);\n\n\t\t// show\n\t\tthis.showAt(lineNumber);\n\t}\n}"]}