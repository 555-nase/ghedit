{"version":3,"file":"vs/editor/contrib/hover/common/hover.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/hover/common/hover.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IASb,gCAAuC,KAAa,EAAE,QAAmB;QAExE,IAAM,QAAQ,GAAG,KAAK,CAAC,qBAAqB,EAAE,CAAC;QAC/C,IAAM,QAAQ,GAAG,yBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClD,IAAM,MAAM,GAA8B,EAAE,CAAC;QAE7C,IAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,GAAG;YAC1C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;gBACzD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACZ,IAAI,QAAQ,GAAG,CAAC,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;oBACrD,IAAI,QAAQ,GAAG,CAAC,OAAO,MAAM,CAAC,KAAK,KAAK,WAAW,CAAC,CAAC;oBACrD,IAAI,cAAc,GAAG,CAAC,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACxH,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;wBAC9C,MAAM,CAAC,GAAG,CAAC,GAAI,MAAM,CAAC;oBACvB,CAAC;gBACF,CAAC;YACF,CAAC,EAAE,UAAA,GAAG;gBACL,0BAAiB,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,qBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,iBAAQ,CAAC,MAAM,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAC7D,CAAC;IAtBe,8BAAsB,yBAsBrC,CAAA;IAED,6CAAoB,CAAC,8BAA8B,CAAC,uBAAuB,EAAE,sBAAsB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {coalesce} from 'vs/base/common/arrays';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {IComputeExtraInfoResult, ExtraInfoRegistry} from 'vs/editor/common/modes';\n\nexport function getExtraInfoAtPosition(model: IModel, position: IPosition): TPromise<IComputeExtraInfoResult[]> {\n\n\tconst resource = model.getAssociatedResource();\n\tconst supports = ExtraInfoRegistry.ordered(model);\n\tconst values: IComputeExtraInfoResult[] = [];\n\n\tconst promises = supports.map((support, idx) => {\n\t\treturn support.computeInfo(resource, position).then(result => {\n\t\t\tif (result) {\n\t\t\t\tlet hasRange = (typeof result.range !== 'undefined');\n\t\t\t\tlet hasValue = (typeof result.value !== 'undefined');\n\t\t\t\tlet hasHtmlContent = (typeof result.htmlContent !== 'undefined' && result.htmlContent && result.htmlContent.length > 0);\n\t\t\t\tif (hasRange && (hasValue || hasHtmlContent)) {\n\t\t\t\t\tvalues[idx]  = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => coalesce(values));\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeHoverProvider', getExtraInfoAtPosition);"]}