{"version":3,"file":"vs/editor/contrib/iPadShowKeyboard/browser/iPadShowKeyboard.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/iPadShowKeyboard/browser/iPadShowKeyboard.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./iPadShowKeyboard';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport * as browser from 'vs/base/browser/browser';\nimport * as dom from 'vs/base/browser/dom';\nimport {EventType, IEditorContribution} from 'vs/editor/common/editorCommon';\nimport {ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference} from 'vs/editor/browser/editorBrowser';\nimport {EditorBrowserRegistry} from 'vs/editor/browser/editorBrowserExtensions';\n\nexport class IPadShowKeyboard implements IEditorContribution {\n\n\tstatic ID = 'editor.contrib.iPadShowKeyboard';\n\n\tprivate editor:ICodeEditor;\n\tprivate widget:ShowKeyboardWidget;\n\tprivate toDispose:IDisposable[];\n\n\tconstructor(editor:ICodeEditor) {\n\t\tthis.editor = editor;\n\t\tthis.toDispose = [];\n\t\tif (browser.isIPad) {\n\t\t\tthis.toDispose.push(editor.addListener2(EventType.ConfigurationChanged, () => this.update()));\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tprivate update(): void {\n\t\tvar hasWidget = (!!this.widget);\n\t\tvar shouldHaveWidget = (!this.editor.getConfiguration().readOnly);\n\n\t\tif (!hasWidget && shouldHaveWidget) {\n\n\t\t\tthis.widget = new ShowKeyboardWidget(this.editor);\n\n\t\t} else if (hasWidget && !shouldHaveWidget) {\n\n\t\t\tthis.widget.dispose();\n\t\t\tthis.widget = null;\n\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn IPadShowKeyboard.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toDispose = dispose(this.toDispose);\n\t\tif (this.widget) {\n\t\t\tthis.widget.dispose();\n\t\t\tthis.widget = null;\n\t\t}\n\t}\n}\n\nclass ShowKeyboardWidget implements IOverlayWidget {\n\n\tprivate static ID = 'editor.contrib.ShowKeyboardWidget';\n\n\tprivate editor: ICodeEditor;\n\n\tprivate _domNode:HTMLElement;\n\tprivate _toDispose:IDisposable[];\n\n\tconstructor(editor:ICodeEditor) {\n\t\tthis.editor = editor;\n\t\tthis._domNode = document.createElement('textarea');\n\t\tthis._domNode.className = 'iPadShowKeyboard';\n\n\t\tthis._toDispose = [];\n\t\tthis._toDispose.push(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\n\t\t\tthis.editor.focus();\n\t\t}));\n\t\tthis._toDispose.push(dom.addDisposableListener(this._domNode, 'focus', (e) => {\n\t\t\tthis.editor.focus();\n\t\t}));\n\n\t\tthis.editor.addOverlayWidget(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.editor.removeOverlayWidget(this);\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\t// ----- IOverlayWidget API\n\n\tpublic getId(): string {\n\t\treturn ShowKeyboardWidget.ID;\n\t}\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition {\n\t\treturn {\n\t\t\tpreference: OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER\n\t\t};\n\t}\n}\n\nEditorBrowserRegistry.registerEditorContribution(IPadShowKeyboard);"]}