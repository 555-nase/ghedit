{"version":3,"file":"indentation.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/contrib/indentation/common/indentation.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EditorAction} from 'vs/editor/common/editorAction';\nimport {ICommonCodeEditor, IEditorActionDescriptorData} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry, EditorActionDescriptor} from 'vs/editor/common/editorCommonExtensions';\nimport {IndentationToSpacesCommand, IndentationToTabsCommand} from 'vs/editor/contrib/indentation/common/indentationCommands';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {Behaviour} from 'vs/editor/common/editorActionEnablement';\n\nexport class IndentationToSpacesAction extends EditorAction {\n\tstatic ID = 'editor.action.indentationToSpaces';\n\n\tconstructor(descriptor: IEditorActionDescriptorData, editor: ICommonCodeEditor) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tlet modelOpts = model.getOptions();\n\t\tconst command = new IndentationToSpacesCommand(this.editor.getSelection(), modelOpts.tabSize);\n\t\tthis.editor.executeCommands(this.id, [command]);\n\t\tmodel.updateOptions({\n\t\t\tinsertSpaces: true\n\t\t});\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class IndentationToTabsAction extends EditorAction {\n\tstatic ID = 'editor.action.indentationToTabs';\n\n\tconstructor(descriptor: IEditorActionDescriptorData, editor: ICommonCodeEditor) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tlet modelOpts = model.getOptions();\n\t\tconst command = new IndentationToTabsCommand(this.editor.getSelection(), modelOpts.tabSize);\n\t\tthis.editor.executeCommands(this.id, [command]);\n\t\tmodel.updateOptions({\n\t\t\tinsertSpaces: false\n\t\t});\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class ChangeIndentationSizeAction extends EditorAction {\n\n\tconstructor(descriptor: IEditorActionDescriptorData, editor: ICommonCodeEditor,\n\t\tprivate insertSpaces: boolean,\n\t\tprivate quickOpenService: IQuickOpenService,\n\t\tprivate modelService:IModelService\n\t) {\n\t\tsuper(descriptor, editor, Behaviour.Writeable);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet creationOpts = this.modelService.getCreationOptions();\n\t\tconst picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n\t\t\tid: n.toString(),\n\t\t\tlabel: n.toString(),\n\t\t\t// add description for tabSize value set in the configuration\n\t\t\tdescription: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : null\n\t\t}));\n\n\t\t// auto focus the tabSize set for the current editor\n\t\tconst autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n\n\t\treturn TPromise.timeout(50 /* quick open is sensitive to being opened so soon after another */).then(() =>\n\t\t\tthis.quickOpenService.pick(picks, { placeHolder: nls.localize({key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), autoFocus: { autoFocusIndex } }).then(pick => {\n\t\t\t\tif (pick) {\n\t\t\t\t\tmodel.updateOptions({\n\t\t\t\t\t\ttabSize: parseInt(pick.label, 10),\n\t\t\t\t\t\tinsertSpaces: this.insertSpaces\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n\n\tstatic ID = 'editor.action.indentUsingTabs';\n\n\tconstructor(\n\t\tdescriptor: IEditorActionDescriptorData,\n\t\teditor: ICommonCodeEditor,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService,\n\t\t@IModelService modelService:IModelService\n\t) {\n\t\tsuper(descriptor, editor, false, quickOpenService, modelService);\n\t}\n}\n\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n\n\tstatic ID = 'editor.action.indentUsingSpaces';\n\n\tconstructor(\n\t\tdescriptor: IEditorActionDescriptorData,\n\t\teditor: ICommonCodeEditor,\n\t\t@IQuickOpenService quickOpenService: IQuickOpenService,\n\t\t@IModelService modelService:IModelService\n\t) {\n\t\tsuper(descriptor, editor, true, quickOpenService, modelService);\n\t}\n}\n\nexport class DetectIndentation extends EditorAction {\n\n\tstatic ID = 'editor.action.detectIndentation';\n\n\tconstructor(\n\t\tdescriptor: IEditorActionDescriptorData,\n\t\teditor: ICommonCodeEditor,\n\t\t@IModelService private modelService:IModelService\n\t) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet creationOpts = this.modelService.getCreationOptions();\n\t\tmodel.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n\t}\n}\n\nexport class ToggleRenderWhitespaceAction extends EditorAction {\n\tstatic ID = 'editor.action.toggleRenderWhitespace';\n\n\tconstructor(descriptor: IEditorActionDescriptorData, editor: ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Behaviour.TextFocus);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tthis.editor.updateOptions({\n\t\t\trenderWhitespace: !this.editor.getConfiguration().renderWhitespace\n\t\t});\n\n\t\treturn TPromise.as(true);\n\t}\n}\n\n// register actions\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(IndentationToSpacesAction, IndentationToSpacesAction.ID, nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(IndentationToTabsAction, IndentationToTabsAction.ID, nls.localize('indentationToTabs', \"Convert Indentation to Tabs\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(IndentUsingSpaces, IndentUsingSpaces.ID, nls.localize('indentUsingSpaces', \"Indent Using Spaces\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(IndentUsingTabs, IndentUsingTabs.ID, nls.localize('indentUsingTabs', \"Indent Using Tabs\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(DetectIndentation, DetectIndentation.ID, nls.localize('detectIndentation', \"Detect Indentation from Content\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(ToggleRenderWhitespaceAction, ToggleRenderWhitespaceAction.ID, nls.localize('toggleRenderWhitespace', \"Toggle Render Whitespace\")));\n"]}