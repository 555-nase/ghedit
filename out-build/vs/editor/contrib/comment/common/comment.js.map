{"version":3,"sources":["vs/editor/contrib/comment/common/comment.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/comment/common/comment.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EditorAction} from 'vs/editor/common/editorAction';\nimport {ICommand, ICommonCodeEditor, IEditorActionDescriptorData} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry, ContextKey, EditorActionDescriptor} from 'vs/editor/common/editorCommonExtensions';\nimport {BlockCommentCommand} from './blockCommentCommand';\nimport {LineCommentCommand, Type} from './lineCommentCommand';\n\nclass CommentLineAction extends EditorAction {\n\n\tstatic ID = 'editor.action.commentLine';\n\n\tprivate _type: Type;\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor, type: Type) {\n\t\tsuper(descriptor, editor);\n\t\tthis._type = type;\n\t}\n\n\tpublic run(): TPromise<void> {\n\t\tlet model = this.editor.getModel();\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar commands: ICommand[] = [];\n\t\tvar selections = this.editor.getSelections();\n\t\tvar opts = model.getOptions();\n\n\t\tfor (var i = 0; i < selections.length; i++) {\n\t\t\tcommands.push(new LineCommentCommand(selections[i], opts.tabSize, this._type));\n\t\t}\n\n\t\tthis.editor.executeCommands(this.id, commands);\n\n\t\treturn TPromise.as(null);\n\t}\n}\n\nclass ToggleCommentLineAction extends CommentLineAction {\n\n\tstatic ID = 'editor.action.commentLine';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Type.Toggle);\n\t}\n}\n\nclass AddLineCommentAction extends CommentLineAction {\n\n\tstatic ID = 'editor.action.addCommentLine';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Type.ForceAdd);\n\t}\n\n}\n\nclass RemoveLineCommentAction extends CommentLineAction {\n\n\tstatic ID = 'editor.action.removeCommentLine';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Type.ForceRemove);\n\t}\n\n}\n\nclass BlockCommentAction extends EditorAction {\n\n\tstatic ID = 'editor.action.blockComment';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\n\t\tvar commands: ICommand[] = [];\n\t\tvar selections = this.editor.getSelections();\n\n\t\tfor (var i = 0; i < selections.length; i++) {\n\t\t\tcommands.push(new BlockCommentCommand(selections[i]));\n\t\t}\n\n\t\tthis.editor.executeCommands(this.id, commands);\n\n\t\treturn TPromise.as(null);\n\t}\n}\n\n// register actions\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(ToggleCommentLineAction, ToggleCommentLineAction.ID, nls.localize('comment.line', \"Toggle Line Comment\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.CtrlCmd | KeyCode.US_SLASH\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(AddLineCommentAction, AddLineCommentAction.ID, nls.localize('comment.line.add', \"Add Line Comment\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_C)\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(RemoveLineCommentAction, RemoveLineCommentAction.ID, nls.localize('comment.line.remove', \"Remove Line Comment\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_U)\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(BlockCommentAction, BlockCommentAction.ID, nls.localize('comment.block', \"Toggle Block Comment\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_A,\n\tlinux: { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_A }\n}));\n"]}