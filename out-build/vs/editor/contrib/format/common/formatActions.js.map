{"version":3,"sources":["vs/editor/contrib/format/common/formatActions.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/format/common/formatActions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {IDisposable, cAll, dispose} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EditorAction} from 'vs/editor/common/editorAction';\nimport {Behaviour} from 'vs/editor/common/editorActionEnablement';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry, ContextKey, EditorActionDescriptor} from 'vs/editor/common/editorCommonExtensions';\nimport {FormatOnTypeRegistry, FormatRegistry} from 'vs/editor/common/modes';\nimport {formatAfterKeystroke, formatDocument, formatRange} from '../common/format';\nimport {EditOperationsCommand} from './formatCommand';\n\ninterface IFormatOnTypeResult {\n\trange: editorCommon.IEditorRange;\n\tid: string;\n\tlineText: string;\n}\n\nclass FormatOnType implements editorCommon.IEditorContribution {\n\n\tpublic static ID = 'editor.contrib.autoFormat';\n\n\tprivate editor: editorCommon.ICommonCodeEditor;\n\tprivate callOnDispose: IDisposable[];\n\tprivate callOnModel: Function[];\n\n\tconstructor(editor: editorCommon.ICommonCodeEditor) {\n\t\tthis.editor = editor;\n\t\tthis.callOnDispose = [];\n\t\tthis.callOnModel = [];\n\n\t\tthis.callOnDispose.push(editor.addListener2(editorCommon.EventType.ConfigurationChanged, () => this.update()));\n\t\tthis.callOnDispose.push(editor.addListener2(editorCommon.EventType.ModelChanged, () => this.update()));\n\t\tthis.callOnDispose.push(editor.addListener2(editorCommon.EventType.ModelModeChanged, () => this.update()));\n\t\tthis.callOnDispose.push(editor.addListener2(editorCommon.EventType.ModelModeSupportChanged,(e: editorCommon.IModeSupportChangedEvent) => {\n\t\t\tif (e.formattingSupport) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.callOnDispose.push(FormatOnTypeRegistry.onDidChange(this.update, this));\n\t}\n\n\tprivate update(): void {\n\n\t\t// clean up\n\t\tthis.callOnModel = cAll(this.callOnModel);\n\n\t\t// we are disabled\n\t\tif (!this.editor.getConfiguration().formatOnType) {\n\t\t\treturn;\n\t\t}\n\n\t\t// no model\n\t\tif (!this.editor.getModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = this.editor.getModel();\n\n\t\t// no support\n\t\tvar [support] = FormatOnTypeRegistry.ordered(model);\n\t\tif (!support || !support.autoFormatTriggerCharacters) {\n\t\t\treturn;\n\t\t}\n\n\t\t// register typing listeners that will trigger the format\n\t\tsupport.autoFormatTriggerCharacters.forEach(ch => {\n\t\t\tthis.callOnModel.push(this.editor.addTypingListener(ch, this.trigger.bind(this, ch)));\n\t\t});\n\t}\n\n\tprivate trigger(ch: string): void {\n\n\t\tif (this.editor.getSelections().length > 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar model = this.editor.getModel(),\n\t\t\tposition = this.editor.getPosition(),\n\t\t\tcanceled = false;\n\n\t\t// install a listener that checks if edits happens before the\n\t\t// position on which we format right now. Iff so, we won't\n\t\t// apply the format edits\n\t\tvar unbind = this.editor.addListener(editorCommon.EventType.ModelContentChanged,(e: editorCommon.IModelContentChangedEvent) => {\n\t\t\tif (e.changeType === editorCommon.EventType.ModelContentChangedFlush) {\n\t\t\t\t// a model.setValue() was called\n\t\t\t\tcanceled = true;\n\t\t\t} else if (e.changeType === editorCommon.EventType.ModelContentChangedLineChanged) {\n\t\t\t\tvar changedLine = (<editorCommon.IModelContentChangedLineChangedEvent>e).lineNumber;\n\t\t\t\tcanceled = changedLine <= position.lineNumber;\n\n\t\t\t} else if (e.changeType === editorCommon.EventType.ModelContentChangedLinesInserted) {\n\t\t\t\tvar insertLine = (<editorCommon.IModelContentChangedLinesInsertedEvent>e).fromLineNumber;\n\t\t\t\tcanceled = insertLine <= position.lineNumber;\n\n\t\t\t} else if (e.changeType === editorCommon.EventType.ModelContentChangedLinesDeleted) {\n\t\t\t\tvar deleteLine2 = (<editorCommon.IModelContentChangedLinesDeletedEvent>e).toLineNumber;\n\t\t\t\tcanceled = deleteLine2 <= position.lineNumber;\n\t\t\t}\n\n\t\t\tif (canceled) {\n\t\t\t\t// cancel only once\n\t\t\t\tunbind();\n\t\t\t}\n\t\t});\n\n\t\tlet modelOpts = model.getOptions();\n\n\t\tformatAfterKeystroke(model, position, ch, {\n\t\t\ttabSize: modelOpts.tabSize,\n\t\t\tinsertSpaces: modelOpts.insertSpaces\n\t\t}).then(edits => {\n\n\t\t\tunbind();\n\n\t\t\tif (canceled || arrays.isFalsyOrEmpty(edits)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.executeCommand(this.getId(), new EditOperationsCommand(edits, this.editor.getSelection()));\n\n\t\t},(err) => {\n\t\t\tunbind();\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tpublic getId(): string {\n\t\treturn FormatOnType.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.callOnDispose = dispose(this.callOnDispose);\n\t\twhile (this.callOnModel.length > 0) {\n\t\t\tthis.callOnModel.pop()();\n\t\t}\n\t}\n}\n\nexport class FormatAction extends EditorAction {\n\n\tpublic static ID = 'editor.action.format';\n\n\tprivate _disposable: IDisposable;\n\n\tconstructor(descriptor:editorCommon.IEditorActionDescriptorData, editor:editorCommon.ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Behaviour.WidgetFocus | Behaviour.Writeable | Behaviour.UpdateOnModelChange | Behaviour.ShowInContextMenu);\n\t\tthis._disposable = FormatRegistry.onDidChange(() => this.resetEnablementState());\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tthis._disposable.dispose();\n\t}\n\n\tpublic getGroupId(): string {\n\t\treturn '2_change/2_format';\n\t}\n\n\tpublic isSupported(): boolean {\n\t\treturn FormatRegistry.has(this.editor.getModel()) && super.isSupported();\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\n\t\tconst model = this.editor.getModel(),\n\t\t\teditorSelection = this.editor.getSelection(),\n\t\t\tmodelOpts = model.getOptions(),\n\t\t\toptions = {\n\t\t\t\ttabSize: modelOpts.tabSize,\n\t\t\t\tinsertSpaces: modelOpts.insertSpaces,\n\t\t\t};\n\n\t\tlet formattingPromise: TPromise<editorCommon.ISingleEditOperation[]>;\n\n\t\tif (editorSelection.isEmpty()) {\n\t\t\tformattingPromise = formatDocument(model, options);\n\t\t} else {\n\t\t\tformattingPromise = formatRange(model, editorSelection, options);\n\t\t}\n\n\t\tif (!formattingPromise) {\n\t\t\treturn TPromise.as(false);\n\t\t}\n\n\t\t// Capture the state of the editor\n\t\tvar state = this.editor.captureState(editorCommon.CodeEditorStateFlag.Value, editorCommon.CodeEditorStateFlag.Position);\n\n\t\t// Receive formatted value from worker\n\t\treturn formattingPromise.then((result: editorCommon.ISingleEditOperation[]) => {\n\n\t\t\tif (!state.validate(this.editor)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!result || result.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.apply(this.editor, editorSelection, result);\n\t\t\tthis.editor.focus();\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tpublic apply(editor: editorCommon.ICommonCodeEditor, editorSelection: editorCommon.IEditorSelection, value: editorCommon.ISingleEditOperation[]): void {\n\t\tvar state: editorCommon.IEditorViewState = null;\n\n\t\tif (editorSelection.isEmpty()) {\n\t\t\tstate = editor.saveViewState();\n\t\t}\n\t\tvar command = new EditOperationsCommand(value, editorSelection);\n\t\teditor.executeCommand(this.id, command);\n\n\t\tif (state) {\n\t\t\teditor.restoreViewState(state);\n\t\t}\n\t}\n}\n\n// register action\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(FormatAction, FormatAction.ID, nls.localize('formatAction.label', \"Format Code\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_F,\n\tlinux: { primary:KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_I }\n}));\nCommonEditorRegistry.registerEditorContribution(FormatOnType);"]}