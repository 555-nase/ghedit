{"version":3,"file":"vs/editor/contrib/format/common/format.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/format/common/format.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {illegalArgument} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IModel, IPosition, IRange, ISingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {FormatRegistry, FormatOnTypeRegistry, IFormattingOptions} from 'vs/editor/common/modes';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\nexport function formatRange(model: IModel, range: IRange, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatRegistry.ordered(model)\n\t\t.filter(s => typeof s.formatRange === 'function');\n\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\treturn support.formatRange(model.getAssociatedResource(), range, options);\n}\n\nexport function formatDocument(model: IModel, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatRegistry.ordered(model);\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\tif (typeof support.formatDocument !== 'function') {\n\t\tif (typeof support.formatRange === 'function') {\n\t\t\treturn formatRange(model, model.getFullModelRange(), options);\n\t\t} else {\n\t\t\treturn TPromise.as(undefined);\n\t\t}\n\t}\n\n\treturn support.formatDocument(model.getAssociatedResource(), options);\n}\n\nexport function formatAfterKeystroke(model: IModel, position: IPosition, ch: string, options: IFormattingOptions): TPromise<ISingleEditOperation[]> {\n\tconst [support] = FormatOnTypeRegistry.ordered(model);\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\tif (support.autoFormatTriggerCharacters.indexOf(ch) < 0) {\n\t\treturn TPromise.as(undefined);\n\t}\n\treturn support.formatAfterKeystroke(model.getAssociatedResource(), position, ch, options);\n}\n\nCommonEditorRegistry.registerLanguageCommand('_executeFormatRangeProvider', function(accessor, args) {\n\tconst {resource, range, options} = args;\n\tif (!(resource instanceof URI) || !Range.isIRange(range)) {\n\t\tthrow illegalArgument();\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\treturn formatRange(model, range, options);\n});\n\nCommonEditorRegistry.registerLanguageCommand('_executeFormatDocumentProvider', function(accessor, args) {\n\tconst {resource, options} = args;\n\tif (!(resource instanceof URI)) {\n\t\tthrow illegalArgument('resource');\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\n\treturn formatDocument(model, options);\n});\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeFormatOnTypeProvider', function(model, position, args) {\n\tconst {ch, options } = args;\n\tif (typeof ch !== 'string') {\n\t\tthrow illegalArgument('ch');\n\t}\n\treturn formatAfterKeystroke(model, position, ch, options);\n});\n"]}