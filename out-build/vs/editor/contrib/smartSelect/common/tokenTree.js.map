{"version":3,"file":"vs/editor/contrib/smartSelect/common/tokenTree.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/smartSelect/common/tokenTree.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {ILineTokens, IModel, IPosition, IRange, IRichEditBracket} from 'vs/editor/common/editorCommon';\nimport {IModeTransition, IRichEditBrackets} from 'vs/editor/common/modes';\nimport {ignoreBracketsInToken} from 'vs/editor/common/modes/supports';\nimport {BracketsUtils} from 'vs/editor/common/modes/supports/richEditBrackets';\n\nexport enum TokenTreeBracket {\n\tNone = 0,\n\tOpen = 1,\n\tClose = -1\n}\n\nexport class Node {\n\n\tstart: IPosition;\n\n\tend: IPosition;\n\n\tget range(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this.start.lineNumber,\n\t\t\tstartColumn: this.start.column,\n\t\t\tendLineNumber: this.end.lineNumber,\n\t\t\tendColumn: this.end.column\n\t\t};\n\t}\n\n\tparent: Node;\n}\n\nexport class NodeList extends Node {\n\n\tchildren: Node[];\n\n\tget start(): IPosition {\n\t\treturn this.hasChildren\n\t\t\t? this.children[0].start\n\t\t\t: this.parent.start;\n\t}\n\n\tget end(): IPosition {\n\t\treturn this.hasChildren\n\t\t\t? this.children[this.children.length - 1].end\n\t\t\t: this.parent.end;\n\t}\n\n\tget hasChildren() {\n\t\treturn this.children && this.children.length > 0;\n\t}\n\n\tpublic append(node: Node): boolean {\n\t\tif (!node) {\n\t\t\treturn false;\n\t\t}\n\t\tnode.parent = this;\n\t\tif (!this.children) {\n\t\t\tthis.children = [];\n\t\t}\n\t\tif (node instanceof NodeList) {\n\t\t\tif (node.children) {\n\t\t\t\tthis.children.push.apply(this.children, node.children);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.children.push(node);\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class Block extends Node {\n\n\topen: Node;\n\tclose: Node;\n\telements: NodeList;\n\n\tget start(): IPosition {\n\t\treturn this.open.start;\n\t}\n\n\tget end(): IPosition {\n\t\treturn this.close.end;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.elements = new NodeList();\n\t\tthis.elements.parent = this;\n\t}\n}\n\ninterface Token {\n\trange: IRange;\n\tbracket: TokenTreeBracket;\n\ttype: string;\n\t__debugContent?: string;\n}\n\nfunction newNode(token: Token): Node {\n\tvar node = new Node();\n\tnode.start = Position.startPosition(token.range);\n\tnode.end = Position.endPosition(token.range);\n\treturn node;\n}\n\nclass TokenScanner {\n\n\tprivate _model: IModel;\n\tprivate _versionId: number;\n\tprivate _currentLineNumber: number;\n\tprivate _currentTokenIndex: number;\n\tprivate _currentTokenStart: number;\n\tprivate _currentLineTokens: ILineTokens;\n\tprivate _currentLineModeTransitions: IModeTransition[];\n\tprivate _currentModeIndex: number;\n\tprivate _nextModeStart: number;\n\tprivate _currentModeBrackets: IRichEditBrackets;\n\tprivate _currentLineText: string;\n\n\tconstructor(model: IModel) {\n\t\tthis._model = model;\n\t\tthis._versionId = model.getVersionId();\n\t\tthis._currentLineNumber = 1;\n\t}\n\n\tnext(): Token {\n\t\tif (this._versionId !== this._model.getVersionId()) {\n\t\t\t// model has been modified\n\t\t\treturn null;\n\t\t}\n\t\tif (this._currentLineNumber >= this._model.getLineCount() + 1) {\n\t\t\t// all line visisted\n\t\t\treturn null;\n\t\t}\n\t\tif (!this._currentLineTokens) {\n\t\t\t// no tokens for this line\n\t\t\tthis._currentLineTokens = this._model.getLineTokens(this._currentLineNumber);\n\t\t\tthis._currentLineText = this._model.getLineContent(this._currentLineNumber);\n\t\t\tthis._currentLineModeTransitions = this._model._getLineModeTransitions(this._currentLineNumber);\n\t\t\tthis._currentTokenIndex = 0;\n\t\t\tthis._currentTokenStart = 0;\n\t\t\tthis._currentModeIndex = -1;\n\t\t\tthis._nextModeStart = 0;\n\t\t}\n\t\tif (this._currentTokenIndex >= this._currentLineTokens.getTokenCount()) {\n\t\t\t// last token of line visited\n\t\t\tthis._currentLineNumber += 1;\n\t\t\tthis._currentLineTokens = null;\n\t\t\treturn this.next();\n\t\t}\n\n\t\tif (this._currentTokenStart >= this._nextModeStart) {\n\t\t\tthis._currentModeIndex++;\n\t\t\tthis._nextModeStart = (this._currentModeIndex + 1 < this._currentLineModeTransitions.length ? this._currentLineModeTransitions[this._currentModeIndex + 1].startIndex : this._currentLineText.length + 1);\n\t\t\tlet mode = (this._currentModeIndex < this._currentLineModeTransitions.length ? this._currentLineModeTransitions[this._currentModeIndex] : null);\n\t\t\tthis._currentModeBrackets = (mode && mode.mode.richEditSupport ? mode.mode.richEditSupport.brackets : null);\n\t\t}\n\n\t\tlet tokenType = this._currentLineTokens.getTokenType(this._currentTokenIndex);\n\t\tlet tokenEndIndex = this._currentLineTokens.getTokenEndIndex(this._currentTokenIndex, this._currentLineText.length);\n\t\tlet tmpTokenEndIndex = tokenEndIndex;\n\n\t\tlet nextBracket: Range = null;\n\t\tif (this._currentModeBrackets && !ignoreBracketsInToken(tokenType)) {\n\t\t\tnextBracket = BracketsUtils.findNextBracketInToken(this._currentModeBrackets.forwardRegex, this._currentLineNumber, this._currentLineText, this._currentTokenStart, tokenEndIndex);\n\t\t}\n\n\t\tif (nextBracket && this._currentTokenStart < nextBracket.startColumn - 1) {\n\t\t\t// found a bracket, but it is not at the beginning of the token\n\t\t\ttmpTokenEndIndex = nextBracket.startColumn - 1;\n\t\t\tnextBracket = null;\n\t\t}\n\n\t\tlet bracketData: IRichEditBracket = null;\n\t\tlet bracketIsOpen: boolean = false;\n\t\tif (nextBracket) {\n\t\t\tlet bracketText = this._currentLineText.substring(nextBracket.startColumn - 1, nextBracket.endColumn - 1);\n\t\t\tbracketData = this._currentModeBrackets.textIsBracket[bracketText];\n\t\t\tbracketIsOpen = this._currentModeBrackets.textIsOpenBracket[bracketText];\n\t\t}\n\n\t\tif (!bracketData) {\n\t\t\tlet token: Token = {\n\t\t\t\ttype: tokenType,\n\t\t\t\tbracket: TokenTreeBracket.None,\n\t\t\t\trange: {\n\t\t\t\t\tstartLineNumber: this._currentLineNumber,\n\t\t\t\t\tstartColumn: 1 + this._currentTokenStart,\n\t\t\t\t\tendLineNumber: this._currentLineNumber,\n\t\t\t\t\tendColumn: 1 + tmpTokenEndIndex\n\t\t\t\t}\n\t\t\t};\n\t\t\t// console.log('TOKEN: <<' + this._currentLineText.substring(this._currentTokenStart, tmpTokenEndIndex) + '>>');\n\n\t\t\tif (tmpTokenEndIndex < tokenEndIndex) {\n\t\t\t\t// there is a bracket somewhere in this token...\n\t\t\t\tthis._currentTokenStart = tmpTokenEndIndex;\n\t\t\t} else {\n\t\t\t\tthis._currentTokenIndex += 1;\n\t\t\t\tthis._currentTokenStart = (this._currentTokenIndex < this._currentLineTokens.getTokenCount() ? this._currentLineTokens.getTokenStartIndex(this._currentTokenIndex) : 0);\n\t\t\t}\n\t\t\treturn token;\n\t\t}\n\n\t\tlet type = `${bracketData.modeId};${bracketData.open};${bracketData.close}`;\n\t\tlet token: Token = {\n\t\t\ttype: type,\n\t\t\tbracket: bracketIsOpen ? TokenTreeBracket.Open : TokenTreeBracket.Close,\n\t\t\trange: {\n\t\t\t\tstartLineNumber: this._currentLineNumber,\n\t\t\t\tstartColumn: 1 + this._currentTokenStart,\n\t\t\t\tendLineNumber: this._currentLineNumber,\n\t\t\t\tendColumn: nextBracket.endColumn\n\t\t\t}\n\t\t};\n\t\t// console.log('BRACKET: <<' + this._currentLineText.substring(this._currentTokenStart, nextBracket.endColumn - 1) + '>>');\n\n\t\tif (nextBracket.endColumn - 1 < tokenEndIndex) {\n\t\t\t// found a bracket, but it is not at the end of the token\n\t\t\tthis._currentTokenStart = nextBracket.endColumn - 1;\n\t\t} else {\n\t\t\tthis._currentTokenIndex += 1;\n\t\t\tthis._currentTokenStart = (this._currentTokenIndex < this._currentLineTokens.getTokenCount() ? this._currentLineTokens.getTokenStartIndex(this._currentTokenIndex) : 0);\n\t\t}\n\t\treturn token;\n\t}\n}\n\nclass TokenTreeBuilder {\n\n\tprivate _scanner: TokenScanner;\n\tprivate _stack: Token[] = [];\n\tprivate _currentToken: Token;\n\n\tconstructor(model: IModel) {\n\t\tthis._scanner = new TokenScanner(model);\n\t}\n\n\tpublic build(): Node {\n\t\tvar node = new NodeList();\n\t\twhile (node.append(this._line() || this._any())) {\n\t\t\t// accept all\n\t\t}\n\t\treturn node;\n\t}\n\n\tprivate _accept(condt: (info: Token) => boolean): boolean {\n\t\tvar token = this._stack.pop() || this._scanner.next();\n\t\tif (!token) {\n\t\t\treturn false;\n\t\t}\n\t\tvar accepted = condt(token);\n\t\tif (!accepted) {\n\t\t\tthis._stack.push(token);\n\t\t\tthis._currentToken = null;\n\t\t} else {\n\t\t\tthis._currentToken = token;\n\t\t\t//\t\t\tconsole.log('accepted: ' + token.__debugContent);\n\t\t}\n\t\treturn accepted;\n\t}\n\n\tprivate _peek(condt: (info: Token) => boolean): boolean {\n\t\tvar ret = false;\n\t\tthis._accept(info => {\n\t\t\tret = condt(info);\n\t\t\treturn false;\n\t\t});\n\t\treturn ret;\n\t}\n\n\tprivate _line(): Node {\n\t\tvar node = new NodeList(),\n\t\t\tlineNumber: number;\n\n\t\t// capture current linenumber\n\t\tthis._peek(info => {\n\t\t\tlineNumber = info.range.startLineNumber;\n\t\t\treturn false;\n\t\t});\n\n\t\twhile (this._peek(info => info.range.startLineNumber === lineNumber)\n\t\t\t&& node.append(this._token() || this._block())) {\n\n\t\t\t// all children that started on this line\n\t\t}\n\n\t\tif (!node.children || node.children.length === 0) {\n\t\t\treturn null;\n\t\t} else if (node.children.length === 1) {\n\t\t\treturn node.children[0];\n\t\t} else {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\tprivate _token(): Node {\n\t\tif (!this._accept(token => token.bracket === TokenTreeBracket.None)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn newNode(this._currentToken);\n\t}\n\n\tprivate _block(): Node {\n\n\t\tvar bracketType: string,\n\t\t\taccepted: boolean;\n\n\t\taccepted = this._accept(token => {\n\t\t\tbracketType = token.type;\n\t\t\treturn token.bracket === TokenTreeBracket.Open;\n\t\t});\n\t\tif (!accepted) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar bracket = new Block();\n\t\tbracket.open = newNode(this._currentToken);\n\t\twhile (bracket.elements.append(this._line())) {\n\t\t\t// inside brackets\n\t\t}\n\n\t\tif (!this._accept(token => token.bracket === TokenTreeBracket.Close && token.type === bracketType)) {\n\t\t\t// missing closing bracket -> return just a node list\n\t\t\tvar nodelist = new NodeList();\n\t\t\tnodelist.append(bracket.open);\n\t\t\tnodelist.append(bracket.elements);\n\t\t\treturn nodelist;\n\t\t}\n\n\t\tbracket.close = newNode(this._currentToken);\n\t\treturn bracket;\n\t}\n\n\tprivate _any(): Node {\n\t\tif (!this._accept(_ => true)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn newNode(this._currentToken);\n\t}\n}\n\n/**\n * Parses this grammar:\n *\tgrammer = { line }\n *\tline = { block | \"token\" }\n *\tblock = \"open_bracket\" { line } \"close_bracket\"\n */\nexport function build(model: IModel): Node {\n\tvar node = new TokenTreeBuilder(model).build();\n\treturn node;\n}\n\nexport function find(node: Node, position: IPosition): Node {\n\n\tif (!Range.containsPosition(node.range, position)) {\n\t\treturn null;\n\t}\n\n\tvar result: Node;\n\n\tif (node instanceof NodeList) {\n\t\tfor (var i = 0, len = node.children.length; i < len && !result; i++) {\n\t\t\tresult = find(node.children[i], position);\n\t\t}\n\n\t} else if (node instanceof Block) {\n\t\tresult = find(node.open, position) || find(node.elements, position) || find(node.close, position);\n\t}\n\n\treturn result || node;\n}"]}