{"version":3,"sources":["vs/editor/contrib/quickOpen/browser/quickOutline.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/quickOpen/browser/quickOutline.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n'use strict';\n\nimport 'vs/css!./quickOutline';\nimport * as nls from 'vs/nls';\nimport * as arrays from 'vs/base/common/arrays';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport {matchesFuzzy} from 'vs/base/common/filters';\nimport * as strings from 'vs/base/common/strings';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IContext, IHighlight, QuickOpenEntryGroup, QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {IAutoFocus, Mode} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {Behaviour} from 'vs/editor/common/editorActionEnablement';\nimport {ICommonCodeEditor, IEditorActionDescriptorData, IRange} from 'vs/editor/common/editorCommon';\nimport {IOutlineEntry} from 'vs/editor/common/modes';\nimport {BaseEditorQuickOpenAction, IDecorator} from './editorQuickOpen';\n\nlet SCOPE_PREFIX = ':';\n\nclass SymbolEntry extends QuickOpenEntryGroup {\n\tprivate name: string;\n\tprivate type: string;\n\tprivate description: string;\n\tprivate range: IRange;\n\tprivate editor: ICommonCodeEditor;\n\tprivate decorator: IDecorator;\n\n\tconstructor(name: string, type: string, description: string, range: IRange, highlights: IHighlight[], editor: ICommonCodeEditor, decorator: IDecorator) {\n\t\tsuper();\n\n\t\tthis.name = name;\n\t\tthis.type = type;\n\t\tthis.description = description;\n\t\tthis.range = range;\n\t\tthis.setHighlights(highlights);\n\t\tthis.editor = editor;\n\t\tthis.decorator = decorator;\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('entryAriaLabel', \"{0}, symbols\", this.name);\n\t}\n\n\tpublic getIcon(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getDescription(): string {\n\t\treturn this.description;\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getRange(): IRange {\n\t\treturn this.range;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\treturn this.runOpen(context);\n\t\t}\n\n\t\treturn this.runPreview();\n\t}\n\n\tprivate runOpen(context: IContext): boolean {\n\n\t\t// Apply selection and focus\n\t\tlet range = this.toSelection();\n\t\tthis.editor.setSelection(range);\n\t\tthis.editor.revealRangeInCenter(range);\n\t\tthis.editor.focus();\n\n\t\treturn true;\n\t}\n\n\tprivate runPreview(): boolean {\n\n\t\t// Select Outline Position\n\t\tlet range = this.toSelection();\n\t\tthis.editor.revealRangeInCenter(range);\n\n\t\t// Decorate if possible\n\t\tthis.decorator.decorateLine(this.range, this.editor);\n\n\t\treturn false;\n\t}\n\n\tprivate toSelection(): IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this.range.startLineNumber,\n\t\t\tstartColumn: this.range.startColumn || 1,\n\t\t\tendLineNumber: this.range.startLineNumber,\n\t\t\tendColumn: this.range.startColumn || 1\n\t\t};\n\t}\n}\n\ninterface OutlineNode {\n\tlabel: string;\n\ttype: string;\n\trange: IRange;\n\tchildren?: OutlineNode[];\n\tparentScope?: string[];\n}\n\nexport class QuickOutlineAction extends BaseEditorQuickOpenAction {\n\n\tpublic static ID = 'editor.action.quickOutline';\n\n\tprivate cachedResult: IOutlineEntry[];\n\n\tconstructor(descriptor: IEditorActionDescriptorData, editor: ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, nls.localize('QuickOutlineAction.label', \"Go to Symbol...\"), Behaviour.WidgetFocus | Behaviour.ShowInContextMenu);\n\t}\n\n\tpublic getGroupId(): string {\n\t\treturn '1_goto/5_visitSymbol';\n\t}\n\n\tpublic isSupported(): boolean {\n\t\tlet mode = this.editor.getModel().getMode();\n\n\t\treturn !!mode && !!mode.outlineSupport && super.isSupported();\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet model = this.editor.getModel();\n\t\tlet mode = model.getMode();\n\t\tlet outlineSupport = mode.outlineSupport;\n\n\t\t// Only works for models with outline support\n\t\tif (!outlineSupport) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Resolve outline\n\t\tlet promise = outlineSupport.getOutline(model.getAssociatedResource());\n\t\treturn promise.then((result: IOutlineEntry[]) => {\n\t\t\tif (Array.isArray(result) && result.length > 0) {\n\n\t\t\t\t// Cache result\n\t\t\t\tthis.cachedResult = result;\n\n\t\t\t\treturn super.run();\n\t\t\t}\n\n\t\t\treturn TPromise.as(true);\n\t\t}, (err) => {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn false;\n\t\t});\n\t}\n\n\t_getModel(value: string): QuickOpenModel {\n\t\treturn new QuickOpenModel(this.toQuickOpenEntries(this.cachedResult, value));\n\t}\n\n\t_getAutoFocus(searchValue: string): IAutoFocus {\n\n\t\t// Remove any type pattern (:) from search value as needed\n\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tsearchValue = searchValue.substr(SCOPE_PREFIX.length);\n\t\t}\n\n\t\treturn {\n\t\t\tautoFocusPrefixMatch: searchValue,\n\t\t\tautoFocusFirstEntry: !!searchValue\n\t\t};\n\t}\n\n\t_getInputAriaLabel(): string {\n\t\treturn nls.localize('quickOutlineActionInput', \"Type the name of an identifier you wish to navigate to\");\n\t}\n\n\tprivate toQuickOpenEntries(outline: OutlineNode[], searchValue: string): SymbolEntry[] {\n\t\tlet results: SymbolEntry[] = [];\n\n\t\t// Flatten\n\t\tlet flattened: OutlineNode[] = [];\n\t\tif (outline) {\n\t\t\tthis.flatten(outline, flattened);\n\t\t}\n\n\t\t// Convert to Entries\n\t\tlet normalizedSearchValue = searchValue;\n\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tnormalizedSearchValue = normalizedSearchValue.substr(SCOPE_PREFIX.length);\n\t\t}\n\n\t\tfor (let i = 0; i < flattened.length; i++) {\n\t\t\tlet element = flattened[i];\n\t\t\tlet label = strings.trim(element.label);\n\n\t\t\t// Check for meatch\n\t\t\tlet highlights = matchesFuzzy(normalizedSearchValue, label);\n\t\t\tif (highlights) {\n\n\t\t\t\t// Show parent scope as description\n\t\t\t\tlet description: string = null;\n\t\t\t\tif (element.parentScope) {\n\t\t\t\t\tdescription = arrays.tail(element.parentScope);\n\t\t\t\t}\n\n\t\t\t\t// Add\n\t\t\t\tresults.push(new SymbolEntry(label, element.type, description, element.range, highlights, this.editor, this));\n\t\t\t}\n\t\t}\n\n\t\t// Sort properly if actually searching\n\t\tif (searchValue) {\n\t\t\tif (searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\t\tresults = results.sort(this.sortScoped.bind(this, searchValue.toLowerCase()));\n\t\t\t} else {\n\t\t\t\tresults = results.sort(this.sortNormal.bind(this, searchValue.toLowerCase()));\n\t\t\t}\n\t\t}\n\n\t\t// Mark all type groups\n\t\tif (results.length > 0 && searchValue.indexOf(SCOPE_PREFIX) === 0) {\n\t\t\tlet currentType: string = null;\n\t\t\tlet currentResult: SymbolEntry = null;\n\t\t\tlet typeCounter = 0;\n\n\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\tlet result = results[i];\n\n\t\t\t\t// Found new type\n\t\t\t\tif (currentType !== result.getType()) {\n\n\t\t\t\t\t// Update previous result with count\n\t\t\t\t\tif (currentResult) {\n\t\t\t\t\t\tcurrentResult.setGroupLabel(this.typeToLabel(currentType, typeCounter));\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentType = result.getType();\n\t\t\t\t\tcurrentResult = result;\n\t\t\t\t\ttypeCounter = 1;\n\n\t\t\t\t\tresult.setShowBorder(i > 0);\n\t\t\t\t}\n\n\t\t\t\t// Existing type, keep counting\n\t\t\t\telse {\n\t\t\t\t\ttypeCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update previous result with count\n\t\t\tif (currentResult) {\n\t\t\t\tcurrentResult.setGroupLabel(this.typeToLabel(currentType, typeCounter));\n\t\t\t}\n\t\t}\n\n\t\t// Mark first entry as outline\n\t\telse if (results.length > 0) {\n\t\t\tresults[0].setGroupLabel(nls.localize('symbols', \"symbols ({0})\", results.length));\n\t\t}\n\n\t\treturn results;\n\t}\n\n\tprivate typeToLabel(type: string, count: number): string {\n\t\tswitch (type) {\n\t\t\tcase 'module': return nls.localize('modules', \"modules ({0})\", count);\n\t\t\tcase 'class': return nls.localize('class', \"classes ({0})\", count);\n\t\t\tcase 'interface': return nls.localize('interface', \"interfaces ({0})\", count);\n\t\t\tcase 'method': return nls.localize('method', \"methods ({0})\", count);\n\t\t\tcase 'function': return nls.localize('function', \"functions ({0})\", count);\n\t\t\tcase 'property': return nls.localize('property', \"properties ({0})\", count);\n\t\t\tcase 'variable': return nls.localize('variable', \"variables ({0})\", count);\n\t\t\tcase 'var': return nls.localize('variable2', \"variables ({0})\", count);\n\t\t\tcase 'constructor': return nls.localize('_constructor', \"constructors ({0})\", count);\n\t\t\tcase 'call': return nls.localize('call', \"calls ({0})\", count);\n\t\t}\n\n\t\treturn type;\n\t}\n\n\tprivate flatten(outline: OutlineNode[], flattened: OutlineNode[], parentScope?: string[]): void {\n\t\tfor (let i = 0; i < outline.length; i++) {\n\t\t\tlet element = outline[i];\n\t\t\tflattened.push(element);\n\n\t\t\tif (parentScope) {\n\t\t\t\telement.parentScope = parentScope;\n\t\t\t}\n\n\t\t\tif (element.children) {\n\t\t\t\tlet elementScope: string[] = [];\n\t\t\t\tif (parentScope) {\n\t\t\t\t\telementScope = parentScope.slice(0);\n\t\t\t\t}\n\t\t\t\telementScope.push(element.label);\n\n\t\t\t\tthis.flatten(element.children, flattened, elementScope);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate sortNormal(searchValue: string, elementA: SymbolEntry, elementB: SymbolEntry): number {\n\t\tlet elementAName = elementA.getLabel().toLowerCase();\n\t\tlet elementBName = elementB.getLabel().toLowerCase();\n\n\t\t// Compare by name\n\t\tlet r = strings.localeCompare(elementAName, elementBName);\n\t\tif (r !== 0) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// If name identical sort by range instead\n\t\tlet elementARange = elementA.getRange();\n\t\tlet elementBRange = elementB.getRange();\n\t\treturn elementARange.startLineNumber - elementBRange.startLineNumber;\n\t}\n\n\tprivate sortScoped(searchValue: string, elementA: SymbolEntry, elementB: SymbolEntry): number {\n\n\t\t// Remove scope char\n\t\tsearchValue = searchValue.substr(SCOPE_PREFIX.length);\n\n\t\t// Sort by type first if scoped search\n\t\tlet elementAType = elementA.getType();\n\t\tlet elementBType = elementB.getType();\n\t\tlet r = strings.localeCompare(elementAType, elementBType);\n\t\tif (r !== 0) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// Special sort when searching in scoped mode\n\t\tif (searchValue) {\n\t\t\tlet elementAName = elementA.getLabel().toLowerCase();\n\t\t\tlet elementBName = elementB.getLabel().toLowerCase();\n\n\t\t\t// Compare by name\n\t\t\tlet r = strings.localeCompare(elementAName, elementBName);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// Default to sort by range\n\t\tlet elementARange = elementA.getRange();\n\t\tlet elementBRange = elementB.getRange();\n\t\treturn elementARange.startLineNumber - elementBRange.startLineNumber;\n\t}\n\n\t_onClose(canceled: boolean): void {\n\t\tsuper._onClose(canceled);\n\n\t\t// Clear Cache\n\t\tthis.cachedResult = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\t// Clear Cache\n\t\tthis.cachedResult = null;\n\t}\n}"]}