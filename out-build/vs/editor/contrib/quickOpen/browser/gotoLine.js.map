{"version":3,"sources":["vs/editor/contrib/quickOpen/browser/gotoLine.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/quickOpen/browser/gotoLine.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./gotoLine';\nimport * as nls from 'vs/nls';\nimport {IContext, QuickOpenEntry, QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {IAutoFocus, Mode} from 'vs/base/parts/quickopen/common/quickOpen';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ICodeEditor, IDiffEditor} from 'vs/editor/browser/editorBrowser';\nimport {BaseEditorQuickOpenAction, IDecorator} from './editorQuickOpen';\n\ninterface ParseResult {\n\tposition: editorCommon.IPosition;\n\tisValid: boolean;\n\tlabel: string;\n}\n\nexport class GotoLineEntry extends QuickOpenEntry {\n\n\tprivate _parseResult: ParseResult;\n\tprivate decorator: IDecorator;\n\tprivate editor: editorCommon.IEditor;\n\n\tconstructor(line: string, editor: editorCommon.IEditor, decorator: IDecorator) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\t\tthis.decorator = decorator;\n\t\tthis._parseResult = this._parseInput(line);\n\t}\n\n\n\tprivate _parseInput(line: string): ParseResult {\n\n\t\tlet numbers = line.split(',').map(part => parseInt(part, 10)).filter(part => !isNaN(part)),\n\t\t\tposition: editorCommon.IPosition;\n\n\t\tif (numbers.length === 0) {\n\t\t\tposition = { lineNumber: -1, column: -1 };\n\t\t} else if (numbers.length === 1) {\n\t\t\tposition = { lineNumber: numbers[0], column: 1 };\n\t\t} else {\n\t\t\tposition = { lineNumber: numbers[0], column: numbers[1] };\n\t\t}\n\n\t\tlet editorType = (<ICodeEditor>this.editor).getEditorType(),\n\t\t\tmodel: editorCommon.IModel;\n\n\t\tswitch (editorType) {\n\t\t\tcase editorCommon.EditorType.IDiffEditor:\n\t\t\t\tmodel = (<IDiffEditor>this.editor).getModel().modified;\n\t\t\t\tbreak;\n\n\t\t\tcase editorCommon.EditorType.ICodeEditor:\n\t\t\t\tmodel = (<ICodeEditor>this.editor).getModel();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error();\n\t\t}\n\n\t\tlet isValid = model.validatePosition(position).equals(position),\n\t\t\tlabel: string;\n\n\t\tif (isValid) {\n\t\t\tif (position.column && position.column > 1) {\n\t\t\t\tlabel = nls.localize('gotoLineLabelValidLineAndColumn', \"Go to line {0} and column {1}\", position.lineNumber, position.column);\n\t\t\t} else {\n\t\t\t\tlabel = nls.localize('gotoLineLabelValidLine', \"Go to line {0}\", position.lineNumber, position.column);\n\t\t\t}\n\t\t} else if (position.lineNumber < 1 || position.lineNumber > model.getLineCount()) {\n\t\t\tlabel = nls.localize('gotoLineLabelEmptyWithLineLimit', \"Type a line number between 1 and {0} to navigate to\", model.getLineCount());\n\t\t} else {\n\t\t\tlabel = nls.localize('gotoLineLabelEmptyWithLineAndColumnLimit', \"Type a column between 1 and {0} to navigate to\", model.getLineMaxColumn(position.lineNumber));\n\t\t}\n\n\t\treturn {\n\t\t\tposition: position,\n\t\t\tisValid: isValid,\n\t\t\tlabel: label\n\t\t};\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this._parseResult.label;\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\treturn nls.localize('gotoLineAriaLabel', \"Go to line {0}\", this._parseResult.label);\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\treturn this.runOpen();\n\t\t}\n\n\t\treturn this.runPreview();\n\t}\n\n\tpublic runOpen(): boolean {\n\n\t\t// No-op if range is not valid\n\t\tif (!this._parseResult.isValid) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Apply selection and focus\n\t\tlet range = this.toSelection();\n\t\t(<ICodeEditor>this.editor).setSelection(range);\n\t\t(<ICodeEditor>this.editor).revealRangeInCenter(range);\n\t\tthis.editor.focus();\n\n\t\treturn true;\n\t}\n\n\tpublic runPreview(): boolean {\n\n\t\t// No-op if range is not valid\n\t\tif (!this._parseResult.isValid) {\n\t\t\tthis.decorator.clearDecorations();\n\t\t\treturn false;\n\t\t}\n\n\t\t// Select Line Position\n\t\tlet range = this.toSelection();\n\t\tthis.editor.revealRangeInCenter(range);\n\n\t\t// Decorate if possible\n\t\tthis.decorator.decorateLine(range, this.editor);\n\n\t\treturn false;\n\t}\n\n\tprivate toSelection(): editorCommon.IRange {\n\t\treturn {\n\t\t\tstartLineNumber: this._parseResult.position.lineNumber,\n\t\t\tstartColumn: this._parseResult.position.column,\n\t\t\tendLineNumber: this._parseResult.position.lineNumber,\n\t\t\tendColumn: this._parseResult.position.column\n\t\t};\n\t}\n}\n\nexport class GotoLineAction extends BaseEditorQuickOpenAction {\n\n\tpublic static ID = 'editor.action.gotoLine';\n\n\tconstructor(descriptor: editorCommon.IEditorActionDescriptorData, editor: editorCommon.ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, nls.localize('GotoLineAction.label', \"Go to Line...\"));\n\t}\n\n\t_getModel(value: string): QuickOpenModel {\n\t\treturn new QuickOpenModel([new GotoLineEntry(value, this.editor, this)]);\n\t}\n\n\t_getAutoFocus(searchValue: string): IAutoFocus {\n\t\treturn {\n\t\t\tautoFocusFirstEntry: searchValue.length > 0\n\t\t};\n\t}\n\n\t_getInputAriaLabel(): string {\n\t\treturn nls.localize('gotoLineActionInput', \"Type a line number, followed by an optional colon and a column number to navigate to\");\n\t}\n}"]}