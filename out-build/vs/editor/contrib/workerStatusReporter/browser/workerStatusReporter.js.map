{"version":3,"file":"vs/editor/contrib/workerStatusReporter/browser/workerStatusReporter.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/workerStatusReporter/browser/workerStatusReporter.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./workerStatusReporter';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport * as browser from 'vs/base/browser/browser';\nimport {IThreadService, IThreadServiceStatus, IThreadServiceStatusListener} from 'vs/platform/thread/common/thread';\nimport {IEditorContribution} from 'vs/editor/common/editorCommon';\nimport {ICodeEditor, IOverlayWidgetPosition, OverlayWidgetPositionPreference} from 'vs/editor/browser/editorBrowser';\n\nclass WorkerStatusReporter implements IEditorContribution, IThreadServiceStatusListener {\n\n\tpublic static ID = 'editor.contrib.workerStatusReporter';\n\n\tprivate _editor:ICodeEditor;\n\tprivate _toDispose:IDisposable[];\n\tprivate _threadService:IThreadService;\n\n\tprivate _domNode:HTMLElement;\n\tprivate _domNodes:HTMLElement[];\n\n\tconstructor(editor:ICodeEditor, @IThreadService threadService: IThreadService) {\n\t\tthis._threadService = threadService;\n\t\tthis._threadService.addStatusListener(this);\n\t\tthis._editor = editor;\n\t\tthis._toDispose = [];\n\n\t\tthis._domNodes = [];\n\n\t\tthis._domNode = document.createElement('div');\n\t\tthis._domNode.className = 'monaco-worker-status';\n\t\tif (browser.canUseTranslate3d) {\n\t\t\t// Put the worker reporter in its own layer\n\t\t\tthis._domNode.style.transform = 'translate3d(0px, 0px, 0px)';\n\t\t}\n\t\tthis._editor.addOverlayWidget(this);\n\t}\n\n\tpublic getId():string {\n\t\treturn WorkerStatusReporter.ID;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._threadService.removeStatusListener(this);\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tpublic getDomNode():HTMLElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition():IOverlayWidgetPosition {\n\t\treturn { preference: OverlayWidgetPositionPreference.TOP_RIGHT_CORNER };\n\t}\n\n\tprivate _ensureDomNodes(desiredCount:number): void {\n\t\t// Remove extra dom nodes\n\t\tfor (var i = this._domNodes.length - 1; i >= desiredCount; i++) {\n\t\t\tthis._domNode.removeChild(this._domNodes[i]);\n\t\t\tthis._domNodes.splice(i, 1);\n\t\t}\n\n\t\t// Create new dom nodes\n\t\tfor (var i = this._domNodes.length; i < desiredCount; i++) {\n\t\t\tthis._domNodes[i] = document.createElement('div');\n\t\t\tthis._domNodes[i].className = 'worker';\n\t\t\tthis._domNode.appendChild(this._domNodes[i]);\n\t\t}\n\t}\n\n\tpublic onThreadServiceStatus(status:IThreadServiceStatus): void {\n\t\tthis._ensureDomNodes(status.workers.length);\n\t\tfor (var i = 0; i < status.workers.length; i++) {\n\t\t\tvar cnt = status.workers[i].queueSize;\n\t\t\tvar workerStatus = 'idle';\n\t\t\tif (cnt > 5) {\n\t\t\t\tworkerStatus = 'flooded';\n\t\t\t} else if (cnt > 0) {\n\t\t\t\tworkerStatus = 'busy';\n\t\t\t}\n\t\t\tattr(this._domNodes[i], 'status', workerStatus);\n\t\t}\n\t}\n}\n\nfunction attr(target:HTMLElement, attrName:string, attrValue:string): void {\n\ttarget.setAttribute(attrName, attrValue);\n}\n\n// if (false) { //TODO@Debt\n// \tEditorBrowserRegistry.registerEditorContribution(WorkerStatusReporter);\n// }"]}