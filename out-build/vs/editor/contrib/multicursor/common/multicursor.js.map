{"version":3,"sources":["vs/editor/contrib/multicursor/common/multicursor.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/multicursor/common/multicursor.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EditorAction, HandlerEditorAction} from 'vs/editor/common/editorAction';\nimport {Handler, ICommonCodeEditor, IEditorActionDescriptorData, ISelection} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry, ContextKey, EditorActionDescriptor} from 'vs/editor/common/editorCommonExtensions';\n\nclass InsertCursorAbove extends HandlerEditorAction {\n\tstatic ID = 'editor.action.insertCursorAbove';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Handler.AddCursorUp);\n\t}\n}\n\nclass InsertCursorBelow extends HandlerEditorAction {\n\tstatic ID = 'editor.action.insertCursorBelow';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor, Handler.AddCursorDown);\n\t}\n}\n\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\n\tstatic ID = 'editor.action.insertCursorAtEndOfEachLineSelected';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tlet selection = this.editor.getSelection();\n\t\tif(!selection.isEmpty()) {\n\t\t\tlet model = this.editor.getModel();\n\t\t\tlet newSelections = new Array<ISelection>();\n\t\t\tlet selectionStart = selection.getStartPosition();\n\t\t\tlet selectionEnd = selection.getEndPosition();\n\t\t\tfor (var i = selectionStart.lineNumber; i <= selectionEnd.lineNumber; i++) {\n\t\t\t\tif(i !== selectionEnd.lineNumber) {\n\t\t\t\t\tlet currentLineMaxColumn = model.getLineMaxColumn(i);\n\t\t\t\t\tnewSelections.push({\n\t\t\t\t\t\tselectionStartLineNumber: i,\n\t\t\t\t\t\tselectionStartColumn: currentLineMaxColumn,\n\t\t\t\t\t\tpositionLineNumber: i,\n\t\t\t\t\t\tpositionColumn: currentLineMaxColumn\n\t\t\t\t\t});\n\t\t\t\t} else if( selectionEnd.column > 0 ) {\n\t\t\t\t\tnewSelections.push({\n\t\t\t\t\t\tselectionStartLineNumber: selectionEnd.lineNumber,\n\t\t\t\t\t\tselectionStartColumn: selectionEnd.column,\n\t\t\t\t\t\tpositionLineNumber: selectionEnd.lineNumber,\n\t\t\t\t\t\tpositionColumn: selectionEnd.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.editor.setSelections(newSelections);\n\t\t}\n\t\treturn TPromise.as(true);\n\t}\n}\n\n\n// register actions\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(InsertCursorAbove, InsertCursorAbove.ID, nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.UpArrow,\n\tlinux: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.UpArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.UpArrow]\n\t}\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(InsertCursorBelow, InsertCursorBelow.ID, nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Alt | KeyCode.DownArrow,\n\tlinux: {\n\t\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.DownArrow,\n\t\tsecondary: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.DownArrow]\n\t}\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(InsertCursorAtEndOfEachLineSelected, InsertCursorAtEndOfEachLineSelected.ID, nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Create Multiple Cursors from Selected Lines\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.Shift | KeyMod.Alt | KeyCode.KEY_I\n}));\n"]}