{"version":3,"file":"vs/editor/contrib/folding/test/indentFold.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/folding/test/indentFold.test.ts"],"names":[],"mappings":"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AAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAC3J,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACzH,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACzH,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1G,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9F,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C,MAAM,CAAC,SAAS,CAAC,kCAAa,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE;YAC5B,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,KAAK,CAAC,uCAAkB,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IAEJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {Model} from 'vs/editor/common/model/model';\nimport {IFoldingRange} from 'vs/editor/contrib/folding/common/foldingRange';\nimport {computeRanges, limitByIndent, computeIndentLevel} from 'vs/editor/contrib/folding/common/indentFoldStrategy';\n\nsuite('Indentation Folding', () => {\n\tfunction assertRanges(lines: string[], tabSize: number, expected:IFoldingRange[]): void {\n\t\tlet model = new Model(lines.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\t\tlet actual = computeRanges(model, tabSize);\n\t\tactual.sort((r1, r2) => r1.startLineNumber - r2.startLineNumber);\n\t\tassert.deepEqual(actual, expected);\n\t\tmodel.dispose();\n\t}\n\n\tfunction r(startLineNumber: number, endLineNumber: number, indent: number): IFoldingRange {\n\t\treturn { startLineNumber, endLineNumber, indent };\n\t}\n\n\ttest('Fold one level', () => {\n\t\tassertRanges([\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'  A',\n\t\t\t'  A'\n\t\t], 4, [r(1, 4, 0)]);\n\t});\n\n\ttest('Fold two levels', () => {\n\t\tassertRanges([\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'  A',\n\t\t\t'    A',\n\t\t\t'    A'\n\t\t], 4, [r(1, 5, 0), r(3, 5, 2)] );\n\t});\n\n\ttest('Fold three levels', () => {\n\t\tassertRanges([\n\t\t\t'A',\n\t\t\t'  A',\n\t\t\t'    A',\n\t\t\t'      A',\n\t\t\t'A'\n\t\t], 4, [r(1, 4, 0), r(2, 4, 2), r(3, 4, 4)] );\n\t});\n\n\ttest('Fold decreasing indent', () => {\n\t\tassertRanges([\n\t\t\t'    A',\n\t\t\t'  A',\n\t\t\t'A'\n\t\t], 4, [] );\n\t});\n\n\ttest('Fold Java', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'  void foo() {',\n\t\t/* 3*/\t'    console.log();',\n\t\t/* 4*/\t'    console.log();',\n\t\t/* 5*/\t'  }',\n\t\t/* 6*/\t'',\n\t\t/* 7*/\t'  void bar() {',\n\t\t/* 8*/\t'    console.log();',\n\t\t/* 9*/\t'  }',\n\t\t/*10*/\t'}',\n\t\t/*11*/\t'interface B {',\n\t\t/*12*/\t'  void bar();',\n\t\t/*13*/\t'}',\n\t\t], 4, [r(1, 9, 0), r(2, 4, 2), r(7, 8, 2), r(11, 12, 0)] );\n\t});\n\n\ttest('Fold Javadoc', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'/**',\n\t\t/* 2*/\t' * Comment',\n\t\t/* 3*/\t' */',\n\t\t/* 4*/\t'class A {',\n\t\t/* 5*/\t'  void foo() {',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'}',\n\t\t], 4, [r(1, 3, 0), r(4, 6, 0)] );\n\t});\n\ttest('Fold Whitespace', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'',\n\t\t/* 3*/\t'  void foo() {',\n\t\t/* 4*/\t'     ',\n\t\t/* 5*/\t'     return 0;',\n\t\t/* 6*/\t'  }',\n\t\t/* 7*/\t'      ',\n\t\t/* 8*/\t'}',\n\t\t], 4, [r(1, 7, 0), r(3, 5, 2)] );\n\t});\n\n\ttest('Fold Tabs', () => {\n\t\tassertRanges([\n\t\t/* 1*/\t'class A {',\n\t\t/* 2*/\t'\\t\\t',\n\t\t/* 3*/\t'\\tvoid foo() {',\n\t\t/* 4*/\t'\\t \\t//hello',\n\t\t/* 5*/\t'\\t    return 0;',\n\t\t/* 6*/\t'  \\t}',\n\t\t/* 7*/\t'      ',\n\t\t/* 8*/\t'}',\n\t\t], 4, [r(1, 7, 0), r(3, 5, 4)] );\n\t});\n\n\ttest('Limit By indent', () => {\n\t\tlet ranges = [r(1, 4, 0), r(3, 4, 2), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0), r(10, 15, 10), r(11, 12, 2000), r(14, 15, 2000)];\n\t\tassert.deepEqual(limitByIndent(ranges, 8), [r(1, 4, 0), r(3, 4, 2), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0), r(10, 15, 10), r(11, 12, 2000), r(14, 15, 2000)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 7), [r(1, 4, 0), r(3, 4, 2), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0), r(10, 15, 10)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 6), [r(1, 4, 0), r(3, 4, 2), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0), r(10, 15, 10)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 5), [r(1, 4, 0), r(3, 4, 2), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 4), [r(1, 4, 0), r(5, 8, 0), r(6, 7, 1), r(9, 15, 0)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 3), [r(1, 4, 0), r(5, 8, 0), r(9, 15, 0)]);\n\t\tassert.deepEqual(limitByIndent(ranges, 2), []);\n\t\tassert.deepEqual(limitByIndent(ranges, 1), []);\n\t\tassert.deepEqual(limitByIndent(ranges, 0), []);\n\t});\n\n\ttest('Compute indent level', () => {\n\t\tassert.equal(computeIndentLevel('Hello', 4), 0);\n\t\tassert.equal(computeIndentLevel(' Hello', 4), 1);\n\t\tassert.equal(computeIndentLevel('   Hello', 4), 3);\n\t\tassert.equal(computeIndentLevel('\\tHello', 4), 4);\n\t\tassert.equal(computeIndentLevel(' \\tHello', 4), 4);\n\t\tassert.equal(computeIndentLevel('  \\tHello', 4), 4);\n\t\tassert.equal(computeIndentLevel('   \\tHello', 4), 4);\n\t\tassert.equal(computeIndentLevel('    \\tHello', 4), 8);\n\t\tassert.equal(computeIndentLevel('     \\tHello', 4), 8);\n\t\tassert.equal(computeIndentLevel('\\t Hello', 4), 5);\n\t\tassert.equal(computeIndentLevel('\\t \\tHello', 4), 8);\n\t});\n\n});\n"]}