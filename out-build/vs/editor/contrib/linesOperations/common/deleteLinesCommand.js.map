{"version":3,"file":"vs/editor/contrib/linesOperations/common/deleteLinesCommand.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/linesOperations/common/deleteLinesCommand.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb;QAcC,4BAAY,eAAsB,EAAE,aAAoB,EAAE,qBAA4B;YACrF,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;YACvC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;QACpD,CAAC;QAhBa,sCAAmB,GAAjC,UAAkC,SAA0B;YAC3D,IAAI,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;YAC5C,EAAE,CAAC,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,aAAa,IAAI,SAAS,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtF,aAAa,IAAI,CAAC,CAAC;YACpB,CAAC;YACD,MAAM,CAAC,IAAI,kBAAkB,CAAC,SAAS,CAAC,eAAe,EAAE,aAAa,EAAE,SAAS,CAAC,cAAc,CAAC,CAAC;QACnG,CAAC;QAYM,8CAAiB,GAAxB,UAAyB,KAAqB,EAAE,OAA6B;YAC5E,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACnE,iBAAiB;gBACjB,MAAM,CAAC;YACR,CAAC;YAED,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;YAC3C,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAEvC,IAAI,WAAW,GAAG,CAAC,CAAC;YACpB,IAAI,SAAS,GAAG,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,aAAa,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBAC1C,aAAa,IAAI,CAAC,CAAC;gBACnB,SAAS,GAAG,CAAC,CAAC;YACf,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC;gBAChC,eAAe,IAAI,CAAC,CAAC;gBACrB,WAAW,GAAG,KAAK,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;YACvD,CAAC;YAED,OAAO,CAAC,gBAAgB,CAAC,IAAI,aAAK,CAAC,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;QACnG,CAAC;QAEM,+CAAkB,GAAzB,UAA0B,KAAqB,EAAE,MAAgC;YAChF,IAAI,qBAAqB,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAC;YAC9D,IAAI,QAAQ,GAAG,qBAAqB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAC9C,MAAM,CAAC,qBAAS,CAAC,eAAe,CAC/B,QAAQ,CAAC,aAAa,EACtB,IAAI,CAAC,qBAAqB,EAC1B,QAAQ,CAAC,aAAa,EACtB,IAAI,CAAC,qBAAqB,CAC1B,CAAC;QACH,CAAC;QACF,yBAAC;IAAD,CAAC,AApDD,IAoDC;IApDY,0BAAkB,qBAoD9B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {ICommand, ICursorStateComputerData, IEditOperationBuilder, IEditorSelection, ITokenizedModel} from 'vs/editor/common/editorCommon';\n\n\nexport class DeleteLinesCommand implements ICommand {\n\n\tpublic static createFromSelection(selection:IEditorSelection): DeleteLinesCommand {\n\t\tvar endLineNumber = selection.endLineNumber;\n\t\tif (selection.startLineNumber < selection.endLineNumber && selection.endColumn === 1) {\n\t\t\tendLineNumber -= 1;\n\t\t}\n\t\treturn new DeleteLinesCommand(selection.startLineNumber, endLineNumber, selection.positionColumn);\n\t}\n\n\tprivate startLineNumber:number;\n\tprivate endLineNumber:number;\n\tprivate restoreCursorToColumn:number;\n\n\tconstructor(startLineNumber:number, endLineNumber:number, restoreCursorToColumn:number) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.endLineNumber = endLineNumber;\n\t\tthis.restoreCursorToColumn = restoreCursorToColumn;\n\t}\n\n\tpublic getEditOperations(model:ITokenizedModel, builder:IEditOperationBuilder):void {\n\t\tif (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n\t\t\t// Model is empty\n\t\t\treturn;\n\t\t}\n\n\t\tvar startLineNumber = this.startLineNumber;\n\t\tvar endLineNumber = this.endLineNumber;\n\n\t\tvar startColumn = 1;\n\t\tvar endColumn = model.getLineMaxColumn(endLineNumber);\n\t\tif (endLineNumber < model.getLineCount()) {\n\t\t\tendLineNumber += 1;\n\t\t\tendColumn = 1;\n\t\t} else if (startLineNumber > 1) {\n\t\t\tstartLineNumber -= 1;\n\t\t\tstartColumn = model.getLineMaxColumn(startLineNumber);\n\t\t}\n\n\t\tbuilder.addEditOperation(new Range(startLineNumber, startColumn, endLineNumber, endColumn), null);\n\t}\n\n\tpublic computeCursorState(model:ITokenizedModel, helper: ICursorStateComputerData):IEditorSelection {\n\t\tvar inverseEditOperations = helper.getInverseEditOperations();\n\t\tvar srcRange = inverseEditOperations[0].range;\n\t\treturn Selection.createSelection(\n\t\t\tsrcRange.endLineNumber,\n\t\t\tthis.restoreCursorToColumn,\n\t\t\tsrcRange.endLineNumber,\n\t\t\tthis.restoreCursorToColumn\n\t\t);\n\t}\n}\n"]}