{"version":3,"file":"copyLinesCommand.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/contrib/linesOperations/common/copyLinesCommand.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\n\nexport class CopyLinesCommand implements editorCommon.ICommand {\n\n\tprivate _selection: editorCommon.IEditorSelection;\n\tprivate _isCopyingDown: boolean;\n\n\tprivate _selectionDirection:editorCommon.SelectionDirection;\n\tprivate _selectionId: string;\n\tprivate _startLineNumberDelta: number;\n\tprivate _endLineNumberDelta: number;\n\n\tconstructor(selection: editorCommon.IEditorSelection, isCopyingDown: boolean) {\n\t\tthis._selection = selection;\n\t\tthis._isCopyingDown = isCopyingDown;\n\t}\n\n\tpublic getEditOperations(model:editorCommon.ITokenizedModel, builder:editorCommon.IEditOperationBuilder):void {\n\t\tvar s = this._selection;\n\n\t\tthis._startLineNumberDelta = 0;\n\t\tthis._endLineNumberDelta = 0;\n\t\tif (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n\t\t\tthis._endLineNumberDelta = 1;\n\t\t\ts = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n\t\t}\n\n\t\tvar sourceLines: string[] = [];\n\t\tfor (var i = s.startLineNumber; i <= s.endLineNumber; i++) {\n\t\t\tsourceLines.push(model.getLineContent(i));\n\t\t}\n\t\tvar sourceText = sourceLines.join('\\n');\n\n\t\tif (sourceText === '') {\n\t\t\t// Duplicating empty line\n\t\t\tif (this._isCopyingDown) {\n\t\t\t\tthis._startLineNumberDelta++;\n\t\t\t\tthis._endLineNumberDelta++;\n\t\t\t}\n\t\t}\n\n\t\tif (!this._isCopyingDown) {\n\t\t\tbuilder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n\t\t} else {\n\t\t\tbuilder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n\t\t}\n\n\t\tthis._selectionId = builder.trackSelection(s);\n\t\tthis._selectionDirection = this._selection.getDirection();\n\t}\n\n\tpublic computeCursorState(model:editorCommon.ITokenizedModel, helper: editorCommon.ICursorStateComputerData):editorCommon.IEditorSelection {\n\t\tvar result = helper.getTrackedSelection(this._selectionId);\n\n\t\tif (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n\t\t\tvar startLineNumber = result.startLineNumber,\n\t\t\t\tstartColumn = result.startColumn,\n\t\t\t\tendLineNumber = result.endLineNumber,\n\t\t\t\tendColumn = result.endColumn;\n\n\t\t\tif (this._startLineNumberDelta !== 0) {\n\t\t\t\tstartLineNumber = startLineNumber + this._startLineNumberDelta;\n\t\t\t\tstartColumn = 1;\n\t\t\t}\n\n\t\t\tif (this._endLineNumberDelta !== 0) {\n\t\t\t\tendLineNumber = endLineNumber + this._endLineNumberDelta;\n\t\t\t\tendColumn = 1;\n\t\t\t}\n\n\t\t\tresult = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"]}