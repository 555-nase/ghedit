{"version":3,"sources":["vs/editor/contrib/parameterHints/browser/parameterHints.ts"],"names":[],"mappings":"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","file":"vs/editor/contrib/parameterHints/browser/parameterHints.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IKeybindingContextKey, IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {EditorAction} from 'vs/editor/common/editorAction';\nimport {ICommonCodeEditor, IEditorActionDescriptorData, IEditorContribution} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry, ContextKey, EditorActionDescriptor} from 'vs/editor/common/editorCommonExtensions';\nimport {ICodeEditor} from 'vs/editor/browser/editorBrowser';\nimport {EditorBrowserRegistry} from 'vs/editor/browser/editorBrowserExtensions';\nimport {ParameterHintsRegistry} from 'vs/editor/common/modes';\nimport {ParameterHintsModel} from './parameterHintsModel';\nimport {ParameterHintsWidget} from './parameterHintsWidget';\n\nclass ParameterHintsController implements IEditorContribution {\n\tstatic ID = 'editor.controller.parameterHints';\n\n\tpublic static get(editor:ICommonCodeEditor): ParameterHintsController {\n\t\treturn <ParameterHintsController>editor.getContribution(ParameterHintsController.ID);\n\t}\n\n\tprivate editor:ICodeEditor;\n\tprivate model: ParameterHintsModel;\n\tprivate widget: ParameterHintsWidget;\n\tprivate parameterHintsVisible: IKeybindingContextKey<boolean>;\n\n\tconstructor(editor:ICodeEditor, @IKeybindingService keybindingService: IKeybindingService) {\n\t\tthis.editor = editor;\n\t\tthis.model = new ParameterHintsModel(this.editor);\n\t\tthis.parameterHintsVisible = keybindingService.createKey(CONTEXT_PARAMETER_HINTS_VISIBLE, false);\n\t\tthis.widget = new ParameterHintsWidget(this.model, this.editor, () => {\n\t\t\tthis.parameterHintsVisible.set(true);\n\t\t}, () => {\n\t\t\tthis.parameterHintsVisible.reset();\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.model.dispose();\n\t\tthis.model = null;\n\n\t\tthis.widget.destroy();\n\t\tthis.widget = null;\n\t}\n\n\tpublic getId(): string {\n\t\treturn ParameterHintsController.ID;\n\t}\n\n\tpublic closeWidget(): void {\n\t\tthis.widget.cancel();\n\t}\n\n\tpublic showPrevHint(): void {\n\t\tthis.widget.selectPrevious();\n\t}\n\n\tpublic showNextHint(): void {\n\t\tthis.widget.selectNext();\n\t}\n\n\tpublic trigger(): void {\n\t\tthis.model.trigger(undefined, 0);\n\t}\n}\n\nexport class TriggerParameterHintsAction extends EditorAction {\n\n\tstatic ID = 'editor.action.triggerParameterHints';\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor) {\n\t\tsuper(descriptor, editor);\n\t}\n\n\tpublic isSupported(): boolean {\n\t\treturn ParameterHintsRegistry.has(this.editor.getModel()) && super.isSupported();\n\t}\n\n\tpublic run():TPromise<boolean> {\n\t\tParameterHintsController.get(this.editor).trigger();\n\t\treturn TPromise.as(true);\n\t}\n}\n\nvar CONTEXT_PARAMETER_HINTS_VISIBLE = 'parameterHintsVisible';\n\nvar weight = CommonEditorRegistry.commandWeight(75);\n\nEditorBrowserRegistry.registerEditorContribution(ParameterHintsController);\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(TriggerParameterHintsAction, TriggerParameterHintsAction.ID, nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.Space\n}));\nCommonEditorRegistry.registerEditorCommand('closeParameterHints', weight, { primary: KeyCode.Escape, secondary: [KeyMod.Shift | KeyCode.Escape] }, true, CONTEXT_PARAMETER_HINTS_VISIBLE,(ctx, editor, args) => {\n\tParameterHintsController.get(editor).closeWidget();\n});\nCommonEditorRegistry.registerEditorCommand('showPrevParameterHint', weight, { primary: KeyCode.UpArrow, secondary: [KeyMod.Alt | KeyCode.UpArrow] }, true, CONTEXT_PARAMETER_HINTS_VISIBLE,(ctx, editor, args) => {\n\tParameterHintsController.get(editor).showPrevHint();\n});\nCommonEditorRegistry.registerEditorCommand('showNextParameterHint', weight, { primary: KeyCode.DownArrow, secondary: [KeyMod.Alt | KeyCode.DownArrow] }, true, CONTEXT_PARAMETER_HINTS_VISIBLE,(ctx, editor, args) => {\n\tParameterHintsController.get(editor).showNextHint();\n});\n"]}