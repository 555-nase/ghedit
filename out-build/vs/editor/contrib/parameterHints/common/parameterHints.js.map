{"version":3,"file":"vs/editor/contrib/parameterHints/common/parameterHints.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/parameterHints/common/parameterHints.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAQb,2BAAkC,KAAY,EAAE,QAAkB,EAAE,gBAAwB;QAE3F,IAAI,OAAO,GAAG,8BAAsB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC;QAED,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAC7F,CAAC;IARe,yBAAiB,oBAQhC,CAAA;IAED,6CAAoB,CAAC,8BAA8B,CAAC,+BAA+B,EAAE,UAAS,KAAK,EAAE,QAAQ,EAAE,IAAI;QAC7G,4CAAgB,CAAS;QAC9B,EAAE,CAAC,CAAC,gBAAgB,IAAI,OAAO,gBAAgB,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9D,MAAM,wBAAe,CAAC,kBAAkB,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {illegalArgument} from 'vs/base/common/errors';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IModel, IPosition} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {IParameterHints, ParameterHintsRegistry} from 'vs/editor/common/modes';\n\nexport function getParameterHints(model:IModel, position:IPosition, triggerCharacter: string): TPromise<IParameterHints> {\n\n\tlet support = ParameterHintsRegistry.ordered(model)[0];\n\tif (!support) {\n\t\treturn TPromise.as(undefined);\n\t}\n\n\treturn support.getParameterHints(model.getAssociatedResource(), position, triggerCharacter);\n}\n\nCommonEditorRegistry.registerDefaultLanguageCommand('_executeSignatureHelpProvider', function(model, position, args) {\n\tlet {triggerCharacter} = args;\n\tif (triggerCharacter && typeof triggerCharacter !== 'string') {\n\t\tthrow illegalArgument('triggerCharacter');\n\t}\n\treturn getParameterHints(model, position, triggerCharacter);\n});"]}