{"version":3,"file":"vs/editor/standalone-languages/xml.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/standalone-languages/xml.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {ILanguage} from './types';\n\nexport var language = <ILanguage> {\n\tdisplayName: 'XML',\n\tname: 'xml',\n\tdefaultToken: '',\n\n\tignoreCase: true,\n\n\tlineComment: '', // no line comment in xml\n\tblockCommentStart: '<!--',\n\tblockCommentEnd: '-->',\n\n\t// Useful regular expressions\n\tqualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n\n\t// enhancedBrackets: [{\n\t// \ttokenType: 'tag.tag-$1.xml',\n\t// \topenTrigger: '>',\n\t// \topen: /<(\\w[\\w\\d]*)([^\\/>]*(?!\\/)>)[^<>]*$/i,\n\t// \tcloseComplete: '</$1>',\n\t// \tcloseTrigger: '>',\n\t// \tclose: /<\\/(\\w[\\w\\d]*)\\s*>$/i\n\t// }],\n\n\tautoClosingPairs:  [['\\'', '\\''], ['\"', '\"'] ],\n\n\ttokenizer: {\n\t\troot: [\n\t\t\t[/[^<&]+/, ''],\n\n\t\t\t{ include: '@whitespace' },\n\n\t\t\t// Standard opening tag\n\t\t\t[/(<)(@qualifiedName)/, [\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\n\t\t\t\t{ token: 'tag.tag-$2', bracket: '@open', next: '@tag.$2' }]],\n\n\t\t\t// Standard closing tag\n\t\t\t[/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n\t\t\t\t{ token: 'delimiter.end', bracket: '@open' },\n\t\t\t\t{ token: 'tag.tag-$2', bracket: '@close' },\n\t\t\t\t'',\n\t\t\t\t{ token: 'delimiter.end', bracket: '@close' }]],\n\n\t\t\t// Meta tags - instruction\n\t\t\t[/(<\\?)(@qualifiedName)/, [\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\n\t\t\t\t{ token: 'metatag.instruction', next: '@tag' }]],\n\n\t\t\t// Meta tags - declaration\n\t\t\t[/(<\\!)(@qualifiedName)/, [\n\t\t\t\t{ token: 'delimiter.start', bracket: '@open' },\n\t\t\t\t{ token: 'metatag.declaration', next: '@tag' }]],\n\n\t\t\t// CDATA\n\t\t\t[/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', bracket: '@open', next: '@cdata' }],\n\n\t\t\t[/&\\w+;/, 'string.escape'],\n\t\t],\n\n\t\tcdata: [\n\t\t\t[/[^\\]]+/, ''],\n\t\t\t[/\\]\\]>/, { token: 'delimiter.cdata', bracket: '@close', next: '@pop' }],\n\t\t\t[/\\]/, '']\n\t\t],\n\n\t\ttag: [\n\t\t\t[/[ \\t\\r\\n]+/, '' ],\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n\t\t\t[/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n\t\t\t[/@qualifiedName/, 'attribute.name'],\n\t\t\t[/\\?>/, { token: 'delimiter.start', bracket: '@close', next: '@pop' }],\n\t\t\t[/(\\/)(>)/, [\n\t\t\t\t{ token: 'tag.tag-$S2', bracket: '@close' },\n\t\t\t\t{ token: 'delimiter.start', bracket: '@close', next: '@pop' }]],\n\t\t\t[/>/, { token: 'delimiter.start', bracket: '@close', next: '@pop' }],\n\t\t],\n\n\t\twhitespace: [\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\t\t\t[/<!--/, { token: 'comment', bracket: '@open', next: '@comment' }]\n\t\t],\n\n\t\tcomment: [\n\t\t\t[/[^<\\-]+/, 'comment.content' ],\n\t\t\t[/-->/,  { token: 'comment', bracket: '@close', next: '@pop' } ],\n\t\t\t[/<!--/, 'comment.content.invalid'],\n\t\t\t[/[<\\-]/, 'comment.content' ]\n\t\t],\n\t},\n};"]}