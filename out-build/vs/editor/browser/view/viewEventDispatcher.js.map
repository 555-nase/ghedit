{"version":3,"file":"viewEventDispatcher.js","sourceRoot":"","sources":["../../../../../src/vs/editor/browser/view/viewEventDispatcher.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EmitterEvent, IEmitterEvent} from 'vs/base/common/eventEmitter';\nimport {IViewEventBus} from 'vs/editor/common/editorCommon';\nimport {IViewEventHandler} from 'vs/editor/browser/editorBrowser';\n\nexport class ViewEventDispatcher implements IViewEventBus {\n\n\tprivate _eventHandlerGateKeeper:(callback:()=>void)=>void;\n\tprivate _eventHandlers:IViewEventHandler[];\n\tprivate _eventQueue:IEmitterEvent[];\n\tprivate _isConsumingQueue:boolean;\n\n\tconstructor(eventHandlerGateKeeper:(callback:()=>void)=>void) {\n\t\tthis._eventHandlerGateKeeper = eventHandlerGateKeeper;\n\t\tthis._eventHandlers = [];\n\t\tthis._eventQueue = null;\n\t\tthis._isConsumingQueue = false;\n\t}\n\n\tpublic addEventHandler(eventHandler: IViewEventHandler): void {\n\t\tfor (let i = 0, len = this._eventHandlers.length; i < len; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tconsole.warn('Detected duplicate listener in ViewEventDispatcher', eventHandler);\n\t\t\t}\n\t\t}\n\t\tthis._eventHandlers.push(eventHandler);\n\t}\n\n\tpublic removeEventHandler(eventHandler:IViewEventHandler): void {\n\t\tfor (let i = 0; i < this._eventHandlers.length; i++) {\n\t\t\tif (this._eventHandlers[i] === eventHandler) {\n\t\t\t\tthis._eventHandlers.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic emit(eventType:string, data?:any): void {\n\t\tlet event = new EmitterEvent(eventType, data);\n\n\t\tif (this._eventQueue) {\n\t\t\tthis._eventQueue.push(event);\n\t\t} else {\n\t\t\tthis._eventQueue = [event];\n\t\t}\n\n\t\tif (!this._isConsumingQueue) {\n\t\t\tthis.consumeQueue();\n\t\t}\n\t}\n\n\tpublic emitMany(events:IEmitterEvent[]): void {\n\t\tif (this._eventQueue) {\n\t\t\tthis._eventQueue = this._eventQueue.concat(events);\n\t\t} else {\n\t\t\tthis._eventQueue = events;\n\t\t}\n\n\t\tif (!this._isConsumingQueue) {\n\t\t\tthis.consumeQueue();\n\t\t}\n\t}\n\n\tprivate consumeQueue(): void {\n\t\tthis._eventHandlerGateKeeper(() => {\n\t\t\ttry {\n\t\t\t\tthis._isConsumingQueue = true;\n\n\t\t\t\tthis._doConsumeQueue();\n\n\t\t\t} finally {\n\t\t\t\tthis._isConsumingQueue = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _doConsumeQueue(): void {\n\t\twhile (this._eventQueue) {\n\t\t\t// Empty event queue, as events might come in while sending these off\n\t\t\tlet events = this._eventQueue;\n\t\t\tthis._eventQueue = null;\n\n\t\t\t// Use a clone of the event handlers list, as they might remove themselves\n\t\t\tlet eventHandlers = this._eventHandlers.slice(0);\n\t\t\tfor (let i = 0, len = eventHandlers.length; i < len; i++) {\n\t\t\t\teventHandlers[i].handleEvents(events);\n\t\t\t}\n\t\t}\n\t}\n\n}"]}