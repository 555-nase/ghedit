{"version":3,"file":"viewLayer.js","sourceRoot":"","sources":["../../../../../src/vs/editor/browser/view/viewLayer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {IViewContext} from 'vs/editor/browser/editorBrowser';\nimport {ViewPart} from 'vs/editor/browser/view/viewPart';\nimport {FastDomNode, createFastDomNode} from 'vs/base/browser/styleMutator';\n\nexport interface IVisibleLineData {\n\tgetDomNode(): HTMLElement;\n\tsetDomNode(domNode: HTMLElement): void;\n\n\tonContentChanged(): void;\n\tonLinesInsertedAbove(): void;\n\tonLinesDeletedAbove(): void;\n\tonLineChangedAbove(): void;\n\tonTokensChanged(): void;\n\tonConfigurationChanged(e:editorCommon.IConfigurationChangedEvent): void;\n\n\tgetLineOuterHTML(out:string[], lineNumber: number, deltaTop: number): void;\n\tgetLineInnerHTML(lineNumber: number): string;\n\n\tshouldUpdateHTML(startLineNumber:number, lineNumber:number, inlineDecorations:editorCommon.IModelDecoration[]): boolean;\n\tlayoutLine(lineNumber: number, deltaTop:number): void;\n}\n\ninterface IRendererContext {\n\tdomNode: HTMLElement;\n\trendLineNumberStart: number;\n\tlines: IVisibleLineData[];\n\tlinesLength: number;\n\tgetInlineDecorationsForLineInViewport(lineNumber:number): editorCommon.IModelDecoration[];\n\tviewportTop: number;\n\tviewportHeight: number;\n\tscrollDomNode: HTMLElement;\n\tscrollDomNodeIsAbove: boolean;\n}\n\nexport abstract class ViewLayer extends ViewPart {\n\n\tprotected domNode: FastDomNode;\n\n\tprotected _lines:IVisibleLineData[];\n\tprotected _rendLineNumberStart:number;\n\n\tprivate _renderer: ViewLayerRenderer;\n\tprivate _scrollDomNode: HTMLElement;\n\tprivate _scrollDomNodeIsAbove: boolean;\n\n\tconstructor(context:IViewContext) {\n\t\tsuper(context);\n\n\t\tthis.domNode = this._createDomNode();\n\n\t\tthis._lines = [];\n\t\tthis._rendLineNumberStart = 1;\n\n\t\tthis._scrollDomNode = null;\n\t\tthis._scrollDomNodeIsAbove = false;\n\n\t\tthis._renderer = new ViewLayerRenderer(\n\t\t\t() => this._createLine(),\n\t\t\t() => this._extraDomNodeHTML()\n\t\t);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._lines = null;\n\t}\n\n\tprotected _extraDomNodeHTML(): string {\n\t\treturn '';\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onConfigurationChanged(e:editorCommon.IConfigurationChangedEvent): boolean {\n\t\tfor (var i = 0; i < this._lines.length; i++) {\n\t\t\tthis._lines[i].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic onLayoutChanged(layoutInfo:editorCommon.IEditorLayoutInfo): boolean {\n\t\treturn true;\n\t}\n\n\tpublic onScrollChanged(e:editorCommon.IScrollEvent): boolean {\n\t\treturn e.vertical;\n\t}\n\n\tpublic onZonesChanged(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic onModelFlushed(): boolean {\n\t\tthis._lines = [];\n\t\tthis._rendLineNumberStart = 1;\n\t\tthis._scrollDomNode = null;\n\t\t// No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n\t\treturn true;\n\t}\n\n\tpublic onModelLinesDeleted(e:editorCommon.IViewLinesDeletedEvent): boolean {\n\t\tvar from = Math.max(e.fromLineNumber - this._rendLineNumberStart, 0);\n\t\tvar to = Math.min(e.toLineNumber - this._rendLineNumberStart, this._lines.length - 1);\n\t\tvar i:number;\n\n\t\t// Adjust this._rendLineNumberStart\n\t\tif (e.fromLineNumber < this._rendLineNumberStart) {\n\t\t\t// Deleting lines starting above the viewport\n\n\t\t\tif (e.toLineNumber < this._rendLineNumberStart) {\n\t\t\t\t// All deleted lines are above the viewport\n\t\t\t\tthis._rendLineNumberStart -= (e.toLineNumber - e.fromLineNumber + 1);\n\t\t\t} else {\n\t\t\t\t// Some deleted lines are inside the viewport\n\t\t\t\tthis._rendLineNumberStart = e.fromLineNumber;\n\t\t\t}\n\t\t}\n\n\t\t// Remove lines if they fall in the viewport\n\t\tif (from <= to) {\n\t\t\t// Remove from DOM\n\t\t\tfor (i = from; i <= to; i++) {\n\t\t\t\tvar lineDomNode = this._lines[i].getDomNode();\n\t\t\t\tif (lineDomNode) {\n\t\t\t\t\tthis.domNode.domNode.removeChild(lineDomNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove from array\n\t\t\tthis._lines.splice(from, to - from + 1);\n\t\t}\n\n\t\t// Mark the rest of the visible lines as possibly invalid\n\t\tfor (i = from; i < this._lines.length; i++) {\n\t\t\tthis._lines[i].onLinesDeletedAbove();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic onModelLineChanged(e:editorCommon.IViewLineChangedEvent): boolean {\n\t\tvar lineIndex = e.lineNumber - this._rendLineNumberStart,\n\t\t\tshouldRender = false;\n\n\t\tif (lineIndex >= 0 && lineIndex < this._lines.length) {\n\t\t\tthis._lines[lineIndex].onContentChanged();\n\t\t\tshouldRender = true;\n\t\t}\n\n\t\t// Mark the rest of the visible lines as possibly invalid\n\t\tfor (var i = Math.max(lineIndex, 0); i < this._lines.length; i++) {\n\t\t\tthis._lines[i].onLineChangedAbove();\n\t\t\tshouldRender = true;\n\t\t}\n\n\t\treturn shouldRender;\n\t}\n\n\tpublic onModelLinesInserted(e:editorCommon.IViewLinesInsertedEvent): boolean {\n\t\tvar i:number;\n\n\t\tif (e.fromLineNumber <= this._rendLineNumberStart) {\n\t\t\t// a. We are inserting lines above the viewport\n\t\t\tthis._rendLineNumberStart += (e.toLineNumber - e.fromLineNumber + 1);\n\n\t\t\t// Mark the visible lines as possibly invalid\n\t\t\tfor (i = 0; i < this._lines.length; i++) {\n\t\t\t\tthis._lines[i].onLinesInsertedAbove();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (e.fromLineNumber >= this._rendLineNumberStart + this._lines.length) {\n\t\t\t// b. We are inserting lines below the viewport\n\t\t\treturn false;\n\t\t}\n\n\t\t// c. We are inserting lines in the viewport\n\n\t\tvar insertFrom = Math.min(e.fromLineNumber - this._rendLineNumberStart, this._lines.length - 1);\n\t\tvar insertTo = Math.min(e.toLineNumber - this._rendLineNumberStart, this._lines.length - 1);\n\t\tif (insertFrom <= insertTo) {\n\t\t\t// Insert lines that fall inside the viewport\n\t\t\tfor (i = insertFrom; i <= insertTo; i++) {\n\t\t\t\tvar line:IVisibleLineData = this._createLine();\n\t\t\t\tthis._lines.splice(i, 0, line);\n\t\t\t}\n\n\t\t\t// We need to remove lines that are pushed outside the viewport by this insertion,\n\t\t\t// due to the Math.min above on `insertTo`. Otherwise, it is possible for the next line\n\t\t\t// after the insertion to be marked `maybeInvalid` when it should be definitely `invalid`.\n\t\t\tvar insertCount = insertTo - insertFrom + 1;\n\t\t\tfor (i = 0; i < insertCount; i++) {\n\t\t\t\t// Remove from array\n\t\t\t\tvar lastLine = this._lines.pop();\n\t\t\t\t// Remove from DOM\n\t\t\t\tvar lineDomNode = lastLine.getDomNode();\n\t\t\t\tif (lineDomNode) {\n\t\t\t\t\tthis.domNode.domNode.removeChild(lineDomNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Mark the rest of the lines as possibly invalid\n\t\tfor (i = insertTo; i < this._lines.length; i++) {\n\t\t\tthis._lines[i].onLinesInsertedAbove();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic onModelTokensChanged(e:editorCommon.IViewTokensChangedEvent): boolean {\n\t\tvar changedFromIndex = e.fromLineNumber - this._rendLineNumberStart;\n\t\tvar changedToIndex = e.toLineNumber - this._rendLineNumberStart;\n\n\t\tif (changedToIndex < 0 || changedFromIndex >= this._lines.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar fromIndex = Math.min(Math.max(changedFromIndex, 0), this._lines.length - 1);\n\t\tvar toIndex = Math.min(Math.max(changedToIndex, 0), this._lines.length - 1);\n\n\t\tvar somethingMayHaveChanged = false;\n\n\t\tfor (var i = fromIndex; i <= toIndex; i++) {\n\t\t\tsomethingMayHaveChanged = true;\n\t\t\tthis._lines[i].onTokensChanged();\n\t\t}\n\n\t\treturn somethingMayHaveChanged;\n\t}\n\n\n\t// ---- end view event handlers\n\tpublic _renderLines(linesViewportData:editorCommon.ViewLinesViewportData): void {\n\n\t\tvar ctx: IRendererContext = {\n\t\t\tdomNode: this.domNode.domNode,\n\t\t\trendLineNumberStart: this._rendLineNumberStart,\n\t\t\tlines: this._lines,\n\t\t\tlinesLength: this._lines.length,\n\t\t\tgetInlineDecorationsForLineInViewport: (lineNumber:number) => linesViewportData.getInlineDecorationsForLineInViewport(lineNumber),\n\t\t\tviewportTop: linesViewportData.viewportTop,\n\t\t\tviewportHeight: linesViewportData.viewportHeight,\n\t\t\tscrollDomNode: this._scrollDomNode,\n\t\t\tscrollDomNodeIsAbove: this._scrollDomNodeIsAbove\n\t\t};\n\n\t\t// Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n\t\tvar resCtx = this._renderer.renderWithManyUpdates(ctx, linesViewportData.startLineNumber, linesViewportData.endLineNumber, linesViewportData.relativeVerticalOffset);\n\n\t\tthis._rendLineNumberStart = resCtx.rendLineNumberStart;\n\t\tthis._lines = resCtx.lines;\n\t\tthis._scrollDomNode = resCtx.scrollDomNode;\n\t\tthis._scrollDomNodeIsAbove = resCtx.scrollDomNodeIsAbove;\n\t}\n\n\tpublic _createDomNode(): FastDomNode {\n\t\tlet domNode = createFastDomNode(document.createElement('div'));\n\t\tdomNode.setClassName('view-layer');\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.domNode.setAttribute('role', 'presentation');\n\t\tdomNode.domNode.setAttribute('aria-hidden', 'true');\n\t\treturn domNode;\n\t}\n\n\tpublic _createLine(): IVisibleLineData {\n\t\tthrow new Error('Implement me!');\n\t}\n}\n\nclass ViewLayerRenderer {\n\n\tprivate _createLine: () => IVisibleLineData;\n\tprivate _extraDomNodeHTML: () => string;\n\n\tconstructor(createLine: () => IVisibleLineData, extraDomNodeHTML: () => string) {\n\t\tthis._createLine = createLine;\n\t\tthis._extraDomNodeHTML = extraDomNodeHTML;\n\t}\n\n\tpublic renderWithManyUpdates(ctx: IRendererContext, startLineNumber: number, stopLineNumber: number, deltaTop:number[]): IRendererContext {\n\t\treturn this._render(ctx, startLineNumber, stopLineNumber, deltaTop);\n\t}\n\n\tprivate _render(inContext: IRendererContext, startLineNumber: number, stopLineNumber: number, deltaTop:number[]): IRendererContext {\n\n\t\tvar ctx: IRendererContext = {\n\t\t\tdomNode: inContext.domNode,\n\t\t\trendLineNumberStart: inContext.rendLineNumberStart,\n\t\t\tlines: inContext.lines.slice(0),\n\t\t\tlinesLength: inContext.linesLength,\n\t\t\tgetInlineDecorationsForLineInViewport: inContext.getInlineDecorationsForLineInViewport,\n\t\t\tviewportTop: inContext.viewportTop,\n\t\t\tviewportHeight: inContext.viewportHeight,\n\t\t\tscrollDomNode: inContext.scrollDomNode,\n\t\t\tscrollDomNodeIsAbove: inContext.scrollDomNodeIsAbove\n\t\t};\n\n\t\tvar canRemoveScrollDomNode = true;\n\t\tif (ctx.scrollDomNode) {\n\t\t\tvar time = this._getScrollDomNodeTime(ctx.scrollDomNode);\n\t\t\tif ((new Date()).getTime() - time < 1000) {\n\t\t\t\tcanRemoveScrollDomNode = false;\n\t\t\t}\n\t\t}\n\n\t\tif (canRemoveScrollDomNode && ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart))) {\n\t\t\t// There is no overlap whatsoever\n\t\t\tctx.rendLineNumberStart = startLineNumber;\n\t\t\tctx.linesLength = stopLineNumber - startLineNumber + 1;\n\t\t\tctx.lines = [];\n\t\t\tfor (var x = startLineNumber; x <= stopLineNumber; x++) {\n\t\t\t\tctx.lines[x - startLineNumber] = this._createLine();\n\t\t\t}\n\t\t\tthis._finishRendering(ctx, true, deltaTop);\n\t\t\tctx.scrollDomNode = null;\n\t\t\treturn ctx;\n\t\t}\n\n\t\t// Update lines which will remain untouched\n\t\tthis._renderUntouchedLines(\n\t\t\tctx,\n\t\t\tMath.max(startLineNumber - ctx.rendLineNumberStart, 0),\n\t\t\tMath.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1),\n\t\t\tdeltaTop,\n\t\t\tstartLineNumber\n\t\t);\n\n\t\tvar fromLineNumber: number,\n\t\t\ttoLineNumber: number,\n\t\t\tremoveCnt: number;\n\n\t\tif (ctx.rendLineNumberStart > startLineNumber) {\n\t\t\t// Insert lines before\n\t\t\tfromLineNumber = startLineNumber;\n\t\t\ttoLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n\t\t\tif (fromLineNumber <= toLineNumber) {\n\t\t\t\tthis._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n\t\t\t\tctx.linesLength += toLineNumber - fromLineNumber + 1;\n\n\t\t\t\t// Clean garbage above\n\t\t\t\tif (ctx.scrollDomNode && ctx.scrollDomNodeIsAbove) {\n\t\t\t\t\tif (ctx.scrollDomNode.parentNode) {\n\t\t\t\t\t\tctx.scrollDomNode.parentNode.removeChild(ctx.scrollDomNode);\n\t\t\t\t\t}\n\t\t\t\t\tctx.scrollDomNode = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (ctx.rendLineNumberStart < startLineNumber) {\n\t\t\t// Remove lines before\n\t\t\tremoveCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n\t\t\tif (removeCnt > 0) {\n\t\t\t\tthis._removeLinesBefore(ctx, removeCnt);\n\t\t\t\tctx.linesLength -= removeCnt;\n\t\t\t}\n\t\t}\n\n\t\tctx.rendLineNumberStart = startLineNumber;\n\n\t\tif (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n\t\t\t// Insert lines after\n\t\t\tfromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n\t\t\ttoLineNumber = stopLineNumber;\n\n\t\t\tif (fromLineNumber <= toLineNumber) {\n\t\t\t\tthis._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n\t\t\t\tctx.linesLength += toLineNumber - fromLineNumber + 1;\n\n\t\t\t\t// Clean garbage below\n\t\t\t\tif (ctx.scrollDomNode && !ctx.scrollDomNodeIsAbove) {\n\t\t\t\t\tif (ctx.scrollDomNode.parentNode) {\n\t\t\t\t\t\tctx.scrollDomNode.parentNode.removeChild(ctx.scrollDomNode);\n\t\t\t\t\t}\n\t\t\t\t\tctx.scrollDomNode = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n\t\t\t// Remove lines after\n\t\t\tfromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n\t\t\ttoLineNumber = ctx.linesLength - 1;\n\t\t\tremoveCnt = toLineNumber - fromLineNumber + 1;\n\n\t\t\tif (removeCnt > 0) {\n\t\t\t\tthis._removeLinesAfter(ctx, removeCnt);\n\t\t\t\tctx.linesLength -= removeCnt;\n\t\t\t}\n\t\t}\n\n\t\tthis._finishRendering(ctx, false, deltaTop);\n\n\t\treturn ctx;\n\t}\n\n\tprivate _renderUntouchedLines(ctx: IRendererContext, startIndex: number, endIndex: number, deltaTop:number[], deltaLN:number): void {\n\t\tvar i: number,\n\t\t\tlineNumber: number;\n\n\t\tfor (i = startIndex; i <= endIndex; i++) {\n\t\t\tlineNumber = ctx.rendLineNumberStart + i;\n\t\t\tvar lineDomNode = ctx.lines[i].getDomNode();\n\t\t\tif (lineDomNode) {\n\t\t\t\tctx.lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _insertLinesBefore(ctx: IRendererContext, fromLineNumber: number, toLineNumber: number, deltaTop:number[], deltaLN:number): void {\n\t\tvar newLines:IVisibleLineData[] = [],\n\t\t\tline:IVisibleLineData,\n\t\t\tlineNumber: number;\n\n\t\tfor (lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\tline = this._createLine();\n\t\t\tnewLines.push(line);\n\t\t}\n\t\tctx.lines = newLines.concat(ctx.lines);\n\t}\n\n\tprivate _getScrollDomNodeTime(domNode: HTMLElement): number {\n\t\tvar lastScrollTime = domNode.getAttribute('last-scroll-time');\n\t\tif (lastScrollTime) {\n\t\t\treturn parseInt(lastScrollTime, 10);\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate _removeIfNotScrollDomNode(ctx: IRendererContext, domNode: HTMLElement, isAbove: boolean) {\n\t\tvar time = this._getScrollDomNodeTime(domNode);\n\t\tif (!time) {\n\t\t\tctx.domNode.removeChild(domNode);\n\t\t\treturn;\n\t\t}\n\n\t\tif (ctx.scrollDomNode) {\n\t\t\tvar otherTime = this._getScrollDomNodeTime(ctx.scrollDomNode);\n\t\t\tif (otherTime > time) {\n\t\t\t\t// The other is the real scroll dom node\n\t\t\t\tctx.domNode.removeChild(domNode);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ctx.scrollDomNode.parentNode) {\n\t\t\t\tctx.scrollDomNode.parentNode.removeChild(ctx.scrollDomNode);\n\t\t\t}\n\n\t\t\tctx.scrollDomNode = null;\n\t\t}\n\n\t\tctx.scrollDomNode = domNode;\n\t\tctx.scrollDomNodeIsAbove = isAbove;\n\t}\n\n\tprivate _removeLinesBefore(ctx: IRendererContext, removeCount: number): void {\n\t\tvar i: number;\n\n\t\tfor (i = 0; i < removeCount; i++) {\n\t\t\tvar lineDomNode = ctx.lines[i].getDomNode();\n\t\t\tif (lineDomNode) {\n\t\t\t\tthis._removeIfNotScrollDomNode(ctx, lineDomNode, true);\n\t\t\t}\n\t\t}\n\t\tctx.lines.splice(0, removeCount);\n\t}\n\n\tprivate _insertLinesAfter(ctx: IRendererContext, fromLineNumber: number, toLineNumber: number, deltaTop:number[], deltaLN:number): void {\n\t\tvar newLines:IVisibleLineData[] = [],\n\t\t\tline:IVisibleLineData,\n\t\t\tlineNumber: number;\n\n\t\tfor (lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\tline = this._createLine();\n\t\t\tnewLines.push(line);\n\t\t}\n\t\tctx.lines = ctx.lines.concat(newLines);\n\t}\n\n\tprivate _removeLinesAfter(ctx: IRendererContext, removeCount: number): void {\n\t\tvar i: number,\n\t\t\tremoveIndex = ctx.linesLength - removeCount;\n\n\t\tfor (i = 0; i < removeCount; i++) {\n\t\t\tvar lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n\t\t\tif (lineDomNode) {\n\t\t\t\tthis._removeIfNotScrollDomNode(ctx, lineDomNode, false);\n\t\t\t}\n\t\t}\n\t\tctx.lines.splice(removeIndex, removeCount);\n\t}\n\n\tprivate static _resolveInlineDecorations(ctx: IRendererContext): editorCommon.IModelDecoration[][] {\n\t\tlet result: editorCommon.IModelDecoration[][] = [];\n\t\tfor (let i = 0, len = ctx.linesLength; i < len; i++) {\n\t\t\tlet lineNumber = i + ctx.rendLineNumberStart;\n\t\t\tresult[i] = ctx.getInlineDecorationsForLineInViewport(lineNumber);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _finishRenderingNewLines(ctx: IRendererContext, domNodeIsEmpty:boolean, newLinesHTML: string[], wasNew: boolean[]): void {\n\t\tvar lastChild = <HTMLElement>ctx.domNode.lastChild;\n\t\tif (domNodeIsEmpty || !lastChild) {\n\t\t\tctx.domNode.innerHTML = this._extraDomNodeHTML() + newLinesHTML.join('');\n\t\t} else {\n\t\t\tlastChild.insertAdjacentHTML('afterend', newLinesHTML.join(''));\n\t\t}\n\n\t\tvar currChild = <HTMLElement>ctx.domNode.lastChild;\n\t\tfor (let i = ctx.linesLength - 1; i >= 0; i--) {\n\t\t\tlet line = ctx.lines[i];\n\t\t\tif (wasNew[i]) {\n\t\t\t\tline.setDomNode(currChild);\n\t\t\t\tcurrChild = <HTMLElement>currChild.previousSibling;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _finishRenderingInvalidLines(ctx: IRendererContext, invalidLinesHTML: string[], wasInvalid: boolean[]): void {\n\t\tvar hugeDomNode = document.createElement('div');\n\n\t\thugeDomNode.innerHTML = invalidLinesHTML.join('');\n\n\t\tvar lineDomNode:HTMLElement,\n\t\t\tsource:HTMLElement;\n\t\tfor (let i = 0; i < ctx.linesLength; i++) {\n\t\t\tlet line = ctx.lines[i];\n\t\t\tif (wasInvalid[i]) {\n\t\t\t\tsource = <HTMLElement>hugeDomNode.firstChild;\n\t\t\t\tlineDomNode = line.getDomNode();\n\t\t\t\tlineDomNode.parentNode.replaceChild(source, lineDomNode);\n\t\t\t\tline.setDomNode(source);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _finishRendering(ctx: IRendererContext, domNodeIsEmpty:boolean, deltaTop:number[]): void {\n\n\t\tlet inlineDecorations = ViewLayerRenderer._resolveInlineDecorations(ctx);\n\n\t\tvar i: number,\n\t\t\tlen: number,\n\t\t\tline: IVisibleLineData,\n\t\t\tlineNumber: number,\n\t\t\thadNewLine = false,\n\t\t\twasNew: boolean[] = [],\n\t\t\tnewLinesHTML: string[] = [],\n\t\t\thadInvalidLine = false,\n\t\t\twasInvalid: boolean[] = [],\n\t\t\tinvalidLinesHTML: string[] = [];\n\n\t\tfor (i = 0, len = ctx.linesLength; i < len; i++) {\n\t\t\tline = ctx.lines[i];\n\t\t\tlineNumber = i + ctx.rendLineNumberStart;\n\n\t\t\tif (line.shouldUpdateHTML(ctx.rendLineNumberStart, lineNumber, inlineDecorations[i])) {\n\t\t\t\tvar lineDomNode = line.getDomNode();\n\t\t\t\tif (!lineDomNode) {\n\t\t\t\t\t// Line is new\n\t\t\t\t\tline.getLineOuterHTML(newLinesHTML, lineNumber, deltaTop[i]);\n\t\t\t\t\twasNew[i] = true;\n\t\t\t\t\thadNewLine = true;\n\t\t\t\t} else {\n\t\t\t\t\t// Line is invalid\n\t\t\t\t\tline.getLineOuterHTML(invalidLinesHTML, lineNumber, deltaTop[i]);\n\t\t\t\t\twasInvalid[i] = true;\n\t\t\t\t\thadInvalidLine = true;\n//\t\t\t\t\tlineDomNode.innerHTML = line.getLineInnerHTML(lineNumber);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hadNewLine) {\n\t\t\tthis._finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew);\n\t\t}\n\n\t\tif (hadInvalidLine) {\n\t\t\tthis._finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid);\n\t\t}\n\t}\n}\n\n"]}