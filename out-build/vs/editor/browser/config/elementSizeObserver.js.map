{"version":3,"file":"vs/editor/browser/config/elementSizeObserver.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/browser/config/elementSizeObserver.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb;QAAyC,uCAAU;QAQlD,6BAAY,mBAA+B,EAAE,cAAuB;YACnE,iBAAO,CAAC;YACR,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;YAC/C,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YACrC,IAAI,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,0BAA0B,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAEM,qCAAO,GAAd;YACC,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,gBAAK,CAAC,OAAO,WAAE,CAAC;QACjB,CAAC;QAEM,sCAAQ,GAAf;YACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC;QAEM,uCAAS,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAEM,4CAAc,GAArB;YAAA,iBAIC;YAHA,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,+BAA+B,GAAG,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAArC,CAAqC,EAAE,GAAG,CAAC,CAAC;YACtG,CAAC;QACF,CAAC;QAEM,2CAAa,GAApB;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,+BAA+B,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjD,aAAa,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;gBACpD,IAAI,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC;YAC3C,CAAC;QACF,CAAC;QAEM,qCAAO,GAAd,UAAe,SAAqB;YACnC,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAClD,CAAC;QAEO,wDAA0B,GAAlC,UAAmC,kBAA0B,EAAE,SAAqB;YACnF,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,cAAc,GAAG,CAAC,CAAC;YACvB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC;gBAChC,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACrC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;gBACrD,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACxD,CAAC;YACD,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;YAC3C,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,aAAa,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC;gBAC3B,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;gBAC7B,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACvB,CAAC;YACF,CAAC;QACF,CAAC;QAEF,0BAAC;IAAD,CAAC,AArED,CAAyC,sBAAU,GAqElD;IArEY,2BAAmB,sBAqE/B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Disposable} from 'vs/base/common/lifecycle';\nimport {IDimension} from 'vs/editor/common/editorCommon';\nimport {IElementSizeObserver} from 'vs/editor/common/config/commonEditorConfig';\n\nexport class ElementSizeObserver extends Disposable implements IElementSizeObserver {\n\n\tprivate referenceDomElement:HTMLElement;\n\tprivate measureReferenceDomElementToken:number;\n\tprivate changeCallback:()=>void;\n\tprivate width:number;\n\tprivate height:number;\n\n\tconstructor(referenceDomElement:HTMLElement, changeCallback:()=>void) {\n\t\tsuper();\n\t\tthis.referenceDomElement = referenceDomElement;\n\t\tthis.changeCallback = changeCallback;\n\t\tthis.measureReferenceDomElementToken = -1;\n\t\tthis.width = -1;\n\t\tthis.height = -1;\n\t\tthis.measureReferenceDomElement(false);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.stopObserving();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this.width;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this.height;\n\t}\n\n\tpublic startObserving(): void {\n\t\tif (this.measureReferenceDomElementToken === -1) {\n\t\t\tthis.measureReferenceDomElementToken = setInterval(() => this.measureReferenceDomElement(true), 100);\n\t\t}\n\t}\n\n\tpublic stopObserving(): void {\n\t\tif (this.measureReferenceDomElementToken !== -1) {\n\t\t\tclearInterval(this.measureReferenceDomElementToken);\n\t\t\tthis.measureReferenceDomElementToken = -1;\n\t\t}\n\t}\n\n\tpublic observe(dimension?:IDimension): void {\n\t\tthis.measureReferenceDomElement(true, dimension);\n\t}\n\n\tprivate measureReferenceDomElement(callChangeCallback:boolean, dimension?:IDimension): void {\n\t\tvar observedWidth = 0;\n\t\tvar observedHeight = 0;\n\t\tif (dimension) {\n\t\t\tobservedWidth = dimension.width;\n\t\t\tobservedHeight = dimension.height;\n\t\t} else if (this.referenceDomElement) {\n\t\t\tobservedWidth = this.referenceDomElement.clientWidth;\n\t\t\tobservedHeight = this.referenceDomElement.clientHeight;\n\t\t}\n\t\tobservedWidth = Math.max(5, observedWidth);\n\t\tobservedHeight = Math.max(5, observedHeight);\n\t\tif (this.width !== observedWidth || this.height !== observedHeight) {\n\t\t\tthis.width = observedWidth;\n\t\t\tthis.height = observedHeight;\n\t\t\tif (callChangeCallback) {\n\t\t\t\tthis.changeCallback();\n\t\t\t}\n\t\t}\n\t}\n\n}"]}