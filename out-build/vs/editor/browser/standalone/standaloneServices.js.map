{"version":3,"file":"vs/editor/browser/standalone/standaloneServices.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/browser/standalone/standaloneServices.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as flags from 'vs/base/common/flags';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {ContextMenuService} from 'vs/platform/contextview/browser/contextMenuService';\nimport {IContextMenuService, IContextViewService} from 'vs/platform/contextview/browser/contextView';\nimport {ContextViewService} from 'vs/platform/contextview/browser/contextViewService';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {EventService} from 'vs/platform/event/common/eventService';\nimport {IExtensionService} from 'vs/platform/extensions/common/extensions';\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {createInstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {MainProcessMarkerService} from 'vs/platform/markers/common/markerService';\nimport {IMarkerService} from 'vs/platform/markers/common/markers';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {IProgressService} from 'vs/platform/progress/common/progress';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {ISearchService} from 'vs/platform/search/common/search';\nimport {IStorageService} from 'vs/platform/storage/common/storage';\nimport {TelemetryService} from 'vs/platform/telemetry/browser/telemetryService';\nimport {ITelemetryService, NullTelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {MainThreadService} from 'vs/platform/thread/common/mainThreadService';\nimport {IThreadService} from 'vs/platform/thread/common/thread';\nimport {BaseWorkspaceContextService} from 'vs/platform/workspace/common/baseWorkspaceContextService';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {EditorWorkerServiceImpl} from 'vs/editor/common/services/editorWorkerServiceImpl';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {MainThreadModeServiceImpl} from 'vs/editor/common/services/modeServiceImpl';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {ModelServiceImpl} from 'vs/editor/common/services/modelServiceImpl';\nimport {CodeEditorServiceImpl} from 'vs/editor/browser/services/codeEditorServiceImpl';\nimport {SimpleConfigurationService, SimpleEditorRequestService, SimpleMessageService, SimpleExtensionService, StandaloneKeybindingService} from 'vs/editor/browser/standalone/simpleServices';\n\nexport interface IEditorContextViewService extends IContextViewService {\n\tdispose(): void;\n\tsetContainer(domNode:HTMLElement): void;\n}\n\nexport interface IEditorOverrideServices {\n\tthreadService?:IThreadService;\n\tmodeService?: IModeService;\n\textensionService?:IExtensionService;\n\tinstantiationService?:IInstantiationService;\n\tmessageService?:IMessageService;\n\tmarkerService?:IMarkerService;\n\teditorService?:IEditorService;\n\trequestService?:IRequestService;\n\tkeybindingService?:IKeybindingService;\n\tcontextService?:IWorkspaceContextService;\n\tcontextViewService?:IEditorContextViewService;\n\tcontextMenuService?:IContextMenuService;\n\ttelemetryService?:ITelemetryService;\n\teventService?:IEventService;\n\tstorageService?:IStorageService;\n\tsearchService?:ISearchService;\n\tconfigurationService?:IConfigurationService;\n\tprogressService?:IProgressService;\n\tfileService?:IFileService;\n\tmodelService?: IModelService;\n\tcodeEditorService?: ICodeEditorService;\n\teditorWorkerService?: IEditorWorkerService;\n}\n\nexport interface IStaticServices {\n\tconfigurationService: IConfigurationService;\n\tthreadService: IThreadService;\n\tmodeService: IModeService;\n\textensionService: IExtensionService;\n\tmarkerService: IMarkerService;\n\tcontextService: IWorkspaceContextService;\n\trequestService: IRequestService;\n\tmessageService: IMessageService;\n\ttelemetryService: ITelemetryService;\n\tmodelService: IModelService;\n\tcodeEditorService: ICodeEditorService;\n\teditorWorkerService: IEditorWorkerService;\n\teventService: IEventService;\n\tinstantiationService: IInstantiationService;\n}\n\nfunction shallowClone<T>(obj:T): T {\n\tlet r:T = <any>{};\n\tif (obj) {\n\t\tlet keys = Object.keys(obj);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet key = keys[i];\n\t\t\tr[key] = obj[key];\n\t\t}\n\t}\n\treturn r;\n}\n\nexport function ensureStaticPlatformServices(services: IEditorOverrideServices): IEditorOverrideServices {\n\tservices = shallowClone(services);\n\n\tvar statics = getOrCreateStaticServices(services);\n\n\tlet keys = Object.keys(statics);\n\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\tlet serviceId = keys[i];\n\t\tif (!services.hasOwnProperty(serviceId)) {\n\t\t\tservices[serviceId] = statics[serviceId];\n\t\t}\n\t}\n\n\treturn services;\n}\n\nexport function ensureDynamicPlatformServices(domElement:HTMLElement, services: IEditorOverrideServices): IDisposable[] {\n\tvar r:IDisposable[] = [];\n\n\tif (typeof services.keybindingService === 'undefined') {\n\t\tvar keybindingService = new StandaloneKeybindingService(services.configurationService, domElement);\n\t\tr.push(keybindingService);\n\t\tservices.keybindingService = keybindingService;\n\t}\n\n\tif (typeof services.contextViewService === 'undefined') {\n\t\tvar contextViewService = new ContextViewService(domElement, services.telemetryService, services.messageService);\n\t\tr.push(contextViewService);\n\t\tservices.contextViewService = contextViewService;\n\t}\n\tif (typeof services.contextMenuService === 'undefined') {\n\t\tvar contextMenuService = new ContextMenuService(domElement, services.telemetryService, services.messageService, contextViewService);\n\t\tr.push(contextMenuService);\n\t\tservices.contextMenuService = contextMenuService;\n\t}\n\n\treturn r;\n}\n\n// The static services represents a map of services that once 1 editor has been created must be used for all subsequent editors\nvar staticServices: IStaticServices = null;\nexport function getOrCreateStaticServices(services?: IEditorOverrideServices): IStaticServices {\n\tif (staticServices) {\n\t\treturn staticServices;\n\t}\n\tservices = services || {};\n\n\tlet contextService = services.contextService;\n\tif (!contextService) {\n\t\tcontextService = new BaseWorkspaceContextService({\n\t\t\tresource: URI.create('inmemory', 'model', '/'),\n\t\t\tid: null,\n\t\t\tname: null,\n\t\t\tuid: null,\n\t\t\tmtime: null\n\t\t}, {});\n\t}\n\n\tlet telemetryService = services.telemetryService;\n\n\tif (!telemetryService) {\n\t\tlet config = contextService.getConfiguration();\n\t\tlet enableTelemetry = config && config.env ? !!config.env.enableTelemetry: false;\n\t\ttelemetryService = enableTelemetry\n\t\t\t? new TelemetryService()\n\t\t\t: NullTelemetryService;\n\t}\n\n\tlet eventService = services.eventService || new EventService();\n\tlet configurationService = services.configurationService || new SimpleConfigurationService(contextService, eventService);\n\n\t// warn the user that standaloneEdiktorTelemetryEndpint is absolete\n\tif (flags.standaloneEditorTelemetryEndpoint) {\n\t\tconsole.warn('standaloneEditorTelemetryEndpoint is obsolete');\n\t}\n\n\tlet threadService = services.threadService || new MainThreadService(contextService, 'vs/editor/common/worker/editorWorkerServer', 2);\n\tlet messageService = services.messageService || new SimpleMessageService();\n\tlet extensionService = services.extensionService || new SimpleExtensionService();\n\tlet markerService = services.markerService || new MainProcessMarkerService(threadService);\n\tlet requestService = services.requestService || new SimpleEditorRequestService(contextService, telemetryService);\n\tlet modeService = services.modeService || new MainThreadModeServiceImpl(threadService, extensionService, configurationService);\n\tlet modelService = services.modelService || new ModelServiceImpl(threadService, markerService, modeService, configurationService, messageService);\n\tlet editorWorkerService = services.editorWorkerService || new EditorWorkerServiceImpl(modelService);\n\tlet codeEditorService = services.codeEditorService || new CodeEditorServiceImpl();\n\n\tstaticServices = {\n\t\tconfigurationService: configurationService,\n\t\textensionService: extensionService,\n\t\tmodeService: modeService,\n\t\tthreadService: threadService,\n\t\tmarkerService: markerService,\n\t\tcontextService: contextService,\n\t\ttelemetryService: telemetryService,\n\t\trequestService: requestService,\n\t\tmessageService: messageService,\n\t\tmodelService: modelService,\n\t\tcodeEditorService: codeEditorService,\n\t\teditorWorkerService: editorWorkerService,\n\t\teventService: eventService,\n\t\tinstantiationService: void 0\n\t};\n\n\tlet instantiationService = createInstantiationService(staticServices);\n\tstaticServices.instantiationService = createInstantiationService(staticServices);\n\tif (threadService instanceof MainThreadService) {\n\t\tthreadService.setInstantiationService(instantiationService);\n\t}\n\n\treturn staticServices;\n}\n\n"]}