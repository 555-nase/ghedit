{"version":3,"file":"vs/editor/browser/standalone/standaloneEditor.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/browser/standalone/standaloneEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport 'vs/editor/standalone-languages/all';\nimport './standaloneSchemas';\nimport 'vs/css!./media/standalone-tokens';\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ClassNames, ContentWidgetPositionPreference, OverlayWidgetPositionPreference} from 'vs/editor/browser/editorBrowser';\nimport {Colorizer} from 'vs/editor/browser/standalone/colorizer';\nimport * as standaloneCodeEditor from 'vs/editor/browser/standalone/standaloneCodeEditor';\nimport {ILanguageDef} from 'vs/editor/standalone-languages/types';\nimport * as TokensBinaryEncoding from 'vs/editor/common/model/tokensBinaryEncoding';\n\nvar global:any = self;\nif (!global.Monaco) {\n\tglobal.Monaco = {};\n}\nvar Monaco = global.Monaco;\nif (!Monaco.Editor) {\n\tMonaco.Editor = {};\n}\nMonaco.Editor.setupServices = standaloneCodeEditor.setupServices;\nMonaco.Editor.create = standaloneCodeEditor.create;\nMonaco.Editor.createModel = standaloneCodeEditor.createModel;\nMonaco.Editor.createDiffEditor = standaloneCodeEditor.createDiffEditor;\nMonaco.Editor.configureMode = standaloneCodeEditor.configureMode;\nMonaco.Editor.getOrCreateMode = standaloneCodeEditor.getOrCreateMode;\nMonaco.Editor.createCustomMode = standaloneCodeEditor.createCustomMode;\nMonaco.Editor.colorize = standaloneCodeEditor.colorize;\nMonaco.Editor.colorizeElement = standaloneCodeEditor.colorizeElement;\nMonaco.Editor.colorizeLine = Colorizer.colorizeLine;\nMonaco.Editor.colorizeModelLine = Colorizer.colorizeModelLine;\n\n// -- export common constants\nMonaco.Editor.SelectionDirection = editorCommon.SelectionDirection;\nMonaco.Editor.WrappingIndent = editorCommon.WrappingIndent;\nMonaco.Editor.wrappingIndentFromString = editorCommon.wrappingIndentFromString;\nMonaco.Editor.OverviewRulerLane = editorCommon.OverviewRulerLane;\nMonaco.Editor.EndOfLinePreference = editorCommon.EndOfLinePreference;\nMonaco.Editor.EndOfLineSequence = editorCommon.EndOfLineSequence;\nMonaco.Editor.LineTokensBinaryEncoding = TokensBinaryEncoding;\nMonaco.Editor.TrackedRangeStickiness = editorCommon.TrackedRangeStickiness;\nMonaco.Editor.VerticalRevealType = editorCommon.VerticalRevealType;\nMonaco.Editor.MouseTargetType = editorCommon.MouseTargetType;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS = editorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_FOCUS = editorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS = editorCommon.KEYBINDING_CONTEXT_EDITOR_TAB_MOVES_FOCUS;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS = editorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_MULTIPLE_SELECTIONS;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION = editorCommon.KEYBINDING_CONTEXT_EDITOR_HAS_NON_EMPTY_SELECTION;\nMonaco.Editor.KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID = editorCommon.KEYBINDING_CONTEXT_EDITOR_LANGUAGE_ID;\nMonaco.Editor.ViewEventNames = editorCommon.ViewEventNames;\nMonaco.Editor.CodeEditorStateFlag = editorCommon.CodeEditorStateFlag;\nMonaco.Editor.EditorType = editorCommon.EditorType;\nMonaco.Editor.ClassName = editorCommon.ClassName;\nMonaco.Editor.EventType = editorCommon.EventType;\nMonaco.Editor.Handler = editorCommon.Handler;\n\n// -- export browser constants\nMonaco.Editor.ClassNames = ClassNames;\nMonaco.Editor.ContentWidgetPositionPreference = ContentWidgetPositionPreference;\nMonaco.Editor.OverlayWidgetPositionPreference = OverlayWidgetPositionPreference;\n\n// Register all built-in standalone languages\nlet MonacoEditorLanguages: ILanguageDef[] = this.MonacoEditorLanguages || [];\nMonacoEditorLanguages.forEach((language) => {\n\tstandaloneCodeEditor.registerMonarchStandaloneLanguage(language, language.defModule);\n});\n\n// Register all built-in standalone JSON schemas\nlet MonacoEditorSchemas: { [url:string]: IJSONSchema } = this.MonacoEditorSchemas || {};\nfor (var uri in MonacoEditorSchemas) {\n\tstandaloneCodeEditor.registerStandaloneSchema(uri, MonacoEditorSchemas[uri]);\n}\n\nif (!Monaco.Languages) {\n\tMonaco.Languages = {};\n}\nMonaco.Languages.register = standaloneCodeEditor.registerStandaloneLanguage;\n"]}