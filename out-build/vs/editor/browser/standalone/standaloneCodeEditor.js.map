{"version":3,"file":"vs/editor/browser/standalone/standaloneCodeEditor.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/browser/standalone/standaloneCodeEditor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IContextViewService} from 'vs/platform/contextview/browser/contextView';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {createInstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {Extensions, IJSONContributionRegistry} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {AbstractKeybindingService} from 'vs/platform/keybinding/browser/keybindingServiceImpl';\nimport {ICommandHandler, IKeybindingContextKey, IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {IMarkerService} from 'vs/platform/markers/common/markers';\nimport {Registry} from 'vs/platform/platform';\nimport {RemoteTelemetryServiceHelper} from 'vs/platform/telemetry/common/remoteTelemetryService';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {DefaultConfig} from 'vs/editor/common/config/defaultConfig';\nimport {IActionDescriptor, ICodeEditorWidgetCreationOptions, IDiffEditorOptions, IModel} from 'vs/editor/common/editorCommon';\nimport {IMode} from 'vs/editor/common/modes';\nimport {ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\nimport {ILanguage} from 'vs/editor/common/modes/monarch/monarchTypes';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {ILanguageExtensionPoint} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {ICodeEditor, IDiffEditor} from 'vs/editor/browser/editorBrowser';\nimport {Colorizer, IColorizerElementOptions, IColorizerOptions} from 'vs/editor/browser/standalone/colorizer';\nimport {SimpleEditorService, StandaloneKeybindingService} from 'vs/editor/browser/standalone/simpleServices';\nimport {IEditorContextViewService, IEditorOverrideServices, ensureDynamicPlatformServices, ensureStaticPlatformServices, getOrCreateStaticServices} from 'vs/editor/browser/standalone/standaloneServices';\nimport {CodeEditorWidget} from 'vs/editor/browser/widget/codeEditorWidget';\nimport {DiffEditorWidget} from 'vs/editor/browser/widget/diffEditorWidget';\n\n// Set defaults for standalone editor\nDefaultConfig.editor.wrappingIndent = 'none';\nDefaultConfig.editor.folding = false;\n\nexport interface IEditorConstructionOptions extends ICodeEditorWidgetCreationOptions {\n\tvalue?: string;\n\tmode?: string;\n}\nexport interface IDiffEditorConstructionOptions extends IDiffEditorOptions {\n}\n\nclass StandaloneEditor extends CodeEditorWidget {\n\n\tprivate _editorService:IEditorService;\n\tprivate _standaloneKeybindingService: StandaloneKeybindingService;\n\tprivate _contextViewService:IEditorContextViewService;\n\tprivate _markerService: IMarkerService;\n\tprivate _ownsModel:boolean;\n\tprivate _toDispose2: IDisposable[];\n\n\tconstructor(\n\t\tdomElement:HTMLElement,\n\t\toptions:IEditorConstructionOptions,\n\t\ttoDispose: IDisposable[],\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IMarkerService markerService: IMarkerService\n\t) {\n\t\tif (keybindingService instanceof AbstractKeybindingService) {\n\t\t\t(<AbstractKeybindingService><any>keybindingService).setInstantiationService(instantiationService);\n\t\t}\n\n\t\toptions = options || {};\n\t\tsuper(domElement, options, instantiationService, codeEditorService, keybindingService, telemetryService);\n\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tthis._standaloneKeybindingService = <StandaloneKeybindingService>keybindingService;\n\t\t}\n\n\t\tthis._contextViewService = <IEditorContextViewService>contextViewService;\n\t\tthis._editorService = editorService;\n\t\tthis._markerService = markerService;\n\t\tthis._toDispose2 = toDispose;\n\n\t\tlet model: IModel = null;\n\t\tif (typeof options.model === 'undefined') {\n\t\t\tmodel = (<any>self).Monaco.Editor.createModel(options.value || '', options.mode || 'text/plain');\n\t\t\tthis._ownsModel = true;\n\t\t} else {\n\t\t\tmodel = options.model;\n\t\t\tdelete options.model;\n\t\t\tthis._ownsModel = false;\n\t\t}\n\n\t\tthis._attachModel(model);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._toDispose2 = dispose(this._toDispose2);\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic getMarkerService():IMarkerService {\n\t\treturn this._markerService;\n\t}\n\n\tpublic addCommand(keybinding:number, handler:ICommandHandler, context:string): string {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\treturn this._standaloneKeybindingService.addDynamicKeybinding(keybinding, handler, context);\n\t}\n\n\tpublic createContextKey<T>(key: string, defaultValue: T): IKeybindingContextKey<T> {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot create context key because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\treturn this._standaloneKeybindingService.createKey(key, defaultValue);\n\t}\n\n\tpublic addAction(descriptor:IActionDescriptor): void {\n\t\tsuper.addAction(descriptor);\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\tif (Array.isArray(descriptor.keybindings)) {\n\t\t\tvar handler: ICommandHandler = (accessor) => {\n\t\t\t\treturn this.trigger('keyboard', descriptor.id, null);\n\t\t\t};\n\t\t\tdescriptor.keybindings.forEach((kb) => {\n\t\t\t\tthis._standaloneKeybindingService.addDynamicKeybinding(kb, handler, descriptor.keybindingContext, descriptor.id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getTelemetryService():ITelemetryService {\n\t\treturn this._telemetryService;\n\t}\n\n\tpublic getEditorService():IEditorService {\n\t\treturn this._editorService;\n\t}\n\n\t_attachModel(model:IModel):void {\n\t\tsuper._attachModel(model);\n\t\tif (this._view) {\n\t\t\tthis._contextViewService.setContainer(this._view.domNode);\n\t\t}\n\t}\n\n\t_postDetachModelCleanup(detachedModel:IModel): void {\n\t\tsuper._postDetachModelCleanup(detachedModel);\n\t\tif (detachedModel && this._ownsModel) {\n\t\t\tdetachedModel.destroy();\n\t\t\tthis._ownsModel = false;\n\t\t}\n\t}\n}\n\nclass StandaloneDiffEditor extends DiffEditorWidget {\n\n\tprivate _contextViewService:IEditorContextViewService;\n\tprivate _standaloneKeybindingService: StandaloneKeybindingService;\n\tprivate _toDispose2: IDisposable[];\n\tprivate _markerService: IMarkerService;\n\tprivate _telemetryService: ITelemetryService;\n\n\tconstructor(\n\t\tdomElement:HTMLElement,\n\t\toptions:IDiffEditorConstructionOptions,\n\t\ttoDispose: IDisposable[],\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IMarkerService markerService: IMarkerService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tif (keybindingService instanceof AbstractKeybindingService) {\n\t\t\t(<AbstractKeybindingService><any>keybindingService).setInstantiationService(instantiationService);\n\t\t}\n\n\t\tsuper(domElement, options, editorWorkerService, instantiationService);\n\n\t\tif (keybindingService instanceof StandaloneKeybindingService) {\n\t\t\tthis._standaloneKeybindingService = <StandaloneKeybindingService>keybindingService;\n\t\t}\n\n\t\tthis._contextViewService = <IEditorContextViewService>contextViewService;\n\n\t\tthis._markerService = markerService;\n\t\tthis._telemetryService = telemetryService;\n\n\t\tthis._toDispose2 = toDispose;\n\n\t\tthis._contextViewService.setContainer(this._containerDomElement);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._toDispose2 = dispose(this._toDispose2);\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic getMarkerService():IMarkerService {\n\t\treturn this._markerService;\n\t}\n\n\tpublic addCommand(keybinding:number, handler:ICommandHandler, context:string): string {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\treturn this._standaloneKeybindingService.addDynamicKeybinding(keybinding, handler, context);\n\t}\n\n\tpublic createContextKey<T>(key: string, defaultValue: T): IKeybindingContextKey<T> {\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot create context key because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\treturn this._standaloneKeybindingService.createKey(key, defaultValue);\n\t}\n\n\tpublic addAction(descriptor:IActionDescriptor): void {\n\t\tsuper.addAction(descriptor);\n\t\tif (!this._standaloneKeybindingService) {\n\t\t\tconsole.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n\t\t\treturn null;\n\t\t}\n\t\tif (Array.isArray(descriptor.keybindings)) {\n\t\t\tvar handler:ICommandHandler = (ctx) => {\n\t\t\t\treturn this.trigger('keyboard', descriptor.id, null);\n\t\t\t};\n\t\t\tdescriptor.keybindings.forEach((kb) => {\n\t\t\t\tthis._standaloneKeybindingService.addDynamicKeybinding(kb, handler, descriptor.keybindingContext, descriptor.id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getTelemetryService():ITelemetryService {\n\t\treturn this._telemetryService;\n\t}\n}\n\nvar startup = (function() {\n\n\tvar modesRegistryInitialized = false;\n\tvar setupServicesCalled = false;\n\n\treturn {\n\t\tinitStaticServicesIfNecessary: function() {\n\t\t\tif (modesRegistryInitialized) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmodesRegistryInitialized = true;\n\t\t\tvar staticServices = getOrCreateStaticServices();\n\n\t\t\t// Instantiate thread actors\n\t\t\tstaticServices.threadService.getRemotable(RemoteTelemetryServiceHelper);\n\t\t},\n\n\t\tsetupServices: function(services: IEditorOverrideServices): IEditorOverrideServices {\n\t\t\tif (setupServicesCalled) {\n\t\t\t\tconsole.error('Call to Monaco.Editor.setupServices is ignored because it was called before');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetupServicesCalled = true;\n\t\t\tif (modesRegistryInitialized) {\n\t\t\t\tconsole.error('Call to Monaco.Editor.setupServices is ignored because other API was called before');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn ensureStaticPlatformServices(services);\n\t\t}\n\t};\n\n})();\n\nfunction shallowClone<T>(obj:T): T {\n\tlet r:T = <any>{};\n\tif (obj) {\n\t\tlet keys = Object.keys(obj);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet key = keys[i];\n\t\t\tr[key] = obj[key];\n\t\t}\n\t}\n\treturn r;\n}\n\nexport var setupServices = startup.setupServices;\n\nexport function create(domElement:HTMLElement, options:IEditorConstructionOptions, services:IEditorOverrideServices):ICodeEditor {\n\tstartup.initStaticServicesIfNecessary();\n\n\tservices = shallowClone(services);\n\tvar editorService: SimpleEditorService = null;\n\tif (!services || !services.editorService) {\n\t\teditorService = new SimpleEditorService();\n\t\tservices.editorService = editorService;\n\t}\n\n\tvar t = prepareServices(domElement, services);\n\tvar result = t.ctx.instantiationService.createInstance(StandaloneEditor, domElement, options, t.toDispose);\n\n\tif (editorService) {\n\t\teditorService.setEditor(result);\n\t}\n\n\treturn result;\n}\n\nexport function createDiffEditor(domElement:HTMLElement, options:IDiffEditorConstructionOptions, services: IEditorOverrideServices):IDiffEditor {\n\tstartup.initStaticServicesIfNecessary();\n\n\tservices = shallowClone(services);\n\tvar editorService: SimpleEditorService = null;\n\tif (!services || !services.editorService) {\n\t\teditorService = new SimpleEditorService();\n\t\tservices.editorService = editorService;\n\t}\n\n\tvar t = prepareServices(domElement, services);\n\tvar result = t.ctx.instantiationService.createInstance(StandaloneDiffEditor, domElement, options, t.toDispose);\n\n\tif (editorService) {\n\t\teditorService.setEditor(result);\n\t}\n\n\treturn result;\n}\n\nfunction prepareServices(domElement: HTMLElement, services: IEditorOverrideServices): { ctx: IEditorOverrideServices; toDispose: IDisposable[]; } {\n\tservices = ensureStaticPlatformServices(services);\n\tvar toDispose = ensureDynamicPlatformServices(domElement, services);\n\tservices.instantiationService = createInstantiationService(services);\n\n\treturn {\n\t\tctx: services,\n\t\ttoDispose: toDispose\n\t};\n}\n\nfunction createModelWithRegistryMode(modelService:IModelService, modeService:IModeService, value:string, modeName:string, associatedResource?:URI): IModel {\n\tvar modeInformation = modeService.lookup(modeName);\n\tif (modeInformation.length > 0) {\n\t\t// Force usage of the first existing mode\n\t\tmodeName = modeInformation[0].modeId;\n\t} else {\n\t\t// Fall back to plain/text\n\t\tmodeName = 'plain/text';\n\t}\n\tvar mode = modeService.getMode(modeName);\n\tif (mode) {\n\t\treturn modelService.createModel(value, mode, associatedResource);\n\t}\n\treturn modelService.createModel(value, modeService.getOrCreateMode(modeName), associatedResource);\n}\n\nexport function createModel(value:string, mode:string|ILanguage|IMode, associatedResource?:URI|string): IModel {\n\tstartup.initStaticServicesIfNecessary();\n\tvar modelService = ensureStaticPlatformServices(null).modelService;\n\n\tvar resource:URI;\n\tif (typeof associatedResource === 'string') {\n\t\tresource = URI.parse(associatedResource);\n\t} else {\n\t\t// must be a URL\n\t\tresource = associatedResource;\n\t}\n\n\tif (typeof (<IMode>mode).getId === 'function') {\n\t\t// mode is an IMode\n\t\treturn modelService.createModel(value, <IMode>mode, resource);\n\t}\n\n\tif (typeof mode === 'string') {\n\t\t// mode is a string\n\t\tvar modeService = ensureStaticPlatformServices(null).modeService;\n\t\treturn createModelWithRegistryMode(modelService, modeService, value, mode, resource);\n\t}\n\n\t// mode must be an ILanguage\n\treturn modelService.createModel(value, createCustomMode(<ILanguage>mode), resource);\n}\n\nexport function getOrCreateMode(mimetypes: string):TPromise<IMode> {\n\tstartup.initStaticServicesIfNecessary();\n\tvar modeService = ensureStaticPlatformServices(null).modeService;\n\n\treturn modeService.getOrCreateMode(mimetypes);\n}\n\nexport function configureMode(modeId: string, options: any): void {\n\tstartup.initStaticServicesIfNecessary();\n\tvar modeService = ensureStaticPlatformServices(null).modeService;\n\n\tmodeService.configureModeById(modeId, options);\n}\n\nexport function createCustomMode(language:ILanguage): TPromise<IMode> {\n\tstartup.initStaticServicesIfNecessary();\n\tlet staticPlatformServices = ensureStaticPlatformServices(null);\n\tlet modeService = staticPlatformServices.modeService;\n\tlet modelService = staticPlatformServices.modelService;\n\tlet editorWorkerService = staticPlatformServices.editorWorkerService;\n\n\tlet modeId = language.name;\n\tlet name = language.name;\n\n\tModesRegistry.registerLanguage({\n\t\tid: modeId,\n\t\taliases: [name]\n\t});\n\n\tlet disposable = modeService.onDidCreateMode((mode) => {\n\t\tif (mode.getId() !== modeId) {\n\t\t\treturn;\n\t\t}\n\t\tmodeService.registerMonarchDefinition(modelService, editorWorkerService, modeId, language);\n\t\tdisposable.dispose();\n\t});\n\n\treturn modeService.getOrCreateMode(modeId);\n}\n\nexport function registerMonarchStandaloneLanguage(language:ILanguageExtensionPoint, defModule:string): void {\n\tModesRegistry.registerLanguage(language);\n\n\tExtensionsRegistry.registerOneTimeActivationEventListener('onLanguage:' + language.id, () => {\n\t\trequire([defModule], (value:{language:ILanguage}) => {\n\t\t\tif (!value.language) {\n\t\t\t\tconsole.error('Expected ' + defModule + ' to export a `language`');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartup.initStaticServicesIfNecessary();\n\t\t\tlet staticPlatformServices = ensureStaticPlatformServices(null);\n\t\t\tlet modeService = staticPlatformServices.modeService;\n\t\t\tlet modelService = staticPlatformServices.modelService;\n\t\t\tlet editorWorkerService = staticPlatformServices.editorWorkerService;\n\n\t\t\tmodeService.registerMonarchDefinition(modelService, editorWorkerService, language.id, value.language);\n\t\t}, (err) => {\n\t\t\tconsole.error('Cannot find module ' + defModule, err);\n\t\t});\n\t});\n}\n\nexport function registerStandaloneLanguage(language:ILanguageExtensionPoint, defModule:string): void {\n\tModesRegistry.registerLanguage(language);\n\n\tExtensionsRegistry.registerOneTimeActivationEventListener('onLanguage:' + language.id, () => {\n\t\trequire([defModule], (value:{activate:()=>void}) => {\n\t\t\tif (!value.activate) {\n\t\t\t\tconsole.error('Expected ' + defModule + ' to export an `activate` function');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstartup.initStaticServicesIfNecessary();\n\t\t\tlet staticPlatformServices = ensureStaticPlatformServices(null);\n\t\t\tlet instantiationService = staticPlatformServices.instantiationService;\n\n\t\t\tinstantiationService.invokeFunction(value.activate);\n\t\t}, (err) => {\n\t\t\tconsole.error('Cannot find module ' + defModule, err);\n\t\t});\n\t});\n}\n\nexport function registerStandaloneSchema(uri:string, schema:IJSONSchema) {\n\tlet schemaRegistry = <IJSONContributionRegistry>Registry.as(Extensions.JSONContribution);\n\tschemaRegistry.registerSchema(uri, schema);\n}\n\nexport function colorizeElement(domNode:HTMLElement, options:IColorizerElementOptions): TPromise<void> {\n\tstartup.initStaticServicesIfNecessary();\n\tvar modeService = ensureStaticPlatformServices(null).modeService;\n\treturn Colorizer.colorizeElement(modeService, domNode, options);\n}\n\nexport function colorize(text:string, mimeType:string, options:IColorizerOptions): TPromise<string> {\n\tstartup.initStaticServicesIfNecessary();\n\tvar modeService = ensureStaticPlatformServices(null).modeService;\n\treturn Colorizer.colorize(modeService, text, mimeType, options);\n}\n"]}