{"version":3,"file":"simpleServices.js","sourceRoot":"","sources":["../../../../../src/vs/editor/browser/standalone/simpleServices.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {toErrorMessage} from 'vs/base/common/errors';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {Schemas} from 'vs/base/common/network';\nimport Severity from 'vs/base/common/severity';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {ConfigurationService, IContent, IStat} from 'vs/platform/configuration/common/configurationService';\nimport {IEditor, IEditorInput, IEditorOptions, IEditorService, IResourceInput, ITextEditorModel, Position} from 'vs/platform/editor/common/editor';\nimport {AbstractExtensionService, ActivatedExtension} from 'vs/platform/extensions/common/abstractExtensionService';\nimport {IExtensionDescription} from 'vs/platform/extensions/common/extensions';\nimport {KeybindingService} from 'vs/platform/keybinding/browser/keybindingServiceImpl';\nimport {IOSupport} from 'vs/platform/keybinding/common/keybindingResolver';\nimport {ICommandHandler, ICommandsMap, IKeybindingItem} from 'vs/platform/keybinding/common/keybindingService';\nimport {IConfirmation, IMessageService} from 'vs/platform/message/common/message';\nimport {BaseRequestService} from 'vs/platform/request/common/baseRequestService';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ICodeEditor, IDiffEditor} from 'vs/editor/browser/editorBrowser';\n\nexport class SimpleEditor implements IEditor {\n\n\tpublic input:IEditorInput;\n\tpublic options:IEditorOptions;\n\tpublic position:Position;\n\n\tpublic _widget:editorCommon.IEditor;\n\n\tconstructor(editor:editorCommon.IEditor) {\n\t\tthis._widget = editor;\n\t}\n\n\tpublic getId():string { return 'editor'; }\n\tpublic getControl():editorCommon.IEditor { return this._widget; }\n\tpublic getSelection():editorCommon.IEditorSelection { return this._widget.getSelection(); }\n\tpublic focus():void { this._widget.focus(); }\n\n\tpublic withTypedEditor<T>(codeEditorCallback:(editor:ICodeEditor)=>T, diffEditorCallback:(editor:IDiffEditor)=>T): T {\n\t\tif (this._widget.getEditorType() === editorCommon.EditorType.ICodeEditor) {\n\t\t\t// Single Editor\n\t\t\treturn codeEditorCallback(<ICodeEditor>this._widget);\n\t\t} else {\n\t\t\t// Diff Editor\n\t\t\treturn diffEditorCallback(<IDiffEditor>this._widget);\n\t\t}\n\t}\n}\n\nexport class SimpleModel extends EventEmitter implements ITextEditorModel  {\n\n\tprivate model:editorCommon.IModel;\n\n\tconstructor(model:editorCommon.IModel) {\n\t\tsuper();\n\t\tthis.model = model;\n\t}\n\n\tpublic get textEditorModel():editorCommon.IModel {\n\t\treturn this.model;\n\t}\n}\n\nexport interface IOpenEditorDelegate {\n\t(url:string): boolean;\n}\n\nexport class SimpleEditorService implements IEditorService {\n\tpublic serviceId = IEditorService;\n\n\tprivate editor:SimpleEditor;\n\tprivate openEditorDelegate:IOpenEditorDelegate;\n\n\tconstructor() {\n\t\tthis.openEditorDelegate = null;\n\t}\n\n\tpublic setEditor(editor:editorCommon.IEditor): void {\n\t\tthis.editor = new SimpleEditor(editor);\n\t}\n\n\tpublic setOpenEditorDelegate(openEditorDelegate:IOpenEditorDelegate): void {\n\t\tthis.openEditorDelegate = openEditorDelegate;\n\t}\n\n\tpublic openEditor(typedData:IResourceInput, sideBySide?:boolean): TPromise<IEditor> {\n\t\treturn TPromise.as(this.editor.withTypedEditor(\n\t\t\t(editor) => this.doOpenEditor(editor, typedData),\n\t\t\t(diffEditor) => (\n\t\t\t\tthis.doOpenEditor(diffEditor.getOriginalEditor(), typedData) ||\n\t\t\t\tthis.doOpenEditor(diffEditor.getModifiedEditor(), typedData)\n\t\t\t)\n\t\t));\n\t}\n\n\tprivate doOpenEditor(editor:editorCommon.ICommonCodeEditor, data:IResourceInput): IEditor {\n\t\tvar model = this.findModel(editor, data);\n\t\tif (!model) {\n\t\t\tif (data.resource) {\n\t\t\t\tif (this.openEditorDelegate) {\n\t\t\t\t\tthis.openEditorDelegate(data.resource.toString());\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tvar schema = data.resource.scheme;\n\t\t\t\t\tif (schema === Schemas.http || schema === Schemas.https) {\n\t\t\t\t\t\t// This is a fully qualified http or https URL\n\t\t\t\t\t\twindow.open(data.resource.toString());\n\t\t\t\t\t\treturn this.editor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\n\t\tvar selection = <editorCommon.IRange>data.options.selection;\n\t\tif (selection) {\n\t\t\tif (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n\t\t\t\teditor.setSelection(selection);\n\t\t\t\teditor.revealRangeInCenter(selection);\n\t\t\t} else {\n\t\t\t\tvar pos = {\n\t\t\t\t\tlineNumber: selection.startLineNumber,\n\t\t\t\t\tcolumn: selection.startColumn\n\t\t\t\t};\n\t\t\t\teditor.setPosition(pos);\n\t\t\t\teditor.revealPositionInCenter(pos);\n\t\t\t}\n\t\t}\n\n\t\treturn this.editor;\n\t}\n\n\tprivate findModel(editor:editorCommon.ICommonCodeEditor, data:IResourceInput): editorCommon.IModel {\n\t\tvar model = editor.getModel();\n\t\tif(model.getAssociatedResource().toString() !== data.resource.toString()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn model;\n\t}\n\n\tpublic resolveEditorModel(typedData: IResourceInput, refresh?: boolean): TPromise<ITextEditorModel> {\n\t\tvar model: editorCommon.IModel;\n\n\t\tmodel = this.editor.withTypedEditor(\n\t\t\t(editor) => this.findModel(editor, typedData),\n\t\t\t(diffEditor) => this.findModel(diffEditor.getOriginalEditor(), typedData) || this.findModel(diffEditor.getModifiedEditor(), typedData)\n\t\t);\n\n\t\tif (!model) {\n\t\t\treturn TPromise.as(null);\n\t\t}\n\n\t\treturn TPromise.as(new SimpleModel(model));\n\t}\n}\n\nexport class SimpleMessageService implements IMessageService {\n\tpublic serviceId = IMessageService;\n\n\tprivate static Empty = function() { /* nothing */};\n\n\tpublic show(sev:Severity, message:any):()=>void {\n\n\t\tswitch(sev) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(toErrorMessage(message, true));\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(message);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn SimpleMessageService.Empty;\n\t}\n\n\tpublic hideAll():void {\n\t\t// No-op\n\t}\n\n\tpublic confirm(confirmation:IConfirmation):boolean {\n\t\tvar messageText = confirmation.message;\n\t\tif (confirmation.detail) {\n\t\t\tmessageText = messageText + '\\n\\n' + confirmation.detail;\n\t\t}\n\n\t\treturn window.confirm(messageText);\n\t}\n\n\tpublic setStatusMessage(message: string, autoDisposeAfter:number = -1): IDisposable {\n\t\treturn {\n\t\t\tdispose: () => { /* Nothing to do here */ }\n\t\t};\n\t}\n}\n\nexport class SimpleEditorRequestService extends BaseRequestService {\n\n\tconstructor(contextService: IWorkspaceContextService, telemetryService?: ITelemetryService) {\n\t\tsuper(contextService, telemetryService);\n\t}\n}\n\nexport class StandaloneKeybindingService extends KeybindingService {\n\tprivate static LAST_GENERATED_ID = 0;\n\n\tprivate _dynamicKeybindings: IKeybindingItem[];\n\tprivate _dynamicCommands: ICommandsMap;\n\n\tconstructor(configurationService: IConfigurationService, domNode: HTMLElement) {\n\t\tsuper(configurationService);\n\n\t\tthis._dynamicKeybindings = [];\n\t\tthis._dynamicCommands = Object.create(null);\n\n\t\tthis._beginListening(domNode);\n\t}\n\n\tpublic addDynamicKeybinding(keybinding: number, handler:ICommandHandler, context:string, commandId:string = null): string {\n\t\tif (commandId === null) {\n\t\t\tcommandId = 'DYNAMIC_' + (++StandaloneKeybindingService.LAST_GENERATED_ID);\n\t\t}\n\t\tvar parsedContext = IOSupport.readKeybindingContexts(context);\n\t\tthis._dynamicKeybindings.push({\n\t\t\tkeybinding: keybinding,\n\t\t\tcommand: commandId,\n\t\t\tcontext: parsedContext,\n\t\t\tweight1: 1000,\n\t\t\tweight2: 0\n\t\t});\n\t\tthis._dynamicCommands[commandId] = handler;\n\t\tthis.updateResolver();\n\t\treturn commandId;\n\t}\n\n\tprotected _getExtraKeybindings(isFirstTime:boolean): IKeybindingItem[] {\n\t\treturn this._dynamicKeybindings;\n\t}\n\n\tprotected _getCommandHandler(commandId:string): ICommandHandler {\n\t\treturn super._getCommandHandler(commandId) || this._dynamicCommands[commandId];\n\t}\n}\n\nexport class SimpleExtensionService extends AbstractExtensionService<ActivatedExtension> {\n\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n\tprotected _showMessage(severity:Severity, msg:string): void {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Info:\n\t\t\t\tconsole.info(msg);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\tprotected _createFailedExtension(): ActivatedExtension {\n\t\tthrow new Error('unexpected');\n\t}\n\n\tprotected _actualActivateExtension(extensionDescription: IExtensionDescription): TPromise<ActivatedExtension> {\n\t\tthrow new Error('unexpected');\n\t}\n\n}\n\nexport class SimpleConfigurationService extends ConfigurationService {\n\n\tprotected resolveContents(resources: URI[]): TPromise<IContent[]> {\n\t\treturn TPromise.as(resources.map((resource) => {\n\t\t\treturn {\n\t\t\t\tresource: resource,\n\t\t\t\tvalue: ''\n\t\t\t};\n\t\t}));\n\t}\n\n\tprotected resolveContent(resource: URI): TPromise<IContent> {\n\t\treturn TPromise.as({\n\t\t\tresource: resource,\n\t\t\tvalue: ''\n\t\t});\n\t}\n\n\tprotected resolveStat(resource: URI): TPromise<IStat> {\n\t\treturn TPromise.as({\n\t\t\tresource: resource,\n\t\t\tisDirectory: false\n\t\t});\n\t}\n\n}\n"]}