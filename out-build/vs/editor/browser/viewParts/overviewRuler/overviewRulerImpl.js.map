{"version":3,"file":"overviewRulerImpl.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/browser/viewParts/overviewRuler/overviewRulerImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as browser from 'vs/base/browser/browser';\nimport {StyleMutator} from 'vs/base/browser/styleMutator';\nimport {IOverviewRulerPosition, OverviewRulerLane} from 'vs/editor/common/editorCommon';\nimport {OverviewRulerZone, ColorZone} from 'vs/editor/browser/editorBrowser';\n\nclass ZoneManager {\n\n\tprivate _getVerticalOffsetForLine:(lineNumber:number)=>number;\n\tprivate _zones: OverviewRulerZone[];\n\tprivate _colorZonesInvalid: boolean;\n\tprivate _lineHeight: number;\n\tprivate _width: number;\n\tprivate _height: number;\n\tprivate _outerHeight: number;\n\tprivate _maximumHeight: number;\n\tprivate _minimumHeight: number;\n\tprivate _useDarkColor: boolean;\n\n\tprivate _lastAssignedId;\n\tprivate _color2Id: { [color:string]: number; };\n\tprivate _id2Color: string[];\n\n\tconstructor(getVerticalOffsetForLine:(lineNumber:number)=>number) {\n\t\tthis._getVerticalOffsetForLine = getVerticalOffsetForLine;\n\t\tthis._zones = [];\n\t\tthis._colorZonesInvalid = false;\n\t\tthis._lineHeight = 0;\n\t\tthis._width = 0;\n\t\tthis._height = 0;\n\t\tthis._outerHeight = 0;\n\t\tthis._maximumHeight = 0;\n\t\tthis._minimumHeight = 0;\n\t\tthis._useDarkColor = false;\n\n\t\tthis._lastAssignedId = 0;\n\t\tthis._color2Id = Object.create(null);\n\t\tthis._id2Color = [];\n\t}\n\n\tpublic getId2Color(): string[] {\n\t\treturn this._id2Color;\n\t}\n\n\tpublic setZones(newZones: OverviewRulerZone[]): void {\n\t\tnewZones.sort((a, b) => a.compareTo(b));\n\n\t\tlet oldZones = this._zones;\n\t\tlet oldIndex = 0;\n\t\tlet oldLength = this._zones.length;\n\t\tlet newIndex = 0;\n\t\tlet newLength = newZones.length;\n\n\t\tlet result: OverviewRulerZone[] = [];\n\t\twhile (newIndex < newLength) {\n\t\t\tlet newZone = newZones[newIndex];\n\n\t\t\tif (oldIndex >= oldLength) {\n\t\t\t\tresult.push(newZone);\n\t\t\t\tnewIndex++;\n\t\t\t} else {\n\t\t\t\tlet oldZone = oldZones[oldIndex];\n\t\t\t\tlet cmp = oldZone.compareTo(newZone);\n\t\t\t\tif (cmp < 0) {\n\t\t\t\t\toldIndex++;\n\t\t\t\t} else if (cmp > 0) {\n\t\t\t\t\tresult.push(newZone);\n\t\t\t\t\tnewIndex++;\n\t\t\t\t} else {\n\t\t\t\t\t// cmp === 0\n\t\t\t\t\tresult.push(oldZone);\n\t\t\t\t\toldIndex++;\n\t\t\t\t\tnewIndex++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._zones = result;\n\t}\n\n\tpublic setLineHeight(lineHeight:number): boolean {\n\t\tif (this._lineHeight === lineHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._lineHeight = lineHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this._width;\n\t}\n\n\tpublic setWidth(width:number): boolean {\n\t\tif (this._width === width) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._width = width;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this._height;\n\t}\n\n\tpublic setHeight(height:number): boolean {\n\t\tif (this._height === height) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._height = height;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic getOuterHeight(): number {\n\t\treturn this._outerHeight;\n\t}\n\n\tpublic setOuterHeight(outerHeight:number): boolean {\n\t\tif (this._outerHeight === outerHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._outerHeight = outerHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic setMaximumHeight(maximumHeight:number): boolean {\n\t\tif (this._maximumHeight === maximumHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._maximumHeight = maximumHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic setMinimumHeight(minimumHeight:number): boolean {\n\t\tif (this._minimumHeight === minimumHeight) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._minimumHeight = minimumHeight;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic setUseDarkColor(useDarkColor:boolean): boolean {\n\t\tif (this._useDarkColor === useDarkColor) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._useDarkColor = useDarkColor;\n\t\tthis._colorZonesInvalid = true;\n\t\treturn true;\n\t}\n\n\tpublic resolveColorZones(): ColorZone[] {\n\t\tconst colorZonesInvalid = this._colorZonesInvalid;\n\t\tconst lineHeight = Math.floor(this._lineHeight); // @perf\n\t\tconst totalHeight = Math.floor(this._height); // @perf\n\t\tconst maximumHeight = Math.floor(this._maximumHeight); // @perf\n\t\tconst minimumHeight = Math.floor(this._minimumHeight); // @perf\n\t\tconst useDarkColor = this._useDarkColor; // @perf\n\t\tconst outerHeight = Math.floor(this._outerHeight); // @perf\n\t\tconst heightRatio = totalHeight / outerHeight;\n\n\t\tlet allColorZones: ColorZone[] = [];\n\t\tfor (let i = 0, len = this._zones.length; i < len; i++) {\n\t\t\tlet zone = this._zones[i];\n\n\t\t\tif (!colorZonesInvalid) {\n\t\t\t\tlet colorZones = zone.getColorZones();\n\t\t\t\tif (colorZones) {\n\t\t\t\t\tfor (let j = 0, lenJ = colorZones.length; j < lenJ; j++) {\n\t\t\t\t\t\tallColorZones.push(colorZones[j]);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet y1 = Math.floor(this._getVerticalOffsetForLine(zone.startLineNumber));\n\t\t\tlet y2 = Math.floor(this._getVerticalOffsetForLine(zone.endLineNumber)) + lineHeight;\n\n\t\t\ty1 = Math.floor(y1 * heightRatio);\n\t\t\ty2 = Math.floor(y2 * heightRatio);\n\n\t\t\tlet colorZones: ColorZone[] = [];\n\t\t\tif (zone.forceHeight) {\n\t\t\t\ty2 = y1 + zone.forceHeight;\n\t\t\t\tcolorZones.push(this.createZone(totalHeight, y1, y2, zone.forceHeight, zone.forceHeight, zone.getColor(useDarkColor), zone.position));\n\t\t\t} else {\n\t\t\t\t// Figure out if we can render this in one continuous zone\n\t\t\t\tlet zoneLineNumbers = zone.endLineNumber - zone.startLineNumber + 1;\n\t\t\t\tlet zoneMaximumHeight = zoneLineNumbers * maximumHeight;\n\n\t\t\t\tif (y2 - y1 > zoneMaximumHeight) {\n\t\t\t\t\t// We need to draw one zone per line\n\t\t\t\t\tfor (let lineNumber = zone.startLineNumber; lineNumber <= zone.endLineNumber; lineNumber++) {\n\t\t\t\t\t\ty1 = Math.floor(this._getVerticalOffsetForLine(lineNumber));\n\t\t\t\t\t\ty2 = y1 + lineHeight;\n\n\t\t\t\t\t\ty1 = Math.floor(y1 * heightRatio);\n\t\t\t\t\t\ty2 = Math.floor(y2 * heightRatio);\n\n\t\t\t\t\t\tcolorZones.push(this.createZone(totalHeight, y1, y2, minimumHeight, maximumHeight, zone.getColor(useDarkColor), zone.position));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcolorZones.push(this.createZone(totalHeight, y1, y2, minimumHeight, zoneMaximumHeight, zone.getColor(useDarkColor), zone.position));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tzone.setColorZones(colorZones);\n\t\t\tfor (let j = 0, lenJ = colorZones.length; j < lenJ; j++) {\n\t\t\t\tallColorZones.push(colorZones[j]);\n\t\t\t}\n\t\t}\n\n\t\tthis._colorZonesInvalid = false;\n\n\t\tlet sortFunc = (a:ColorZone, b:ColorZone) => {\n\t\t\tif (a.colorId === b.colorId) {\n\t\t\t\tif (a.from === b.from) {\n\t\t\t\t\treturn a.to - b.to;\n\t\t\t\t}\n\t\t\t\treturn a.from - b.from;\n\t\t\t}\n\t\t\treturn a.colorId - b.colorId;\n\t\t};\n\n\t\tallColorZones.sort(sortFunc);\n\t\treturn allColorZones;\n\t}\n\n\tpublic createZone(totalHeight:number, y1:number, y2:number, minimumHeight:number, maximumHeight:number, color:string, position:OverviewRulerLane): ColorZone {\n\t\ttotalHeight = Math.floor(totalHeight); // @perf\n\t\ty1 = Math.floor(y1); // @perf\n\t\ty2 = Math.floor(y2); // @perf\n\t\tminimumHeight = Math.floor(minimumHeight); // @perf\n\t\tmaximumHeight = Math.floor(maximumHeight); // @perf\n\n\t\tlet ycenter = Math.floor((y1 + y2) / 2);\n\t\tlet halfHeight = (y2 - ycenter);\n\n\n\t\tif (halfHeight > maximumHeight / 2) {\n\t\t\thalfHeight = maximumHeight / 2;\n\t\t}\n\t\tif (halfHeight < minimumHeight / 2) {\n\t\t\thalfHeight = minimumHeight / 2;\n\t\t}\n\n\t\tif (ycenter - halfHeight < 0) {\n\t\t\tycenter = halfHeight;\n\t\t}\n\t\tif (ycenter + halfHeight > totalHeight) {\n\t\t\tycenter = totalHeight - halfHeight;\n\t\t}\n\n\t\tlet colorId = this._color2Id[color];\n\t\tif (!colorId) {\n\t\t\tcolorId = (++this._lastAssignedId);\n\t\t\tthis._color2Id[color] = colorId;\n\t\t\tthis._id2Color[colorId] = color;\n\t\t}\n\t\treturn new ColorZone(ycenter - halfHeight, ycenter + halfHeight, colorId, position);\n\t}\n}\n\nexport class OverviewRulerImpl {\n\n\tpublic static hasCanvas = (window.navigator.userAgent.indexOf('MSIE 8') === -1);\n\n\tprivate _canvasLeftOffset: number;\n\tprivate _domNode: HTMLCanvasElement;\n\tprivate _lanesCount:number;\n\tprivate _zoneManager: ZoneManager;\n\n\tconstructor(canvasLeftOffset:number, cssClassName:string, scrollHeight:number, lineHeight:number, minimumHeight:number, maximumHeight:number, getVerticalOffsetForLine:(lineNumber:number)=>number) {\n\t\tthis._canvasLeftOffset = canvasLeftOffset;\n\n\t\tthis._domNode = <HTMLCanvasElement>document.createElement('canvas');\n\t\tthis._domNode.className = cssClassName;\n\t\tthis._domNode.style.position = 'absolute';\n\t\tif (browser.canUseTranslate3d) {\n\t\t\tthis._domNode.style.transform = 'translate3d(0px, 0px, 0px)';\n\t\t}\n\n\t\tthis._lanesCount = 3;\n\n\t\tthis._zoneManager = new ZoneManager(getVerticalOffsetForLine);\n\t\tthis._zoneManager.setMinimumHeight(minimumHeight);\n\t\tthis._zoneManager.setMaximumHeight(maximumHeight);\n\t\tthis._zoneManager.setUseDarkColor(false);\n\t\tthis._zoneManager.setWidth(0);\n\t\tthis._zoneManager.setHeight(0);\n\t\tthis._zoneManager.setOuterHeight(scrollHeight);\n\t\tthis._zoneManager.setLineHeight(lineHeight);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._zoneManager = null;\n\t}\n\n\tpublic setLayout(position:IOverviewRulerPosition, render:boolean): void {\n\t\tStyleMutator.setTop(this._domNode, position.top);\n\t\tStyleMutator.setRight(this._domNode, position.right);\n\n\t\tlet hasChanged = false;\n\t\thasChanged = this._zoneManager.setWidth(position.width) || hasChanged;\n\t\thasChanged = this._zoneManager.setHeight(position.height) || hasChanged;\n\n\t\tif (hasChanged) {\n\t\t\tthis._domNode.width = this._zoneManager.getWidth();\n\t\t\tthis._domNode.height = this._zoneManager.getHeight();\n\n\t\t\tif (render) {\n\t\t\t\tthis.render(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLanesCount(): number {\n\t\treturn this._lanesCount;\n\t}\n\n\tpublic setLanesCount(newLanesCount:number, render:boolean): void {\n\t\tthis._lanesCount = newLanesCount;\n\n\t\tif (render) {\n\t\t\tthis.render(true);\n\t\t}\n\t}\n\n\tpublic setUseDarkColor(useDarkColor:boolean, render:boolean): void {\n\t\tthis._zoneManager.setUseDarkColor(useDarkColor);\n\n\t\tif (render) {\n\t\t\tthis.render(true);\n\t\t}\n\t}\n\n\tpublic getDomNode(): HTMLCanvasElement {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getWidth(): number {\n\t\treturn this._zoneManager.getWidth();\n\t}\n\n\tpublic getHeight(): number {\n\t\treturn this._zoneManager.getHeight();\n\t}\n\n\tpublic setScrollHeight(scrollHeight:number, render:boolean): void {\n\t\tthis._zoneManager.setOuterHeight(scrollHeight);\n\t\tif (render) {\n\t\t\tthis.render(true);\n\t\t}\n\t}\n\n\tpublic setLineHeight(lineHeight:number, render:boolean): void {\n\t\tthis._zoneManager.setLineHeight(lineHeight);\n\t\tif (render) {\n\t\t\tthis.render(true);\n\t\t}\n\t}\n\n\tpublic setZones(zones:OverviewRulerZone[], render:boolean): void {\n\t\tthis._zoneManager.setZones(zones);\n\t\tif (render) {\n\t\t\tthis.render(false);\n\t\t}\n\t}\n\n\tpublic render(forceRender:boolean): boolean {\n\t\tif (!OverviewRulerImpl.hasCanvas) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._zoneManager.getOuterHeight() === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst width = this._zoneManager.getWidth();\n\t\tconst height = this._zoneManager.getHeight();\n\n\t\tlet colorZones = this._zoneManager.resolveColorZones();\n\t\tlet id2Color = this._zoneManager.getId2Color();\n\n\t\tlet ctx = this._domNode.getContext('2d');\n\t\tctx.clearRect (0, 0, width, height);\n\n\t\tif (colorZones.length > 0) {\n\t\t\tlet remainingWidth = width - this._canvasLeftOffset;\n\n\t\t\tif (this._lanesCount >= 3) {\n\t\t\t\tthis._renderThreeLanes(ctx, colorZones, id2Color, remainingWidth);\n\t\t\t} else if (this._lanesCount === 2) {\n\t\t\t\tthis._renderTwoLanes(ctx, colorZones, id2Color, remainingWidth);\n\t\t\t} else if (this._lanesCount === 1) {\n\t\t\t\tthis._renderOneLane(ctx, colorZones, id2Color, remainingWidth);\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _renderOneLane(ctx:CanvasRenderingContext2D, colorZones:ColorZone[], id2Color:string[], w:number): void {\n\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Left | OverviewRulerLane.Center | OverviewRulerLane.Right, this._canvasLeftOffset, w);\n\n\t}\n\n\tprivate _renderTwoLanes(ctx:CanvasRenderingContext2D, colorZones:ColorZone[], id2Color:string[], w:number): void {\n\n\t\tlet leftWidth = Math.floor(w / 2);\n\t\tlet rightWidth = w - leftWidth;\n\t\tlet leftOffset = this._canvasLeftOffset;\n\t\tlet rightOffset = this._canvasLeftOffset + leftWidth;\n\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Left | OverviewRulerLane.Center, leftOffset, leftWidth);\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Right, rightOffset, rightWidth);\n\t}\n\n\tprivate _renderThreeLanes(ctx:CanvasRenderingContext2D, colorZones:ColorZone[], id2Color:string[], w:number): void {\n\n\t\tlet leftWidth = Math.floor(w / 3);\n\t\tlet rightWidth = Math.floor(w / 3);\n\t\tlet centerWidth = w - leftWidth - rightWidth;\n\t\tlet leftOffset = this._canvasLeftOffset;\n\t\tlet centerOffset = this._canvasLeftOffset + leftWidth;\n\t\tlet rightOffset = this._canvasLeftOffset + leftWidth + centerWidth;\n\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Left, leftOffset, leftWidth);\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Center, centerOffset, centerWidth);\n\t\tthis._renderVerticalPatch(ctx, colorZones, id2Color, OverviewRulerLane.Right, rightOffset, rightWidth);\n\t}\n\n\tprivate _renderVerticalPatch(ctx:CanvasRenderingContext2D, colorZones:ColorZone[], id2Color:string[], laneMask:number, xpos:number, width:number): void {\n\n\t\tlet currentColorId = 0;\n\t\tlet currentFrom = 0;\n\t\tlet currentTo = 0;\n\n\t\tfor (let i = 0, len = colorZones.length; i < len; i++) {\n\t\t\tlet zone = colorZones[i];\n\n\t\t\tif (!(zone.position & laneMask)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet zoneColorId = zone.colorId;\n\t\t\tlet zoneFrom = zone.from;\n\t\t\tlet zoneTo = zone.to;\n\n\t\t\tif (zoneColorId !== currentColorId) {\n\t\t\t\tctx.fillRect (xpos, currentFrom, width, currentTo - currentFrom);\n\n\t\t\t\tcurrentColorId = zoneColorId;\n\t\t\t\tctx.fillStyle = id2Color[currentColorId];\n\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\tcurrentTo = zoneTo;\n\t\t\t} else {\n\t\t\t\tif (currentTo >= zoneFrom) {\n\t\t\t\t\tcurrentTo = Math.max(currentTo, zoneTo);\n\t\t\t\t} else {\n\t\t\t\t\tctx.fillRect (xpos, currentFrom, width, currentTo - currentFrom);\n\t\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\t\tcurrentTo = zoneTo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.fillRect (xpos, currentFrom, width, currentTo - currentFrom);\n\n\t}\n}\n"]}