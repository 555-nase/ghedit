{"version":3,"file":"editorBrowserExtensions.js","sourceRoot":"","sources":["../../../../src/vs/editor/browser/editorBrowserExtensions.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb,IAAiB,qBAAqB,CAQrC;IARD,WAAiB,qBAAqB,EAAC,CAAC;QACvC,2BAA2B;QAC3B,oCAA2C,IAAkC;YAC/C,mBAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAE,CAAC,iCAAiC,CAAC,IAAI,CAAC,CAAC;QACnH,CAAC;QAFe,gDAA0B,6BAEzC,CAAA;QACD;YACC,MAAM,CAA8B,mBAAQ,CAAC,EAAE,CAAC,UAAU,CAAC,mBAAmB,CAAE,CAAC,6BAA6B,EAAE,CAAC;QAClH,CAAC;QAFe,4CAAsB,yBAErC,CAAA;IACF,CAAC,EARgB,qBAAqB,GAArB,6BAAqB,KAArB,6BAAqB,QAQrC;IAED;QAGC,4CAAY,IAAkC;YAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC;QAEM,2DAAc,GAArB,UAAsB,oBAA0C,EAAE,MAAkB;YACnF,2FAA2F;YAC3F,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAA4D,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC3H,CAAC;QACF,yCAAC;IAAD,CAAC,AAXD,IAWC;IAED,0BAA0B;IAC1B,IAAI,UAAU,GAAG;QAChB,mBAAmB,EAAE,sBAAsB;KAC3C,CAAC;IAEF;QAIC;YACC,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC/B,CAAC;QAEM,sEAAiC,GAAxC,UAAyC,IAAkC;YAC1E,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,kCAAkC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7E,CAAC;QAEM,kEAA6B,GAApC;YACC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;QACF,iCAAC;IAAD,CAAC,AAfD,IAeC;IAED,mBAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,0BAA0B,EAAE,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IInstantiationService, IConstructorSignature1} from 'vs/platform/instantiation/common/instantiation';\nimport {Registry} from 'vs/platform/platform';\nimport {IEditorContribution} from 'vs/editor/common/editorCommon';\nimport {ICodeEditor, IEditorContributionDescriptor, ISimpleEditorContributionCtor} from 'vs/editor/browser/editorBrowser';\n\nexport namespace EditorBrowserRegistry {\n\t// --- Editor Contributions\n\texport function registerEditorContribution(ctor:ISimpleEditorContributionCtor): void {\n\t\t(<EditorContributionRegistry>Registry.as(Extensions.EditorContributions)).registerEditorBrowserContribution(ctor);\n\t}\n\texport function getEditorContributions(): IEditorContributionDescriptor[] {\n\t\treturn (<EditorContributionRegistry>Registry.as(Extensions.EditorContributions)).getEditorBrowserContributions();\n\t}\n}\n\nclass SimpleEditorContributionDescriptor implements IEditorContributionDescriptor {\n\tprivate _ctor:ISimpleEditorContributionCtor;\n\n\tconstructor(ctor:ISimpleEditorContributionCtor) {\n\t\tthis._ctor = ctor;\n\t}\n\n\tpublic createInstance(instantiationService:IInstantiationService, editor:ICodeEditor): IEditorContribution {\n\t\t// cast added to help the compiler, can remove once IConstructorSignature1 has been removed\n\t\treturn instantiationService.createInstance(<IConstructorSignature1<ICodeEditor, IEditorContribution>> this._ctor, editor);\n\t}\n}\n\n// Editor extension points\nvar Extensions = {\n\tEditorContributions: 'editor.contributions'\n};\n\nclass EditorContributionRegistry {\n\n\tprivate editorContributions: IEditorContributionDescriptor[];\n\n\tconstructor() {\n\t\tthis.editorContributions = [];\n\t}\n\n\tpublic registerEditorBrowserContribution(ctor:ISimpleEditorContributionCtor): void {\n\t\tthis.editorContributions.push(new SimpleEditorContributionDescriptor(ctor));\n\t}\n\n\tpublic getEditorBrowserContributions(): IEditorContributionDescriptor[] {\n\t\treturn this.editorContributions.slice(0);\n\t}\n}\n\nRegistry.add(Extensions.EditorContributions, new EditorContributionRegistry());\n"]}