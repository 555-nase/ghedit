{"version":3,"file":"vs/editor/common/core/position.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/core/position.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IEditorPosition, IPosition, IRange} from 'vs/editor/common/editorCommon';\n\nexport class Position implements IEditorPosition {\n\n\tpublic lineNumber: number;\n\tpublic column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber|0;\n\t\tthis.column = column|0;\n\t}\n\n\tpublic equals(other:IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\tpublic static equals(a:IPosition, b:IPosition): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\tpublic isBefore(other:IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\tpublic static isBefore(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\tpublic isBeforeOrEqual(other:IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\tpublic static isBeforeOrEqual(a:IPosition, b:IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\tpublic static lift(pos:IPosition): IEditorPosition {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n\n\tpublic static asEmptyRange(position:IPosition):IRange {\n\t\treturn {\n\t\t\tstartLineNumber: position.lineNumber,\n\t\t\tstartColumn: position.column,\n\t\t\tendLineNumber: position.lineNumber,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tpublic static startPosition(range:IRange):IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.startLineNumber,\n\t\t\tcolumn: range.startColumn\n\t\t};\n\t}\n\n\tpublic static endPosition(range:IRange):IPosition {\n\t\treturn {\n\t\t\tlineNumber: range.endLineNumber,\n\t\t\tcolumn: range.endColumn\n\t\t};\n\t}\n}\n"]}