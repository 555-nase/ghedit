{"version":3,"file":"viewModelCursors.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/viewModel/viewModelCursors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\n\nexport interface IConverter {\n\tvalidateViewPosition(viewLineNumber:number, viewColumn:number, modelPosition:editorCommon.IEditorPosition): editorCommon.IEditorPosition;\n\tvalidateViewSelection(viewSelection:editorCommon.IEditorSelection, modelSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection;\n\tconvertModelSelectionToViewSelection(modelSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection;\n\tconvertModelRangeToViewRange(modelRange:editorCommon.IRange): editorCommon.IEditorRange;\n}\n\nexport class ViewModelCursors {\n\n\tprivate configuration:editorCommon.IConfiguration;\n\tprivate converter:IConverter;\n\n\tprivate lastCursorPositionChangedEvent:editorCommon.ICursorPositionChangedEvent;\n\tprivate lastCursorSelectionChangedEvent:editorCommon.ICursorSelectionChangedEvent;\n\n\tconstructor(configuration:editorCommon.IConfiguration, converter:IConverter) {\n\t\tthis.configuration = configuration;\n\t\tthis.converter = converter;\n\t\tthis.lastCursorPositionChangedEvent = null;\n\t\tthis.lastCursorSelectionChangedEvent = null;\n\t}\n\n\tpublic getSelections(): editorCommon.IEditorSelection[] {\n\t\tif (this.lastCursorSelectionChangedEvent) {\n\t\t\tvar selections:editorCommon.IEditorSelection[] = [];\n\t\t\tselections.push(this.converter.convertModelSelectionToViewSelection(this.lastCursorSelectionChangedEvent.selection));\n\t\t\tfor (var i = 0, len = this.lastCursorSelectionChangedEvent.secondarySelections.length; i < len; i++) {\n\t\t\t\tselections.push(this.converter.convertModelSelectionToViewSelection(this.lastCursorSelectionChangedEvent.secondarySelections[i]));\n\t\t\t}\n\t\t\treturn selections;\n\t\t} else {\n\t\t\treturn [new Selection(1, 1, 1, 1)];\n\t\t}\n\t}\n\n\tpublic onCursorPositionChanged(e:editorCommon.ICursorPositionChangedEvent, emit:(eventType:string, payload:any)=>void): void {\n\t\tthis.lastCursorPositionChangedEvent = e;\n\n\t\tvar position = this.converter.validateViewPosition(e.viewPosition.lineNumber, e.viewPosition.column, e.position),\n\t\t\tstopRenderingLineAfter = this.configuration.editor.stopRenderingLineAfter;\n\n\t\t// Limit position to be somewhere where it can actually be rendered\n\t\tif (stopRenderingLineAfter !== -1 && position.column > stopRenderingLineAfter) {\n\t\t\tposition = position.clone();\n\t\t\tposition.column = stopRenderingLineAfter;\n\t\t}\n\t\tvar secondaryPositions: editorCommon.IEditorPosition[] = [];\n\t\tfor (var i = 0, len = e.secondaryPositions.length; i < len; i++) {\n\t\t\tsecondaryPositions[i] = this.converter.validateViewPosition(e.secondaryViewPositions[i].lineNumber, e.secondaryViewPositions[i].column, e.secondaryPositions[i]);\n\t\t\t// Limit position to be somewhere where it can actually be rendered\n\t\t\tif (stopRenderingLineAfter !== -1 && secondaryPositions[i].column > stopRenderingLineAfter) {\n\t\t\t\tsecondaryPositions[i] = secondaryPositions[i].clone();\n\t\t\t\tsecondaryPositions[i].column = stopRenderingLineAfter;\n\t\t\t}\n\t\t}\n\n\t\tvar newEvent:editorCommon.IViewCursorPositionChangedEvent = {\n\t\t\tposition: position,\n\t\t\tsecondaryPositions: secondaryPositions,\n\t\t\tisInEditableRange: e.isInEditableRange\n\t\t};\n\t\temit(editorCommon.ViewEventNames.CursorPositionChangedEvent, newEvent);\n\t}\n\n\tpublic onCursorSelectionChanged(e:editorCommon.ICursorSelectionChangedEvent, emit:(eventType:string, payload:any)=>void): void {\n\t\tthis.lastCursorSelectionChangedEvent = e;\n\n\t\tlet selection = this.converter.validateViewSelection(e.viewSelection, e.selection);\n\t\tlet secondarySelections: editorCommon.IEditorSelection[] = [];\n\t\tfor (let i = 0, len = e.secondarySelections.length; i < len; i++) {\n\t\t\tsecondarySelections[i] = this.converter.validateViewSelection(e.secondaryViewSelections[i], e.secondarySelections[i]);\n\t\t}\n\n\t\tlet newEvent:editorCommon.IViewCursorSelectionChangedEvent = {\n\t\t\tselection: selection,\n\t\t\tsecondarySelections: secondarySelections\n\t\t};\n\t\temit(editorCommon.ViewEventNames.CursorSelectionChangedEvent, newEvent);\n\t}\n\n\tpublic onCursorRevealRange(e:editorCommon.ICursorRevealRangeEvent, emit:(eventType:string, payload:any)=>void): void {\n\t\tvar viewRange:editorCommon.IEditorRange = null;\n\t\tif (e.viewRange) {\n\t\t\tvar viewStartRange = this.converter.validateViewPosition(e.viewRange.startLineNumber, e.viewRange.startColumn, e.range.getStartPosition());\n\t\t\tvar viewEndRange = this.converter.validateViewPosition(e.viewRange.endLineNumber, e.viewRange.endColumn, e.range.getEndPosition());\n\t\t\tviewRange = new Range(viewStartRange.lineNumber, viewStartRange.column, viewEndRange.lineNumber, viewEndRange.column);\n\t\t} else {\n\t\t\tviewRange = this.converter.convertModelRangeToViewRange(e.range);\n\t\t}\n\n\t\tvar newEvent:editorCommon.IViewRevealRangeEvent = {\n\t\t\trange: viewRange,\n\t\t\tverticalType: e.verticalType,\n\t\t\trevealHorizontal: e.revealHorizontal\n\t\t};\n\t\temit(editorCommon.ViewEventNames.RevealRangeEvent, newEvent);\n\t}\n\n\tpublic onCursorScrollRequest(e:editorCommon.ICursorScrollRequestEvent, emit:(eventType:string, payload:any)=>void): void {\n\t\tvar newEvent:editorCommon.IViewScrollRequestEvent = {\n\t\t\tdeltaLines: e.deltaLines\n\t\t};\n\t\temit(editorCommon.ViewEventNames.ScrollRequestEvent, newEvent);\n\t}\n\n\tpublic onLineMappingChanged(emit:(eventType:string, payload:any)=>void): void {\n\t\tif (this.lastCursorPositionChangedEvent) {\n\t\t\tthis.onCursorPositionChanged(this.lastCursorPositionChangedEvent, emit);\n\t\t}\n\t\tif (this.lastCursorSelectionChangedEvent) {\n\t\t\tthis.onCursorSelectionChanged(this.lastCursorSelectionChangedEvent, emit);\n\t\t}\n\t}\n\n}"]}