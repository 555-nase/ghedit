{"version":3,"file":"vs/editor/common/viewModel/viewModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/viewModel/viewModel.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAiCb;QAA+B,6BAAY;QAc1C,mBAAY,KAAsB,EAAE,QAAe,EAAE,aAAyC,EAAE,KAAyB,EAAE,4BAA0D;YAdtL,iBAgdC;YAjcC,iBAAO,CAAC;YACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,4BAA4B,GAAG,4BAA4B,CAAC;YAEjE,IAAI,CAAC,WAAW,GAAG,IAAI,2CAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAE;gBAC9E,4BAA4B,EAAE,UAAC,UAA8B,EAAE,WAAmB;oBACjF,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;wBACjB,MAAM,CAAC,KAAI,CAAC,qCAAqC,CAAC,UAAU,CAAC,CAAC;oBAC/D,CAAC;oBACD,MAAM,CAAC,KAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,CAAC;gBACtD,CAAC;aACD,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEnC,IAAI,CAAC,OAAO,GAAG,IAAI,mCAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAE9D,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAC,MAAsB,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAArB,CAAqB,CAAC,CAAC,CAAC;YAC3G,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAC,CAAC;gBACrD,KAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,2BAAY,CAAC,YAAY,CAAC,SAAS,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,kCAAc,GAArB,UAAsB,MAA4B;YAAlD,iBASC;YARA,IAAI,CAAC,YAAY,CAAC;gBACjB,IAAI,kBAAkB,GAAG,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBAC7H,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;oBAC/D,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;oBACxG,KAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBACrG,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,0CAAsB,GAA7B,UAA8B,QAA+B;YAC5D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAChF,CAAC;QAEM,2BAAO,GAAd;YACC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,OAAO;gBACtC,OAAO,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,UAAU,GAAG,mBAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC3C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACnB,CAAC;QAEO,oCAAgB,GAAxB,UAAyB,UAAiB;YAA1C,iBAQC;YAPA,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YAC7H,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBACxG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAC,SAAiB,EAAE,OAAY,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YACvG,CAAC;YACD,MAAM,CAAC,kBAAkB,CAAC;QAC3B,CAAC;QAEO,2CAAuB,GAA/B,UAAgC,iBAAwB;YAAxD,iBAQC;YAPA,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,YAAY,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YAClL,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBACxG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAC,SAAiB,EAAE,OAAY,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YACvG,CAAC;YACD,MAAM,CAAC,kBAAkB,CAAC;QAC3B,CAAC;QAEO,8CAA0B,GAAlC,UAAmC,KAA+B;YACjE,wBAAwB;YACxB,IAAI,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;YAEpE,sDAAsD;YACtD,IAAI,kBAAkB,GAAsC;gBAC3D,KAAK,EAAE,oBAAoB;gBAC3B,YAAY,EAAE,YAAY,CAAC,kBAAkB,CAAC,MAAM;gBACpD,gBAAgB,EAAE,KAAK;aACvB,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QAC7E,CAAC;QAEO,2CAAuB,GAA/B,UAAgC,iBAAwB,EAAE,uBAA8B;YAAxF,iBAQC;YAPA,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,uBAAuB,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YACpK,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;gBAC/D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBACxG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAC,SAAiB,EAAE,OAAY,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YACvG,CAAC;YACD,MAAM,CAAC,kBAAkB,CAAC;QAC3B,CAAC;QAEM,kCAAc,GAArB,UAAsB,WAAyB;YAA/C,iBAEC;YADA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAC,MAAsB,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAArB,CAAqB,CAAC,CAAC,CAAC;QAC7G,CAAC;QAEO,4BAAQ,GAAhB,UAAiB,MAAsB;YAAvC,iBAuIC;YAtIA,IAAI,CAAC,YAAY,CAAC;gBAEjB,IAAI,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,OAAO,EAAE,KAAK,YAAY,CAAC,SAAS,CAAC,mBAAmB,EAA1D,CAA0D,CAAC,EACpG,0BAAoD,CAAC;gBACtD,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBACvB,uHAAuH;oBACvH,0BAA0B,GAAG,KAAI,CAAC,4BAA4B,EAAE,CAAC;gBAClE,CAAC;gBAED,IAAI,CAAQ,EACX,GAAU,EACV,CAAgB,EAChB,IAAQ,EACR,wBAA+D,EAC/D,mBAAmB,GAAG,KAAK,EAC3B,wCAAwC,GAAG,KAAK,EAChD,gCAAgC,GAAG,KAAK,CAAC;gBAE1C,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC/C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACd,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;oBAEnB,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAErB,KAAK,YAAY,CAAC,SAAS,CAAC,mBAAmB;4BAC9C,wBAAwB,GAA2C,IAAI,CAAC;4BAExE,MAAM,CAAC,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC,CAAC;gCAC7C,KAAK,YAAY,CAAC,SAAS,CAAC,wBAAwB;oCACnD,KAAI,CAAC,cAAc,CAA8C,wBAAwB,CAAC,CAAC;oCAC3F,mBAAmB,GAAG,IAAI,CAAC;oCAC3B,KAAK,CAAC;gCAEP,KAAK,YAAY,CAAC,SAAS,CAAC,+BAA+B;oCAC1D,KAAI,CAAC,mBAAmB,CAAqD,wBAAwB,CAAC,CAAC;oCACvG,mBAAmB,GAAG,IAAI,CAAC;oCAC3B,KAAK,CAAC;gCAEP,KAAK,YAAY,CAAC,SAAS,CAAC,gCAAgC;oCAC3D,KAAI,CAAC,oBAAoB,CAAsD,wBAAwB,CAAC,CAAC;oCACzG,mBAAmB,GAAG,IAAI,CAAC;oCAC3B,KAAK,CAAC;gCAEP,KAAK,YAAY,CAAC,SAAS,CAAC,8BAA8B;oCACzD,wCAAwC,GAAG,KAAI,CAAC,kBAAkB,CAAoD,wBAAwB,CAAC,CAAC;oCAChJ,KAAK,CAAC;gCAEP;oCACC,OAAO,CAAC,IAAI,CAAC,oCAAoC,CAAC,CAAC;oCACnD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;4BAClB,CAAC;4BACD,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,kBAAkB;4BAC7C,KAAI,CAAC,oBAAoB,CAAwC,IAAI,CAAC,CAAC;4BACvE,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,gBAAgB;4BAC3C,8DAA8D;4BAC9D,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,uBAAuB;4BAClD,2BAA2B;4BAC3B,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,oBAAoB;4BAC/C,SAAS;4BACT,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,mBAAmB;4BAC9C,wHAAwH;4BACxH,IAAI,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;4BACpD,IAAI,cAAc,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,CAAC;4BAC5E,IAAI,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;4BACnD,EAAE,CAAC,CAAC,cAAc,IAAI,aAAa,KAAK,YAAY,CAAC,CAAC,CAAC;gCACtD,gCAAgC,GAAG,IAAI,CAAC;4BACzC,CAAC;4BAED,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,uBAAuB;4BAClD,KAAI,CAAC,yBAAyB,CAA6C,IAAI,CAAC,CAAC;4BACjF,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,YAAY;4BACvC,+EAA+E;4BAC/E,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,qBAAqB;4BAChD,KAAI,CAAC,uBAAuB,CAA2C,IAAI,CAAC,CAAC;4BAC7E,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,sBAAsB;4BACjD,KAAI,CAAC,wBAAwB,CAA4C,IAAI,CAAC,CAAC;4BAC/E,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,iBAAiB;4BAC5C,KAAI,CAAC,mBAAmB,CAAuC,IAAI,CAAC,CAAC;4BACrE,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,mBAAmB;4BAC9C,KAAI,CAAC,qBAAqB,CAAyC,IAAI,CAAC,CAAC;4BACzE,KAAK,CAAC;wBAEP,KAAK,YAAY,CAAC,SAAS,CAAC,oBAAoB;4BAC/C,gCAAgC,GAAG,KAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,gCAAgC,CAAC;4BAC9I,gCAAgC,GAAG,KAAI,CAAC,uBAAuB,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,8BAA8B,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,8BAA8B,CAAC,IAAI,gCAAgC,CAAC;4BAChR,EAAE,CAAC,CAA2C,IAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gCAC9D,4DAA4D;gCAC5D,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;gCACnC,IAAI,uBAAuB,GAA6C;oCACvE,wBAAwB,EAAE,KAAK;iCAC/B,CAAC;gCACF,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,EAAE,uBAAuB,CAAC,CAAC;4BACzF,CAAC;4BACD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,EAA2C,IAAI,CAAC,CAAC;4BACtE,KAAK,CAAC;wBAEP;4BACC,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;4BAC9C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAClB,CAAC;gBACF,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,mBAAmB,IAAI,wCAAwC,CAAC,CAAC,CAAC;oBACtE,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;oBAC/D,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;oBACxG,KAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,UAAC,SAAiB,EAAE,OAAY,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;gBACvG,CAAC;gBAED,EAAE,CAAC,CAAC,gCAAgC,IAAI,0BAA0B,CAAC,CAAC,CAAC;oBACpE,KAAI,CAAC,0BAA0B,CAAC,0BAA0B,CAAC,CAAC;gBAC7D,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,qCAAqC;QAC7B,kCAAc,GAAtB,UAAuB,CAA6C;YAApE,iBAGC;YAFA,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YACzG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QACO,6CAAyB,GAAjC,UAAkC,CAA4C;YAA9E,iBAEC;YADA,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACjH,CAAC;QACO,uCAAmB,GAA3B,UAA4B,CAAoD;YAAhF,iBAEC;YADA,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACjJ,CAAC;QACO,wCAAoB,GAA5B,UAA6B,CAAuC;YACnE,IAAI,mBAAmB,GAAG,IAAI,CAAC,kCAAkC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;YAClG,IAAI,iBAAiB,GAAG,IAAI,CAAC,kCAAkC,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC;YAExI,IAAI,CAAC,GAAwC;gBAC5C,cAAc,EAAE,mBAAmB;gBACnC,YAAY,EAAE,iBAAiB;aAC/B,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QAC9D,CAAC;QACO,sCAAkB,GAA1B,UAA2B,CAAmD;YAA9E,iBAGC;YAFA,IAAI,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;YAC9J,MAAM,CAAC,kBAAkB,CAAC;QAC3B,CAAC;QACO,wCAAoB,GAA5B,UAA6B,CAAqD;YAAlF,iBAEC;YADA,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACxK,CAAC;QAEM,qCAAiB,GAAxB,UAAyB,mBAA0B,EAAE,eAAsB,EAAE,iBAAwB,EAAE,aAAoB,EAAE,UAAoC;YAChK,IAAI,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,eAAe,EAAE,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC;YAChH,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE,aAAa,EAAE,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;YAC5G,MAAM,CAAC,IAAI,aAAK,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,EAAE,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;QAClH,CAAC;QAEM,wCAAoB,GAA3B,UAA4B,cAAqB,EAAE,UAAiB,EAAE,aAA0C;YAC/G,EAAE,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;gBACxB,cAAc,GAAG,CAAC,CAAC;YACpB,CAAC;YACD,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YACpC,EAAE,CAAC,CAAC,cAAc,GAAG,SAAS,CAAC,CAAC,CAAC;gBAChC,cAAc,GAAG,SAAS,CAAC;YAC5B,CAAC;YACD,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAC1D,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAC1D,EAAE,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,aAAa,CAAC;YAC5B,CAAC;YACD,EAAE,CAAC,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC;gBAChC,UAAU,GAAG,aAAa,CAAC;YAC5B,CAAC;YACD,IAAI,qBAAqB,GAAG,IAAI,CAAC,kCAAkC,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAChG,EAAE,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBACjD,MAAM,CAAC,IAAI,mBAAQ,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YACjD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,kCAAkC,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;QAChG,CAAC;QAEM,yCAAqB,GAA5B,UAA6B,aAA2C,EAAE,cAA4C;YACrH,IAAI,mBAAmB,GAAG,IAAI,mBAAQ,CAAC,cAAc,CAAC,wBAAwB,EAAE,cAAc,CAAC,oBAAoB,CAAC,CAAC;YACrH,IAAI,aAAa,GAAG,IAAI,mBAAQ,CAAC,cAAc,CAAC,kBAAkB,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;YAEnG,IAAI,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,wBAAwB,EAAE,aAAa,CAAC,oBAAoB,EAAE,mBAAmB,CAAC,CAAC;YACpJ,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,kBAAkB,EAAE,aAAa,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;YAE5H,MAAM,CAAC,IAAI,qBAAS,CAAC,kBAAkB,CAAC,UAAU,EAAE,kBAAkB,CAAC,MAAM,EAAE,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;QAC9H,CAAC;QAEO,2CAAuB,GAA/B,UAAgC,CAA0C;YAA1E,iBAEC;YADA,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAC3G,CAAC;QACO,4CAAwB,GAAhC,UAAiC,CAA2C;YAA5E,iBAEC;YADA,IAAI,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QAC5G,CAAC;QACO,uCAAmB,GAA3B,UAA4B,CAAsC;YAAlE,iBAEC;YADA,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACvG,CAAC;QACO,yCAAqB,GAA7B,UAA8B,CAAwC;YAAtE,iBAEC;YADA,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,EAAE,UAAC,SAAgB,EAAE,OAAW,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACzG,CAAC;QACD,mCAAmC;QAE5B,8BAAU,GAAjB;YACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC;QACxC,CAAC;QAEM,gCAAY,GAAnB;YACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;QACxC,CAAC;QAEM,kCAAc,GAArB,UAAsB,UAAiB;YACtC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;QACpD,CAAC;QAEM,oCAAgB,GAAvB,UAAwB,UAAiB;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QACtD,CAAC;QAEM,oCAAgB,GAAvB,UAAwB,UAAiB;YACxC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QACtD,CAAC;QAEM,mDAA+B,GAAtC,UAAuC,UAAkB;YACxD,IAAI,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;YAC9E,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC;YACD,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,CAAC;QAEM,kDAA8B,GAArC,UAAsC,UAAkB;YACvD,IAAI,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;YAC7E,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,CAAC;YACV,CAAC;YACD,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACnB,CAAC;QAEM,iCAAa,GAApB,UAAqB,UAAiB;YACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACnD,CAAC;QAEM,2CAAuB,GAA9B,UAA+B,cAAqB;YACnD,IAAI,aAAa,GAAG,IAAI,CAAC,kCAAkC,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;YAC/E,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,EAAE,CAAC;YACX,CAAC;YACD,IAAI,eAAe,GAAG,aAAa,CAAC,UAAU,CAAC;YAE/C,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC/D,CAAC;YAED,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;QACnC,CAAC;QAEM,8CAA0B,GAAjC,UAAkC,eAAsB,EAAE,aAAoB;YAC7E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,0BAA0B,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QACpF,CAAC;QAEM,qCAAiB,GAAxB;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC;QAC7C,CAAC;QAEM,0BAAM,GAAb;YACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;QAEM,mCAAe,GAAtB,UAAuB,KAAyB,EAAE,GAAoC;YACrF,IAAI,UAAU,GAAG,IAAI,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC;YAC1D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QACpD,CAAC;QAEM,uCAAmB,GAA1B,UAA2B,eAAsB;YAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QACnD,CAAC;QAEM,iCAAa,GAApB;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QACrC,CAAC;QAEM,yCAAqB,GAA5B,UAA6B,eAAsB;YAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QACrD,CAAC;QAEM,yCAAqB,GAA5B,UAA6B,QAA+B;YAC3D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;QAEM,sDAAkC,GAAzC,UAA0C,cAAqB,EAAE,UAAiB;YACjF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;QACpF,CAAC;QAEM,gDAA4B,GAAnC,UAAoC,SAA6B;YAChE,IAAI,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,SAAS,CAAC,eAAe,EAAE,SAAS,CAAC,WAAW,CAAC,CAAC;YACtG,IAAI,GAAG,GAAG,IAAI,CAAC,kCAAkC,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC;YAChG,MAAM,CAAC,IAAI,aAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9E,CAAC;QAEM,wDAAoC,GAA3C,UAA4C,aAAqC;YAChF,IAAI,cAAc,GAAG,IAAI,CAAC,kCAAkC,CAAC,aAAa,CAAC,wBAAwB,EAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;YACzI,IAAI,QAAQ,GAAG,IAAI,CAAC,kCAAkC,CAAC,aAAa,CAAC,kBAAkB,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC;YACvH,MAAM,CAAC,IAAI,qBAAS,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9G,CAAC;QAEM,sDAAkC,GAAzC,UAA0C,eAAsB,EAAE,WAAkB;YACnF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QACtF,CAAC;QAEM,wDAAoC,GAA3C,UAA4C,cAA4C;YACvF,IAAI,cAAc,GAAG,IAAI,CAAC,kCAAkC,CAAC,cAAc,CAAC,wBAAwB,EAAE,cAAc,CAAC,oBAAoB,CAAC,CAAC;YAC3I,IAAI,QAAQ,GAAG,IAAI,CAAC,kCAAkC,CAAC,cAAc,CAAC,kBAAkB,EAAE,cAAc,CAAC,cAAc,CAAC,CAAC;YACzH,MAAM,CAAC,IAAI,qBAAS,CAAC,cAAc,CAAC,UAAU,EAAE,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9G,CAAC;QAEM,gDAA4B,GAAnC,UAAoC,UAA8B;YACjE,IAAI,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,UAAU,CAAC,eAAe,EAAE,UAAU,CAAC,WAAW,CAAC,CAAC;YACxG,IAAI,GAAG,GAAG,IAAI,CAAC,kCAAkC,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC;YAClG,MAAM,CAAC,IAAI,aAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9E,CAAC;QAEM,yDAAqC,GAA5C,UAA6C,UAA8B;YAC1E,IAAI,KAAK,GAAG,IAAI,CAAC,kCAAkC,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YACnF,IAAI,GAAG,GAAG,IAAI,CAAC,kCAAkC,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;YACnI,MAAM,CAAC,IAAI,aAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9E,CAAC;QAEF,gBAAC;IAAD,CAAC,AAhdD,CAA+B,2BAAY,GAgd1C;IAhdY,iBAAS,YAgdrB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EmitterEvent, EventEmitter, IEmitterEvent, IEventEmitter, ListenerUnbind} from 'vs/base/common/eventEmitter';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport * as strings from 'vs/base/common/strings';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ViewModelCursors} from 'vs/editor/common/viewModel/viewModelCursors';\nimport {ViewModelDecorations} from 'vs/editor/common/viewModel/viewModelDecorations';\n\nexport interface ILinesCollection {\n\tsetTabSize(newTabSize:number, emit:(evenType:string, payload:any)=>void): boolean;\n\tsetWrappingColumn(newWrappingColumn:number, columnsForFullWidthChar:number, emit:(evenType:string, payload:any)=>void): boolean;\n\tsetWrappingIndent(newWrappingIndent:editorCommon.WrappingIndent, emit:(evenType:string, payload:any)=>void): boolean;\n\n\tonModelFlushed(versionId:number, emit:(evenType:string, payload:any)=>void): void;\n\tonModelLinesDeleted(versionId:number, fromLineNumber:number, toLineNumber:number, emit:(evenType:string, payload:any)=>void): void;\n\tonModelLinesInserted(versionId:number, fromLineNumber:number, toLineNumber:number, text:string[], emit:(evenType:string, payload:any)=>void): void;\n\tonModelLineChanged(versionId:number, lineNumber:number, newText:string, emit:(evenType:string, payload:any)=>void): boolean;\n\tgetOutputLineCount(): number;\n\tgetOutputLineContent(outputLineNumber:number): string;\n\tgetOutputLineMinColumn(outputLineNumber:number): number;\n\tgetOutputLineMaxColumn(outputLineNumber:number): number;\n\tgetOutputLineTokens(outputLineNumber:number): editorCommon.ViewLineTokens;\n\tconvertOutputPositionToInputPosition(viewLineNumber:number, viewColumn:number): editorCommon.IEditorPosition;\n\tconvertInputPositionToOutputPosition(inputLineNumber:number, inputColumn:number): editorCommon.IEditorPosition;\n\tsetHiddenAreas(ranges:editorCommon.IRange[], emit:(evenType:string, payload:any)=>void): void;\n\tinputPositionIsVisible(inputLineNumber:number, inputColumn:number): boolean;\n\tdispose(): void;\n}\n\nexport class ViewModel extends EventEmitter implements editorCommon.IViewModel {\n\n\tprivate editorId:number;\n\tprivate configuration:editorCommon.IConfiguration;\n\tprivate model:editorCommon.IModel;\n\n\tprivate listenersToRemove:ListenerUnbind[];\n\tprivate _toDispose: IDisposable[];\n\tprivate lines:ILinesCollection;\n\tprivate decorations:ViewModelDecorations;\n\tprivate cursors:ViewModelCursors;\n\n\tprivate getCurrentCenteredModelRange:()=>editorCommon.IEditorRange;\n\n\tconstructor(lines:ILinesCollection, editorId:number, configuration:editorCommon.IConfiguration, model:editorCommon.IModel, getCurrentCenteredModelRange:()=>editorCommon.IEditorRange) {\n\t\tsuper();\n\t\tthis.lines = lines;\n\n\t\tthis.editorId = editorId;\n\t\tthis.configuration = configuration;\n\t\tthis.model = model;\n\n\t\tthis.getCurrentCenteredModelRange = getCurrentCenteredModelRange;\n\n\t\tthis.decorations = new ViewModelDecorations(this.editorId, this.configuration, {\n\t\t\tconvertModelRangeToViewRange: (modelRange:editorCommon.IRange, isWholeLine:boolean) => {\n\t\t\t\tif (isWholeLine) {\n\t\t\t\t\treturn this.convertWholeLineModelRangeToViewRange(modelRange);\n\t\t\t\t}\n\t\t\t\treturn this.convertModelRangeToViewRange(modelRange);\n\t\t\t}\n\t\t});\n\t\tthis.decorations.reset(this.model);\n\n\t\tthis.cursors = new ViewModelCursors(this.configuration, this);\n\n\t\tthis.listenersToRemove = [];\n\t\tthis._toDispose = [];\n\t\tthis.listenersToRemove.push(this.model.addBulkListener((events:IEmitterEvent[]) => this.onEvents(events)));\n\t\tthis._toDispose.push(this.configuration.onDidChange((e) => {\n\t\t\tthis.onEvents([new EmitterEvent(editorCommon.EventType.ConfigurationChanged, e)]);\n\t\t}));\n\t}\n\n\tpublic setHiddenAreas(ranges:editorCommon.IRange[]): void {\n\t\tthis.deferredEmit(() => {\n\t\t\tlet lineMappingChanged = this.lines.setHiddenAreas(ranges, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\tif (lineMappingChanged) {\n\t\t\t\tthis.emit(editorCommon.ViewEventNames.LineMappingChangedEvent);\n\t\t\t\tthis.decorations.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\t\tthis.cursors.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic modelPositionIsVisible(position:editorCommon.IPosition): boolean {\n\t\treturn this.lines.inputPositionIsVisible(position.lineNumber, position.column);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.listenersToRemove.forEach((element) => {\n\t\t\telement();\n\t\t});\n\t\tthis._toDispose = dispose(this._toDispose);\n\t\tthis.listenersToRemove = [];\n\t\tthis.decorations.dispose();\n\t\tthis.decorations = null;\n\t\tthis.lines.dispose();\n\t\tthis.lines = null;\n\t\tthis.configuration = null;\n\t\tthis.model = null;\n\t}\n\n\tprivate _onTabSizeChange(newTabSize:number): boolean {\n\t\tvar lineMappingChanged = this.lines.setTabSize(newTabSize, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\tif (lineMappingChanged) {\n\t\t\tthis.emit(editorCommon.ViewEventNames.LineMappingChangedEvent);\n\t\t\tthis.decorations.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\tthis.cursors.onLineMappingChanged((eventType: string, payload: any) => this.emit(eventType, payload));\n\t\t}\n\t\treturn lineMappingChanged;\n\t}\n\n\tprivate _onWrappingIndentChange(newWrappingIndent:string): boolean {\n\t\tvar lineMappingChanged = this.lines.setWrappingIndent(editorCommon.wrappingIndentFromString(newWrappingIndent), (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\tif (lineMappingChanged) {\n\t\t\tthis.emit(editorCommon.ViewEventNames.LineMappingChangedEvent);\n\t\t\tthis.decorations.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\tthis.cursors.onLineMappingChanged((eventType: string, payload: any) => this.emit(eventType, payload));\n\t\t}\n\t\treturn lineMappingChanged;\n\t}\n\n\tprivate _restoreCenteredModelRange(range:editorCommon.IEditorRange): void {\n\t\t// modelLine -> viewLine\n\t\tvar newCenteredViewRange = this.convertModelRangeToViewRange(range);\n\n\t\t// Send a reveal event to restore the centered content\n\t\tvar restoreRevealEvent:editorCommon.IViewRevealRangeEvent = {\n\t\t\trange: newCenteredViewRange,\n\t\t\tverticalType: editorCommon.VerticalRevealType.Center,\n\t\t\trevealHorizontal: false\n\t\t};\n\t\tthis.emit(editorCommon.ViewEventNames.RevealRangeEvent, restoreRevealEvent);\n\t}\n\n\tprivate _onWrappingColumnChange(newWrappingColumn:number, columnsForFullWidthChar:number): boolean {\n\t\tlet lineMappingChanged = this.lines.setWrappingColumn(newWrappingColumn, columnsForFullWidthChar, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\tif (lineMappingChanged) {\n\t\t\tthis.emit(editorCommon.ViewEventNames.LineMappingChangedEvent);\n\t\t\tthis.decorations.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\tthis.cursors.onLineMappingChanged((eventType: string, payload: any) => this.emit(eventType, payload));\n\t\t}\n\t\treturn lineMappingChanged;\n\t}\n\n\tpublic addEventSource(eventSource:IEventEmitter): void {\n\t\tthis.listenersToRemove.push(eventSource.addBulkListener((events:IEmitterEvent[]) => this.onEvents(events)));\n\t}\n\n\tprivate onEvents(events:IEmitterEvent[]): void {\n\t\tthis.deferredEmit(() => {\n\n\t\t\tlet hasContentChange = events.some((e) => e.getType() === editorCommon.EventType.ModelContentChanged),\n\t\t\t\tpreviousCenteredModelRange:editorCommon.IEditorRange;\n\t\t\tif (!hasContentChange) {\n\t\t\t\t// We can only convert the current centered view range to the current centered model range if the model has no changes.\n\t\t\t\tpreviousCenteredModelRange = this.getCurrentCenteredModelRange();\n\t\t\t}\n\n\t\t\tlet i:number,\n\t\t\t\tlen:number,\n\t\t\t\te: IEmitterEvent,\n\t\t\t\tdata:any,\n\t\t\t\tmodelContentChangedEvent:editorCommon.IModelContentChangedEvent,\n\t\t\t\thadOtherModelChange = false,\n\t\t\t\thadModelLineChangeThatChangedLineMapping = false,\n\t\t\t\trevealPreviousCenteredModelRange = false;\n\n\t\t\tfor (i = 0, len = events.length; i < len; i++) {\n\t\t\t\te = events[i];\n\t\t\t\tdata = e.getData();\n\n\t\t\t\tswitch (e.getType()) {\n\n\t\t\t\t\tcase editorCommon.EventType.ModelContentChanged:\n\t\t\t\t\t\tmodelContentChangedEvent = <editorCommon.IModelContentChangedEvent>data;\n\n\t\t\t\t\t\tswitch (modelContentChangedEvent.changeType) {\n\t\t\t\t\t\t\tcase editorCommon.EventType.ModelContentChangedFlush:\n\t\t\t\t\t\t\t\tthis.onModelFlushed(<editorCommon.IModelContentChangedFlushEvent>modelContentChangedEvent);\n\t\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase editorCommon.EventType.ModelContentChangedLinesDeleted:\n\t\t\t\t\t\t\t\tthis.onModelLinesDeleted(<editorCommon.IModelContentChangedLinesDeletedEvent>modelContentChangedEvent);\n\t\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase editorCommon.EventType.ModelContentChangedLinesInserted:\n\t\t\t\t\t\t\t\tthis.onModelLinesInserted(<editorCommon.IModelContentChangedLinesInsertedEvent>modelContentChangedEvent);\n\t\t\t\t\t\t\t\thadOtherModelChange = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase editorCommon.EventType.ModelContentChangedLineChanged:\n\t\t\t\t\t\t\t\thadModelLineChangeThatChangedLineMapping = this.onModelLineChanged(<editorCommon.IModelContentChangedLineChangedEvent>modelContentChangedEvent);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.info('ViewModel received unknown event: ');\n\t\t\t\t\t\t\t\tconsole.info(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelTokensChanged:\n\t\t\t\t\t\tthis.onModelTokensChanged(<editorCommon.IModelTokensChangedEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelModeChanged:\n\t\t\t\t\t\t// That's ok, a model tokens changed event will follow shortly\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelModeSupportChanged:\n\t\t\t\t\t\t// That's ok, no work to do\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelContentChanged2:\n\t\t\t\t\t\t// Ignore\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelOptionsChanged:\n\t\t\t\t\t\t// A tab size change causes a line mapping changed event => all view parts will repaint OK, no further event needed here\n\t\t\t\t\t\tlet prevLineCount = this.lines.getOutputLineCount();\n\t\t\t\t\t\tlet tabSizeChanged = this._onTabSizeChange(this.model.getOptions().tabSize);\n\t\t\t\t\t\tlet newLineCount = this.lines.getOutputLineCount();\n\t\t\t\t\t\tif (tabSizeChanged && prevLineCount !== newLineCount) {\n\t\t\t\t\t\t\trevealPreviousCenteredModelRange = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelDecorationsChanged:\n\t\t\t\t\t\tthis.onModelDecorationsChanged(<editorCommon.IModelDecorationsChangedEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ModelDispose:\n\t\t\t\t\t\t// Ignore, since the editor will take care of this and destroy the view shortly\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.CursorPositionChanged:\n\t\t\t\t\t\tthis.onCursorPositionChanged(<editorCommon.ICursorPositionChangedEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.CursorSelectionChanged:\n\t\t\t\t\t\tthis.onCursorSelectionChanged(<editorCommon.ICursorSelectionChangedEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.CursorRevealRange:\n\t\t\t\t\t\tthis.onCursorRevealRange(<editorCommon.ICursorRevealRangeEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.CursorScrollRequest:\n\t\t\t\t\t\tthis.onCursorScrollRequest(<editorCommon.ICursorScrollRequestEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase editorCommon.EventType.ConfigurationChanged:\n\t\t\t\t\t\trevealPreviousCenteredModelRange = this._onWrappingIndentChange(this.configuration.editor.wrappingIndent) || revealPreviousCenteredModelRange;\n\t\t\t\t\t\trevealPreviousCenteredModelRange = this._onWrappingColumnChange(this.configuration.editor.wrappingInfo.wrappingColumn, this.configuration.editor.typicalFullwidthCharacterWidth / this.configuration.editor.typicalHalfwidthCharacterWidth) || revealPreviousCenteredModelRange;\n\t\t\t\t\t\tif ((<editorCommon.IConfigurationChangedEvent>data).readOnly) {\n\t\t\t\t\t\t\t// Must read again all decorations due to readOnly filtering\n\t\t\t\t\t\t\tthis.decorations.reset(this.model);\n\t\t\t\t\t\t\tvar decorationsChangedEvent:editorCommon.IViewDecorationsChangedEvent = {\n\t\t\t\t\t\t\t\tinlineDecorationsChanged: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.emit(editorCommon.ViewEventNames.DecorationsChangedEvent, decorationsChangedEvent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.emit(e.getType(), <editorCommon.IConfigurationChangedEvent>data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.info('View received unknown event: ');\n\t\t\t\t\t\tconsole.info(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!hadOtherModelChange && hadModelLineChangeThatChangedLineMapping) {\n\t\t\t\tthis.emit(editorCommon.ViewEventNames.LineMappingChangedEvent);\n\t\t\t\tthis.decorations.onLineMappingChanged((eventType:string, payload:any) => this.emit(eventType, payload));\n\t\t\t\tthis.cursors.onLineMappingChanged((eventType: string, payload: any) => this.emit(eventType, payload));\n\t\t\t}\n\n\t\t\tif (revealPreviousCenteredModelRange && previousCenteredModelRange) {\n\t\t\t\tthis._restoreCenteredModelRange(previousCenteredModelRange);\n\t\t\t}\n\t\t});\n\t}\n\n\t// --- begin inbound event conversion\n\tprivate onModelFlushed(e:editorCommon.IModelContentChangedFlushEvent): void {\n\t\tthis.lines.onModelFlushed(e.versionId, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\tthis.decorations.reset(this.model);\n\t}\n\tprivate onModelDecorationsChanged(e:editorCommon.IModelDecorationsChangedEvent): void {\n\t\tthis.decorations.onModelDecorationsChanged(e, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\tprivate onModelLinesDeleted(e:editorCommon.IModelContentChangedLinesDeletedEvent): void {\n\t\tthis.lines.onModelLinesDeleted(e.versionId, e.fromLineNumber, e.toLineNumber, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\tprivate onModelTokensChanged(e:editorCommon.IModelTokensChangedEvent): void {\n\t\tvar viewStartLineNumber = this.convertModelPositionToViewPosition(e.fromLineNumber, 1).lineNumber;\n\t\tvar viewEndLineNumber = this.convertModelPositionToViewPosition(e.toLineNumber, this.model.getLineMaxColumn(e.toLineNumber)).lineNumber;\n\n\t\tvar e:editorCommon.IViewTokensChangedEvent = {\n\t\t\tfromLineNumber: viewStartLineNumber,\n\t\t\ttoLineNumber: viewEndLineNumber\n\t\t};\n\t\tthis.emit(editorCommon.ViewEventNames.TokensChangedEvent, e);\n\t}\n\tprivate onModelLineChanged(e:editorCommon.IModelContentChangedLineChangedEvent): boolean {\n\t\tvar lineMappingChanged = this.lines.onModelLineChanged(e.versionId, e.lineNumber, e.detail, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t\treturn lineMappingChanged;\n\t}\n\tprivate onModelLinesInserted(e:editorCommon.IModelContentChangedLinesInsertedEvent): void {\n\t\tthis.lines.onModelLinesInserted(e.versionId, e.fromLineNumber, e.toLineNumber, e.detail.split('\\n'), (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\n\tpublic validateViewRange(viewStartLineNumber:number, viewStartColumn:number, viewEndLineNumber:number, viewEndColumn:number, modelRange:editorCommon.IEditorRange): editorCommon.IEditorRange {\n\t\tvar validViewStart = this.validateViewPosition(viewStartColumn, viewStartColumn, modelRange.getStartPosition());\n\t\tvar validViewEnd = this.validateViewPosition(viewEndLineNumber, viewEndColumn, modelRange.getEndPosition());\n\t\treturn new Range(validViewStart.lineNumber, validViewStart.column, validViewEnd.lineNumber, validViewEnd.column);\n\t}\n\n\tpublic validateViewPosition(viewLineNumber:number, viewColumn:number, modelPosition:editorCommon.IEditorPosition): editorCommon.IEditorPosition {\n\t\tif (viewLineNumber < 1) {\n\t\t\tviewLineNumber = 1;\n\t\t}\n\t\tvar lineCount = this.getLineCount();\n\t\tif (viewLineNumber > lineCount) {\n\t\t\tviewLineNumber = lineCount;\n\t\t}\n\t\tvar viewMinColumn = this.getLineMinColumn(viewLineNumber);\n\t\tvar viewMaxColumn = this.getLineMaxColumn(viewLineNumber);\n\t\tif (viewColumn < viewMinColumn) {\n\t\t\tviewColumn = viewMinColumn;\n\t\t}\n\t\tif (viewColumn > viewMaxColumn) {\n\t\t\tviewColumn = viewMaxColumn;\n\t\t}\n\t\tvar computedModelPosition = this.convertViewPositionToModelPosition(viewLineNumber, viewColumn);\n\t\tif (computedModelPosition.equals(modelPosition)) {\n\t\t\treturn new Position(viewLineNumber, viewColumn);\n\t\t}\n\t\treturn this.convertModelPositionToViewPosition(modelPosition.lineNumber, modelPosition.column);\n\t}\n\n\tpublic validateViewSelection(viewSelection:editorCommon.IEditorSelection, modelSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection {\n\t\tlet modelSelectionStart = new Position(modelSelection.selectionStartLineNumber, modelSelection.selectionStartColumn);\n\t\tlet modelPosition = new Position(modelSelection.positionLineNumber, modelSelection.positionColumn);\n\n\t\tlet viewSelectionStart = this.validateViewPosition(viewSelection.selectionStartLineNumber, viewSelection.selectionStartColumn, modelSelectionStart);\n\t\tlet viewPosition = this.validateViewPosition(viewSelection.positionLineNumber, viewSelection.positionColumn, modelPosition);\n\n\t\treturn new Selection(viewSelectionStart.lineNumber, viewSelectionStart.column, viewPosition.lineNumber, viewPosition.column);\n\t}\n\n\tprivate onCursorPositionChanged(e:editorCommon.ICursorPositionChangedEvent): void {\n\t\tthis.cursors.onCursorPositionChanged(e, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\tprivate onCursorSelectionChanged(e:editorCommon.ICursorSelectionChangedEvent): void {\n\t\tthis.cursors.onCursorSelectionChanged(e, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\tprivate onCursorRevealRange(e:editorCommon.ICursorRevealRangeEvent): void {\n\t\tthis.cursors.onCursorRevealRange(e, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\tprivate onCursorScrollRequest(e:editorCommon.ICursorScrollRequestEvent): void {\n\t\tthis.cursors.onCursorScrollRequest(e, (eventType:string, payload:any) => this.emit(eventType, payload));\n\t}\n\t// --- end inbound event conversion\n\n\tpublic getTabSize(): number {\n\t\treturn this.model.getOptions().tabSize;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this.lines.getOutputLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\treturn this.lines.getOutputLineContent(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber:number): number {\n\t\treturn this.lines.getOutputLineMinColumn(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber:number): number {\n\t\treturn this.lines.getOutputLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tvar result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tvar result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tpublic getLineTokens(lineNumber:number): editorCommon.ViewLineTokens {\n\t\treturn this.lines.getOutputLineTokens(lineNumber);\n\t}\n\n\tpublic getLineRenderLineNumber(viewLineNumber:number): string {\n\t\tvar modelPosition = this.convertViewPositionToModelPosition(viewLineNumber, 1);\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn '';\n\t\t}\n\t\tvar modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (typeof this.configuration.editor.lineNumbers === 'function') {\n\t\t\treturn this.configuration.editor.lineNumbers(modelLineNumber);\n\t\t}\n\n\t\treturn modelLineNumber.toString();\n\t}\n\n\tpublic getDecorationsViewportData(startLineNumber:number, endLineNumber:number): editorCommon.IDecorationsViewportData {\n\t\treturn this.decorations.getDecorationsViewportData(startLineNumber, endLineNumber);\n\t}\n\n\tpublic getAllDecorations(): editorCommon.IModelDecoration[] {\n\t\treturn this.decorations.getAllDecorations();\n\t}\n\n\tpublic getEOL(): string {\n\t\treturn this.model.getEOL();\n\t}\n\n\tpublic getValueInRange(range:editorCommon.IRange, eol:editorCommon.EndOfLinePreference): string {\n\t\tvar modelRange = this.convertViewRangeToModelRange(range);\n\t\treturn this.model.getValueInRange(modelRange, eol);\n\t}\n\n\tpublic getModelLineContent(modelLineNumber:number): string {\n\t\treturn this.model.getLineContent(modelLineNumber);\n\t}\n\n\tpublic getSelections(): editorCommon.IEditorSelection[] {\n\t\treturn this.cursors.getSelections();\n\t}\n\n\tpublic getModelLineMaxColumn(modelLineNumber:number): number {\n\t\treturn this.model.getLineMaxColumn(modelLineNumber);\n\t}\n\n\tpublic validateModelPosition(position:editorCommon.IPosition): editorCommon.IEditorPosition {\n\t\treturn this.model.validatePosition(position);\n\t}\n\n\tpublic convertViewPositionToModelPosition(viewLineNumber:number, viewColumn:number): editorCommon.IEditorPosition {\n\t\treturn this.lines.convertOutputPositionToInputPosition(viewLineNumber, viewColumn);\n\t}\n\n\tpublic convertViewRangeToModelRange(viewRange:editorCommon.IRange): editorCommon.IEditorRange {\n\t\tvar start = this.convertViewPositionToModelPosition(viewRange.startLineNumber, viewRange.startColumn);\n\t\tvar end = this.convertViewPositionToModelPosition(viewRange.endLineNumber, viewRange.endColumn);\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\tpublic convertViewSelectionToModelSelection(viewSelection:editorCommon.ISelection): editorCommon.IEditorSelection {\n\t\tlet selectionStart = this.convertViewPositionToModelPosition(viewSelection.selectionStartLineNumber, viewSelection.selectionStartColumn);\n\t\tlet position = this.convertViewPositionToModelPosition(viewSelection.positionLineNumber, viewSelection.positionColumn);\n\t\treturn new Selection(selectionStart.lineNumber, selectionStart.column, position.lineNumber, position.column);\n\t}\n\n\tpublic convertModelPositionToViewPosition(modelLineNumber:number, modelColumn:number): editorCommon.IEditorPosition {\n\t\treturn this.lines.convertInputPositionToOutputPosition(modelLineNumber, modelColumn);\n\t}\n\n\tpublic convertModelSelectionToViewSelection(modelSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection {\n\t\tvar selectionStart = this.convertModelPositionToViewPosition(modelSelection.selectionStartLineNumber, modelSelection.selectionStartColumn);\n\t\tvar position = this.convertModelPositionToViewPosition(modelSelection.positionLineNumber, modelSelection.positionColumn);\n\t\treturn new Selection(selectionStart.lineNumber, selectionStart.column, position.lineNumber, position.column);\n\t}\n\n\tpublic convertModelRangeToViewRange(modelRange:editorCommon.IRange): editorCommon.IEditorRange {\n\t\tvar start = this.convertModelPositionToViewPosition(modelRange.startLineNumber, modelRange.startColumn);\n\t\tvar end = this.convertModelPositionToViewPosition(modelRange.endLineNumber, modelRange.endColumn);\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\tpublic convertWholeLineModelRangeToViewRange(modelRange:editorCommon.IRange): editorCommon.IEditorRange {\n\t\tvar start = this.convertModelPositionToViewPosition(modelRange.startLineNumber, 1);\n\t\tvar end = this.convertModelPositionToViewPosition(modelRange.endLineNumber, this.model.getLineMaxColumn(modelRange.endLineNumber));\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n}"]}