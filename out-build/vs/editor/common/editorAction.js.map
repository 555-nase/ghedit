{"version":3,"file":"vs/editor/common/editorAction.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/editorAction.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Action} from 'vs/base/common/actions';\nimport * as strings from 'vs/base/common/strings';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Behaviour, IEnablementState, createActionEnablement} from 'vs/editor/common/editorActionEnablement';\nimport {IActionDescriptor, IActionEnablement, ICommonCodeEditor, IEditorActionDescriptorData, IEditorContribution} from 'vs/editor/common/editorCommon';\nimport {ILineContext} from 'vs/editor/common/modes';\n\nvar defaultBehaviour = Behaviour.TextFocus | Behaviour.Writeable | Behaviour.UpdateOnModelChange;\n\nexport class EditorAction extends Action implements IEditorContribution {\n\n\tpublic editor:ICommonCodeEditor;\n\n\tprivate _shouldShowInContextMenu:boolean;\n\tprivate _supportsReadonly:boolean;\n\tprivate _descriptor:IEditorActionDescriptorData;\n\tprivate _enablementState:IEnablementState;\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor, condition:Behaviour = defaultBehaviour) {\n\t\tsuper(descriptor.id);\n\t\tthis.editor = editor;\n\t\tthis._descriptor = descriptor;\n\t\tthis.label = descriptor.label || '';\n\t\tthis._enablementState = createActionEnablement(editor, condition, this);\n\n\t\tthis._shouldShowInContextMenu = !!(condition & Behaviour.ShowInContextMenu);\n\n\t\tthis._supportsReadonly = !(condition & Behaviour.Writeable);\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._enablementState.dispose();\n\t\tsuper.dispose();\n\t}\n\n\t/**\n\t * A helper to be able to group and sort actions when they are presented visually.\n\t */\n\tpublic getGroupId(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic shouldShowInContextMenu(): boolean {\n\t\treturn this._shouldShowInContextMenu;\n\t}\n\n\tpublic getDescriptor(): IEditorActionDescriptorData {\n\t\treturn this._descriptor;\n\t}\n\n\t// ---- enablement state mangament --------------------------------------------------------\n\n\tpublic get enabled():boolean {\n\t\treturn this._enablementState.value();\n\t}\n\n\tpublic set enabled(value:boolean) {\n\t\t// call reset?\n\t\tvar e:any = new Error();\n\t\tconsole.log('setting EditorAction.enabled is UNCOOL. Use resetEnablementState and getEnablementState');\n\t\tconsole.log(e.stack);\n\t}\n\n\tpublic resetEnablementState():void {\n\t\tthis._enablementState.reset();\n\t}\n\n\t/**\n\t * Returns {{true}} in case this action works\n\t * with the current mode. To be overwritten\n\t * in subclasses.\n\t */\n\tpublic isSupported():boolean {\n\t\tif (!this._supportsReadonly) {\n\t\t\tif (this.editor.getConfiguration().readOnly) {\n\t\t\t\treturn false; // action requires a writeable model\n\t\t\t}\n\n\t\t\tvar model = this.editor.getModel();\n\t\t\tif (model && model.hasEditableRange()) {\n\t\t\t\treturn false; // editable ranges are an indicator for mostly readonly models\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the enablement state of this action. This\n\t * method is being called in the process of {{updateEnablementState}}\n\t * and overwriters should call super (this method).\n\t */\n\tpublic getEnablementState(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport class HandlerEditorAction extends EditorAction {\n\tprivate _handlerId: string;\n\n\tconstructor(descriptor:IEditorActionDescriptorData, editor:ICommonCodeEditor, handlerId: string) {\n\t\tsuper(descriptor, editor);\n\t\tthis._handlerId = handlerId;\n\t}\n\n\tpublic run(): TPromise<boolean> {\n\t\tthis.editor.trigger(this.getId(), this._handlerId, null);\n\t\treturn TPromise.as(true);\n\t}\n}\n\nexport class DynamicEditorAction extends EditorAction {\n\n\tprivate static _transformBehaviour(behaviour:IActionEnablement, contextMenuGroupId: string): Behaviour {\n\t\tvar r = 0;\n\t\tif (contextMenuGroupId) {\n\t\t\tr |= Behaviour.ShowInContextMenu;\n\t\t} else if (behaviour.textFocus) {\n\t\t\t// Allowed to set text focus only if not appearing in the context menu\n\t\t\tr |= Behaviour.TextFocus;\n\t\t}\n\t\tif (behaviour.widgetFocus) {\n\t\t\tr |= Behaviour.WidgetFocus;\n\t\t}\n\t\tif (behaviour.writeableEditor) {\n\t\t\tr |= Behaviour.Writeable;\n\t\t}\n\n\t\tif (typeof behaviour.tokensAtPosition !== 'undefined') {\n\t\t\tr |= Behaviour.UpdateOnCursorPositionChange;\n\t\t}\n\t\tif (typeof behaviour.wordAtPosition !== 'undefined') {\n\t\t\tr |= Behaviour.UpdateOnCursorPositionChange;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate _contextMenuGroupId: string;\n\tprivate _run: (editor:ICommonCodeEditor)=>void;\n\tprivate _tokensAtPosition:string[];\n\tprivate _wordAtPosition:boolean;\n\n\tconstructor(descriptor:IActionDescriptor, editor:ICommonCodeEditor) {\n\t\tvar enablement: IActionEnablement = descriptor.enablement || {};\n\t\tsuper({\n\t\t\tid: descriptor.id,\n\t\t\tlabel: descriptor.label\n\t\t}, editor, DynamicEditorAction._transformBehaviour(enablement, descriptor.contextMenuGroupId));\n\n\t\tthis._contextMenuGroupId = descriptor.contextMenuGroupId;\n\t\tthis._run = descriptor.run;\n\n\t\tthis._tokensAtPosition = enablement.tokensAtPosition;\n\t\tthis._wordAtPosition = enablement.wordAtPosition;\n\t}\n\n\tpublic getGroupId(): string {\n\t\treturn this._contextMenuGroupId;\n\t}\n\n\tpublic run(): TPromise<void> {\n\t\treturn TPromise.as(this._run(this.editor));\n\t}\n\n\tpublic getEnablementState():boolean {\n\t\treturn this._getEnablementOnTokens() && this._getEnablementOnWord();\n\t}\n\n\tprivate _getEnablementOnTokens(): boolean {\n\t\tif (!this._tokensAtPosition) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar model = this.editor.getModel(),\n\t\t\tposition = this.editor.getSelection().getStartPosition(),\n\t\t\tlineContext = model.getLineContext(position.lineNumber),\n\t\t\toffset = position.column - 1;\n\n\t\treturn isToken(lineContext, offset, this._tokensAtPosition);\n\t}\n\n\tprivate _getEnablementOnWord(): boolean {\n\t\tif (!this._wordAtPosition) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar model = this.editor.getModel(),\n\t\t\tposition = this.editor.getSelection().getStartPosition(),\n\t\t\twordAtPosition = model.getWordAtPosition(position);\n\n\t\treturn (!!wordAtPosition);\n\t}\n}\n\nfunction isToken(context:ILineContext, offset:number, types:string[]): boolean {\n\n\tif (context.getLineContent().length <= offset) {\n\t\treturn false;\n\t}\n\n\tvar tokenIdx = context.findIndexOfOffset(offset);\n\tvar type = context.getTokenType(tokenIdx);\n\n\tfor (var i = 0, len = types.length; i < len; i++) {\n\t\tif (types[i] === '') {\n\t\t\tif (type === '') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (strings.startsWith(type, types[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}"]}