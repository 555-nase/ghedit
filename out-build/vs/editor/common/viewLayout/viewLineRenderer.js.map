{"version":3,"file":"vs/editor/common/viewLayout/viewLineRenderer.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/viewLayout/viewLineRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ViewLineToken} from 'vs/editor/common/editorCommon';\n\nexport class RenderLineInput {\n\tpublic _renderLineInputTrait: void;\n\n\tlineContent: string;\n\ttabSize: number;\n\tspaceWidth: number;\n\tstopRenderingLineAfter: number;\n\trenderWhitespace: boolean;\n\tparts: ViewLineToken[];\n\n\tconstructor(\n\t\tlineContent: string,\n\t\ttabSize: number,\n\t\tspaceWidth: number,\n\t\tstopRenderingLineAfter: number,\n\t\trenderWhitespace: boolean,\n\t\tparts: ViewLineToken[]\n\t) {\n\t\tthis.lineContent = lineContent;\n\t\tthis.tabSize = tabSize;\n\t\tthis.spaceWidth = spaceWidth;\n\t\tthis.stopRenderingLineAfter = stopRenderingLineAfter;\n\t\tthis.renderWhitespace = renderWhitespace;\n\t\tthis.parts = parts;\n\t}\n}\n\nexport class RenderLineOutput {\n\t_renderLineOutputTrait: void;\n\tcharOffsetInPart: number[];\n\tlastRenderedPartIndex: number;\n\toutput: string;\n\n\tconstructor(charOffsetInPart: number[], lastRenderedPartIndex: number, output: string) {\n\t\tthis.charOffsetInPart = charOffsetInPart;\n\t\tthis.lastRenderedPartIndex = lastRenderedPartIndex;\n\t\tthis.output = output;\n\t}\n}\n\nconst _space = ' '.charCodeAt(0);\nconst _tab = '\\t'.charCodeAt(0);\nconst _lowerThan = '<'.charCodeAt(0);\nconst _greaterThan = '>'.charCodeAt(0);\nconst _ampersand = '&'.charCodeAt(0);\nconst _carriageReturn = '\\r'.charCodeAt(0);\nconst _lineSeparator = '\\u2028'.charCodeAt(0); //http://www.fileformat.info/info/unicode/char/2028/index.htm\nconst _bom = 65279;\n\nexport function renderLine(input:RenderLineInput): RenderLineOutput {\n\tconst lineText = input.lineContent;\n\tconst lineTextLength = lineText.length;\n\tconst tabSize = input.tabSize;\n\tconst spaceWidth = input.spaceWidth;\n\tconst actualLineParts = input.parts;\n\tconst renderWhitespace = input.renderWhitespace;\n\tconst charBreakIndex = (input.stopRenderingLineAfter === -1 ? lineTextLength : input.stopRenderingLineAfter - 1);\n\n\tif (lineTextLength === 0) {\n\t\treturn new RenderLineOutput(\n\t\t\t[],\n\t\t\t0,\n\t\t\t// This is basically for IE's hit test to work\n\t\t\t'<span><span>&nbsp;</span></span>'\n\t\t);\n\t}\n\n\tif (actualLineParts.length === 0) {\n\t\tthrow new Error('Cannot render non empty line without line parts!');\n\t}\n\n\treturn renderLineActual(lineText, lineTextLength, tabSize, spaceWidth, actualLineParts.slice(0), renderWhitespace, charBreakIndex);\n}\n\nfunction isWhitespace(type:string): boolean {\n\treturn (type.indexOf('whitespace') >= 0);\n}\n\nfunction isIndentGuide(type:string): boolean {\n\treturn (type.indexOf('indent-guide') >= 0);\n}\n\nfunction renderLineActual(lineText:string, lineTextLength:number, tabSize:number, spaceWidth:number, actualLineParts:ViewLineToken[], renderWhitespace:boolean, charBreakIndex:number): RenderLineOutput {\n\tlineTextLength = +lineTextLength;\n\ttabSize = +tabSize;\n\tcharBreakIndex = +charBreakIndex;\n\n\tlet charIndex = 0;\n\tlet out = '';\n\tlet charOffsetInPartArr: number[] = [];\n\tlet charOffsetInPart = 0;\n\tlet tabsCharDelta = 0;\n\n\tout += '<span>';\n\tfor (let partIndex = 0, partIndexLen = actualLineParts.length; partIndex < partIndexLen; partIndex++) {\n\t\tlet part = actualLineParts[partIndex];\n\n\t\tlet parsRendersWhitespace = (renderWhitespace && isWhitespace(part.type));\n\t\tlet partIsFixedWidth = parsRendersWhitespace || isIndentGuide(part.type);\n\n\t\tlet toCharIndex = lineTextLength;\n\t\tif (partIndex + 1 < partIndexLen) {\n\t\t\tlet nextPart = actualLineParts[partIndex + 1];\n\t\t\ttoCharIndex = Math.min(lineTextLength, nextPart.startIndex);\n\t\t}\n\n\t\tcharOffsetInPart = 0;\n\t\tif (partIsFixedWidth) {\n\n\t\t\tlet partContentCnt = 0;\n\t\t\tlet partContent = '';\n\t\t\tfor (; charIndex < toCharIndex; charIndex++) {\n\t\t\t\tcharOffsetInPartArr[charIndex] = charOffsetInPart;\n\t\t\t\tlet charCode = lineText.charCodeAt(charIndex);\n\n\t\t\t\tif (charCode === _tab) {\n\t\t\t\t\tlet insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n\t\t\t\t\ttabsCharDelta += insertSpacesCount - 1;\n\t\t\t\t\tcharOffsetInPart += insertSpacesCount - 1;\n\t\t\t\t\tif (insertSpacesCount > 0) {\n\t\t\t\t\t\tpartContent += parsRendersWhitespace ? '&rarr;' : '&nbsp;';\n\t\t\t\t\t\tpartContentCnt++;\n\t\t\t\t\t\tinsertSpacesCount--;\n\t\t\t\t\t}\n\t\t\t\t\twhile (insertSpacesCount > 0) {\n\t\t\t\t\t\tpartContent += '&nbsp;';\n\t\t\t\t\t\tpartContentCnt++;\n\t\t\t\t\t\tinsertSpacesCount--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// must be _space\n\t\t\t\t\tpartContent += parsRendersWhitespace ? '&middot;' : '&nbsp;';\n\t\t\t\t\tpartContentCnt++;\n\t\t\t\t}\n\n\t\t\t\tcharOffsetInPart ++;\n\n\t\t\t\tif (charIndex >= charBreakIndex) {\n\t\t\t\t\tout += '<span class=\"token '+part.type+'\" style=\"width:'+(spaceWidth * partContentCnt)+'px\">';\n\t\t\t\t\tout += partContent;\n\t\t\t\t\tout += '&hellip;</span></span>';\n\t\t\t\t\tcharOffsetInPartArr[charIndex] = charOffsetInPart;\n\t\t\t\t\treturn new RenderLineOutput(\n\t\t\t\t\t\tcharOffsetInPartArr,\n\t\t\t\t\t\tpartIndex,\n\t\t\t\t\t\tout\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tout += '<span class=\"token '+part.type+'\" style=\"width:'+(spaceWidth * partContentCnt)+'px\">';\n\t\t\tout += partContent;\n\t\t\tout += '</span>';\n\t\t} else {\n\t\t\tout += '<span class=\"token ';\n\t\t\tout += part.type;\n\t\t\tout += '\">';\n\n\t\t\tfor (; charIndex < toCharIndex; charIndex++) {\n\t\t\t\tcharOffsetInPartArr[charIndex] = charOffsetInPart;\n\t\t\t\tlet charCode = lineText.charCodeAt(charIndex);\n\n\t\t\t\tswitch (charCode) {\n\t\t\t\t\tcase _tab:\n\t\t\t\t\t\tlet insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n\t\t\t\t\t\ttabsCharDelta += insertSpacesCount - 1;\n\t\t\t\t\t\tcharOffsetInPart += insertSpacesCount - 1;\n\t\t\t\t\t\twhile (insertSpacesCount > 0) {\n\t\t\t\t\t\t\tout += '&nbsp;';\n\t\t\t\t\t\t\tinsertSpacesCount--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _space:\n\t\t\t\t\t\tout += '&nbsp;';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _lowerThan:\n\t\t\t\t\t\tout += '&lt;';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _greaterThan:\n\t\t\t\t\t\tout += '&gt;';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _ampersand:\n\t\t\t\t\t\tout += '&amp;';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tout += '&#00;';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _bom:\n\t\t\t\t\tcase _lineSeparator:\n\t\t\t\t\t\tout += '\\ufffd';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase _carriageReturn:\n\t\t\t\t\t\t// zero width space, because carriage return would introduce a line break\n\t\t\t\t\t\tout += '&#8203';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tout += lineText.charAt(charIndex);\n\t\t\t\t}\n\n\t\t\t\tcharOffsetInPart ++;\n\n\t\t\t\tif (charIndex >= charBreakIndex) {\n\t\t\t\t\tout += '&hellip;</span></span>';\n\t\t\t\t\tcharOffsetInPartArr[charIndex] = charOffsetInPart;\n\t\t\t\t\treturn new RenderLineOutput(\n\t\t\t\t\t\tcharOffsetInPartArr,\n\t\t\t\t\t\tpartIndex,\n\t\t\t\t\t\tout\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout += '</span>';\n\t\t}\n\n\t}\n\tout += '</span>';\n\n\t// When getting client rects for the last character, we will position the\n\t// text range at the end of the span, insteaf of at the beginning of next span\n\tcharOffsetInPartArr.push(charOffsetInPart);\n\n\treturn new RenderLineOutput(\n\t\tcharOffsetInPartArr,\n\t\tactualLineParts.length - 1,\n\t\tout\n\t);\n}\n"]}