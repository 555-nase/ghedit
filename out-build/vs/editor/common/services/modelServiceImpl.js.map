{"version":3,"file":"modelServiceImpl.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/services/modelServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IEmitterEvent} from 'vs/base/common/eventEmitter';\nimport {IHTMLContentElement} from 'vs/base/common/htmlContent';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport Severity from 'vs/base/common/severity';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IMarker, IMarkerService} from 'vs/platform/markers/common/markers';\nimport {anonymize} from 'vs/platform/telemetry/common/telemetry';\nimport {IThreadService, Remotable, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {IMirrorModelEvents, MirrorModel} from 'vs/editor/common/model/mirrorModel';\nimport {Model} from 'vs/editor/common/model/model';\nimport {IMode} from 'vs/editor/common/modes';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport * as platform from 'vs/base/common/platform';\nimport {IConfigurationService, ConfigurationServiceEventTypes, IConfigurationServiceEvent} from 'vs/platform/configuration/common/configuration';\nimport {DEFAULT_INDENTATION} from 'vs/editor/common/config/defaultConfig';\nimport {IMessageService} from 'vs/platform/message/common/message';\n\nexport interface IRawModelData {\n\turl: URI;\n\tversionId: number;\n\tvalue: editorCommon.IRawText;\n\tmodeId: string;\n}\n\nfunction MODEL_ID(resource: URI): string {\n\treturn resource.toString();\n}\n\nclass ModelData implements IDisposable {\n\tmodel: editorCommon.IModel;\n\tisSyncedToWorkers: boolean;\n\n\tprivate _markerDecorations: string[];\n\tprivate _modelEventsListener: IDisposable;\n\n\tconstructor(model: editorCommon.IModel, eventsHandler: (modelData: ModelData, events: IEmitterEvent[]) => void) {\n\t\tthis.model = model;\n\t\tthis.isSyncedToWorkers = false;\n\n\t\tthis._markerDecorations = [];\n\t\tthis._modelEventsListener = model.addBulkListener2((events) => eventsHandler(this, events));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._markerDecorations = this.model.deltaDecorations(this._markerDecorations, []);\n\t\tthis._modelEventsListener.dispose();\n\t\tthis._modelEventsListener = null;\n\t\tthis.model = null;\n\t}\n\n\tpublic getModelId(): string {\n\t\treturn MODEL_ID(this.model.getAssociatedResource());\n\t}\n\n\tpublic acceptMarkerDecorations(newDecorations: editorCommon.IModelDeltaDecoration[]): void {\n\t\tthis._markerDecorations = this.model.deltaDecorations(this._markerDecorations, newDecorations);\n\t}\n}\n\nclass ModelMarkerHandler {\n\n\tpublic static setMarkers(modelData: ModelData, markers: IMarker[]): void {\n\n\t\t// Limit to the first 500 errors/warnings\n\t\tmarkers = markers.slice(0, 500);\n\n\t\tlet newModelDecorations: editorCommon.IModelDeltaDecoration[] = markers.map((marker) => {\n\t\t\treturn {\n\t\t\t\trange: this._createDecorationRange(modelData.model, marker),\n\t\t\t\toptions: this._createDecorationOption(marker)\n\t\t\t};\n\t\t});\n\n\t\tmodelData.acceptMarkerDecorations(newModelDecorations);\n\t}\n\n\tprivate static _createDecorationRange(model: editorCommon.IModel, rawMarker: IMarker): editorCommon.IRange {\n\t\tlet marker = model.validateRange(new Range(rawMarker.startLineNumber, rawMarker.startColumn, rawMarker.endLineNumber, rawMarker.endColumn));\n\t\tlet ret: editorCommon.IEditorRange = new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn);\n\t\tif (ret.isEmpty()) {\n\t\t\tlet word = model.getWordAtPosition(ret.getStartPosition());\n\t\t\tif (word) {\n\t\t\t\tret.startColumn = word.startColumn;\n\t\t\t\tret.endColumn = word.endColumn;\n\t\t\t} else {\n\t\t\t\tlet maxColumn = model.getLineLastNonWhitespaceColumn(marker.startLineNumber) ||\n\t\t\t\t\tmodel.getLineMaxColumn(marker.startLineNumber);\n\n\t\t\t\tif (maxColumn === 1) {\n\t\t\t\t\t// empty line\n\t\t\t\t\t//\t\t\t\t\tconsole.warn('marker on empty line:', marker);\n\t\t\t\t} else if (ret.endColumn >= maxColumn) {\n\t\t\t\t\t// behind eol\n\t\t\t\t\tret.endColumn = maxColumn;\n\t\t\t\t\tret.startColumn = maxColumn - 1;\n\t\t\t\t} else {\n\t\t\t\t\t// extend marker to width = 1\n\t\t\t\t\tret.endColumn += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n\t\t\tlet minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n\t\t\tif (minColumn < ret.endColumn) {\n\t\t\t\tret.startColumn = minColumn;\n\t\t\t\trawMarker.startColumn = minColumn;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate static _createDecorationOption(marker: IMarker): editorCommon.IModelDecorationOptions {\n\n\t\tlet className: string;\n\t\tlet color: string;\n\t\tlet darkColor: string;\n\t\tlet htmlMessage: IHTMLContentElement[] = null;\n\n\t\tswitch (marker.severity) {\n\t\t\tcase Severity.Ignore:\n\t\t\t\t// do something\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\tcase Severity.Info:\n\t\t\t\tclassName = editorCommon.ClassName.EditorWarningDecoration;\n\t\t\t\tcolor = 'rgba(18,136,18,0.7)';\n\t\t\t\tdarkColor = 'rgba(18,136,18,0.7)';\n\t\t\t\tbreak;\n\t\t\tcase Severity.Error:\n\t\t\tdefault:\n\t\t\t\tclassName = editorCommon.ClassName.EditorErrorDecoration;\n\t\t\t\tcolor = 'rgba(255,18,18,0.7)';\n\t\t\t\tdarkColor = 'rgba(255,18,18,0.7)';\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (typeof marker.message === 'string') {\n\t\t\thtmlMessage = [{ isText: true, text: marker.message }];\n\t\t} else if (Array.isArray(marker.message)) {\n\t\t\thtmlMessage = <IHTMLContentElement[]><any>marker.message;\n\t\t} else if (marker.message) {\n\t\t\thtmlMessage = [marker.message];\n\t\t}\n\n\t\tif (marker.source) {\n\t\t\thtmlMessage.unshift({ isText: true, text: `[${marker.source}] ` });\n\t\t}\n\n\t\treturn {\n\t\t\tstickiness: editorCommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName,\n\t\t\thtmlMessage: htmlMessage,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor,\n\t\t\t\tdarkColor,\n\t\t\t\tposition: editorCommon.OverviewRulerLane.Right\n\t\t\t}\n\t\t};\n\t}\n}\n\ninterface IRawConfig {\n\tfiles?: {\n\t\teol?: any;\n\t};\n\teditor?: {\n\t\ttabSize?: any;\n\t\tinsertSpaces?: any;\n\t\tdetectIndentation?: any;\n\t};\n}\n\nexport class ModelServiceImpl implements IModelService {\n\tpublic serviceId = IModelService;\n\n\tprivate _markerService: IMarkerService;\n\tprivate _markerServiceSubscription: IDisposable;\n\tprivate _threadService: IThreadService;\n\tprivate _modeService: IModeService;\n\tprivate _messageService: IMessageService;\n\tprivate _configurationService: IConfigurationService;\n\tprivate _configurationServiceSubscription: IDisposable;\n\tprivate _workerHelper: ModelServiceWorkerHelper;\n\n\tprivate _onModelAdded: Emitter<editorCommon.IModel>;\n\tprivate _onModelRemoved: Emitter<editorCommon.IModel>;\n\tprivate _onModelModeChanged: Emitter<{ model: editorCommon.IModel; oldModeId: string; }>;\n\n\tprivate _modelCreationOptions: editorCommon.ITextModelCreationOptions;\n\n\tprivate _hasShownMigrationMessage: boolean;\n\n\t/**\n\t * All the models known in the system.\n\t */\n\tprivate _models: { [modelId: string]: ModelData; };\n\n\tconstructor(\n\t\tthreadService: IThreadService,\n\t\tmarkerService: IMarkerService,\n\t\tmodeService: IModeService,\n\t\tconfigurationService: IConfigurationService,\n\t\tmessageService: IMessageService\n\t) {\n\t\tthis._modelCreationOptions = {\n\t\t\ttabSize: DEFAULT_INDENTATION.tabSize,\n\t\t\tinsertSpaces: DEFAULT_INDENTATION.insertSpaces,\n\t\t\tdetectIndentation: DEFAULT_INDENTATION.detectIndentation,\n\t\t\tdefaultEOL: (platform.isLinux || platform.isMacintosh) ? editorCommon.DefaultEndOfLine.LF : editorCommon.DefaultEndOfLine.CRLF\n\t\t};\n\t\tthis._threadService = threadService;\n\t\tthis._markerService = markerService;\n\t\tthis._modeService = modeService;\n\t\tthis._workerHelper = this._threadService.getRemotable(ModelServiceWorkerHelper);\n\t\tthis._configurationService = configurationService;\n\t\tthis._messageService = messageService;\n\t\tthis._hasShownMigrationMessage = false;\n\t\tthis._models = {};\n\n\n\t\tthis._onModelAdded = new Emitter<editorCommon.IModel>();\n\t\tthis._onModelRemoved = new Emitter<editorCommon.IModel>();\n\t\tthis._onModelModeChanged = new Emitter<{ model: editorCommon.IModel; oldModeId: string; }>();\n\n\t\tif (this._markerService) {\n\t\t\tthis._markerServiceSubscription = this._markerService.onMarkerChanged(this._handleMarkerChange, this);\n\t\t}\n\n\t\tlet readConfig = (config: IRawConfig) => {\n\t\t\tconst eol = config.files && config.files.eol;\n\n\t\t\tlet shouldShowMigrationMessage = false;\n\n\t\t\tlet tabSize = DEFAULT_INDENTATION.tabSize;\n\t\t\tif (config.editor && typeof config.editor.tabSize !== 'undefined') {\n\t\t\t\tlet parsedTabSize = parseInt(config.editor.tabSize, 10);\n\t\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\t\ttabSize = parsedTabSize;\n\t\t\t\t}\n\t\t\t\tshouldShowMigrationMessage = shouldShowMigrationMessage || (config.editor.tabSize === 'auto');\n\t\t\t}\n\n\t\t\tlet insertSpaces = DEFAULT_INDENTATION.insertSpaces;\n\t\t\tif (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n\t\t\t\tinsertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n\t\t\t\tshouldShowMigrationMessage = shouldShowMigrationMessage || (config.editor.insertSpaces === 'auto');\n\t\t\t}\n\n\t\t\tlet newDefaultEOL = this._modelCreationOptions.defaultEOL;\n\t\t\tif (eol === '\\r\\n') {\n\t\t\t\tnewDefaultEOL = editorCommon.DefaultEndOfLine.CRLF;\n\t\t\t} else if (eol === '\\n') {\n\t\t\t\tnewDefaultEOL = editorCommon.DefaultEndOfLine.LF;\n\t\t\t}\n\n\t\t\tlet detectIndentation = DEFAULT_INDENTATION.detectIndentation;\n\t\t\tif (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n\t\t\t\tdetectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n\t\t\t}\n\n\t\t\tthis._setModelOptions({\n\t\t\t\ttabSize: tabSize,\n\t\t\t\tinsertSpaces: insertSpaces,\n\t\t\t\tdetectIndentation: detectIndentation,\n\t\t\t\tdefaultEOL: newDefaultEOL\n\t\t\t});\n\n\n\t\t\tif (shouldShowMigrationMessage && !this._hasShownMigrationMessage) {\n\t\t\t\tthis._hasShownMigrationMessage = true;\n\t\t\t\tthis._messageService.show(Severity.Info, nls.localize('indentAutoMigrate', \"Please update your settings: `editor.detectIndentation` replaces `editor.tabSize`: \\\"auto\\\" or `editor.insertSpaces`: \\\"auto\\\"\"));\n\t\t\t}\n\t\t};\n\t\t\n\t\tthis._configurationServiceSubscription = this._configurationService.addListener2(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => {\n\t\t\treadConfig(e.config);\n\t\t});\n\t\treadConfig(this._configurationService.getConfiguration());\n\t}\n\n\tpublic getCreationOptions(): editorCommon.ITextModelCreationOptions {\n\t\treturn this._modelCreationOptions;\n\t}\n\n\tprivate _setModelOptions(newOpts: editorCommon.ITextModelCreationOptions): void {\n\t\tif (\n\t\t\t(this._modelCreationOptions.detectIndentation === newOpts.detectIndentation)\n\t\t\t&& (this._modelCreationOptions.insertSpaces === newOpts.insertSpaces)\n\t\t\t&& (this._modelCreationOptions.tabSize === newOpts.tabSize)\n\t\t) {\n\t\t\t// Same indent opts, no need to touch created models\n\t\t\tthis._modelCreationOptions = newOpts;\n\t\t\treturn;\n\t\t}\n\t\tthis._modelCreationOptions = newOpts;\n\n\t\t// Update options on all models\n\t\tlet keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet modelId = keys[i];\n\t\t\tlet modelData = this._models[modelId];\n\n\t\t\tif (this._modelCreationOptions.detectIndentation) {\n\t\t\t\tmodelData.model.detectIndentation(this._modelCreationOptions.insertSpaces, this._modelCreationOptions.tabSize);\n\t\t\t} else {\n\t\t\t\tmodelData.model.updateOptions({\n\t\t\t\t\tinsertSpaces: this._modelCreationOptions.insertSpaces,\n\t\t\t\t\ttabSize: this._modelCreationOptions.tabSize\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._markerServiceSubscription) {\n\t\t\tthis._markerServiceSubscription.dispose();\n\t\t}\n\t\tthis._configurationServiceSubscription.dispose();\n\t}\n\n\tprivate _handleMarkerChange(changedResources: URI[]): void {\n\t\tchangedResources.forEach((resource) => {\n\t\t\tlet modelId = MODEL_ID(resource);\n\t\t\tlet modelData = this._models[modelId];\n\t\t\tif (!modelData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tModelMarkerHandler.setMarkers(modelData, this._markerService.read({ resource: resource, take: 500 }));\n\t\t});\n\t}\n\n\t// --- begin IModelService\n\n\tprivate _shouldSyncModelToWorkers(model: editorCommon.IModel): boolean {\n\t\tif (model.isTooLargeForHavingARichMode()) {\n\t\t\treturn false;\n\t\t}\n\t\t// Only sync models with compat modes to the workers\n\t\treturn this._modeService.isCompatMode(model.getMode().getId());\n\t}\n\n\tprivate _createModelData(value: string, modeOrPromise: TPromise<IMode> | IMode, resource: URI): ModelData {\n\t\t// create & save the model\n\t\tlet model = new Model(value, this._modelCreationOptions, modeOrPromise, resource);\n\t\tlet modelId = MODEL_ID(model.getAssociatedResource());\n\n\t\tif (this._models[modelId]) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ModelService: Cannot add model ' + anonymize(modelId) + ' because it already exists!');\n\t\t}\n\n\t\tlet modelData = new ModelData(model, (modelData, events) => this._onModelEvents(modelData, events));\n\t\tthis._models[modelId] = modelData;\n\n\t\treturn modelData;\n\t}\n\n\tpublic createModel(value: string, modeOrPromise: TPromise<IMode> | IMode, resource: URI): editorCommon.IModel {\n\t\tlet modelData = this._createModelData(value, modeOrPromise, resource);\n\n\t\t// handle markers (marker service => model)\n\t\tif (this._markerService) {\n\t\t\tModelMarkerHandler.setMarkers(modelData, this._markerService.read({ resource: modelData.model.getAssociatedResource() }));\n\t\t}\n\n\t\tif (this._shouldSyncModelToWorkers(modelData.model)) {\n\t\t\t// send this model to the workers\n\t\t\tthis._beginWorkerSync(modelData);\n\t\t}\n\n\t\tthis._onModelAdded.fire(modelData.model);\n\n\t\treturn modelData.model;\n\t}\n\n\tpublic destroyModel(resource: URI): void {\n\t\t// We need to support that not all models get disposed through this service (i.e. model.dispose() should work!)\n\t\tlet modelData = this._models[MODEL_ID(resource)];\n\t\tif (!modelData) {\n\t\t\treturn;\n\t\t}\n\t\tmodelData.model.dispose();\n\t}\n\n\tpublic getModels(): editorCommon.IModel[] {\n\t\tlet ret: editorCommon.IModel[] = [];\n\n\t\tlet keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet modelId = keys[i];\n\t\t\tret.push(this._models[modelId].model);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getModel(resource: URI): editorCommon.IModel {\n\t\tlet modelId = MODEL_ID(resource);\n\t\tlet modelData = this._models[modelId];\n\t\tif (!modelData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn modelData.model;\n\t}\n\n\tpublic get onModelAdded(): Event<editorCommon.IModel> {\n\t\treturn this._onModelAdded ? this._onModelAdded.event : null;\n\t}\n\n\tpublic get onModelRemoved(): Event<editorCommon.IModel> {\n\t\treturn this._onModelRemoved ? this._onModelRemoved.event : null;\n\t}\n\n\tpublic get onModelModeChanged(): Event<{ model: editorCommon.IModel; oldModeId: string; }> {\n\t\treturn this._onModelModeChanged ? this._onModelModeChanged.event : null;\n\t}\n\n\t// --- end IModelService\n\n\tprivate _beginWorkerSync(modelData: ModelData): void {\n\t\tif (modelData.isSyncedToWorkers) {\n\t\t\tthrow new Error('Model is already being synced to workers!');\n\t\t}\n\n\t\tmodelData.isSyncedToWorkers = true;\n\t\tthis._workerHelper.$_acceptNewModel(ModelServiceImpl._getBoundModelData(modelData.model));\n\t}\n\n\tprivate _stopWorkerSync(modelData: ModelData): void {\n\t\tif (!modelData.isSyncedToWorkers) {\n\t\t\tthrow new Error('Model is already not being synced to workers!');\n\t\t}\n\t\tmodelData.isSyncedToWorkers = false;\n\t\tthis._workerHelper.$_acceptDidDisposeModel(modelData.model.getAssociatedResource());\n\t}\n\n\tprivate _onModelDisposing(model: editorCommon.IModel): void {\n\t\tlet modelId = MODEL_ID(model.getAssociatedResource());\n\t\tlet modelData = this._models[modelId];\n\n\t\t// TODO@Joh why are we removing markers here?\n\t\tif (this._markerService) {\n\t\t\tvar markers = this._markerService.read({ resource: model.getAssociatedResource() }),\n\t\t\t\towners: { [o: string]: any } = Object.create(null);\n\n\t\t\tmarkers.forEach(marker => owners[marker.owner] = this);\n\t\t\tObject.keys(owners).forEach(owner => this._markerService.changeOne(owner, model.getAssociatedResource(), []));\n\t\t}\n\n\t\tif (modelData.isSyncedToWorkers) {\n\t\t\t// Dispose model in workers\n\t\t\tthis._stopWorkerSync(modelData);\n\t\t}\n\n\t\tdelete this._models[modelId];\n\t\tmodelData.dispose();\n\n\t\tthis._onModelRemoved.fire(model);\n\t}\n\n\tprivate static _getBoundModelData(model: editorCommon.IModel): IRawModelData {\n\t\treturn {\n\t\t\turl: model.getAssociatedResource(),\n\t\t\tversionId: model.getVersionId(),\n\t\t\tvalue: model.toRawText(),\n\t\t\tmodeId: model.getMode().getId()\n\t\t};\n\t}\n\n\tprivate _onModelEvents(modelData: ModelData, events: IEmitterEvent[]): void {\n\n\t\t// First look for dispose\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\t\t\tif (e.getType() === editorCommon.EventType.ModelDispose) {\n\t\t\t\tthis._onModelDisposing(modelData.model);\n\t\t\t\t// no more processing since model got disposed\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Second, look for mode change\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\t\t\tif (e.getType() === editorCommon.EventType.ModelModeChanged) {\n\t\t\t\tlet wasSyncedToWorkers = modelData.isSyncedToWorkers;\n\t\t\t\tlet shouldSyncToWorkers = this._shouldSyncModelToWorkers(modelData.model);\n\n\t\t\t\tthis._onModelModeChanged.fire({\n\t\t\t\t\tmodel: modelData.model,\n\t\t\t\t\toldModeId: (<editorCommon.IModelModeChangedEvent>e.getData()).oldMode.getId()\n\t\t\t\t});\n\n\t\t\t\tif (wasSyncedToWorkers) {\n\t\t\t\t\tif (shouldSyncToWorkers) {\n\t\t\t\t\t\t// true -> true\n\t\t\t\t\t\t// Forward mode change to all the workers\n\t\t\t\t\t\tthis._workerHelper.$_acceptDidChangeModelMode(modelData.getModelId(), modelData.model.getMode().getId());\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// true -> false\n\t\t\t\t\t\t// Stop worker sync for this model\n\t\t\t\t\t\tthis._stopWorkerSync(modelData);\n\t\t\t\t\t\t// no more processing since we have removed the model from the workers\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (shouldSyncToWorkers) {\n\t\t\t\t\t\t// false -> true\n\t\t\t\t\t\t// Begin syncing this model to the workers\n\t\t\t\t\t\tthis._beginWorkerSync(modelData);\n\t\t\t\t\t\t// no more processing since we are sending the latest state\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// false -> false\n\t\t\t\t\t\t// no more processing since this model was not synced and will not be synced\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!modelData.isSyncedToWorkers) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Finally, look for model content changes\n\t\tlet eventsForWorkers: IMirrorModelEvents = { contentChanged: [] };\n\t\tfor (let i = 0, len = events.length; i < len; i++) {\n\t\t\tlet e = events[i];\n\n\t\t\tif (e.getType() === editorCommon.EventType.ModelContentChanged) {\n\t\t\t\teventsForWorkers.contentChanged.push(<editorCommon.IModelContentChangedEvent>e.getData());\n\t\t\t}\n\t\t}\n\n\t\tif (eventsForWorkers.contentChanged.length > 0) {\n\t\t\t// Forward events to all the workers\n\t\t\tthis._workerHelper.$_acceptModelEvents(modelData.getModelId(), eventsForWorkers);\n\t\t}\n\t}\n}\n\n@Remotable.WorkerContext('ModelServiceWorkerHelper', ThreadAffinity.All)\nexport class ModelServiceWorkerHelper {\n\n\tprivate _resourceService: IResourceService;\n\tprivate _modeService: IModeService;\n\n\tconstructor(\n\t\t@IResourceService resourceService: IResourceService,\n\t\t@IModeService modeService: IModeService\n\t) {\n\t\tthis._resourceService = resourceService;\n\t\tthis._modeService = modeService;\n\t}\n\n\tpublic $_acceptNewModel(data: IRawModelData): TPromise<void> {\n\t\t// Create & insert the mirror model eagerly in the resource service\n\t\tlet mirrorModel = new MirrorModel(this._resourceService, data.versionId, data.value, null, data.url);\n\t\tthis._resourceService.insert(mirrorModel.getAssociatedResource(), mirrorModel);\n\n\t\t// Block worker execution until the mode is instantiated\n\t\treturn this._modeService.getOrCreateMode(data.modeId).then((mode) => {\n\t\t\t// Changing mode should trigger a remove & an add, therefore:\n\n\t\t\t// (1) Remove from resource service\n\t\t\tthis._resourceService.remove(mirrorModel.getAssociatedResource());\n\n\t\t\t// (2) Change mode\n\t\t\tmirrorModel.setMode(mode);\n\n\t\t\t// (3) Insert again to resource service (it will have the new mode)\n\t\t\tthis._resourceService.insert(mirrorModel.getAssociatedResource(), mirrorModel);\n\t\t});\n\t}\n\n\tpublic $_acceptDidChangeModelMode(modelId: string, newModeId: string): TPromise<void> {\n\t\tlet mirrorModel = this._resourceService.get(URI.parse(modelId));\n\n\t\t// Block worker execution until the mode is instantiated\n\t\treturn this._modeService.getOrCreateMode(newModeId).then((mode) => {\n\t\t\t// Changing mode should trigger a remove & an add, therefore:\n\n\t\t\t// (1) Remove from resource service\n\t\t\tthis._resourceService.remove(mirrorModel.getAssociatedResource());\n\n\t\t\t// (2) Change mode\n\t\t\tmirrorModel.setMode(mode);\n\n\t\t\t// (3) Insert again to resource service (it will have the new mode)\n\t\t\tthis._resourceService.insert(mirrorModel.getAssociatedResource(), mirrorModel);\n\t\t});\n\t}\n\n\tpublic $_acceptDidDisposeModel(url: URI): void {\n\t\tlet model = <MirrorModel>this._resourceService.get(url);\n\t\tthis._resourceService.remove(url);\n\t\tif (model) {\n\t\t\tmodel.dispose();\n\t\t}\n\t}\n\n\tpublic $_acceptModelEvents(modelId: string, events: IMirrorModelEvents): void {\n\t\tlet model = <MirrorModel>this._resourceService.get(URI.parse(modelId));\n\t\tif (!model) {\n\t\t\tthrow new Error('Received model events for missing model ' + anonymize(modelId));\n\t\t}\n\t\ttry {\n\t\t\tmodel.onEvents(events);\n\t\t} catch (err) {\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n}\n"]}