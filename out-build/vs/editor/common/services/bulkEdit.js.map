{"version":3,"sources":["vs/editor/common/services/bulkEdit.ts"],"names":[],"mappings":"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","file":"vs/editor/common/services/bulkEdit.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {merge} from 'vs/base/common/arrays';\nimport {IStringDictionary, forEach, values} from 'vs/base/common/collections';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IEditorService} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {EventType as FileEventType, FileChangesEvent, IFileChange} from 'vs/platform/files/common/files';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {IEditorSelection, IIdentifiedSingleEditOperation, IModel, IRange, ISelection} from 'vs/editor/common/editorCommon';\nimport {ICommonCodeEditor} from 'vs/editor/common/editorCommon';\n\nexport interface IResourceEdit {\n\tresource: URI;\n\trange?: IRange;\n\tnewText: string;\n}\n\ninterface IRecording {\n\tstop(): void;\n\thasChanged(resource: URI): boolean;\n\tallChanges(): IFileChange[];\n}\n\nclass ChangeRecorder {\n\n\tprivate _eventService: IEventService;\n\n\tconstructor(eventService: IEventService) {\n\t\tthis._eventService = eventService;\n\t}\n\n\tpublic start(): IRecording {\n\n\t\tvar changes: IStringDictionary<IFileChange[]> = Object.create(null);\n\n\t\tvar stop = this._eventService.addListener(FileEventType.FILE_CHANGES,(event: FileChangesEvent) => {\n\t\t\tevent.changes.forEach(change => {\n\n\t\t\t\tvar key = String(change.resource),\n\t\t\t\t\tarray = changes[key];\n\n\t\t\t\tif (!array) {\n\t\t\t\t\tchanges[key] = array = [];\n\t\t\t\t}\n\n\t\t\t\tarray.push(change);\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\tstop,\n\t\t\thasChanged: (resource: URI) => !!changes[resource.toString()],\n\t\t\tallChanges: () => merge(values(changes))\n\t\t};\n\t}\n}\n\nclass EditTask {\n\n\tprivate _initialSelections: IEditorSelection[];\n\tprivate _endCursorSelection: IEditorSelection;\n\tprivate _model: IModel;\n\tprivate _edits: IIdentifiedSingleEditOperation[];\n\n\tconstructor(model: IModel) {\n\t\tthis._endCursorSelection = null;\n\t\tthis._model = model;\n\t\tthis._edits = [];\n\t}\n\n\tpublic addEdit(edit: IResourceEdit): void {\n\t\tvar range: IRange;\n\t\tif (!edit.range) {\n\t\t\trange = this._model.getFullModelRange();\n\t\t} else {\n\t\t\trange = edit.range;\n\t\t}\n\t\tthis._edits.push(EditOperation.replace(Range.lift(range), edit.newText));\n\t}\n\n\tpublic apply(): void {\n\t\tif (this._edits.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._edits.sort(EditTask._editCompare);\n\n\t\tthis._initialSelections = this._getInitialSelections();\n\t\tthis._model.pushEditOperations(this._initialSelections, this._edits, (edits) => this._getEndCursorSelections(edits));\n\t}\n\n\tprotected _getInitialSelections(): IEditorSelection[] {\n\t\tvar firstRange = this._edits[0].range;\n\t\tvar initialSelection = Selection.createSelection(\n\t\t\tfirstRange.startLineNumber,\n\t\t\tfirstRange.startColumn,\n\t\t\tfirstRange.endLineNumber,\n\t\t\tfirstRange.endColumn\n\t\t);\n\t\treturn [initialSelection];\n\t}\n\n\tprivate _getEndCursorSelections(inverseEditOperations:IIdentifiedSingleEditOperation[]): IEditorSelection[] {\n\t\tvar relevantEditIndex = 0;\n\t\tfor (var i = 0; i < inverseEditOperations.length; i++) {\n\t\t\tvar editRange = inverseEditOperations[i].range;\n\t\t\tfor (var j = 0; j < this._initialSelections.length; j++) {\n\t\t\t\tvar selectionRange = this._initialSelections[j];\n\t\t\t\tif (Range.areIntersectingOrTouching(editRange, selectionRange)) {\n\t\t\t\t\trelevantEditIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar srcRange = inverseEditOperations[relevantEditIndex].range;\n\t\tthis._endCursorSelection = Selection.createSelection(\n\t\t\tsrcRange.endLineNumber,\n\t\t\tsrcRange.endColumn,\n\t\t\tsrcRange.endLineNumber,\n\t\t\tsrcRange.endColumn\n\t\t);\n\t\treturn [this._endCursorSelection];\n\t}\n\n\tpublic getEndCursorSelection(): IEditorSelection {\n\t\treturn this._endCursorSelection;\n\t}\n\n\tprivate static _editCompare(a: IIdentifiedSingleEditOperation, b: IIdentifiedSingleEditOperation): number {\n\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t}\n}\n\nclass SourceModelEditTask extends EditTask {\n\n\tprivate _knownInitialSelections:IEditorSelection[];\n\n\tconstructor(model: IModel, initialSelections:IEditorSelection[]) {\n\t\tsuper(model);\n\t\tthis._knownInitialSelections = initialSelections;\n\t}\n\n\tprotected _getInitialSelections(): IEditorSelection[] {\n\t\treturn this._knownInitialSelections;\n\t}\n}\n\nclass BulkEditModel {\n\n\tprivate _editorService: IEditorService;\n\tprivate _numberOfResourcesToModify: number = 0;\n\tprivate _numberOfChanges: number = 0;\n\tprivate _edits: IStringDictionary<IResourceEdit[]> = Object.create(null);\n\tprivate _tasks: EditTask[];\n\tprivate _sourceModel: URI;\n\tprivate _sourceSelections: IEditorSelection[];\n\tprivate _sourceModelTask: SourceModelEditTask;\n\n\tconstructor(editorService: IEditorService, sourceModel: URI, sourceSelections: IEditorSelection[], edits: IResourceEdit[]) {\n\t\tthis._editorService = editorService;\n\t\tthis._sourceModel = sourceModel;\n\t\tthis._sourceSelections = sourceSelections;\n\t\tthis._sourceModelTask = null;\n\n\t\tfor (let edit of edits) {\n\t\t\tthis._addEdit(edit);\n\t\t}\n\t}\n\n\tpublic resourcesCount(): number {\n\t\treturn this._numberOfResourcesToModify;\n\t}\n\n\tpublic changeCount(): number {\n\t\treturn this._numberOfChanges;\n\t}\n\n\tprivate _addEdit(edit: IResourceEdit): void {\n\t\tvar array = this._edits[edit.resource.toString()];\n\t\tif (!array) {\n\t\t\tthis._edits[edit.resource.toString()] = array = [];\n\t\t\tthis._numberOfResourcesToModify += 1;\n\t\t}\n\t\tthis._numberOfChanges += 1;\n\t\tarray.push(edit);\n\t}\n\n\tpublic prepare(): TPromise<BulkEditModel> {\n\n\t\tif (this._tasks) {\n\t\t\tthrow new Error('illegal state - already prepared');\n\t\t}\n\n\t\tthis._tasks = [];\n\t\tvar promises: TPromise<any>[] = [];\n\n\t\tforEach(this._edits, entry => {\n\t\t\tvar promise = this._editorService.resolveEditorModel({ resource: URI.parse(entry.key) }).then(model => {\n\t\t\t\tif (!model || !model.textEditorModel) {\n\t\t\t\t\tthrow new Error(`Cannot load file ${entry.key}`);\n\t\t\t\t}\n\n\t\t\t\tvar textEditorModel = <IModel>model.textEditorModel,\n\t\t\t\t\ttask: EditTask;\n\n\t\t\t\tif (this._sourceModel && textEditorModel.getAssociatedResource().toString() ===  this._sourceModel.toString()) {\n\t\t\t\t\tthis._sourceModelTask = new SourceModelEditTask(textEditorModel, this._sourceSelections);\n\t\t\t\t\ttask = this._sourceModelTask;\n\t\t\t\t} else {\n\t\t\t\t\ttask = new EditTask(textEditorModel);\n\t\t\t\t}\n\n\t\t\t\tentry.value.forEach(edit => task.addEdit(edit));\n\t\t\t\tthis._tasks.push(task);\n\t\t\t});\n\t\t\tpromises.push(promise);\n\t\t});\n\n\t\treturn TPromise.join(promises).then(_ => this);\n\t}\n\n\tpublic apply(): IEditorSelection {\n\t\tthis._tasks.forEach(task => task.apply());\n\t\tvar r: IEditorSelection = null;\n\t\tif (this._sourceModelTask) {\n\t\t\tr = this._sourceModelTask.getEndCursorSelection();\n\t\t}\n\t\treturn r;\n\t}\n}\n\nexport interface BulkEdit {\n\tadd(edit: IResourceEdit[]): void;\n\tfinish(): TPromise<ISelection>;\n}\n\nexport function bulkEdit(eventService:IEventService, editorService:IEditorService, editor:ICommonCodeEditor, edits:IResourceEdit[]):TPromise<any> {\n\tlet bulk = createBulkEdit(eventService, editorService, editor);\n\tbulk.add(edits);\n\treturn bulk.finish();\n}\n\nexport function createBulkEdit(eventService: IEventService, editorService: IEditorService, editor: ICommonCodeEditor): BulkEdit {\n\n\tlet all: IResourceEdit[] = [];\n\tlet recording = new ChangeRecorder(eventService).start();\n\n\tfunction add(edits: IResourceEdit[]): void {\n\t\tall.push(...edits);\n\t}\n\n\tfunction getConcurrentEdits() {\n\t\tlet names: string[];\n\t\tfor (let edit of all) {\n\t\t\tif (recording.hasChanged(edit.resource)) {\n\t\t\t\tif (!names) {\n\t\t\t\t\tnames = [];\n\t\t\t\t}\n\t\t\t\tnames.push(edit.resource.fsPath);\n\t\t\t}\n\t\t}\n\t\tif (names) {\n\t\t\treturn nls.localize('conflict', \"These files have changed in the meantime: {0}\", names.join(', '));\n\t\t}\n\t}\n\n\tfunction finish(): TPromise<ISelection> {\n\n\t\tif (all.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet concurrentEdits = getConcurrentEdits();\n\t\tif (concurrentEdits) {\n\t\t\treturn TPromise.wrapError(concurrentEdits);\n\t\t}\n\n\t\tlet uri: URI;\n\t\tlet selections: IEditorSelection[];\n\n\t\tif (editor && editor.getModel()) {\n\t\t\turi = editor.getModel().getAssociatedResource();\n\t\t\tselections = editor.getSelections();\n\t\t}\n\n\t\tlet model = new BulkEditModel(editorService, uri, selections, all);\n\n\t\treturn model.prepare().then(_ => {\n\n\t\t\tlet concurrentEdits = getConcurrentEdits();\n\t\t\tif (concurrentEdits) {\n\t\t\t\tthrow new Error(concurrentEdits);\n\t\t\t}\n\n\t\t\trecording.stop();\n\t\t\treturn model.apply();\n\t\t});\n\t}\n\n\treturn {\n\t\tadd,\n\t\tfinish\n\t};\n}\n"]}