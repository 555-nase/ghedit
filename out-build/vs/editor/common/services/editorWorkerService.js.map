{"version":3,"file":"vs/editor/common/services/editorWorkerService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/services/editorWorkerService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAQF,gCAAwB,GAAG,qBAAqB,CAAC;IACjD,4BAAoB,GAAG,+BAAe,CAAuB,gCAAwB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ServiceIdentifier, createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IChange, ILineChange, IPosition, IRange} from 'vs/editor/common/editorCommon';\nimport {IInplaceReplaceSupportResult, ILink, ISuggestResult} from 'vs/editor/common/modes';\n\nexport var ID_EDITOR_WORKER_SERVICE = 'editorWorkerService';\nexport var IEditorWorkerService = createDecorator<IEditorWorkerService>(ID_EDITOR_WORKER_SERVICE);\n\nexport interface IEditorWorkerService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tcomputeDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<ILineChange[]>;\n\tcomputeDirtyDiff(original:URI, modified:URI, ignoreTrimWhitespace:boolean):TPromise<IChange[]>;\n\tcomputeLinks(resource:URI):TPromise<ILink[]>;\n\ttextualSuggest(resource: URI, position: IPosition): TPromise<ISuggestResult[]>;\n\tnavigateValueSet(resource: URI, range:IRange, up:boolean): TPromise<IInplaceReplaceSupportResult>;\n}\n"]}