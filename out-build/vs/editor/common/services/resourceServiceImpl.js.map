{"version":3,"file":"vs/editor/common/services/resourceServiceImpl.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/services/resourceServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {EventEmitter, IEmitterEvent, ListenerCallback, ListenerUnbind} from 'vs/base/common/eventEmitter';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {IMirrorModel} from 'vs/editor/common/editorCommon';\nimport {IResourceAddedEvent, IResourceChangedEvent, IResourceRemovedEvent, IResourceService, ResourceEvents} from 'vs/editor/common/services/resourceService';\n\nexport class ResourceService extends EventEmitter implements IResourceService {\n\tpublic serviceId = IResourceService;\n\tprivate data:{[url:string]:IMirrorModel;};\n\tprivate unbinds:{[url:string]:ListenerUnbind[];};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.data = {};\n\t\tthis.unbinds = {};\n\t}\n\n\tpublic addListener_(eventType: string, listener: ListenerCallback): ListenerUnbind {\n\t\treturn super.addListener(eventType, listener);\n\t}\n\n\tpublic addListener2_(eventType: string, listener: ListenerCallback): IDisposable {\n\t\treturn super.addListener2(eventType, listener);\n\t}\n\n\tprivate _anonymousModelId(input:string): string {\n\t\tvar r = '';\n\t\tfor (var i = 0; i < input.length; i++) {\n\t\t\tvar ch = input[i];\n\t\t\tif (ch >= '0' && ch <= '9') {\n\t\t\t\tr += '0';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 'a' && ch <= 'z') {\n\t\t\t\tr += 'a';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 'A' && ch <= 'Z') {\n\t\t\t\tr += 'A';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tr += ch;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic insert(url:URI, element:IMirrorModel): void {\n\t\t// console.log('INSERT: ' + url.toString());\n\t\tif (this.contains(url)) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ResourceService: Cannot add model ' + this._anonymousModelId(url.toString()) + ' because it already exists!');\n\t\t}\n\n\t\t// add resource\n\t\tvar key = url.toString();\n\t\tthis.data[key] = element;\n\t\tthis.unbinds[key] = [];\n\t\tthis.unbinds[key].push(element.addBulkListener((value:IEmitterEvent[]) => {\n\t\t\tthis.emit(ResourceEvents.CHANGED, <IResourceChangedEvent>{ url: url, originalEvents: value });\n\t\t}));\n\n\t\t// event\n\t\tthis.emit(ResourceEvents.ADDED, <IResourceAddedEvent>{ url: url, addedElement: element });\n\t}\n\n\tpublic get(url:URI):IMirrorModel {\n\t\tif(!this.data[url.toString()]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.data[url.toString()];\n\t}\n\n\tpublic all():IMirrorModel[] {\n\t\treturn Object.keys(this.data).map((key) => {\n\t\t\treturn this.data[key];\n\t\t});\n\t}\n\n\tpublic contains(url:URI):boolean {\n\t\treturn !!this.data[url.toString()];\n\t}\n\n\tpublic remove(url:URI):void {\n\t\t// console.log('REMOVE: ' + url.toString());\n\t\tif(!this.contains(url)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar key = url.toString(),\n\t\t\telement = this.data[key];\n\n\t\t// stop listen\n\t\twhile(this.unbinds[key].length > 0) { this.unbinds[key].pop()(); }\n\n\t\t// removal\n\t\tdelete this.unbinds[key];\n\t\tdelete this.data[key];\n\n\t\t// event\n\t\tthis.emit(ResourceEvents.REMOVED, <IResourceRemovedEvent>{ url: url, removedElement: element });\n\t}\n}\n"]}