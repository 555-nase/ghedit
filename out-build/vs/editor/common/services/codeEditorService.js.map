{"version":3,"file":"vs/editor/common/services/codeEditorService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/services/codeEditorService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMF,8BAAsB,GAAG,mBAAmB,CAAC;IAC7C,0BAAkB,GAAG,+BAAe,CAAqB,8BAAsB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event from 'vs/base/common/event';\nimport {ServiceIdentifier, createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {ICommonCodeEditor, IDecorationRenderOptions, IModelDecorationOptions} from 'vs/editor/common/editorCommon';\n\nexport var ID_CODE_EDITOR_SERVICE = 'codeEditorService';\nexport var ICodeEditorService = createDecorator<ICodeEditorService>(ID_CODE_EDITOR_SERVICE);\n\nexport interface ICodeEditorService {\n\tserviceId: ServiceIdentifier<any>;\n\n\taddCodeEditor(editor: ICommonCodeEditor): void;\n\n\tonCodeEditorAdd: Event<ICommonCodeEditor>;\n\n\tremoveCodeEditor(editor: ICommonCodeEditor): void;\n\n\tonCodeEditorRemove: Event<ICommonCodeEditor>;\n\n\tgetCodeEditor(editorId: string): ICommonCodeEditor;\n\n\tlistCodeEditors(): ICommonCodeEditor[];\n\n\tregisterDecorationType(key:string, options: IDecorationRenderOptions): void;\n\tremoveDecorationType(key:string): void;\n\tresolveDecorationType(key:string): IModelDecorationOptions;\n}\n"]}