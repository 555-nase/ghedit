{"version":3,"file":"modeServiceImpl.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/services/modeServiceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable, combinedDisposable, empty as EmptyDisposable} from 'vs/base/common/lifecycle'; // TODO@Alex\nimport * as objects from 'vs/base/common/objects';\nimport * as paths from 'vs/base/common/paths';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport mime = require('vs/base/common/mime');\nimport {IFilesConfiguration} from 'vs/platform/files/common/files';\nimport {createAsyncDescriptor1} from 'vs/platform/instantiation/common/descriptors';\nimport {IExtensionService} from 'vs/platform/extensions/common/extensions';\nimport {IExtensionPointUser, IExtensionMessageCollector, ExtensionsRegistry} from 'vs/platform/extensions/common/extensionsRegistry';\nimport {IThreadService, Remotable, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport * as modes from 'vs/editor/common/modes';\nimport {FrankensteinMode} from 'vs/editor/common/modes/abstractMode';\nimport {ILegacyLanguageDefinition, ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\nimport {ILexer} from 'vs/editor/common/modes/monarch/monarchCommon';\nimport {compile} from 'vs/editor/common/modes/monarch/monarchCompile';\nimport {createRichEditSupport, createSuggestSupport} from 'vs/editor/common/modes/monarch/monarchDefinition';\nimport {createTokenizationSupport} from 'vs/editor/common/modes/monarch/monarchLexer';\nimport {ILanguage} from 'vs/editor/common/modes/monarch/monarchTypes';\nimport {DeclarationSupport, IDeclarationContribution} from 'vs/editor/common/modes/supports/declarationSupport';\nimport {IRichEditConfiguration, RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {LanguagesRegistry} from 'vs/editor/common/services/languagesRegistry';\nimport {ILanguageExtensionPoint, IValidLanguageExtensionPoint, IModeLookupResult, IModeService} from 'vs/editor/common/services/modeService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IConfigurationService, IConfigurationServiceEvent, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\n\ninterface IModeConfigurationMap { [modeId: string]: any; }\n\nlet languagesExtPoint = ExtensionsRegistry.registerExtensionPoint<ILanguageExtensionPoint[]>('languages', {\n\tdescription: nls.localize('vscode.extension.contributes.languages', 'Contributes language declarations.'),\n\ttype: 'array',\n\tdefaultSnippets: [{ body: [{ id: '', aliases: [], extensions: [] }] }],\n\titems: {\n\t\ttype: 'object',\n\t\tdefaultSnippets: [{ body: { id: '', extensions: [] } }],\n\t\tproperties: {\n\t\t\tid: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.id', 'ID of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\taliases: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.aliases', 'Name aliases for the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\textensions: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.extensions', 'File extensions associated to the language.'),\n\t\t\t\tdefault: ['.foo'],\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilenames: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenames', 'File names associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfilenamePatterns: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.filenamePatterns', 'File name glob patterns associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimetypes: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.mimetypes', 'Mime types associated to the language.'),\n\t\t\t\ttype: 'array',\n\t\t\t\titems: {\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t},\n\t\t\tfirstLine: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.firstLine', 'A regular expression matching the first line of a file of the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tconfiguration: {\n\t\t\t\tdescription: nls.localize('vscode.extension.contributes.languages.configuration', 'A relative path to a file containing configuration options for the language.'),\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction isUndefinedOrStringArray(value: string[]): boolean {\n\tif (typeof value === 'undefined') {\n\t\treturn true;\n\t}\n\tif (!Array.isArray(value)) {\n\t\treturn false;\n\t}\n\treturn value.every(item => typeof item === 'string');\n}\n\nfunction isValidLanguageExtensionPoint(value:ILanguageExtensionPoint, collector:IExtensionMessageCollector): boolean {\n\tif (!value) {\n\t\tcollector.error(nls.localize('invalid.empty', \"Empty value for `contributes.{0}`\", languagesExtPoint.name));\n\t\treturn false;\n\t}\n\tif (typeof value.id !== 'string') {\n\t\tcollector.error(nls.localize('require.id', \"property `{0}` is mandatory and must be of type `string`\", 'id'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.extensions)) {\n\t\tcollector.error(nls.localize('opt.extensions', \"property `{0}` can be omitted and must be of type `string[]`\", 'extensions'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.filenames)) {\n\t\tcollector.error(nls.localize('opt.filenames', \"property `{0}` can be omitted and must be of type `string[]`\", 'filenames'));\n\t\treturn false;\n\t}\n\tif (typeof value.firstLine !== 'undefined' && typeof value.firstLine !== 'string') {\n\t\tcollector.error(nls.localize('opt.firstLine', \"property `{0}` can be omitted and must be of type `string`\", 'firstLine'));\n\t\treturn false;\n\t}\n\tif (typeof value.configuration !== 'undefined' && typeof value.configuration !== 'string') {\n\t\tcollector.error(nls.localize('opt.configuration', \"property `{0}` can be omitted and must be of type `string`\", 'configuration'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.aliases)) {\n\t\tcollector.error(nls.localize('opt.aliases', \"property `{0}` can be omitted and must be of type `string[]`\", 'aliases'));\n\t\treturn false;\n\t}\n\tif (!isUndefinedOrStringArray(value.mimetypes)) {\n\t\tcollector.error(nls.localize('opt.mimetypes', \"property `{0}` can be omitted and must be of type `string[]`\", 'mimetypes'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nexport class ModeServiceImpl implements IModeService {\n\tpublic serviceId = IModeService;\n\n\tprotected _threadService: IThreadService;\n\tprotected _extensionService: IExtensionService;\n\n\tprivate _activationPromises: { [modeId: string]: TPromise<modes.IMode>; };\n\tprivate _instantiatedModes: { [modeId: string]: modes.IMode; };\n\tprivate _config: IModeConfigurationMap;\n\n\tprivate _registry: LanguagesRegistry;\n\n\tprivate _onDidAddModes: Emitter<string[]> = new Emitter<string[]>();\n\tpublic onDidAddModes: Event<string[]> = this._onDidAddModes.event;\n\n\tprivate _onDidCreateMode: Emitter<modes.IMode> = new Emitter<modes.IMode>();\n\tpublic onDidCreateMode: Event<modes.IMode> = this._onDidCreateMode.event;\n\n\tconstructor(threadService:IThreadService, extensionService:IExtensionService) {\n\t\tthis._threadService = threadService;\n\t\tthis._extensionService = extensionService;\n\n\t\tthis._activationPromises = {};\n\t\tthis._instantiatedModes = {};\n\t\tthis._config = {};\n\n\t\tthis._registry = new LanguagesRegistry();\n\t\tthis._registry.onDidAddModes((modes) => this._onDidAddModes.fire(modes));\n\t}\n\n\tpublic getConfigurationForMode(modeId:string): any {\n\t\treturn this._config[modeId] || {};\n\t}\n\n\tpublic configureMode(mimetype: string, options: any): void {\n\t\tvar modeId = this.getModeId(mimetype);\n\t\tif (modeId) {\n\t\t\tthis.configureModeById(modeId, options);\n\t\t}\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tvar previousOptions = this._config[modeId] || {};\n\t\tvar newOptions = objects.mixin(objects.clone(previousOptions), options);\n\n\t\tif (objects.equals(previousOptions, newOptions)) {\n\t\t\t// This configure call is a no-op\n\t\t\treturn;\n\t\t}\n\n\t\tthis._config[modeId] = newOptions;\n\n\t\tvar mode = this.getMode(modeId);\n\t\tif (mode && mode.configSupport) {\n\t\t\tmode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t}\n\t}\n\n\tpublic configureAllModes(config:any): void {\n\t\tif (!config) {\n\t\t\treturn;\n\t\t}\n\t\tvar modes = this._registry.getRegisteredModes();\n\t\tmodes.forEach((modeIdentifier) => {\n\t\t\tvar configuration = config[modeIdentifier];\n\t\t\tthis.configureModeById(modeIdentifier, configuration);\n\t\t});\n\t}\n\n\tpublic isRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\treturn this._registry.isRegisteredMode(mimetypeOrModeId);\n\t}\n\n\tpublic isCompatMode(modeId:string): boolean {\n\t\tlet compatModeData = this._registry.getCompatMode(modeId);\n\t\treturn (compatModeData ? true : false);\n\t}\n\n\tpublic getRegisteredModes(): string[] {\n\t\treturn this._registry.getRegisteredModes();\n\t}\n\n\tpublic getRegisteredLanguageNames(): string[] {\n\t\treturn this._registry.getRegisteredLanguageNames();\n\t}\n\n\tpublic getExtensions(alias: string): string[] {\n\t\treturn this._registry.getExtensions(alias);\n\t}\n\n\tpublic getMimeForMode(modeId: string): string {\n\t\treturn this._registry.getMimeForMode(modeId);\n\t}\n\n\tpublic getLanguageName(modeId: string): string {\n\t\treturn this._registry.getLanguageName(modeId);\n\t}\n\n\tpublic getModeIdForLanguageName(alias:string): string {\n\t\treturn this._registry.getModeIdForLanguageNameLowercase(alias);\n\t}\n\n\tpublic getModeId(commaSeparatedMimetypesOrCommaSeparatedIds: string): string {\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getConfigurationFiles(modeId: string): string[] {\n\t\treturn this._registry.getConfigurationFiles(modeId);\n\t}\n\n\t// --- instantiation\n\n\tpublic lookup(commaSeparatedMimetypesOrCommaSeparatedIds: string): IModeLookupResult[]{\n\t\tvar r: IModeLookupResult[] = [];\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tvar modeId = modeIds[i];\n\n\t\t\tr.push({\n\t\t\t\tmodeId: modeId,\n\t\t\t\tisInstantiated: this._instantiatedModes.hasOwnProperty(modeId)\n\t\t\t});\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic getMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): modes.IMode {\n\t\tvar modeIds = this._registry.extractModeIds(commaSeparatedMimetypesOrCommaSeparatedIds);\n\n\t\tvar isPlainText = false;\n\t\tfor (var i = 0; i < modeIds.length; i++) {\n\t\t\tif (this._instantiatedModes.hasOwnProperty(modeIds[i])) {\n\t\t\t\treturn this._instantiatedModes[modeIds[i]];\n\t\t\t}\n\t\t\tisPlainText = isPlainText || (modeIds[i] === 'plaintext');\n\t\t}\n\n\t\tif (isPlainText) {\n\t\t\t// Try to do it synchronously\n\t\t\tvar r: modes.IMode = null;\n\t\t\tthis.getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds).then((mode) => {\n\t\t\t\tr = mode;\n\t\t\t}).done(null, onUnexpectedError);\n\t\t\treturn r;\n\t\t}\n\t}\n\n\tpublic getModeIdByLanguageName(languageName: string): string {\n\t\tvar modeIds = this._registry.getModeIdsFromLanguageName(languageName);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getModeIdByFilenameOrFirstLine(filename: string, firstLine?:string): string {\n\t\tvar modeIds = this._registry.getModeIdsFromFilenameOrFirstLine(filename, firstLine);\n\n\t\tif (modeIds.length > 0) {\n\t\t\treturn modeIds[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\treturn this._extensionService.onReady();\n\t}\n\n\tpublic getOrCreateMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeId(commaSeparatedMimetypesOrCommaSeparatedIds);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByLanguageName(languageName: string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByLanguageName(languageName);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tpublic getOrCreateModeByFilenameOrFirstLine(filename: string, firstLine?:string): TPromise<modes.IMode> {\n\t\treturn this.onReady().then(() => {\n\t\t\tvar modeId = this.getModeIdByFilenameOrFirstLine(filename, firstLine);\n\t\t\t// Fall back to plain text if no mode was found\n\t\t\treturn this._getOrCreateMode(modeId || 'plaintext');\n\t\t});\n\t}\n\n\tprivate _getOrCreateMode(modeId: string): TPromise<modes.IMode> {\n\t\tif (this._instantiatedModes.hasOwnProperty(modeId)) {\n\t\t\treturn TPromise.as(this._instantiatedModes[modeId]);\n\t\t}\n\n\t\tif (this._activationPromises.hasOwnProperty(modeId)) {\n\t\t\treturn this._activationPromises[modeId];\n\t\t}\n\t\tvar c, e;\n\t\tvar promise = new TPromise((cc,ee,pp) => { c = cc; e = ee; });\n\t\tthis._activationPromises[modeId] = promise;\n\n\t\tthis._createMode(modeId).then((mode) => {\n\t\t\tthis._instantiatedModes[modeId] = mode;\n\t\t\tdelete this._activationPromises[modeId];\n\n\t\t\tthis._onDidCreateMode.fire(mode);\n\n\t\t\tthis._extensionService.activateByEvent(`onLanguage:${modeId}`).done(null, onUnexpectedError);\n\n\t\t\treturn this._instantiatedModes[modeId];\n\t\t}).then(c, e);\n\n\t\treturn promise;\n\t}\n\n\tprotected _createMode(modeId:string): TPromise<modes.IMode> {\n\t\tlet modeDescriptor = this._createModeDescriptor(modeId);\n\n\t\tlet compatModeData = this._registry.getCompatMode(modeId);\n\t\tif (compatModeData) {\n\t\t\t// This is a compatibility mode\n\t\t\tlet compatModeAsyncDescriptor = createAsyncDescriptor1<modes.IModeDescriptor, modes.IMode>(compatModeData.moduleId, compatModeData.ctorName);\n\t\t\treturn this._threadService.createInstance(compatModeAsyncDescriptor, modeDescriptor).then((compatMode) => {\n\t\t\t\tif (compatMode.configSupport) {\n\t\t\t\t\tcompatMode.configSupport.configure(this.getConfigurationForMode(modeId));\n\t\t\t\t}\n\t\t\t\treturn compatMode;\n\t\t\t});\n\t\t}\n\n\t\treturn TPromise.as<modes.IMode>(this._threadService.createInstance(FrankensteinMode, modeDescriptor));\n\t}\n\n\tprivate _createModeDescriptor(modeId:string): modes.IModeDescriptor {\n\t\treturn {\n\t\t\tid: modeId\n\t\t};\n\t}\n\n\tprivate _registerModeSupport<T>(mode:modes.IMode, support: string, callback: (mode: modes.IMode) => T): IDisposable {\n\t\tif (mode.registerSupport) {\n\t\t\treturn mode.registerSupport(support, callback);\n\t\t} else {\n\t\t\tconsole.warn('Cannot register support ' + support + ' on mode ' + mode.getId() + ' because it does not support it.');\n\t\t\treturn EmptyDisposable;\n\t\t}\n\t}\n\n\tprotected registerModeSupport<T>(modeId: string, support: string, callback: (mode: modes.IMode) => T): IDisposable {\n\t\tif (this._instantiatedModes.hasOwnProperty(modeId)) {\n\t\t\treturn this._registerModeSupport(this._instantiatedModes[modeId], support, callback);\n\t\t}\n\n\t\tlet cc: (disposable:IDisposable)=>void;\n\t\tlet promise = new TPromise<IDisposable>((c, e) => { cc = c; });\n\n\t\tlet disposable = this.onDidCreateMode((mode) => {\n\t\t\tif (mode.getId() !== modeId) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcc(this._registerModeSupport(mode, support, callback));\n\t\t\tdisposable.dispose();\n\t\t});\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tpromise.done(disposable => disposable.dispose(), null);\n\t\t\t}\n\t\t};\n\t}\n\n\tprotected doRegisterMonarchDefinition(modeId:string, lexer: ILexer): IDisposable {\n\t\treturn combinedDisposable(\n\t\t\tthis.registerTokenizationSupport(modeId, (mode: modes.IMode) => {\n\t\t\t\treturn createTokenizationSupport(this, mode, lexer);\n\t\t\t}),\n\n\t\t\tthis.registerRichEditSupport(modeId, createRichEditSupport(lexer))\n\t\t);\n\t}\n\n\tpublic registerMonarchDefinition(modelService: IModelService, editorWorkerService:IEditorWorkerService, modeId:string, language:ILanguage): IDisposable {\n\t\tvar lexer = compile(objects.clone(language));\n\t\treturn this.doRegisterMonarchDefinition(modeId, lexer);\n\t}\n\n\n\tpublic registerRichEditSupport(modeId: string, support: IRichEditConfiguration): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'richEditSupport', (mode) => new RichEditSupport(modeId, mode.richEditSupport, support));\n\t}\n\n\tpublic registerDeclarativeDeclarationSupport(modeId: string, contribution: IDeclarationContribution): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'declarationSupport', (mode) => new DeclarationSupport(modeId, contribution));\n\t}\n\n\tpublic registerTokenizationSupport(modeId: string, callback: (mode: modes.IMode) => modes.ITokenizationSupport): IDisposable {\n\t\treturn this.registerModeSupport(modeId, 'tokenizationSupport', callback);\n\t}\n}\n\nexport class MainThreadModeServiceImpl extends ModeServiceImpl {\n\tprivate _hasInitialized: boolean;\n\tprivate _configurationService: IConfigurationService;\n\tprivate _onReadyPromise: TPromise<boolean>;\n\n\tconstructor(\n\t\tthreadService:IThreadService,\n\t\textensionService:IExtensionService,\n\t\tconfigurationService: IConfigurationService\n\t) {\n\t\tsuper(threadService, extensionService);\n\t\tthis._configurationService = configurationService;\n\t\tthis._hasInitialized = false;\n\n\t\tlanguagesExtPoint.setHandler((extensions:IExtensionPointUser<ILanguageExtensionPoint[]>[]) => {\n\t\t\tlet allValidLanguages: IValidLanguageExtensionPoint[] = [];\n\n\t\t\tfor (let i = 0, len = extensions.length; i < len; i++) {\n\t\t\t\tlet extension = extensions[i];\n\n\t\t\t\tif (!Array.isArray(extension.value)) {\n\t\t\t\t\textension.collector.error(nls.localize('invalid', \"Invalid `contributes.{0}`. Expected an array.\", languagesExtPoint.name));\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (let j = 0, lenJ = extension.value.length; j < lenJ; j++) {\n\t\t\t\t\tlet ext = extension.value[j];\n\t\t\t\t\tif (isValidLanguageExtensionPoint(ext, extension.collector)) {\n\t\t\t\t\t\tlet configuration = (ext.configuration ? paths.join(extension.description.extensionFolderPath, ext.configuration) : ext.configuration);\n\t\t\t\t\t\tallValidLanguages.push({\n\t\t\t\t\t\t\tid: ext.id,\n\t\t\t\t\t\t\textensions: ext.extensions,\n\t\t\t\t\t\t\tfilenames: ext.filenames,\n\t\t\t\t\t\t\tfilenamePatterns: ext.filenamePatterns,\n\t\t\t\t\t\t\tfirstLine: ext.firstLine,\n\t\t\t\t\t\t\taliases: ext.aliases,\n\t\t\t\t\t\t\tmimetypes: ext.mimetypes,\n\t\t\t\t\t\t\tconfiguration: configuration\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tModesRegistry.registerLanguages(allValidLanguages);\n\n\t\t});\n\n\t\tthis._configurationService.addListener(ConfigurationServiceEventTypes.UPDATED, (e: IConfigurationServiceEvent) => this.onConfigurationChange(e.config));\n\t}\n\n\tpublic onReady(): TPromise<boolean> {\n\t\tif (!this._onReadyPromise) {\n\t\t\tconst configuration = this._configurationService.getConfiguration<IFilesConfiguration>();\n\t\t\tthis._onReadyPromise = this._extensionService.onReady().then(() => {\n\t\t\t\tthis.onConfigurationChange(configuration);\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\treturn this._onReadyPromise;\n\t}\n\n\tprivate onConfigurationChange(configuration: IFilesConfiguration): void {\n\n\t\t// Clear user configured mime associations\n\t\tmime.clearTextMimes(true /* user configured */);\n\n\t\t// Register based on settings\n\t\tif (configuration.files && configuration.files.associations) {\n\t\t\tObject.keys(configuration.files.associations).forEach(pattern => {\n\t\t\t\tmime.registerTextMime({ mime: this.getMimeForMode(configuration.files.associations[pattern]), filepattern: pattern, userConfigured: true });\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _getModeServiceWorkerHelper(): ModeServiceWorkerHelper {\n\t\tlet r = this._threadService.getRemotable(ModeServiceWorkerHelper);\n\t\tif (!this._hasInitialized) {\n\t\t\tthis._hasInitialized = true;\n\n\t\t\tlet initData = {\n\t\t\t\tcompatModes: ModesRegistry.getCompatModes(),\n\t\t\t\tlanguages: ModesRegistry.getLanguages()\n\t\t\t};\n\n\t\t\tr._initialize(initData);\n\n\t\t\tModesRegistry.onDidAddCompatModes((m) => r._acceptCompatModes(m));\n\t\t\tModesRegistry.onDidAddLanguages((m) => r._acceptLanguages(m));\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tthis._getModeServiceWorkerHelper().configureModeById(modeId, options);\n\t\tsuper.configureModeById(modeId, options);\n\t}\n\n\tprotected _createMode(modeId:string): TPromise<modes.IMode> {\n\t\t// Instantiate mode also in worker\n\t\tthis._getModeServiceWorkerHelper().instantiateMode(modeId);\n\t\treturn super._createMode(modeId);\n\t}\n\n\tpublic registerMonarchDefinition(modelService: IModelService, editorWorkerService:IEditorWorkerService, modeId:string, language:ILanguage): IDisposable {\n\t\tthis._getModeServiceWorkerHelper().registerMonarchDefinition(modeId, language);\n\t\tvar lexer = compile(objects.clone(language));\n\t\treturn combinedDisposable(\n\t\t\tsuper.doRegisterMonarchDefinition(modeId, lexer),\n\n\t\t\tthis.registerModeSupport(modeId, 'suggestSupport', (mode) => {\n\t\t\t\treturn createSuggestSupport(modelService, editorWorkerService, modeId, lexer);\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport interface IWorkerInitData {\n\tcompatModes: ILegacyLanguageDefinition[];\n\tlanguages: ILanguageExtensionPoint[];\n}\n\n@Remotable.WorkerContext('ModeServiceWorkerHelper', ThreadAffinity.All)\nexport class ModeServiceWorkerHelper {\n\tprivate _modeService:IModeService;\n\n\tconstructor(@IModeService modeService:IModeService) {\n\t\tthis._modeService = modeService;\n\t}\n\n\tpublic _initialize(initData:IWorkerInitData): void {\n\t\tModesRegistry.registerCompatModes(initData.compatModes);\n\t\tModesRegistry.registerLanguages(initData.languages);\n\t}\n\n\tpublic _acceptCompatModes(modes:ILegacyLanguageDefinition[]): void {\n\t\tModesRegistry.registerCompatModes(modes);\n\t}\n\n\tpublic _acceptLanguages(languages:ILanguageExtensionPoint[]): void {\n\t\tModesRegistry.registerLanguages(languages);\n\t}\n\n\tpublic instantiateMode(modeId:string): void {\n\t\tthis._modeService.getOrCreateMode(modeId).done(null, onUnexpectedError);\n\t}\n\n\tpublic configureModeById(modeId:string, options:any):void {\n\t\tthis._modeService.configureMode(modeId, options);\n\t}\n\n\tpublic registerMonarchDefinition(modeId:string, language:ILanguage): void {\n\t\tthis._modeService.registerMonarchDefinition(null, null, modeId, language);\n\t}\n}\n"]}