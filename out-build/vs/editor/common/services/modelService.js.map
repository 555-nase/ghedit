{"version":3,"file":"vs/editor/common/services/modelService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/services/modelService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IASF,qBAAa,GAAG,+BAAe,CAAgB,cAAc,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event from 'vs/base/common/event';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {ServiceIdentifier, createDecorator} from 'vs/platform/instantiation/common/instantiation';\nimport {IModel, ITextModelCreationOptions} from 'vs/editor/common/editorCommon';\nimport {IMode} from 'vs/editor/common/modes';\n\nexport var IModelService = createDecorator<IModelService>('modelService');\n\nexport interface IModelService {\n\tserviceId: ServiceIdentifier<any>;\n\n\tcreateModel(value:string, modeOrPromise:TPromise<IMode>|IMode, resource: URI): IModel;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): IModel[];\n\n\tgetCreationOptions(): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): IModel;\n\n\tonModelAdded: Event<IModel>;\n\n\tonModelRemoved: Event<IModel>;\n\n\tonModelModeChanged: Event<{ model: IModel; oldModeId: string; }>;\n}\n\n"]}