{"version":3,"file":"textAreaHandler.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/controller/textAreaHandler.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {CommonKeybindings} from 'vs/base/common/keyCodes';\nimport {Disposable} from 'vs/base/common/lifecycle';\nimport {IClipboardEvent, IKeyboardEventWrapper, ISimpleModel, ITextAreaWrapper, ITypeData, TextAreaState, TextAreaStrategy, createTextAreaState} from 'vs/editor/common/controller/textAreaState';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {EndOfLinePreference, IEditorPosition, IEditorRange} from 'vs/editor/common/editorCommon';\n\nenum ReadFromTextArea {\n\tType,\n\tPaste\n}\n\nexport interface IBrowser {\n\tisIPad: boolean;\n\tisChrome: boolean;\n\tisIE11orEarlier: boolean;\n\tisFirefox: boolean;\n\tenableEmptySelectionClipboard: boolean;\n}\n\nexport interface IPasteData {\n\ttext: string;\n\tpasteOnNewLine: boolean;\n}\n\nexport interface ICompositionStartData {\n\tshowAtLineNumber: number;\n\tshowAtColumn: number;\n}\n\nexport class TextAreaHandler extends Disposable {\n\n\tprivate _onKeyDown = this._register(new Emitter<IKeyboardEventWrapper>());\n\tpublic onKeyDown: Event<IKeyboardEventWrapper> = this._onKeyDown.event;\n\n\tprivate _onKeyUp = this._register(new Emitter<IKeyboardEventWrapper>());\n\tpublic onKeyUp: Event<IKeyboardEventWrapper> = this._onKeyUp.event;\n\n\tprivate _onCut = this._register(new Emitter<void>());\n\tpublic onCut: Event<void> = this._onCut.event;\n\n\tprivate _onPaste = this._register(new Emitter<IPasteData>());\n\tpublic onPaste: Event<IPasteData> = this._onPaste.event;\n\n\tprivate _onType = this._register(new Emitter<ITypeData>());\n\tpublic onType: Event<ITypeData> = this._onType.event;\n\n\tprivate _onCompositionStart = this._register(new Emitter<ICompositionStartData>());\n\tpublic onCompositionStart: Event<ICompositionStartData> = this._onCompositionStart.event;\n\n\tprivate _onCompositionEnd = this._register(new Emitter<void>());\n\tpublic onCompositionEnd: Event<void> = this._onCompositionEnd.event;\n\n\tprivate Browser:IBrowser;\n\tprivate textArea:ITextAreaWrapper;\n\tprivate model:ISimpleModel;\n\tprivate flushAnyAccumulatedEvents:()=>void;\n\n\tprivate selection:IEditorRange;\n\tprivate selections:IEditorRange[];\n\tprivate hasFocus:boolean;\n\n\tprivate asyncTriggerCut: RunOnceScheduler;\n\n\tprivate lastCompositionEndTime:number;\n\tprivate cursorPosition:IEditorPosition;\n\n\tprivate textAreaState:TextAreaState;\n\tprivate textareaIsShownAtCursor: boolean;\n\n\tprivate lastCopiedValue: string;\n\tprivate lastCopiedValueIsFromEmptySelection: boolean;\n\n\tprivate _nextCommand: ReadFromTextArea;\n\n\tconstructor(Browser:IBrowser, strategy:TextAreaStrategy, textArea:ITextAreaWrapper, model:ISimpleModel, flushAnyAccumulatedEvents:()=>void) {\n\t\tsuper();\n\t\tthis.Browser = Browser;\n\t\tthis.textArea = textArea;\n\t\tthis.model = model;\n\t\tthis.flushAnyAccumulatedEvents = flushAnyAccumulatedEvents;\n\t\tthis.selection = new Range(1, 1, 1, 1);\n\t\tthis.selections = [new Range(1, 1, 1, 1)];\n\t\tthis.cursorPosition = new Position(1, 1);\n\t\tthis._nextCommand = ReadFromTextArea.Type;\n\n\t\tthis.asyncTriggerCut = new RunOnceScheduler(() => this._onCut.fire(), 0);\n\n\t\tthis.lastCopiedValue = null;\n\t\tthis.lastCopiedValueIsFromEmptySelection = false;\n\t\tthis.textAreaState = createTextAreaState(strategy);\n\n\t\tthis.hasFocus = false;\n\n\t\tthis.lastCompositionEndTime = 0;\n\n\t\tthis._register(this.textArea.onKeyDown((e) => this._onKeyDownHandler(e)));\n\t\tthis._register(this.textArea.onKeyUp((e) => this._onKeyUp.fire(e)));\n\t\tthis._register(this.textArea.onKeyPress((e) => this._onKeyPressHandler(e)));\n\n\t\tthis.textareaIsShownAtCursor = false;\n\n\t\tthis._register(this.textArea.onCompositionStart(() => {\n\t\t\tlet timeSinceLastCompositionEnd = (new Date().getTime()) - this.lastCompositionEndTime;\n\t\t\tif (this.textareaIsShownAtCursor) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.textareaIsShownAtCursor = true;\n\n\t\t\t// In IE we cannot set .value when handling 'compositionstart' because the entire composition will get canceled.\n\t\t\tlet shouldEmptyTextArea = (timeSinceLastCompositionEnd >= 100);\n\t\t\tif (shouldEmptyTextArea) {\n\t\t\t\tif (!this.Browser.isIE11orEarlier) {\n\t\t\t\t\tthis.setTextAreaState('compositionstart', this.textAreaState.toEmpty());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet showAtLineNumber: number;\n\t\t\tlet showAtColumn: number;\n\n\t\t\t// In IE we cannot set .value when handling 'compositionstart' because the entire composition will get canceled.\n\t\t\tif (this.Browser.isIE11orEarlier) {\n\t\t\t\t// Ensure selection start is in viewport\n\t\t\t\tshowAtLineNumber = this.selection.startLineNumber;\n\t\t\t\tshowAtColumn = (this.selection.startColumn - this.textAreaState.getSelectionStart());\n\t\t\t} else {\n\t\t\t\tshowAtLineNumber = this.cursorPosition.lineNumber;\n\t\t\t\tshowAtColumn = this.cursorPosition.column;\n\t\t\t}\n\n\t\t\tthis._onCompositionStart.fire({\n\t\t\t\tshowAtLineNumber: showAtLineNumber,\n\t\t\t\tshowAtColumn: showAtColumn\n\t\t\t});\n\t\t}));\n\n\t\tlet readFromTextArea = () => {\n\t\t\tthis.textAreaState = this.textAreaState.fromTextArea(this.textArea);\n\t\t\tlet typeInput = this.textAreaState.deduceInput();\n\t\t\t// console.log('==> DEDUCED INPUT: ' + JSON.stringify(typeInput));\n\t\t\tif (this._nextCommand === ReadFromTextArea.Type) {\n\t\t\t\tif (typeInput.text !== '') {\n\t\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.executePaste(typeInput.text);\n\t\t\t\tthis._nextCommand = ReadFromTextArea.Type;\n\t\t\t}\n\t\t};\n\n\t\tthis._register(this.textArea.onCompositionEnd(() => {\n\t\t\t// console.log('onCompositionEnd: ' + this.textArea.getValue());\n\t\t\t// readFromTextArea();\n\n\t\t\tthis.lastCompositionEndTime = (new Date()).getTime();\n\t\t\tif (!this.textareaIsShownAtCursor) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.textareaIsShownAtCursor = false;\n\n\t\t\tthis._onCompositionEnd.fire();\n\t\t}));\n\n\t\tthis._register(this.textArea.onInput(() => {\n\t\t\t// console.log('onInput: ' + this.textArea.getValue());\n\t\t\tif (this.textareaIsShownAtCursor) {\n\t\t\t\t// console.log('::ignoring input event because the textarea is shown at cursor: ' + this.textArea.getValue());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treadFromTextArea();\n\t\t}));\n\n\t\t// --- Clipboard operations\n\n\t\tthis._register(this.textArea.onCut((e) => {\n\t\t\t// Ensure we have the latest selection => ask all pending events to be sent\n\t\t\tthis.flushAnyAccumulatedEvents();\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis.asyncTriggerCut.schedule();\n\t\t}));\n\n\t\tthis._register(this.textArea.onCopy((e) => {\n\t\t\t// Ensure we have the latest selection => ask all pending events to be sent\n\t\t\tthis.flushAnyAccumulatedEvents();\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\n\t\tthis._register(this.textArea.onPaste((e) => {\n\t\t\tif (e.canUseTextData()) {\n\t\t\t\tthis.executePaste(e.getTextData());\n\t\t\t} else {\n\t\t\t\tif (this.textArea.getSelectionStart() !== this.textArea.getSelectionEnd()) {\n\t\t\t\t\t// Clean up the textarea, to get a clean paste\n\t\t\t\t\tthis.setTextAreaState('paste', this.textAreaState.toEmpty());\n\t\t\t\t}\n\t\t\t\tthis._nextCommand = ReadFromTextArea.Paste;\n\t\t\t}\n\t\t}));\n\n\t\tthis._writePlaceholderAndSelectTextArea('ctor');\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.asyncTriggerCut.dispose();\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic setStrategy(strategy:TextAreaStrategy): void {\n\t\tthis.textAreaState = this.textAreaState.toStrategy(strategy);\n\t}\n\n\tpublic setHasFocus(isFocused:boolean): void {\n\t\tif (this.hasFocus === isFocused) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis.hasFocus = isFocused;\n\t\tif (this.hasFocus) {\n\t\t\tthis._writePlaceholderAndSelectTextArea('focusgain');\n\t\t}\n\t}\n\n\tpublic setCursorSelections(primary: IEditorRange, secondary: IEditorRange[]): void {\n\t\tthis.selection = primary;\n\t\tthis.selections = [primary].concat(secondary);\n\t\tthis._writePlaceholderAndSelectTextArea('selection changed');\n\t}\n\n\tpublic setCursorPosition(primary: IEditorPosition): void {\n\t\tthis.cursorPosition = primary;\n\t}\n\n\t// --- end event handlers\n\n\tprivate setTextAreaState(reason:string, textAreaState:TextAreaState): void {\n\t\tif (!this.hasFocus) {\n\t\t\ttextAreaState = textAreaState.resetSelection();\n\t\t}\n\n\t\ttextAreaState.applyToTextArea(reason, this.textArea, this.hasFocus);\n\t\tthis.textAreaState = textAreaState;\n\t}\n\n\tprivate _onKeyDownHandler(e:IKeyboardEventWrapper): void {\n\t\tif (e.equals(CommonKeybindings.ESCAPE)) {\n\t\t\t// Prevent default always for `Esc`, otherwise it will generate a keypress\n\t\t\t// See http://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis._onKeyDown.fire(e);\n\t}\n\n\tprivate _onKeyPressHandler(e:IKeyboardEventWrapper): void {\n\t\tif (!this.hasFocus) {\n\t\t\t// Sometimes, when doing Alt-Tab, in FF, a 'keypress' is sent before a 'focus'\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// ------------- Operations that are always executed asynchronously\n\n\tprivate executePaste(txt:string): void {\n\t\tif(txt === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet pasteOnNewLine = false;\n\t\tif (this.Browser.enableEmptySelectionClipboard) {\n\t\t\tpasteOnNewLine = (txt === this.lastCopiedValue && this.lastCopiedValueIsFromEmptySelection);\n\t\t}\n\t\tthis._onPaste.fire({\n\t\t\ttext: txt,\n\t\t\tpasteOnNewLine: pasteOnNewLine\n\t\t});\n\t}\n\n\tpublic writePlaceholderAndSelectTextAreaSync(): void {\n\t\tthis._writePlaceholderAndSelectTextArea('focusTextArea');\n\t}\n\n\tprivate _writePlaceholderAndSelectTextArea(reason:string): void {\n\t\tif (!this.textareaIsShownAtCursor) {\n\t\t\t// Do not write to the textarea if it is visible.\n\t\t\tif (this.Browser.isIPad) {\n\t\t\t\t// Do not place anything in the textarea for the iPad\n\t\t\t\tthis.setTextAreaState(reason, this.textAreaState.toEmpty());\n\t\t\t} else {\n\t\t\t\tthis.setTextAreaState(reason, this.textAreaState.fromEditorSelection(this.model, this.selection));\n\t\t\t}\n\t\t}\n\t}\n\n\t// ------------- Clipboard operations\n\n\tprivate _ensureClipboardGetsEditorSelection(e:IClipboardEvent): void {\n\t\tlet whatToCopy = this._getPlainTextToCopy();\n\t\tif (e.canUseTextData()) {\n\t\t\te.setTextData(whatToCopy);\n\t\t} else {\n\t\t\tthis.setTextAreaState('copy or cut', this.textAreaState.fromText(whatToCopy));\n\t\t}\n\n\t\tif (this.Browser.enableEmptySelectionClipboard) {\n\t\t\tif (this.Browser.isFirefox) {\n\t\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t\tthis.lastCopiedValue = whatToCopy.replace(/\\r\\n/g, '\\n');\n\t\t\t} else {\n\t\t\t\tthis.lastCopiedValue = whatToCopy;\n\t\t\t}\n\n\t\t\tlet selections = this.selections;\n\t\t\tthis.lastCopiedValueIsFromEmptySelection = (selections.length === 1 && selections[0].isEmpty());\n\t\t}\n\t}\n\n\tprivate _getPlainTextToCopy(): string {\n\t\tlet newLineCharacter = this.model.getEOL();\n\t\tlet selections = this.selections;\n\n\t\tif (selections.length === 1) {\n\t\t\tlet range:IEditorRange = selections[0];\n\t\t\tif (range.isEmpty()) {\n\t\t\t\tif (this.Browser.enableEmptySelectionClipboard) {\n\t\t\t\t\tlet modelLineNumber = this.model.convertViewPositionToModelPosition(range.startLineNumber, 1).lineNumber;\n\t\t\t\t\treturn this.model.getModelLineContent(modelLineNumber) + newLineCharacter;\n\t\t\t\t} else {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.model.getValueInRange(range, EndOfLinePreference.TextDefined);\n\t\t} else {\n\t\t\tselections = selections.slice(0).sort(Range.compareRangesUsingStarts);\n\t\t\tlet result: string[] = [];\n\t\t\tfor (let i = 0; i < selections.length; i++) {\n\t\t\t\tresult.push(this.model.getValueInRange(selections[i], EndOfLinePreference.TextDefined));\n\t\t\t}\n\n\t\t\treturn result.join(newLineCharacter);\n\t\t}\n\t}\n}\n"]}