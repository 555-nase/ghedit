{"version":3,"file":"oneCursor.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/controller/oneCursor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport {ReplaceCommand, ReplaceCommandWithOffsetCursorState, ReplaceCommandWithoutChangingPosition} from 'vs/editor/common/commands/replaceCommand';\nimport {ShiftCommand} from 'vs/editor/common/commands/shiftCommand';\nimport {SurroundSelectionCommand} from 'vs/editor/common/commands/surroundSelectionCommand';\nimport {CursorMoveHelper, ICursorMoveHelperModel, IMoveResult, IColumnSelectResult, IViewColumnSelectResult} from 'vs/editor/common/controller/cursorMoveHelper';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {IElectricAction, IndentAction} from 'vs/editor/common/modes';\nimport {getEnterActionAtPosition} from 'vs/editor/common/modes/supports/onEnter';\n\nexport interface IPostOperationRunnable {\n\t(ctx: IOneCursorOperationContext): void;\n}\n\nexport interface IOneCursorOperationContext {\n\tcursorPositionChangeReason: string;\n\tshouldReveal: boolean;\n\tshouldRevealVerticalInCenter: boolean;\n\tshouldRevealHorizontal: boolean;\n\tshouldPushStackElementBefore: boolean;\n\tshouldPushStackElementAfter: boolean;\n\texecuteCommand: editorCommon.ICommand;\n\tpostOperationRunnable: IPostOperationRunnable;\n\trequestScrollDeltaLines: number;\n}\n\nexport interface IModeConfiguration {\n\n\telectricChars:{\n\t\t[key:string]:boolean;\n\t};\n\n\tautoClosingPairsOpen:{\n\t\t[key:string]:string;\n\t};\n\n\tautoClosingPairsClose:{\n\t\t[key:string]:string;\n\t};\n\n\tsurroundingPairs:{\n\t\t[key:string]:string;\n\t};\n}\n\nexport interface IViewModelHelper {\n\n\tviewModel:ICursorMoveHelperModel;\n\n\tconvertModelPositionToViewPosition(lineNumber:number, column:number): editorCommon.IEditorPosition;\n\tconvertModelRangeToViewRange(modelRange:editorCommon.IEditorRange): editorCommon.IEditorRange;\n\n\tconvertViewToModelPosition(lineNumber:number, column:number): editorCommon.IEditorPosition;\n\tconvertViewSelectionToModelSelection(viewSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection;\n\n\tvalidateViewPosition(viewLineNumber:number, viewColumn:number, modelPosition:editorCommon.IEditorPosition): editorCommon.IEditorPosition;\n\tvalidateViewRange(viewStartLineNumber:number, viewStartColumn:number, viewEndLineNumber:number, viewEndColumn:number, modelRange:editorCommon.IEditorRange): editorCommon.IEditorRange;\n}\n\nexport interface IOneCursorState {\n\tselectionStart: editorCommon.IEditorRange;\n\tviewSelectionStart: editorCommon.IEditorRange;\n\tposition: editorCommon.IEditorPosition;\n\tviewPosition: editorCommon.IEditorPosition;\n\tleftoverVisibleColumns: number;\n\tselectionStartLeftoverVisibleColumns: number;\n}\n\nexport interface IFindWordResult extends editorCommon.IWordRange {\n\twordType: WordType;\n}\n\nexport enum WordType {\n\tNone = 0,\n\tRegular = 1,\n\tSeparator = 2\n};\n\nenum CharacterClass {\n\tRegular = 0,\n\tWhitespace = 1,\n\tWordSeparator = 2\n};\n\nexport enum WordNavigationType {\n\tWordStart = 0,\n\tWordEnd = 1\n}\n\nconst CH_REGULAR = CharacterClass.Regular;\nconst CH_WHITESPACE = CharacterClass.Whitespace;\nconst CH_WORD_SEPARATOR = CharacterClass.WordSeparator;\n\nconst W_NONE = WordType.None;\nconst W_REGULAR = WordType.Regular;\nconst W_SEPARATOR = WordType.Separator;\n\nexport class OneCursor {\n\n\t// --- contextual state\n\tprivate editorId: number;\n\tpublic model: editorCommon.IModel;\n\tpublic configuration: editorCommon.IConfiguration;\n\tpublic modeConfiguration: IModeConfiguration;\n\tprivate helper: CursorHelper;\n\tprivate viewModelHelper:IViewModelHelper;\n\n\t// --- selection can start as a range (think double click and drag)\n\tprivate selectionStart: editorCommon.IEditorRange;\n\tprivate viewSelectionStart: editorCommon.IEditorRange;\n\tprivate selectionStartLeftoverVisibleColumns: number;\n\n\t// --- position\n\tprivate position: editorCommon.IEditorPosition;\n\tprivate viewPosition: editorCommon.IEditorPosition;\n\tprivate leftoverVisibleColumns: number;\n\n\t// --- bracket match decorations\n\tprivate bracketDecorations: string[];\n\n\t// --- computed properties\n\tprivate _cachedSelection: editorCommon.IEditorSelection;\n\tprivate _cachedViewSelection: editorCommon.IEditorSelection;\n\tprivate _selStartMarker: string;\n\tprivate _selEndMarker: string;\n\tprivate _selDirection: editorCommon.SelectionDirection;\n\n\tconstructor(editorId: number, model: editorCommon.IModel, configuration: editorCommon.IConfiguration, modeConfiguration: IModeConfiguration, viewModelHelper:IViewModelHelper) {\n\t\tthis.editorId = editorId;\n\t\tthis.model = model;\n\t\tthis.configuration = configuration;\n\t\tthis.modeConfiguration = modeConfiguration;\n\t\tthis.viewModelHelper = viewModelHelper;\n\t\tthis.helper = new CursorHelper(this.model, this.configuration);\n\n\t\tthis.bracketDecorations = [];\n\n\t\tthis._set(\n\t\t\tnew Range(1, 1, 1, 1), 0,\n\t\t\tnew Position(1, 1), 0,\n\t\t\tnew Range(1, 1, 1, 1), new Position(1, 1)\n\t\t);\n\t}\n\n\tprivate _set(\n\t\tselectionStart: editorCommon.IEditorRange, selectionStartLeftoverVisibleColumns: number,\n\t\tposition: editorCommon.IEditorPosition, leftoverVisibleColumns:number,\n\t\tviewSelectionStart: editorCommon.IEditorRange, viewPosition: editorCommon.IEditorPosition\n\t): void {\n\t\tthis.selectionStart = selectionStart;\n\t\tthis.selectionStartLeftoverVisibleColumns = selectionStartLeftoverVisibleColumns;\n\n\t\tthis.position = position;\n\t\tthis.leftoverVisibleColumns = leftoverVisibleColumns;\n\n\t\tthis.viewSelectionStart = viewSelectionStart;\n\t\tthis.viewPosition = viewPosition;\n\n\t\tthis._cachedSelection = OneCursor.computeSelection(this.selectionStart, this.position);\n\t\tthis._cachedViewSelection = OneCursor.computeSelection(this.viewSelectionStart, this.viewPosition);\n\n\t\tthis._selStartMarker = this._ensureMarker(this._selStartMarker, this._cachedSelection.startLineNumber, this._cachedSelection.startColumn, true);\n\t\tthis._selEndMarker = this._ensureMarker(this._selEndMarker, this._cachedSelection.endLineNumber, this._cachedSelection.endColumn, false);\n\t\tthis._selDirection = this._cachedSelection.getDirection();\n\t}\n\n\tprivate _ensureMarker(markerId:string, lineNumber:number, column:number, stickToPreviousCharacter:boolean): string {\n\t\tif (!markerId) {\n\t\t\treturn this.model._addMarker(lineNumber, column, stickToPreviousCharacter);\n\t\t} else {\n\t\t\tthis.model._changeMarker(markerId, lineNumber, column);\n\t\t\tthis.model._changeMarkerStickiness(markerId, stickToPreviousCharacter);\n\t\t\treturn markerId;\n\t\t}\n\t}\n\n\tpublic saveState(): IOneCursorState {\n\t\treturn {\n\t\t\tselectionStart: this.selectionStart,\n\t\t\tviewSelectionStart: this.viewSelectionStart,\n\t\t\tposition: this.position,\n\t\t\tviewPosition: this.viewPosition,\n\t\t\tleftoverVisibleColumns: this.leftoverVisibleColumns,\n\t\t\tselectionStartLeftoverVisibleColumns: this.selectionStartLeftoverVisibleColumns\n\t\t};\n\t}\n\n\tpublic restoreState(state:IOneCursorState): void {\n\t\tlet position = this.model.validatePosition(state.position);\n\t\tlet selectionStart: editorCommon.IEditorRange;\n\t\tif (state.selectionStart) {\n\t\t\tselectionStart = this.model.validateRange(state.selectionStart);\n\t\t} else {\n\t\t\tselectionStart = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t}\n\n\t\tlet viewPosition = this.viewModelHelper.validateViewPosition(state.viewPosition.lineNumber, state.viewPosition.column, position);\n\t\tlet viewSelectionStart: editorCommon.IEditorRange;\n\t\tif (state.viewSelectionStart) {\n\t\t\tviewSelectionStart = this.viewModelHelper.validateViewRange(state.viewSelectionStart.startLineNumber, state.viewSelectionStart.startColumn, state.viewSelectionStart.endLineNumber, state.viewSelectionStart.endColumn, selectionStart);\n\t\t} else {\n\t\t\tviewSelectionStart = this.viewModelHelper.convertModelRangeToViewRange(selectionStart);\n\t\t}\n\n\t\tthis._set(\n\t\t\tselectionStart, state.selectionStartLeftoverVisibleColumns,\n\t\t\tposition, state.leftoverVisibleColumns,\n\t\t\tviewSelectionStart, viewPosition\n\t\t);\n\t}\n\n\tpublic updateModeConfiguration(modeConfiguration: IModeConfiguration): void {\n\t\tthis.modeConfiguration = modeConfiguration;\n\t}\n\n\tpublic duplicate(): OneCursor {\n\t\tlet result = new OneCursor(this.editorId, this.model, this.configuration, this.modeConfiguration, this.viewModelHelper);\n\t\tresult._set(\n\t\t\tthis.selectionStart, this.selectionStartLeftoverVisibleColumns,\n\t\t\tthis.position, this.leftoverVisibleColumns,\n\t\t\tthis.viewSelectionStart, this.viewPosition\n\t\t);\n\t\treturn result;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.model._removeMarker(this._selStartMarker);\n\t\tthis.model._removeMarker(this._selEndMarker);\n\t\tthis.bracketDecorations = this.model.deltaDecorations(this.bracketDecorations, [], this.editorId);\n\t}\n\n\tpublic adjustBracketDecorations(): void {\n\t\tlet bracketMatch: editorCommon.IMatchBracketResult = null;\n\t\tlet selection = this.getSelection();\n\t\tif (selection.isEmpty()) {\n\t\t\tbracketMatch = this.model.matchBracket(this.position, /*inaccurateResultAcceptable*/true);\n\t\t}\n\n\t\tlet newDecorations: editorCommon.IModelDeltaDecoration[] = [];\n\t\tif (bracketMatch && bracketMatch.brackets) {\n\t\t\tlet options: editorCommon.IModelDecorationOptions = {\n\t\t\t\tstickiness: editorCommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\t\tclassName: 'bracket-match'\n\t\t\t};\n\t\t\tnewDecorations.push({ range: bracketMatch.brackets[0], options: options });\n\t\t\tnewDecorations.push({ range: bracketMatch.brackets[1], options: options });\n\t\t}\n\n\t\tthis.bracketDecorations = this.model.deltaDecorations(this.bracketDecorations, newDecorations, this.editorId);\n\t}\n\n\tprivate static computeSelection(selectionStart:editorCommon.IEditorRange, position:editorCommon.IEditorPosition): Selection {\n\t\tlet startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number;\n\t\tif (selectionStart.isEmpty()) {\n\t\t\tstartLineNumber = selectionStart.startLineNumber;\n\t\t\tstartColumn = selectionStart.startColumn;\n\t\t\tendLineNumber = position.lineNumber;\n\t\t\tendColumn = position.column;\n\t\t} else {\n\t\t\tif (position.isBeforeOrEqual(selectionStart.getStartPosition())) {\n\t\t\t\tstartLineNumber = selectionStart.endLineNumber;\n\t\t\t\tstartColumn = selectionStart.endColumn;\n\t\t\t\tendLineNumber = position.lineNumber;\n\t\t\t\tendColumn = position.column;\n\t\t\t} else {\n\t\t\t\tstartLineNumber = selectionStart.startLineNumber;\n\t\t\t\tstartColumn = selectionStart.startColumn;\n\t\t\t\tendLineNumber = position.lineNumber;\n\t\t\t\tendColumn = position.column;\n\t\t\t}\n\t\t}\n\t\treturn new Selection(\n\t\t\tstartLineNumber,\n\t\t\tstartColumn,\n\t\t\tendLineNumber,\n\t\t\tendColumn\n\t\t);\n\t}\n\n\tpublic setSelection(desiredSelection: editorCommon.ISelection): void {\n\t\tlet position = this.model.validatePosition({\n\t\t\tlineNumber: desiredSelection.positionLineNumber,\n\t\t\tcolumn: desiredSelection.positionColumn\n\t\t});\n\t\tlet selectionStartPosition = this.model.validatePosition({\n\t\t\tlineNumber: desiredSelection.selectionStartLineNumber,\n\t\t\tcolumn: desiredSelection.selectionStartColumn\n\t\t});\n\t\tlet selectionStart = new Range(selectionStartPosition.lineNumber, selectionStartPosition.column, selectionStartPosition.lineNumber, selectionStartPosition.column);\n\n\t\tlet viewPosition = this.viewModelHelper.convertModelPositionToViewPosition(position.lineNumber, position.column);\n\t\tlet viewSelectionStart = this.viewModelHelper.convertModelRangeToViewRange(selectionStart);\n\n\t\tthis._set(\n\t\t\tselectionStart, 0,\n\t\t\tposition, 0,\n\t\t\tviewSelectionStart, viewPosition\n\t\t);\n\t}\n\n\tpublic setViewSelection(desiredViewSel: editorCommon.ISelection): void {\n\t\tlet viewSelectionStart = this.viewModelHelper.validateViewRange(desiredViewSel.selectionStartLineNumber, desiredViewSel.selectionStartColumn, desiredViewSel.selectionStartLineNumber, desiredViewSel.selectionStartColumn, this.selectionStart);\n\t\tlet viewPosition = this.viewModelHelper.validateViewPosition(desiredViewSel.positionLineNumber, desiredViewSel.positionColumn, this.position);\n\n\t\tthis._set(\n\t\t\tthis.selectionStart, 0,\n\t\t\tthis.position, 0,\n\t\t\tviewSelectionStart, viewPosition\n\t\t);\n\t}\n\n\t// -------------------- START modifications\n\n\tpublic setSelectionStart(rng:editorCommon.IEditorRange, viewRng:editorCommon.IEditorRange): void {\n\t\tthis._set(\n\t\t\trng, this.selectionStartLeftoverVisibleColumns,\n\t\t\tthis.position, this.leftoverVisibleColumns,\n\t\t\tviewRng, this.viewPosition\n\t\t);\n\t}\n\n\tpublic collapseSelection(): void {\n\t\tlet selectionStart = new Range(this.position.lineNumber, this.position.column, this.position.lineNumber, this.position.column);\n\t\tlet viewSelectionStart = new Range(this.viewPosition.lineNumber, this.viewPosition.column, this.viewPosition.lineNumber, this.viewPosition.column);\n\t\tthis._set(\n\t\t\tselectionStart, 0,\n\t\t\tthis.position, this.leftoverVisibleColumns,\n\t\t\tviewSelectionStart, this.viewPosition\n\t\t);\n\t}\n\n\tpublic moveModelPosition(inSelectionMode:boolean, lineNumber:number, column:number, leftoverVisibleColumns: number, ensureInEditableRange: boolean): void {\n\t\tlet viewPosition = this.viewModelHelper.convertModelPositionToViewPosition(lineNumber, column);\n\t\tthis._move(inSelectionMode, lineNumber, column, viewPosition.lineNumber, viewPosition.column, leftoverVisibleColumns, ensureInEditableRange);\n\t}\n\n\tpublic moveViewPosition(inSelectionMode:boolean, viewLineNumber:number, viewColumn:number, leftoverVisibleColumns: number, ensureInEditableRange: boolean): void {\n\t\tlet modelPosition = this.viewModelHelper.convertViewToModelPosition(viewLineNumber, viewColumn);\n\t\tthis._move(inSelectionMode, modelPosition.lineNumber, modelPosition.column, viewLineNumber, viewColumn, leftoverVisibleColumns, ensureInEditableRange);\n\t}\n\n\tprivate _move(inSelectionMode:boolean, lineNumber:number, column:number, viewLineNumber:number, viewColumn:number, leftoverVisibleColumns: number, ensureInEditableRange: boolean): void {\n\n\t\tif (ensureInEditableRange) {\n\t\t\tlet editableRange = this.model.getEditableRange();\n\n\t\t\tif (lineNumber < editableRange.startLineNumber || (lineNumber === editableRange.startLineNumber && column < editableRange.startColumn)) {\n\t\t\t\tlineNumber = editableRange.startLineNumber;\n\t\t\t\tcolumn = editableRange.startColumn;\n\n\t\t\t\tlet viewPosition = this.viewModelHelper.convertModelPositionToViewPosition(lineNumber, column);\n\t\t\t\tviewLineNumber = viewPosition.lineNumber;\n\t\t\t\tviewColumn = viewPosition.column;\n\t\t\t} else if (lineNumber > editableRange.endLineNumber || (lineNumber === editableRange.endLineNumber && column > editableRange.endColumn)) {\n\t\t\t\tlineNumber = editableRange.endLineNumber;\n\t\t\t\tcolumn = editableRange.endColumn;\n\n\t\t\t\tlet viewPosition = this.viewModelHelper.convertModelPositionToViewPosition(lineNumber, column);\n\t\t\t\tviewLineNumber = viewPosition.lineNumber;\n\t\t\t\tviewColumn = viewPosition.column;\n\t\t\t}\n\t\t}\n\n\t\tthis._actualMove(inSelectionMode, new Position(lineNumber, column), new Position(viewLineNumber, viewColumn), leftoverVisibleColumns);\n\t}\n\n\tprivate _actualMove(inSelectionMode:boolean, position:Position, viewPosition:Position, leftoverVisibleColumns: number): void {\n\t\tif (inSelectionMode) {\n\t\t\t// move just position\n\t\t\tthis._set(\n\t\t\t\tthis.selectionStart, this.selectionStartLeftoverVisibleColumns,\n\t\t\t\tposition, leftoverVisibleColumns,\n\t\t\t\tthis.viewSelectionStart, viewPosition\n\t\t\t);\n\t\t} else {\n\t\t\t// move everything\n\t\t\tlet selectionStart = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t\tlet viewSelectionStart = new Range(viewPosition.lineNumber, viewPosition.column, viewPosition.lineNumber, viewPosition.column);\n\t\t\tthis._set(\n\t\t\t\tselectionStart, leftoverVisibleColumns,\n\t\t\t\tposition, leftoverVisibleColumns,\n\t\t\t\tviewSelectionStart, viewPosition\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _recoverSelectionFromMarkers(): Selection {\n\t\tlet start = this.model._getMarker(this._selStartMarker);\n\t\tlet end = this.model._getMarker(this._selEndMarker);\n\n\t\tif (this._selDirection === editorCommon.SelectionDirection.LTR) {\n\t\t\treturn new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n\t\t}\n\n\t\treturn new Selection(end.lineNumber, end.column, start.lineNumber, start.column);\n\t}\n\n\tpublic recoverSelectionFromMarkers(ctx: IOneCursorOperationContext): boolean {\n\t\tctx.cursorPositionChangeReason = 'recoverFromMarkers';\n\t\tctx.shouldPushStackElementBefore = true;\n\t\tctx.shouldPushStackElementAfter = true;\n\t\tctx.shouldReveal = false;\n\t\tctx.shouldRevealHorizontal = false;\n\n\t\tlet recoveredSelection = this._recoverSelectionFromMarkers();\n\n\t\tlet selectionStart = new Range(recoveredSelection.selectionStartLineNumber, recoveredSelection.selectionStartColumn, recoveredSelection.selectionStartLineNumber, recoveredSelection.selectionStartColumn);\n\t\tlet position = new Position(recoveredSelection.positionLineNumber, recoveredSelection.positionColumn);\n\n\t\tlet viewSelectionStart = this.viewModelHelper.convertModelRangeToViewRange(selectionStart);\n\t\tlet viewPosition = this.viewModelHelper.convertViewToModelPosition(position.lineNumber, position.column);\n\n\t\tthis._set(\n\t\t\tselectionStart, 0,\n\t\t\tposition, 0,\n\t\t\tviewSelectionStart, viewPosition\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t// -------------------- END modifications\n\n\t// -------------------- START reading API\n\n\tpublic getSelectionStart(): editorCommon.IEditorRange {\n\t\treturn this.selectionStart;\n\t}\n\tpublic getPosition(): editorCommon.IEditorPosition {\n\t\treturn this.position;\n\t}\n\tpublic getSelection(): editorCommon.IEditorSelection {\n\t\treturn this._cachedSelection;\n\t}\n\n\tpublic getViewPosition(): editorCommon.IEditorPosition {\n\t\treturn this.viewPosition;\n\t}\n\tpublic getViewSelection(): editorCommon.IEditorSelection {\n\t\treturn this._cachedViewSelection;\n\t}\n\tpublic getValidViewPosition(): editorCommon.IEditorPosition {\n\t\treturn this.viewModelHelper.validateViewPosition(this.viewPosition.lineNumber, this.viewPosition.column, this.position);\n\t}\n\n\tpublic hasSelection(): boolean {\n\t\treturn (!this.getSelection().isEmpty() || !this.selectionStart.isEmpty());\n\t}\n\tpublic getBracketsDecorations(): string[] {\n\t\treturn this.bracketDecorations;\n\t}\n\tpublic getLeftoverVisibleColumns(): number {\n\t\treturn this.leftoverVisibleColumns;\n\t}\n\tpublic getSelectionStartLeftoverVisibleColumns(): number {\n\t\treturn this.selectionStartLeftoverVisibleColumns;\n\t}\n\tpublic setSelectionStartLeftoverVisibleColumns(value:number): void {\n\t\tthis.selectionStartLeftoverVisibleColumns = value;\n\t}\n\n\t// -- utils\n\tpublic validatePosition(position:editorCommon.IPosition): editorCommon.IEditorPosition {\n\t\treturn this.model.validatePosition(position);\n\t}\n\tpublic validateViewPosition(viewLineNumber:number, viewColumn:number, modelPosition:editorCommon.IEditorPosition): editorCommon.IEditorPosition {\n\t\treturn this.viewModelHelper.validateViewPosition(viewLineNumber, viewColumn, modelPosition);\n\t}\n\tpublic convertViewToModelPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.viewModelHelper.convertViewToModelPosition(lineNumber, column);\n\t}\n\tpublic convertViewSelectionToModelSelection(viewSelection:editorCommon.IEditorSelection): editorCommon.IEditorSelection {\n\t\treturn this.viewModelHelper.convertViewSelectionToModelSelection(viewSelection);\n\t}\n\tpublic convertModelPositionToViewPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.viewModelHelper.convertModelPositionToViewPosition(lineNumber, column);\n\t}\n\n\t// -- model\n\tpublic getLineContent(lineNumber:number): string {\n\t\treturn this.model.getLineContent(lineNumber);\n\t}\n\t// public findWord(position:editorCommon.IEditorPosition, preference:string, skipSyntaxTokens?:boolean): editorCommon.IWordRange {\n\t// \treturn this.helper.findWord(position, preference, skipSyntaxTokens);\n\t// }\n\tpublic findPreviousWordOnLine(position:editorCommon.IEditorPosition): IFindWordResult {\n\t\treturn this.helper.findPreviousWordOnLine(position);\n\t}\n\tpublic findNextWordOnLine(position:editorCommon.IEditorPosition): IFindWordResult {\n\t\treturn this.helper.findNextWordOnLine(position);\n\t}\n\tpublic getLeftOfPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.helper.getLeftOfPosition(this.model, lineNumber, column);\n\t}\n\tpublic getRightOfPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.helper.getRightOfPosition(this.model, lineNumber, column);\n\t}\n\tpublic getPositionUp(lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnFirstLine:boolean): IMoveResult {\n\t\treturn this.helper.getPositionUp(this.model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnFirstLine);\n\t}\n\tpublic getPositionDown(lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnLastLine:boolean): IMoveResult {\n\t\treturn this.helper.getPositionDown(this.model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnLastLine);\n\t}\n\tpublic getColumnAtBeginningOfLine(lineNumber:number, column:number): number {\n\t\treturn this.helper.getColumnAtBeginningOfLine(this.model, lineNumber, column);\n\t}\n\tpublic getColumnAtEndOfLine(lineNumber:number, column:number): number {\n\t\treturn this.helper.getColumnAtEndOfLine(this.model, lineNumber, column);\n\t}\n\tpublic getVisibleColumnFromColumn(lineNumber:number, column:number): number {\n\t\treturn this.helper.visibleColumnFromColumn(this.model, lineNumber, column);\n\t}\n\tpublic getViewVisibleColumnFromColumn(viewLineNumber:number, viewColumn:number): number {\n\t\treturn this.helper.visibleColumnFromColumn(this.viewModelHelper.viewModel, viewLineNumber, viewColumn);\n\t}\n\n\t// -- view\n\tpublic getViewLineCount(): number {\n\t\treturn this.viewModelHelper.viewModel.getLineCount();\n\t}\n\tpublic getViewLineMaxColumn(lineNumber:number): number {\n\t\treturn this.viewModelHelper.viewModel.getLineMaxColumn(lineNumber);\n\t}\n\tpublic getLeftOfViewPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.helper.getLeftOfPosition(this.viewModelHelper.viewModel, lineNumber, column);\n\t}\n\tpublic getRightOfViewPosition(lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.helper.getRightOfPosition(this.viewModelHelper.viewModel, lineNumber, column);\n\t}\n\tpublic getViewPositionUp(lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnFirstLine:boolean): IMoveResult {\n\t\treturn this.helper.getPositionUp(this.viewModelHelper.viewModel, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnFirstLine);\n\t}\n\tpublic getViewPositionDown(lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnLastLine:boolean): IMoveResult {\n\t\treturn this.helper.getPositionDown(this.viewModelHelper.viewModel, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnLastLine);\n\t}\n\tpublic getColumnAtBeginningOfViewLine(lineNumber:number, column:number): number {\n\t\treturn this.helper.getColumnAtBeginningOfLine(this.viewModelHelper.viewModel, lineNumber, column);\n\t}\n\tpublic getColumnAtEndOfViewLine(lineNumber:number, column:number): number {\n\t\treturn this.helper.getColumnAtEndOfLine(this.viewModelHelper.viewModel, lineNumber, column);\n\t}\n\tpublic columnSelect(fromViewLineNumber:number, fromViewVisibleColumn:number, toViewLineNumber:number, toViewVisibleColumn:number): IColumnSelectResult {\n\t\tlet r = this.helper.columnSelect(this.viewModelHelper.viewModel, fromViewLineNumber, fromViewVisibleColumn, toViewLineNumber, toViewVisibleColumn);\n\t\treturn {\n\t\t\treversed: r.reversed,\n\t\t\tviewSelections: r.viewSelections,\n\t\t\tselections: r.viewSelections.map(sel => this.convertViewSelectionToModelSelection(sel)),\n\t\t\ttoLineNumber: toViewLineNumber,\n\t\t\ttoVisualColumn: toViewVisibleColumn\n\t\t};\n\t}\n\t// -------------------- END reading API\n}\n\nexport class OneCursorOp {\n\n\t// -------------------- START handlers that simply change cursor state\n\tpublic static jumpToBracket(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tlet bracketDecorations = cursor.getBracketsDecorations();\n\n\t\tif (bracketDecorations.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet firstBracket = cursor.model.getDecorationRange(bracketDecorations[0]);\n\t\tlet secondBracket = cursor.model.getDecorationRange(bracketDecorations[1]);\n\n\t\tlet position = cursor.getPosition();\n\n\t\tif (Utils.isPositionAtRangeEdges(position, firstBracket) || Utils.isPositionInsideRange(position, firstBracket)) {\n\t\t\tcursor.moveModelPosition(false, secondBracket.endLineNumber, secondBracket.endColumn, 0, false);\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Utils.isPositionAtRangeEdges(position, secondBracket) || Utils.isPositionInsideRange(position, secondBracket)) {\n\t\t\tcursor.moveModelPosition(false, firstBracket.endLineNumber, firstBracket.endColumn, 0, false);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic static moveTo(cursor:OneCursor, inSelectionMode: boolean, position: editorCommon.IPosition, viewPosition:editorCommon.IPosition, eventSource: string, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar validatedPosition = cursor.model.validatePosition(position);\n\t\tvar validatedViewPosition: editorCommon.IPosition;\n\t\tif (viewPosition) {\n\t\t\tvalidatedViewPosition = cursor.validateViewPosition(viewPosition.lineNumber, viewPosition.column, validatedPosition);\n\t\t} else {\n\t\t\tvalidatedViewPosition = cursor.convertModelPositionToViewPosition(validatedPosition.lineNumber, validatedPosition.column);\n\t\t}\n\n\t\tvar reason = (eventSource === 'mouse' ? 'explicit' : null);\n\t\tif (eventSource === 'api') {\n\t\t\tctx.shouldRevealVerticalInCenter = true;\n\t\t}\n\n\t\tif (reason) {\n\t\t\tctx.cursorPositionChangeReason = reason;\n\t\t}\n\t\tcursor.moveViewPosition(inSelectionMode, validatedViewPosition.lineNumber, validatedViewPosition.column, 0, false);\n\t\treturn true;\n\t}\n\n\tprivate static _columnSelectOp(cursor:OneCursor, toViewLineNumber:number, toViewVisualColumn: number): IColumnSelectResult {\n\t\tlet viewStartSelection = cursor.getViewSelection();\n\t\tlet fromVisibleColumn = cursor.getVisibleColumnFromColumn(viewStartSelection.selectionStartLineNumber, viewStartSelection.selectionStartColumn);\n\n\t\treturn cursor.columnSelect(viewStartSelection.selectionStartLineNumber, fromVisibleColumn, toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectMouse(cursor:OneCursor, position: editorCommon.IPosition, viewPosition: editorCommon.IPosition, toViewVisualColumn: number): IColumnSelectResult {\n\t\tlet validatedPosition = cursor.model.validatePosition(position);\n\t\tlet validatedViewPosition: editorCommon.IPosition;\n\t\tif (viewPosition) {\n\t\t\tvalidatedViewPosition = cursor.validateViewPosition(viewPosition.lineNumber, viewPosition.column, validatedPosition);\n\t\t} else {\n\t\t\tvalidatedViewPosition = cursor.convertModelPositionToViewPosition(validatedPosition.lineNumber, validatedPosition.column);\n\t\t}\n\n\t\treturn this._columnSelectOp(cursor, validatedViewPosition.lineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectLeft(cursor:OneCursor, toViewLineNumber: number, toViewVisualColumn: number): IColumnSelectResult {\n\t\tif (toViewVisualColumn > 1) {\n\t\t\ttoViewVisualColumn--;\n\t\t}\n\n\t\treturn this._columnSelectOp(cursor, toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectRight(cursor:OneCursor, toViewLineNumber: number, toViewVisualColumn: number): IColumnSelectResult {\n\n\t\tlet maxVisualViewColumn = 0;\n\t\tlet minViewLineNumber = Math.min(cursor.getViewPosition().lineNumber, toViewLineNumber);\n\t\tlet maxViewLineNumber = Math.max(cursor.getViewPosition().lineNumber, toViewLineNumber);\n\t\tfor (let lineNumber = minViewLineNumber; lineNumber <= maxViewLineNumber; lineNumber++) {\n\t\t\tlet lineMaxViewColumn = cursor.getViewLineMaxColumn(lineNumber);\n\t\t\tlet lineMaxVisualViewColumn = cursor.getViewVisibleColumnFromColumn(lineNumber, lineMaxViewColumn);\n\t\t\tmaxVisualViewColumn = Math.max(maxVisualViewColumn, lineMaxVisualViewColumn);\n\t\t}\n\n\t\tif (toViewVisualColumn < maxVisualViewColumn) {\n\t\t\ttoViewVisualColumn++;\n\t\t}\n\n\t\treturn this._columnSelectOp(cursor, toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectUp(isPaged:boolean, cursor:OneCursor, toViewLineNumber: number, toViewVisualColumn: number): IColumnSelectResult {\n\t\tvar linesCount = isPaged ? cursor.configuration.editor.pageSize : 1;\n\n\t\ttoViewLineNumber -= linesCount;\n\t\tif (toViewLineNumber < 1) {\n\t\t\ttoViewLineNumber = 1;\n\t\t}\n\n\t\treturn this._columnSelectOp(cursor, toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static columnSelectDown(isPaged:boolean, cursor:OneCursor, toViewLineNumber: number, toViewVisualColumn: number): IColumnSelectResult {\n\t\tvar linesCount = isPaged ? cursor.configuration.editor.pageSize : 1;\n\n\t\ttoViewLineNumber += linesCount;\n\t\tif (toViewLineNumber > cursor.getViewLineCount()) {\n\t\t\ttoViewLineNumber = cursor.getViewLineCount();\n\t\t}\n\n\t\treturn this._columnSelectOp(cursor, toViewLineNumber, toViewVisualColumn);\n\t}\n\n\tpublic static moveLeft(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar viewLineNumber:number,\n\t\t\tviewColumn:number;\n\n\t\tif (cursor.hasSelection() && !inSelectionMode) {\n\t\t\t// If we are in selection mode, move left without selection cancels selection and puts cursor at the beginning of the selection\n\t\t\tvar viewSelection = cursor.getViewSelection();\n\t\t\tvar viewSelectionStart = cursor.validateViewPosition(viewSelection.startLineNumber, viewSelection.startColumn, cursor.getSelection().getStartPosition());\n\t\t\tviewLineNumber = viewSelectionStart.lineNumber;\n\t\t\tviewColumn = viewSelectionStart.column;\n\t\t} else {\n\t\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\t\tvar r = cursor.getLeftOfViewPosition(validatedViewPosition.lineNumber, validatedViewPosition.column);\n\t\t\tviewLineNumber = r.lineNumber;\n\t\t\tviewColumn = r.column;\n\t\t}\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, viewLineNumber, viewColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveWordLeft(cursor:OneCursor, inSelectionMode: boolean, wordNavigationType:WordNavigationType, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\t\tlet lineNumber = position.lineNumber;\n\t\tlet column = position.column;\n\n\t\tif (column === 1) {\n\t\t\tif (lineNumber > 1) {\n\t\t\t\tlineNumber = lineNumber - 1;\n\t\t\t\tcolumn = cursor.model.getLineMaxColumn(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tlet prevWordOnLine = cursor.findPreviousWordOnLine(new Position(lineNumber, column));\n\n\t\tif (wordNavigationType === WordNavigationType.WordStart) {\n\t\t\tif (prevWordOnLine) {\n\t\t\t\tcolumn = prevWordOnLine.start + 1;\n\t\t\t} else {\n\t\t\t\tcolumn = 1;\n\t\t\t}\n\t\t} else {\n\t\t\tif (prevWordOnLine && column <= prevWordOnLine.end + 1) {\n\t\t\t\tprevWordOnLine = cursor.findPreviousWordOnLine(new Position(lineNumber, prevWordOnLine.start + 1));\n\t\t\t}\n\t\t\tif (prevWordOnLine) {\n\t\t\t\tcolumn = prevWordOnLine.end + 1;\n\t\t\t} else {\n\t\t\t\tcolumn = 1;\n\t\t\t}\n\t\t}\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveModelPosition(inSelectionMode, lineNumber, column, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveRight(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar viewLineNumber:number,\n\t\t\tviewColumn:number;\n\n\t\tif (cursor.hasSelection() && !inSelectionMode) {\n\t\t\t// If we are in selection mode, move right without selection cancels selection and puts cursor at the end of the selection\n\t\t\tvar viewSelection = cursor.getViewSelection();\n\t\t\tvar viewSelectionEnd = cursor.validateViewPosition(viewSelection.endLineNumber, viewSelection.endColumn, cursor.getSelection().getEndPosition());\n\t\t\tviewLineNumber = viewSelectionEnd.lineNumber;\n\t\t\tviewColumn = viewSelectionEnd.column;\n\t\t} else {\n\t\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\t\tvar r = cursor.getRightOfViewPosition(validatedViewPosition.lineNumber, validatedViewPosition.column);\n\t\t\tviewLineNumber = r.lineNumber;\n\t\t\tviewColumn = r.column;\n\t\t}\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, viewLineNumber, viewColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveWordRight(cursor:OneCursor, inSelectionMode: boolean, wordNavigationType:WordNavigationType, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\t\tlet lineNumber = position.lineNumber;\n\t\tlet column = position.column;\n\n\t\tif (column === cursor.model.getLineMaxColumn(lineNumber)) {\n\t\t\tif (lineNumber < cursor.model.getLineCount()) {\n\t\t\t\tlineNumber = lineNumber + 1;\n\t\t\t\tcolumn = 1;\n\t\t\t}\n\t\t}\n\n\t\tlet nextWordOnLine = cursor.findNextWordOnLine(new Position(lineNumber, column));\n\n\t\tif (wordNavigationType === WordNavigationType.WordEnd) {\n\t\t\tif (nextWordOnLine) {\n\t\t\t\tcolumn = nextWordOnLine.end + 1;\n\t\t\t} else {\n\t\t\t\tcolumn = cursor.model.getLineMaxColumn(lineNumber);\n\t\t\t}\n\t\t} else {\n\t\t\tif (nextWordOnLine && column >= nextWordOnLine.start + 1) {\n\t\t\t\tnextWordOnLine = cursor.findNextWordOnLine(new Position(lineNumber, nextWordOnLine.end + 1));\n\t\t\t}\n\t\t\tif (nextWordOnLine) {\n\t\t\t\tcolumn = nextWordOnLine.start + 1;\n\t\t\t} else {\n\t\t\t\tcolumn = cursor.model.getLineMaxColumn(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveModelPosition(inSelectionMode, lineNumber, column, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveDown(cursor:OneCursor, inSelectionMode: boolean, isPaged: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar linesCount = isPaged ? cursor.configuration.editor.pageSize : 1;\n\n\t\tvar viewLineNumber:number,\n\t\t\tviewColumn:number;\n\n\t\tif (cursor.hasSelection() && !inSelectionMode) {\n\t\t\t// If we are in selection mode, move down acts relative to the end of selection\n\t\t\tvar viewSelection = cursor.getViewSelection();\n\t\t\tvar viewSelectionEnd = cursor.validateViewPosition(viewSelection.endLineNumber, viewSelection.endColumn, cursor.getSelection().getEndPosition());\n\t\t\tviewLineNumber = viewSelectionEnd.lineNumber;\n\t\t\tviewColumn = viewSelectionEnd.column;\n\t\t} else {\n\t\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\t\tviewLineNumber = validatedViewPosition.lineNumber;\n\t\t\tviewColumn = validatedViewPosition.column;\n\t\t}\n\n\t\tvar r = cursor.getViewPositionDown(viewLineNumber, viewColumn, cursor.getLeftoverVisibleColumns(), linesCount, true);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, r.lineNumber, r.column, r.leftoverVisibleColumns, true);\n\t\treturn true;\n\t}\n\n\tpublic static translateDown(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar selection = cursor.getViewSelection();\n\n\t\tvar selectionStart = cursor.getViewPositionDown(selection.selectionStartLineNumber, selection.selectionStartColumn, cursor.getSelectionStartLeftoverVisibleColumns(), 1, false);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(false, selectionStart.lineNumber, selectionStart.column, cursor.getLeftoverVisibleColumns(), true);\n\n\t\tvar position = cursor.getViewPositionDown(selection.positionLineNumber, selection.positionColumn, cursor.getLeftoverVisibleColumns(), 1, false);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(true, position.lineNumber, position.column, position.leftoverVisibleColumns, true);\n\n\t\tcursor.setSelectionStartLeftoverVisibleColumns(selectionStart.leftoverVisibleColumns);\n\n\t\treturn true;\n\t}\n\n\tpublic static moveUp(cursor:OneCursor, inSelectionMode: boolean, isPaged: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar linesCount = isPaged ? cursor.configuration.editor.pageSize : 1;\n\n\t\tvar viewLineNumber:number,\n\t\t\tviewColumn:number;\n\n\t\tif (cursor.hasSelection() && !inSelectionMode) {\n\t\t\t// If we are in selection mode, move up acts relative to the beginning of selection\n\t\t\tvar viewSelection = cursor.getViewSelection();\n\t\t\tvar viewSelectionStart = cursor.validateViewPosition(viewSelection.startLineNumber, viewSelection.startColumn, cursor.getSelection().getStartPosition());\n\t\t\tviewLineNumber = viewSelectionStart.lineNumber;\n\t\t\tviewColumn = viewSelectionStart.column;\n\t\t} else {\n\t\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\t\tviewLineNumber = validatedViewPosition.lineNumber;\n\t\t\tviewColumn = validatedViewPosition.column;\n\t\t}\n\n\t\tvar r = cursor.getViewPositionUp(viewLineNumber, viewColumn, cursor.getLeftoverVisibleColumns(), linesCount, true);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, r.lineNumber, r.column, r.leftoverVisibleColumns, true);\n\n\t\treturn true;\n\t}\n\n\tpublic static translateUp(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar selection = cursor.getViewSelection();\n\n\t\tvar selectionStart = cursor.getViewPositionUp(selection.selectionStartLineNumber, selection.selectionStartColumn, cursor.getSelectionStartLeftoverVisibleColumns(), 1, false);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(false, selectionStart.lineNumber, selectionStart.column, cursor.getLeftoverVisibleColumns(), true);\n\n\t\tvar position = cursor.getViewPositionUp(selection.positionLineNumber, selection.positionColumn, cursor.getLeftoverVisibleColumns(), 1, false);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(true, position.lineNumber, position.column, position.leftoverVisibleColumns, true);\n\n\t\tcursor.setSelectionStartLeftoverVisibleColumns(selectionStart.leftoverVisibleColumns);\n\n\t\treturn true;\n\t}\n\n\tpublic static moveToBeginningOfLine(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\tvar viewLineNumber = validatedViewPosition.lineNumber;\n\t\tvar viewColumn = validatedViewPosition.column;\n\n\t\tviewColumn = cursor.getColumnAtBeginningOfViewLine(viewLineNumber, viewColumn);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, viewLineNumber, viewColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveToEndOfLine(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar validatedViewPosition = cursor.getValidViewPosition();\n\t\tvar viewLineNumber = validatedViewPosition.lineNumber;\n\t\tvar viewColumn = validatedViewPosition.column;\n\n\t\tviewColumn = cursor.getColumnAtEndOfViewLine(viewLineNumber, viewColumn);\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveViewPosition(inSelectionMode, viewLineNumber, viewColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static expandLineSelection(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tlet viewSel = cursor.getViewSelection();\n\n\t\tlet viewStartLineNumber = viewSel.startLineNumber;\n\t\tlet viewStartColumn = viewSel.startColumn;\n\t\tlet viewEndLineNumber = viewSel.endLineNumber;\n\t\tlet viewEndColumn = viewSel.endColumn;\n\n\t\tlet viewEndMaxColumn = cursor.getViewLineMaxColumn(viewEndLineNumber);\n\t\tif (viewStartColumn !== 1 || viewEndColumn !== viewEndMaxColumn) {\n\t\t\tviewStartColumn = 1;\n\t\t\tviewEndColumn = viewEndMaxColumn;\n\t\t} else {\n\t\t\t// Expand selection with one more line down\n\t\t\tlet moveResult = cursor.getViewPositionDown(viewEndLineNumber, viewEndColumn, 0, 1, true);\n\t\t\tviewEndLineNumber = moveResult.lineNumber;\n\t\t\tviewEndColumn = cursor.getViewLineMaxColumn(viewEndLineNumber);\n\t\t}\n\n\t\tcursor.moveViewPosition(false, viewStartLineNumber, viewStartColumn, 0, true);\n\t\tcursor.moveViewPosition(true, viewEndLineNumber, viewEndColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveToBeginningOfBuffer(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveModelPosition(inSelectionMode, 1, 1, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static moveToEndOfBuffer(cursor:OneCursor, inSelectionMode: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar lastLineNumber = cursor.model.getLineCount();\n\t\tvar lastColumn = cursor.model.getLineMaxColumn(lastLineNumber);\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveModelPosition(inSelectionMode, lastLineNumber, lastColumn, 0, true);\n\t\treturn true;\n\t}\n\n\tpublic static selectAll(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar selectEntireBuffer = true;\n\t\tvar newSelectionStartLineNumber: number,\n\t\t\tnewSelectionStartColumn: number,\n\t\t\tnewPositionLineNumber: number,\n\t\t\tnewPositionColumn: number;\n\n\t\tif (cursor.model.hasEditableRange()) {\n\t\t\t// Toggle between selecting editable range and selecting the entire buffer\n\n\t\t\tvar editableRange = cursor.model.getEditableRange();\n\t\t\tvar selection = cursor.getSelection();\n\n\t\t\tif (!selection.equalsRange(editableRange)) {\n\t\t\t\t// Selection is not editable range => select editable range\n\t\t\t\tselectEntireBuffer = false;\n\t\t\t\tnewSelectionStartLineNumber = editableRange.startLineNumber;\n\t\t\t\tnewSelectionStartColumn = editableRange.startColumn;\n\t\t\t\tnewPositionLineNumber = editableRange.endLineNumber;\n\t\t\t\tnewPositionColumn = editableRange.endColumn;\n\t\t\t}\n\t\t}\n\n\t\tif (selectEntireBuffer) {\n\t\t\tnewSelectionStartLineNumber = 1;\n\t\t\tnewSelectionStartColumn = 1;\n\t\t\tnewPositionLineNumber = cursor.model.getLineCount();\n\t\t\tnewPositionColumn = cursor.model.getLineMaxColumn(newPositionLineNumber);\n\t\t}\n\n\t\tcursor.moveModelPosition(false, newSelectionStartLineNumber, newSelectionStartColumn, 0, false);\n\t\tcursor.moveModelPosition(true, newPositionLineNumber, newPositionColumn, 0, false);\n\n\t\tctx.shouldReveal = false;\n\t\tctx.shouldRevealHorizontal = false;\n\t\treturn true;\n\t}\n\n\tpublic static line(cursor:OneCursor, inSelectionMode: boolean, _position:editorCommon.IPosition, _viewPosition:editorCommon.IPosition, ctx: IOneCursorOperationContext): boolean {\n\t\t// TODO@Alex -> select in editable range\n\n\t\tlet position = cursor.validatePosition(_position);\n\t\tlet viewPosition = (\n\t\t\t_viewPosition ?\n\t\t\tcursor.validateViewPosition(_viewPosition.lineNumber, _viewPosition.column, position)\n\t\t\t: cursor.convertModelPositionToViewPosition(position.lineNumber, position.column)\n\t\t);\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tctx.shouldRevealHorizontal = false;\n\n\t\tif (!inSelectionMode || !cursor.hasSelection()) {\n\t\t\t// Entering line selection for the first time\n\n\t\t\tlet selectToLineNumber = position.lineNumber + 1;\n\t\t\tlet selectToColumn = 1;\n\t\t\tif (selectToLineNumber > cursor.model.getLineCount()) {\n\t\t\t\tselectToLineNumber = cursor.model.getLineCount();\n\t\t\t\tselectToColumn = cursor.model.getLineMaxColumn(selectToLineNumber);\n\t\t\t}\n\n\t\t\tlet selectionStartRange = new Range(position.lineNumber, 1, selectToLineNumber, selectToColumn);\n\t\t\tlet r1 = cursor.convertModelPositionToViewPosition(position.lineNumber, 1);\n\t\t\tlet r2 = cursor.convertModelPositionToViewPosition(selectToLineNumber, selectToColumn);\n\t\t\tcursor.setSelectionStart(selectionStartRange, new Range(r1.lineNumber, r1.column, r2.lineNumber, r2.column));\n\t\t\tcursor.moveModelPosition(cursor.hasSelection(), selectionStartRange.endLineNumber, selectionStartRange.endColumn, 0, false);\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\t// Continuing line selection\n\t\t\tlet enteringLineNumber = cursor.getSelectionStart().getStartPosition().lineNumber;\n\n\t\t\tif (position.lineNumber < enteringLineNumber) {\n\n\t\t\t\tcursor.moveViewPosition(cursor.hasSelection(), viewPosition.lineNumber, 1, 0, false);\n\n\t\t\t} else if (position.lineNumber > enteringLineNumber) {\n\n\t\t\t\tlet selectToViewLineNumber = viewPosition.lineNumber + 1;\n\t\t\t\tlet selectToViewColumn = 1;\n\t\t\t\tif (selectToViewLineNumber > cursor.getViewLineCount()) {\n\t\t\t\t\tselectToViewLineNumber = cursor.getViewLineCount();\n\t\t\t\t\tselectToViewColumn = cursor.getViewLineMaxColumn(selectToViewLineNumber);\n\t\t\t\t}\n\t\t\t\tcursor.moveViewPosition(cursor.hasSelection(), selectToViewLineNumber, selectToViewColumn, 0, false);\n\n\t\t\t} else {\n\n\t\t\t\tlet endPositionOfSelectionStart = cursor.getSelectionStart().getEndPosition();\n\t\t\t\tcursor.moveModelPosition(cursor.hasSelection(), endPositionOfSelectionStart.lineNumber, endPositionOfSelectionStart.column, 0, false);\n\n\t\t\t}\n\n\n\t\t\treturn true;\n\t\t}\n\n\t}\n\n\tpublic static word(cursor:OneCursor, inSelectionMode: boolean, position: editorCommon.IPosition, ctx: IOneCursorOperationContext): boolean {\n\t\t// TODO@Alex -> select in editable range\n\n\t\tlet validatedPosition = cursor.validatePosition(position);\n\t\tlet prevWord = cursor.findPreviousWordOnLine(validatedPosition);\n\t\tlet isInPrevWord = (prevWord && prevWord.wordType === WordType.Regular && prevWord.start < validatedPosition.column - 1 && validatedPosition.column - 1 <= prevWord.end);\n\t\tlet nextWord = cursor.findNextWordOnLine(validatedPosition);\n\t\tlet isInNextWord = (nextWord && nextWord.wordType === WordType.Regular && nextWord.start < validatedPosition.column - 1 && validatedPosition.column - 1 <= nextWord.end);\n\n\t\tlet lineNumber: number;\n\t\tlet column: number;\n\t\tif (!inSelectionMode || !cursor.hasSelection()) {\n\n\t\t\tlet startColumn: number;\n\t\t\tlet endColumn: number;\n\n\t\t\tif (isInPrevWord) {\n\t\t\t\tstartColumn = prevWord.start + 1;\n\t\t\t\tendColumn = prevWord.end + 1;\n\t\t\t} else if (isInNextWord) {\n\t\t\t\tstartColumn = nextWord.start + 1;\n\t\t\t\tendColumn = nextWord.end + 1;\n\t\t\t} else {\n\t\t\t\tif (prevWord) {\n\t\t\t\t\tstartColumn = prevWord.end + 1;\n\t\t\t\t} else {\n\t\t\t\t\tstartColumn = 1;\n\t\t\t\t}\n\t\t\t\tif (nextWord) {\n\t\t\t\t\tendColumn = nextWord.start + 1;\n\t\t\t\t} else {\n\t\t\t\t\tendColumn = cursor.model.getLineMaxColumn(validatedPosition.lineNumber);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet selectionStartRange = new Range(validatedPosition.lineNumber, startColumn, validatedPosition.lineNumber, endColumn);\n\t\t\tlet r1 = cursor.convertModelPositionToViewPosition(validatedPosition.lineNumber, startColumn);\n\t\t\tlet r2 = cursor.convertModelPositionToViewPosition(validatedPosition.lineNumber, endColumn);\n\t\t\tcursor.setSelectionStart(selectionStartRange, new Range(r1.lineNumber, r1.column, r2.lineNumber, r2.column));\n\t\t\tlineNumber = selectionStartRange.endLineNumber;\n\t\t\tcolumn = selectionStartRange.endColumn;\n\t\t} else {\n\n\t\t\tlet startColumn: number;\n\t\t\tlet endColumn: number;\n\n\t\t\tif (isInPrevWord) {\n\t\t\t\tstartColumn = prevWord.start + 1;\n\t\t\t\tendColumn = prevWord.end + 1;\n\t\t\t} else if (isInNextWord) {\n\t\t\t\tstartColumn = nextWord.start + 1;\n\t\t\t\tendColumn = nextWord.end + 1;\n\t\t\t} else {\n\t\t\t\tstartColumn = validatedPosition.column;\n\t\t\t\tendColumn = validatedPosition.column;\n\t\t\t}\n\n\t\t\tlineNumber = validatedPosition.lineNumber;\n\t\t\tif (validatedPosition.isBeforeOrEqual(cursor.getSelectionStart().getStartPosition())) {\n\t\t\t\tcolumn = startColumn;\n\t\t\t\tlet possiblePosition = new Position(lineNumber, column);\n\t\t\t\tif (cursor.getSelectionStart().containsPosition(possiblePosition)) {\n\t\t\t\t\tcolumn = cursor.getSelectionStart().endColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcolumn = endColumn;\n\t\t\t\tlet possiblePosition = new Position(lineNumber, column);\n\t\t\t\tif (cursor.getSelectionStart().containsPosition(possiblePosition)) {\n\t\t\t\t\tcolumn = cursor.getSelectionStart().startColumn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.cursorPositionChangeReason = 'explicit';\n\t\tcursor.moveModelPosition(cursor.hasSelection(), lineNumber, column, 0, false);\n\t\treturn true;\n\t}\n\n\tpublic static cancelSelection(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tif (!cursor.hasSelection()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcursor.collapseSelection();\n\t\treturn true;\n\t}\n\n\t// -------------------- STOP handlers that simply change cursor state\n\n\n\n\t// -------------------- START type interceptors & co.\n\n\tprivate static _typeInterceptorEnter(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\t\tif (ch !== '\\n') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this._enter(cursor, false, ctx);\n\t}\n\n\tpublic static lineInsertBefore(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tvar lineNumber = cursor.getPosition().lineNumber;\n\n\t\tif (lineNumber === 1) {\n\t\t\tctx.executeCommand = new ReplaceCommandWithoutChangingPosition(new Range(1,1,1,1), '\\n');\n\t\t\treturn true;\n\t\t}\n\n\t\tlineNumber--;\n\t\tvar column = cursor.model.getLineMaxColumn(lineNumber);\n\n\t\treturn this._enter(cursor, false, ctx, new Position(lineNumber, column), new Range(lineNumber, column, lineNumber, column));\n\t}\n\n\tpublic static lineInsertAfter(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\t\tvar column = cursor.model.getLineMaxColumn(position.lineNumber);\n\t\treturn this._enter(cursor, false, ctx, new Position(position.lineNumber, column), new Range(position.lineNumber, column, position.lineNumber, column));\n\t}\n\n\tpublic static lineBreakInsert(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\treturn this._enter(cursor, true, ctx);\n\t}\n\n\tprivate static _enter(cursor:OneCursor, keepPosition: boolean, ctx: IOneCursorOperationContext, position?: editorCommon.IEditorPosition, range?: editorCommon.IEditorRange): boolean {\n\t\tif (typeof position === 'undefined') {\n\t\t\tposition = cursor.getPosition();\n\t\t}\n\t\tif (typeof range === 'undefined') {\n\t\t\trange = cursor.getSelection();\n\t\t}\n\t\tctx.shouldPushStackElementBefore = true;\n\n\t\tvar r = getEnterActionAtPosition(cursor.model, position.lineNumber, position.column);\n\t\tvar enterAction = r.enterAction;\n\t\tvar indentation = r.indentation;\n\n\t\tif (enterAction.indentAction === IndentAction.None) {\n\t\t\t// Nothing special\n\t\t\tthis.actualType(cursor, '\\n' + cursor.model.normalizeIndentation(indentation + enterAction.appendText), keepPosition, ctx, range);\n\n\t\t} else if (enterAction.indentAction === IndentAction.Indent) {\n\t\t\t// Indent once\n\t\t\tthis.actualType(cursor, '\\n' + cursor.model.normalizeIndentation(indentation + enterAction.appendText), keepPosition, ctx, range);\n\n\t\t} else if (enterAction.indentAction === IndentAction.IndentOutdent) {\n\t\t\t// Ultra special\n\t\t\tlet normalIndent = cursor.model.normalizeIndentation(indentation);\n\t\t\tlet increasedIndent = cursor.model.normalizeIndentation(indentation + enterAction.appendText);\n\n\t\t\tlet typeText = '\\n' + increasedIndent + '\\n' + normalIndent;\n\n\t\t\tif (keepPosition) {\n\t\t\t\tctx.executeCommand = new ReplaceCommandWithoutChangingPosition(range, typeText);\n\t\t\t} else {\n\t\t\t\tctx.executeCommand = new ReplaceCommandWithOffsetCursorState(range, typeText, -1, increasedIndent.length - normalIndent.length);\n\t\t\t}\n\t\t} else if (enterAction.indentAction === IndentAction.Outdent) {\n\t\t\tlet desiredIndentCount = ShiftCommand.unshiftIndentCount(indentation, indentation.length + 1, cursor.model.getOptions().tabSize);\n\t\t\tlet actualIndentation = '';\n\t\t\tfor (let i = 0; i < desiredIndentCount; i++) {\n\t\t\t\tactualIndentation += '\\t';\n\t\t\t}\n\t\t\tthis.actualType(cursor, '\\n' + cursor.model.normalizeIndentation(actualIndentation + enterAction.appendText), keepPosition, ctx, range);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate static _typeInterceptorAutoClosingCloseChar(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\t\tif (!cursor.configuration.editor.autoClosingBrackets) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (!selection.isEmpty() || !cursor.modeConfiguration.autoClosingPairsClose.hasOwnProperty(ch)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet position = cursor.getPosition();\n\n\t\tvar lineText = cursor.model.getLineContent(position.lineNumber);\n\t\tvar beforeCharacter = lineText[position.column - 1];\n\n\t\tif (beforeCharacter !== ch) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar typeSelection = new Range(position.lineNumber, position.column, position.lineNumber, position.column + 1);\n\t\tctx.executeCommand = new ReplaceCommand(typeSelection, ch);\n\t\treturn true;\n\t}\n\n\tprivate static _typeInterceptorAutoClosingOpenChar(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\t\tif (!cursor.configuration.editor.autoClosingBrackets) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (!selection.isEmpty() || !cursor.modeConfiguration.autoClosingPairsOpen.hasOwnProperty(ch)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet richEditSupport = cursor.model.getMode().richEditSupport;\n\n\t\tif(!richEditSupport || !richEditSupport.characterPair) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet position = cursor.getPosition();\n\t\tvar lineText = cursor.model.getLineContent(position.lineNumber);\n\t\tvar beforeCharacter = lineText[position.column - 1];\n\n\t\t// Only consider auto closing the pair if a space follows or if another autoclosed pair follows\n\t\tif (beforeCharacter) {\n\t\t\tvar isBeforeCloseBrace = false;\n\t\t\tfor (var closeBrace in cursor.modeConfiguration.autoClosingPairsClose) {\n\t\t\t\tif (beforeCharacter === closeBrace) {\n\t\t\t\t\tisBeforeCloseBrace = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !isBeforeCloseBrace && !/\\s/.test(beforeCharacter)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar lineContext = cursor.model.getLineContext(position.lineNumber);\n\n\t\tvar shouldAutoClosePair = false;\n\t\ttry {\n\t\t\tshouldAutoClosePair = richEditSupport.characterPair.shouldAutoClosePair(ch, lineContext, position.column - 1);\n\t\t} catch(e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\n\t\tif (!shouldAutoClosePair) {\n\t\t\treturn false;\n\t\t}\n\n\t\tctx.shouldPushStackElementBefore = true;\n\t\tvar closeCharacter = cursor.modeConfiguration.autoClosingPairsOpen[ch];\n\t\tctx.executeCommand = new ReplaceCommandWithOffsetCursorState(selection, ch + closeCharacter, 0, -closeCharacter.length);\n\t\treturn true;\n\t}\n\n\tprivate static _typeInterceptorSurroundSelection(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\t\tif (!cursor.configuration.editor.autoClosingBrackets) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty() || !cursor.modeConfiguration.surroundingPairs.hasOwnProperty(ch)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar selectionContainsOnlyWhitespace = true,\n\t\t\tlineNumber:number,\n\t\t\tstartIndex:number,\n\t\t\tendIndex:number,\n\t\t\tcharIndex:number,\n\t\t\tcharCode:number,\n\t\t\tlineText:string,\n\t\t\t_tab = '\\t'.charCodeAt(0),\n\t\t\t_space = ' '.charCodeAt(0);\n\n\t\tfor (lineNumber = selection.startLineNumber; lineNumber <= selection.endLineNumber; lineNumber++) {\n\t\t\tlineText = cursor.model.getLineContent(lineNumber);\n\t\t\tstartIndex = (lineNumber === selection.startLineNumber ? selection.startColumn - 1 : 0);\n\t\t\tendIndex = (lineNumber === selection.endLineNumber ? selection.endColumn - 1 : lineText.length);\n\t\t\tfor (charIndex = startIndex; charIndex < endIndex; charIndex++) {\n\t\t\t\tcharCode = lineText.charCodeAt(charIndex);\n\t\t\t\tif (charCode !== _tab && charCode !== _space) {\n\t\t\t\t\tselectionContainsOnlyWhitespace = false;\n\n\t\t\t\t\t// Break outer loop\n\t\t\t\t\tlineNumber = selection.endLineNumber + 1;\n\n\t\t\t\t\t// Break inner loop\n\t\t\t\t\tcharIndex = endIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (selectionContainsOnlyWhitespace) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar closeCharacter = cursor.modeConfiguration.surroundingPairs[ch];\n\n\t\tctx.shouldPushStackElementBefore = true;\n\t\tctx.shouldPushStackElementAfter = true;\n\t\tctx.executeCommand = new SurroundSelectionCommand(selection, ch, closeCharacter);\n\t\treturn true;\n\t}\n\n\tprivate static _typeInterceptorElectricChar(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\t\tif (!cursor.modeConfiguration.electricChars.hasOwnProperty(ch)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tctx.postOperationRunnable = (postOperationCtx: IOneCursorOperationContext) => this._typeInterceptorElectricCharRunnable(cursor, postOperationCtx);\n\n\t\treturn this.actualType(cursor, ch, false, ctx);\n\t}\n\n\tprivate static _typeInterceptorElectricCharRunnable(cursor:OneCursor, ctx: IOneCursorOperationContext): void {\n\n\t\tlet position = cursor.getPosition();\n\t\tvar lineText = cursor.model.getLineContent(position.lineNumber);\n\t\tvar lineContext = cursor.model.getLineContext(position.lineNumber);\n\n\t\tvar electricAction:IElectricAction;\n\t\tlet richEditSupport = cursor.model.getMode().richEditSupport;\n\t\tif(richEditSupport && richEditSupport.electricCharacter) {\n\t\t\ttry {\n\t\t\t\telectricAction = richEditSupport.electricCharacter.onElectricCharacter(lineContext, position.column - 2);\n\t\t\t} catch(e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\n\t\tif (electricAction) {\n\t\t\tlet matchOpenBracket = electricAction.matchOpenBracket;\n\t\t\tvar appendText = electricAction.appendText;\n\t\t\tif (matchOpenBracket) {\n\t\t\t\tvar match = cursor.model.findMatchingBracketUp(matchOpenBracket, {\n\t\t\t\t\tlineNumber: position.lineNumber,\n\t\t\t\t\tcolumn: position.column - matchOpenBracket.length\n\t\t\t\t});\n\t\t\t\tif (match) {\n\t\t\t\t\tvar matchLineNumber = match.startLineNumber;\n\t\t\t\t\tvar matchLine = cursor.model.getLineContent(matchLineNumber);\n\t\t\t\t\tvar matchLineIndentation = strings.getLeadingWhitespace(matchLine);\n\t\t\t\t\tvar newIndentation = cursor.model.normalizeIndentation(matchLineIndentation);\n\n\t\t\t\t\tvar lineFirstNonBlankColumn = cursor.model.getLineFirstNonWhitespaceColumn(position.lineNumber) || position.column;\n\t\t\t\t\tvar oldIndentation = lineText.substring(0, lineFirstNonBlankColumn - 1);\n\n\t\t\t\t\tif (oldIndentation !== newIndentation) {\n\t\t\t\t\t\tvar prefix = lineText.substring(lineFirstNonBlankColumn - 1, position.column - 1);\n\t\t\t\t\t\tvar typeText = newIndentation + prefix;\n\n\t\t\t\t\t\tvar typeSelection = new Range(position.lineNumber, 1, position.lineNumber, position.column);\n\t\t\t\t\t\tctx.shouldPushStackElementAfter = true;\n\t\t\t\t\t\tctx.executeCommand = new ReplaceCommand(typeSelection, typeText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (appendText) {\n\t\t\t\tvar columnDeltaOffset = -appendText.length;\n\t\t\t\tif (electricAction.advanceCount) {\n\t\t\t\t\tcolumnDeltaOffset += electricAction.advanceCount;\n\t\t\t\t}\n\t\t\t\tctx.shouldPushStackElementAfter = true;\n\t\t\t\tctx.executeCommand = new ReplaceCommandWithOffsetCursorState(cursor.getSelection(), appendText, 0, columnDeltaOffset);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static actualType(cursor:OneCursor, text: string, keepPosition: boolean, ctx: IOneCursorOperationContext, range?: editorCommon.IEditorRange): boolean {\n\t\tif (typeof range === 'undefined') {\n\t\t\trange = cursor.getSelection();\n\t\t}\n\t\tif (keepPosition) {\n\t\t\tctx.executeCommand = new ReplaceCommandWithoutChangingPosition(range, text);\n\t\t} else {\n\t\t\tctx.executeCommand = new ReplaceCommand(range, text);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static type(cursor:OneCursor, ch: string, ctx: IOneCursorOperationContext): boolean {\n\n\t\tif (this._typeInterceptorEnter(cursor, ch, ctx)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._typeInterceptorAutoClosingCloseChar(cursor, ch, ctx)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._typeInterceptorAutoClosingOpenChar(cursor, ch, ctx)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._typeInterceptorSurroundSelection(cursor, ch, ctx)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._typeInterceptorElectricChar(cursor, ch, ctx)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.actualType(cursor, ch, false, ctx);\n\t}\n\n\tpublic static replacePreviousChar(cursor:OneCursor, txt: string, replaceCharCnt:number, ctx: IOneCursorOperationContext): boolean {\n\t\tlet pos = cursor.getPosition();\n\t\tlet range: editorCommon.IEditorRange;\n\t\tlet startColumn = Math.max(1, pos.column - replaceCharCnt);\n\t\trange = new Range(pos.lineNumber, startColumn, pos.lineNumber, pos.column);\n\t\tctx.executeCommand = new ReplaceCommand(range, txt);\n\t\treturn true;\n\t}\n\n\tprivate static _goodIndentForLine(cursor:OneCursor, lineNumber:number): string {\n\t\tvar lastLineNumber = lineNumber - 1;\n\n\t\tfor (lastLineNumber = lineNumber - 1; lastLineNumber >= 1; lastLineNumber--) {\n\t\t\tvar lineText = cursor.model.getLineContent(lastLineNumber);\n\t\t\tvar nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineText);\n\t\t\tif (nonWhitespaceIdx >= 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (lastLineNumber < 1) {\n\t\t\t// No previous line with content found\n\t\t\treturn '\\t';\n\t\t}\n\n\t\tvar r = getEnterActionAtPosition(cursor.model, lastLineNumber, cursor.model.getLineMaxColumn(lastLineNumber));\n\n\t\tvar indentation: string;\n\t\tif (r.enterAction.indentAction === IndentAction.Outdent) {\n\t\t\tlet modelOpts = cursor.model.getOptions();\n\t\t\tlet desiredIndentCount = ShiftCommand.unshiftIndentCount(r.indentation, r.indentation.length, modelOpts.tabSize);\n\t\t\tindentation = '';\n\t\t\tfor (let i = 0; i < desiredIndentCount; i++) {\n\t\t\t\tindentation += '\\t';\n\t\t\t}\n\t\t\tindentation = cursor.model.normalizeIndentation(indentation);\n\t\t} else {\n\t\t\tindentation = r.indentation;\n\t\t}\n\n\t\tvar result = indentation + r.enterAction.appendText;\n\t\tif (result.length === 0) {\n\t\t\t// good position is at column 1, but we gotta do something...\n\t\t\treturn '\\t';\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic static tab(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tlet selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\n\t\t\tlet typeText = '';\n\n\t\t\tif (cursor.model.getLineMaxColumn(selection.startLineNumber) === 1) {\n\t\t\t\t// Line is empty => indent straight to the right place\n\t\t\t\ttypeText = cursor.model.normalizeIndentation(this._goodIndentForLine(cursor, selection.startLineNumber));\n\t\t\t} else {\n\t\t\t\tlet position = cursor.getPosition();\n\t\t\t\tlet modelOpts = cursor.model.getOptions();\n\t\t\t\tif (modelOpts.insertSpaces) {\n\t\t\t\t\tlet visibleColumnFromColumn = cursor.getVisibleColumnFromColumn(position.lineNumber, position.column);\n\t\t\t\t\tlet tabSize = modelOpts.tabSize;\n\t\t\t\t\tlet spacesCnt = tabSize - (visibleColumnFromColumn % tabSize);\n\t\t\t\t\tfor (let i = 0; i < spacesCnt; i++) {\n\t\t\t\t\t\ttypeText += ' ';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttypeText = '\\t';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.executeCommand = new ReplaceCommand(selection, typeText);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.indent(cursor, ctx);\n\t\t}\n\t}\n\n\tpublic static indent(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tvar selection = cursor.getSelection();\n\n\t\tctx.shouldPushStackElementBefore = true;\n\t\tctx.shouldPushStackElementAfter = true;\n\t\tctx.executeCommand = new ShiftCommand(selection, {\n\t\t\tisUnshift: false,\n\t\t\ttabSize: cursor.model.getOptions().tabSize,\n\t\t\toneIndent: cursor.model.getOneIndent()\n\t\t});\n\t\tctx.shouldRevealHorizontal = false;\n\n\t\treturn true;\n\t}\n\n\tpublic static outdent(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tvar selection = cursor.getSelection();\n\n\t\tctx.shouldPushStackElementBefore = true;\n\t\tctx.shouldPushStackElementAfter = true;\n\t\tctx.executeCommand = new ShiftCommand(selection, {\n\t\t\tisUnshift: true,\n\t\t\ttabSize: cursor.model.getOptions().tabSize,\n\t\t\toneIndent: cursor.model.getOneIndent()\n\t\t});\n\t\tctx.shouldRevealHorizontal = false;\n\n\t\treturn true;\n\t}\n\n\tpublic static paste(cursor:OneCursor, text: string, pasteOnNewLine: boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\n\t\tctx.cursorPositionChangeReason = 'paste';\n\t\tif (pasteOnNewLine && text.charAt(text.length - 1) === '\\n') {\n\t\t\tif (text.indexOf('\\n') === text.length - 1) {\n\t\t\t\t// Paste entire line at the beginning of line\n\n\t\t\t\tvar typeSelection = new Range(position.lineNumber, 1, position.lineNumber, 1);\n\t\t\t\tctx.executeCommand = new ReplaceCommand(typeSelection, text);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tctx.executeCommand = new ReplaceCommand(cursor.getSelection(), text);\n\t\treturn true;\n\t}\n\n\t// -------------------- END type interceptors & co.\n\n\t// -------------------- START delete handlers & co.\n\n\tprivate static _autoClosingPairDelete(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\t// Returns true if delete was handled.\n\n\t\tif (!cursor.configuration.editor.autoClosingBrackets) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!cursor.getSelection().isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet position = cursor.getPosition();\n\n\t\tvar lineText = cursor.model.getLineContent(position.lineNumber);\n\t\tvar character = lineText[position.column - 2];\n\n\t\tif (!cursor.modeConfiguration.autoClosingPairsOpen.hasOwnProperty(character)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar afterCharacter = lineText[position.column - 1];\n\t\tvar closeCharacter = cursor.modeConfiguration.autoClosingPairsOpen[character];\n\n\t\tif (afterCharacter !== closeCharacter) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar deleteSelection = new Range(\n\t\t\tposition.lineNumber,\n\t\t\tposition.column - 1,\n\t\t\tposition.lineNumber,\n\t\t\tposition.column + 1\n\t\t);\n\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\n\t\treturn true;\n\t}\n\n\tpublic static deleteLeft(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tif (this._autoClosingPairDelete(cursor, ctx)) {\n\t\t\t// This was a case for an auto-closing pair delete\n\t\t\treturn true;\n\t\t}\n\n\t\tvar deleteSelection: editorCommon.IEditorRange = cursor.getSelection();\n\n\t\tif (deleteSelection.isEmpty()) {\n\t\t\tvar position = cursor.getPosition();\n\t\t\tvar leftOfPosition = cursor.getLeftOfPosition(position.lineNumber, position.column);\n\t\t\tdeleteSelection = new Range(\n\t\t\t\tleftOfPosition.lineNumber,\n\t\t\t\tleftOfPosition.column,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column\n\t\t\t);\n\t\t}\n\n\t\tif (deleteSelection.isEmpty()) {\n\t\t\t// Probably at beginning of file => ignore\n\t\t\treturn true;\n\t\t}\n\n\t\tif (deleteSelection.startLineNumber !== deleteSelection.endLineNumber) {\n\t\t\tctx.shouldPushStackElementBefore = true;\n\t\t}\n\n\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\treturn true;\n\t}\n\n\tprivate static _findLastNonWhitespaceChar(str:string, startIndex:number): number {\n\t\tfor (let chIndex = startIndex; chIndex >= 0; chIndex--) {\n\t\t\tlet ch = str.charAt(chIndex);\n\t\t\tif (ch !== ' ' && ch !== '\\t') {\n\t\t\t\treturn chIndex;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tprivate static deleteWordLeftWhitespace(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\t\tlet lineContent = cursor.getLineContent(position.lineNumber);\n\t\tlet startIndex = position.column - 2;\n\t\tlet lastNonWhitespace = this._findLastNonWhitespaceChar(lineContent, startIndex);\n\t\tif (lastNonWhitespace + 1 < startIndex) {\n\t\t\t// bingo\n\t\t\tctx.executeCommand = new ReplaceCommand(new Range(position.lineNumber, lastNonWhitespace + 2, position.lineNumber, position.column), '');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static deleteWordLeft(cursor:OneCursor, whitespaceHeuristics:boolean, wordNavigationType:WordNavigationType, ctx: IOneCursorOperationContext): boolean {\n\t\tif (this._autoClosingPairDelete(cursor, ctx)) {\n\t\t\t// This was a case for an auto-closing pair delete\n\t\t\treturn true;\n\t\t}\n\n\t\tlet selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\t\t\tlet position = cursor.getPosition();\n\n\t\t\tlet lineNumber = position.lineNumber;\n\t\t\tlet column = position.column;\n\n\t\t\tif (lineNumber === 1 && column === 1) {\n\t\t\t\t// Ignore deleting at beginning of file\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (whitespaceHeuristics && this.deleteWordLeftWhitespace(cursor, ctx)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet prevWordOnLine = cursor.findPreviousWordOnLine(position);\n\n\t\t\tif (wordNavigationType === WordNavigationType.WordStart) {\n\t\t\t\tif (prevWordOnLine) {\n\t\t\t\t\tcolumn = prevWordOnLine.start + 1;\n\t\t\t\t} else {\n\t\t\t\t\tcolumn = 1;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (prevWordOnLine && column <= prevWordOnLine.end + 1) {\n\t\t\t\t\tprevWordOnLine = cursor.findPreviousWordOnLine(new Position(lineNumber, prevWordOnLine.start + 1));\n\t\t\t\t}\n\t\t\t\tif (prevWordOnLine) {\n\t\t\t\t\tcolumn = prevWordOnLine.end + 1;\n\t\t\t\t} else {\n\t\t\t\t\tcolumn = 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet deleteSelection = new Range(lineNumber, column, lineNumber, position.column);\n\t\t\tif (!deleteSelection.isEmpty()) {\n\t\t\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.deleteLeft(cursor, ctx);\n\t}\n\n\tpublic static deleteRight(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar deleteSelection: editorCommon.IEditorRange = cursor.getSelection();\n\n\t\tif (deleteSelection.isEmpty()) {\n\t\t\tlet position = cursor.getPosition();\n\t\t\tvar rightOfPosition = cursor.getRightOfPosition(position.lineNumber, position.column);\n\t\t\tdeleteSelection = new Range(\n\t\t\t\trightOfPosition.lineNumber,\n\t\t\t\trightOfPosition.column,\n\t\t\t\tposition.lineNumber,\n\t\t\t\tposition.column\n\t\t\t);\n\t\t}\n\n\t\tif (deleteSelection.isEmpty()) {\n\t\t\t// Probably at end of file => ignore\n\t\t\treturn true;\n\t\t}\n\n\t\tif (deleteSelection.startLineNumber !== deleteSelection.endLineNumber) {\n\t\t\tctx.shouldPushStackElementBefore = true;\n\t\t}\n\n\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\treturn true;\n\t}\n\n\tprivate static _findFirstNonWhitespaceChar(str:string, startIndex:number): number {\n\t\tlet len = str.length;\n\t\tfor (let chIndex = startIndex; chIndex < len; chIndex++) {\n\t\t\tlet ch = str.charAt(chIndex);\n\t\t\tif (ch !== ' ' && ch !== '\\t') {\n\t\t\t\treturn chIndex;\n\t\t\t}\n\t\t}\n\t\treturn len;\n\t}\n\n\tprivate static deleteWordRightWhitespace(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tlet position = cursor.getPosition();\n\t\tlet lineContent = cursor.getLineContent(position.lineNumber);\n\t\tlet startIndex = position.column - 1;\n\t\tlet firstNonWhitespace = this._findFirstNonWhitespaceChar(lineContent, startIndex);\n\t\tif (startIndex + 1 < firstNonWhitespace) {\n\t\t\t// bingo\n\t\t\tctx.executeCommand = new ReplaceCommand(new Range(position.lineNumber, position.column, position.lineNumber, firstNonWhitespace + 1), '');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic static deleteWordRight(cursor:OneCursor, whitespaceHeuristics:boolean, wordNavigationType:WordNavigationType, ctx: IOneCursorOperationContext): boolean {\n\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\t\t\tlet position = cursor.getPosition();\n\n\t\t\tvar lineNumber = position.lineNumber;\n\t\t\tvar column = position.column;\n\n\t\t\tvar lineCount = cursor.model.getLineCount();\n\t\t\tvar maxColumn = cursor.model.getLineMaxColumn(lineNumber);\n\t\t\tif (lineNumber === lineCount && column === maxColumn) {\n\t\t\t\t// Ignore deleting at end of file\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (whitespaceHeuristics && this.deleteWordRightWhitespace(cursor, ctx)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet nextWordOnLine = cursor.findNextWordOnLine(position);\n\n\t\t\tif (wordNavigationType === WordNavigationType.WordEnd) {\n\t\t\t\tif (nextWordOnLine) {\n\t\t\t\t\tcolumn = nextWordOnLine.end + 1;\n\t\t\t\t} else {\n\t\t\t\t\tcolumn = maxColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (nextWordOnLine && column >= nextWordOnLine.start + 1) {\n\t\t\t\t\tnextWordOnLine = cursor.findNextWordOnLine(new Position(lineNumber, nextWordOnLine.end + 1));\n\t\t\t\t}\n\t\t\t\tif (nextWordOnLine) {\n\t\t\t\t\tcolumn = nextWordOnLine.start + 1;\n\t\t\t\t} else {\n\t\t\t\t\tcolumn = maxColumn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar deleteSelection = new Range(lineNumber, column, lineNumber, position.column);\n\t\t\tif (!deleteSelection.isEmpty()) {\n\t\t\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// fall back to normal deleteRight behavior\n\t\treturn this.deleteRight(cursor, ctx);\n\t}\n\n\tpublic static deleteAllLeft(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tif (this._autoClosingPairDelete(cursor, ctx)) {\n\t\t\t// This was a case for an auto-closing pair delete\n\t\t\treturn true;\n\t\t}\n\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\t\t\tlet position = cursor.getPosition();\n\t\t\tvar lineNumber = position.lineNumber;\n\t\t\tvar column = position.column;\n\n\t\t\tif (column === 1) {\n\t\t\t\t// Ignore deleting at beginning of line\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar deleteSelection = new Range(lineNumber, 1, lineNumber, column);\n\t\t\tif (!deleteSelection.isEmpty()) {\n\t\t\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.deleteLeft(cursor, ctx);\n\t}\n\n\tpublic static deleteAllRight(cursor:OneCursor, ctx: IOneCursorOperationContext): boolean {\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\t\t\tlet position = cursor.getPosition();\n\t\t\tvar lineNumber = position.lineNumber;\n\t\t\tvar column = position.column;\n\t\t\tvar maxColumn = cursor.model.getLineMaxColumn(lineNumber);\n\n\t\t\tif (column === maxColumn) {\n\t\t\t\t// Ignore deleting at end of file\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar deleteSelection = new Range(lineNumber, column, lineNumber, maxColumn);\n\t\t\tif (!deleteSelection.isEmpty()) {\n\t\t\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn this.deleteRight(cursor, ctx);\n\t}\n\n\tpublic static cut(cursor:OneCursor, enableEmptySelectionClipboard:boolean, ctx: IOneCursorOperationContext): boolean {\n\t\tvar selection = cursor.getSelection();\n\n\t\tif (selection.isEmpty()) {\n\t\t\tif (enableEmptySelectionClipboard) {\n\t\t\t\t// This is a full line cut\n\n\t\t\t\tlet position = cursor.getPosition();\n\n\t\t\t\tvar startLineNumber:number,\n\t\t\t\t\tstartColumn:number,\n\t\t\t\t\tendLineNumber:number,\n\t\t\t\t\tendColumn:number;\n\n\t\t\t\tif (position.lineNumber < cursor.model.getLineCount()) {\n\t\t\t\t\t// Cutting a line in the middle of the model\n\t\t\t\t\tstartLineNumber = position.lineNumber;\n\t\t\t\t\tstartColumn = 1;\n\t\t\t\t\tendLineNumber = position.lineNumber + 1;\n\t\t\t\t\tendColumn = 1;\n\t\t\t\t} else if (position.lineNumber > 1) {\n\t\t\t\t\t// Cutting the last line & there are more than 1 lines in the model\n\t\t\t\t\tstartLineNumber = position.lineNumber - 1;\n\t\t\t\t\tstartColumn = cursor.model.getLineMaxColumn(position.lineNumber - 1);\n\t\t\t\t\tendLineNumber = position.lineNumber;\n\t\t\t\t\tendColumn = cursor.model.getLineMaxColumn(position.lineNumber);\n\t\t\t\t} else {\n\t\t\t\t\t// Cutting the single line that the model contains\n\t\t\t\t\tstartLineNumber = position.lineNumber;\n\t\t\t\t\tstartColumn = 1;\n\t\t\t\t\tendLineNumber = position.lineNumber;\n\t\t\t\t\tendColumn = cursor.model.getLineMaxColumn(position.lineNumber);\n\t\t\t\t}\n\n\t\t\t\tvar deleteSelection = new Range(\n\t\t\t\t\tstartLineNumber,\n\t\t\t\t\tstartColumn,\n\t\t\t\t\tendLineNumber,\n\t\t\t\t\tendColumn\n\t\t\t\t);\n\n\t\t\t\tif (!deleteSelection.isEmpty()) {\n\t\t\t\t\tctx.executeCommand = new ReplaceCommand(deleteSelection, '');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Cannot cut empty selection\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\t// Delete left or right, they will both result in the selection being deleted\n\t\t\tthis.deleteRight(cursor, ctx);\n\t\t}\n\t\treturn true;\n\t}\n\n\t// -------------------- END delete handlers & co.\n}\n\nclass CursorHelper {\n\tprivate model:editorCommon.IModel;\n\tprivate configuration:editorCommon.IConfiguration;\n\tprivate moveHelper:CursorMoveHelper;\n\n\tconstructor (model:editorCommon.IModel, configuration:editorCommon.IConfiguration) {\n\t\tthis.model = model;\n\t\tthis.configuration = configuration;\n\t\tthis.moveHelper = new CursorMoveHelper({\n\t\t\tgetIndentationOptions: () => {\n\t\t\t\treturn this.model.getOptions();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getLeftOfPosition(model:ICursorMoveHelperModel, lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.moveHelper.getLeftOfPosition(model, lineNumber, column);\n\t}\n\n\tpublic getRightOfPosition(model:ICursorMoveHelperModel, lineNumber:number, column:number): editorCommon.IPosition {\n\t\treturn this.moveHelper.getRightOfPosition(model, lineNumber, column);\n\t}\n\n\tpublic getPositionUp(model:ICursorMoveHelperModel, lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnFirstLine:boolean): IMoveResult {\n\t\treturn this.moveHelper.getPositionUp(model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnFirstLine);\n\t}\n\n\tpublic getPositionDown(model:ICursorMoveHelperModel, lineNumber:number, column:number, leftoverVisibleColumns:number, count:number, allowMoveOnLastLine:boolean): IMoveResult {\n\t\treturn this.moveHelper.getPositionDown(model, lineNumber, column, leftoverVisibleColumns, count, allowMoveOnLastLine);\n\t}\n\n\tpublic getColumnAtBeginningOfLine(model:ICursorMoveHelperModel, lineNumber:number, column:number): number {\n\t\treturn this.moveHelper.getColumnAtBeginningOfLine(model, lineNumber, column);\n\t}\n\n\tpublic getColumnAtEndOfLine(model:ICursorMoveHelperModel, lineNumber:number, column:number): number {\n\t\treturn this.moveHelper.getColumnAtEndOfLine(model, lineNumber, column);\n\t}\n\n\tpublic columnSelect(model:ICursorMoveHelperModel, fromLineNumber:number, fromVisibleColumn:number, toLineNumber:number, toVisibleColumn:number): IViewColumnSelectResult {\n\t\treturn this.moveHelper.columnSelect(model, fromLineNumber, fromVisibleColumn, toLineNumber, toVisibleColumn);\n\t}\n\n\tpublic visibleColumnFromColumn(model:ICursorMoveHelperModel, lineNumber:number, column:number): number {\n\t\treturn this.moveHelper.visibleColumnFromColumn(model, lineNumber, column);\n\t}\n\n\t// /**\n\t//  * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n\t//  */\n\t// public nextTabColumn(column:number): number {\n\t// \treturn CursorMoveHelper.nextTabColumn(column, this.configuration.getIndentationOptions().tabSize);\n\t// }\n\n\t// /**\n\t//  * ATTENTION: This works with 0-based columns (as oposed to the regular 1-based columns)\n\t//  */\n\t// public prevTabColumn(column:number): number {\n\t// \treturn CursorMoveHelper.prevTabColumn(column, this.configuration.getIndentationOptions().tabSize);\n\t// }\n\n\t// public findWord(position:editorCommon.IEditorPosition, preference:string, skipSyntaxTokens:boolean=false): editorCommon.IWordRange {\n\t// \tvar words = this.model.getWords(position.lineNumber);\n\t// \tvar searchIndex:number, i:number, len:number;\n\n\t// \tif (skipSyntaxTokens) {\n\t// \t\tsearchIndex = position.column - 1;\n\t// \t\tif (preference === 'left') {\n\t// \t\t\tfor (i = words.length - 1; i >= 0; i--) {\n\t// \t\t\t\tif (words[i].start >= searchIndex) {\n\t// \t\t\t\t\tcontinue;\n\t// \t\t\t\t}\n\t// \t\t\t\treturn words[i];\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tfor (i = 0, len = words.length; i < len; i++) {\n\t// \t\t\t\tif (words[i].end <= searchIndex) {\n\t// \t\t\t\t\tcontinue;\n\t// \t\t\t\t}\n\t// \t\t\t\treturn words[i];\n\t// \t\t\t}\n\t// \t\t}\n\t// \t} else {\n\t// \t\tsearchIndex = position.column;\n\t// \t\tif (preference === 'left') {\n\t// \t\t\tif (searchIndex !== 1) {\n\t// \t\t\t\tsearchIndex = searchIndex - 0.1;\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tif (searchIndex !== this.model.getLineMaxColumn(position.lineNumber)) {\n\t// \t\t\t\tsearchIndex = searchIndex + 0.1;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tsearchIndex = searchIndex - 1;\n\n\t// \t\tfor (i = 0, len = words.length; i < len; i++) {\n\t// \t\t\tif (words[i].start <= searchIndex && searchIndex <= words[i].end) {\n\t// \t\t\t\treturn words[i];\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \treturn null;\n\t// }\n\n\tprivate _createWord(lineContent: string, wordType:WordType, start: number, end: number): IFindWordResult {\n\t\t// console.log('WORD ==> ' + start + ' => ' + end + ':::: <<<' + lineContent.substring(start, end) + '>>>');\n\t\treturn { start: start, end: end, wordType: wordType };\n\t}\n\n\tpublic findPreviousWordOnLine(_position:editorCommon.IEditorPosition): IFindWordResult {\n\t\tlet position = this.model.validatePosition(_position);\n\t\tlet wordSeparators = getMapForWordSeparators(this.configuration.editor.wordSeparators);\n\t\tlet lineContent = this.model.getLineContent(position.lineNumber);\n\t\tlet wordType = W_NONE;\n\t\tfor (let chIndex = position.column - 2; chIndex >= 0; chIndex--) {\n\t\t\tlet chCode = lineContent.charCodeAt(chIndex);\n\t\t\tlet chClass:CharacterClass = (wordSeparators[chCode] || CharacterClass.Regular);\n\n\t\t\tif (chClass === CH_REGULAR) {\n\t\t\t\tif (wordType === W_SEPARATOR) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, chIndex + 1, this._findEndOfWord(lineContent, wordSeparators, wordType, chIndex + 1));\n\t\t\t\t}\n\t\t\t\twordType = W_REGULAR;\n\t\t\t} else if (chClass === CH_WORD_SEPARATOR) {\n\t\t\t\tif (wordType === W_REGULAR) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, chIndex + 1, this._findEndOfWord(lineContent, wordSeparators, wordType, chIndex + 1));\n\t\t\t\t}\n\t\t\t\twordType = W_SEPARATOR;\n\t\t\t} else if (chClass === CH_WHITESPACE) {\n\t\t\t\tif (wordType !== W_NONE) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, chIndex + 1, this._findEndOfWord(lineContent, wordSeparators, wordType, chIndex + 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wordType !== W_NONE) {\n\t\t\treturn this._createWord(lineContent, wordType, 0, this._findEndOfWord(lineContent, wordSeparators, wordType, 0));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findEndOfWord(lineContent:string, wordSeparators:CharacterClass[], wordType:WordType, startIndex:number): number {\n\t\tlet len = lineContent.length;\n\t\tfor (let chIndex = startIndex; chIndex < len; chIndex++) {\n\t\t\tlet chCode = lineContent.charCodeAt(chIndex);\n\t\t\tlet chClass:CharacterClass = (wordSeparators[chCode] || CharacterClass.Regular);\n\n\t\t\tif (chClass === CH_WHITESPACE) {\n\t\t\t\treturn chIndex;\n\t\t\t}\n\t\t\tif (wordType === W_REGULAR && chClass === CH_WORD_SEPARATOR) {\n\t\t\t\treturn chIndex;\n\t\t\t}\n\t\t\tif (wordType === W_SEPARATOR && chClass === CH_REGULAR) {\n\t\t\t\treturn chIndex;\n\t\t\t}\n\t\t}\n\t\treturn len;\n\t}\n\n\tpublic findNextWordOnLine(_position:editorCommon.IEditorPosition): IFindWordResult {\n\t\tlet position = this.model.validatePosition(_position);\n\t\tlet wordSeparators = getMapForWordSeparators(this.configuration.editor.wordSeparators);\n\t\tlet lineContent = this.model.getLineContent(position.lineNumber);\n\t\tlet wordType = W_NONE;\n\t\tlet len = lineContent.length;\n\n\t\tfor (let chIndex = position.column - 1; chIndex < len; chIndex++) {\n\t\t\tlet chCode = lineContent.charCodeAt(chIndex);\n\t\t\tlet chClass:CharacterClass = (wordSeparators[chCode] || CharacterClass.Regular);\n\n\t\t\tif (chClass === CH_REGULAR) {\n\t\t\t\tif (wordType === W_SEPARATOR) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, this._findStartOfWord(lineContent, wordSeparators, wordType, chIndex - 1), chIndex);\n\t\t\t\t}\n\t\t\t\twordType = W_REGULAR;\n\t\t\t} else if (chClass === CH_WORD_SEPARATOR) {\n\t\t\t\tif (wordType === W_REGULAR) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, this._findStartOfWord(lineContent, wordSeparators, wordType, chIndex - 1), chIndex);\n\t\t\t\t}\n\t\t\t\twordType = W_SEPARATOR;\n\t\t\t} else if (chClass === CH_WHITESPACE) {\n\t\t\t\tif (wordType !== W_NONE) {\n\t\t\t\t\treturn this._createWord(lineContent, wordType, this._findStartOfWord(lineContent, wordSeparators, wordType, chIndex - 1), chIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (wordType !== W_NONE) {\n\t\t\treturn this._createWord(lineContent, wordType, this._findStartOfWord(lineContent, wordSeparators, wordType, len - 1), len);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findStartOfWord(lineContent:string, wordSeparators:CharacterClass[], wordType:WordType, startIndex:number): number {\n\t\tfor (let chIndex = startIndex; chIndex >= 0; chIndex--) {\n\t\t\tlet chCode = lineContent.charCodeAt(chIndex);\n\t\t\tlet chClass:CharacterClass = (wordSeparators[chCode] || CharacterClass.Regular);\n\n\t\t\tif (chClass === CH_WHITESPACE) {\n\t\t\t\treturn chIndex + 1;\n\t\t\t}\n\t\t\tif (wordType === W_REGULAR && chClass === CH_WORD_SEPARATOR) {\n\t\t\t\treturn chIndex + 1;\n\t\t\t}\n\t\t\tif (wordType === W_SEPARATOR && chClass === CH_REGULAR) {\n\t\t\t\treturn chIndex + 1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nfunction once<T, R>(keyFn:(input:T)=>string, computeFn:(input:T)=>R):(input:T)=>R {\n\tlet cache: {[key:string]:R;} = {};\n\treturn (input:T):R => {\n\t\tlet key = keyFn(input);\n\t\tif (!cache.hasOwnProperty(key)) {\n\t\t\tcache[key] = computeFn(input);\n\t\t}\n\t\treturn cache[key];\n\t};\n}\n\nvar getMapForWordSeparators = once<string,CharacterClass[]>(\n\t(input) => input,\n\t(input) => {\n\n\t\tlet r:CharacterClass[] = [];\n\n\t\t// Make array fast for ASCII text\n\t\tfor (let chCode = 0; chCode < 256; chCode++) {\n\t\t\tr[chCode] = CharacterClass.Regular;\n\t\t}\n\n\t\tfor (let i = 0, len = input.length; i < len; i++) {\n\t\t\tr[input.charCodeAt(i)] = CharacterClass.WordSeparator;\n\t\t}\n\n\t\tr[' '.charCodeAt(0)] = CharacterClass.Whitespace;\n\t\tr['\\t'.charCodeAt(0)] = CharacterClass.Whitespace;\n\n\t\treturn r;\n\t}\n);\n\nclass Utils {\n\n\t/**\n\t * Range contains position (including edges)?\n\t */\n\tstatic rangeContainsPosition(range:editorCommon.IRange, position:editorCommon.IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Tests if position is contained inside range.\n\t * If position is either the starting or ending of a range, false is returned.\n\t */\n\tstatic isPositionInsideRange(position:editorCommon.IPosition, range:editorCommon.IRange): boolean {\n\t\tif (position.lineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tstatic isPositionAtRangeEdges(position:editorCommon.IPosition, range:editorCommon.IRange): boolean {\n\t\tif (position.lineNumber === range.startLineNumber && position.column === range.startColumn) {\n\t\t\treturn true;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column === range.endColumn) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"]}