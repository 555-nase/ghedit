{"version":3,"file":"vs/editor/common/modes/supports/onEnter.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/modes/supports/onEnter.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError} from 'vs/base/common/errors';\nimport * as strings from 'vs/base/common/strings';\nimport {Position} from 'vs/editor/common/core/position';\nimport {IPosition, ITextModel, ITokenizedModel} from 'vs/editor/common/editorCommon';\nimport {IEnterAction, ILineContext, IMode, IRichEditOnEnter, IndentAction, CharacterPair} from 'vs/editor/common/modes';\nimport {handleEvent} from 'vs/editor/common/modes/supports';\n\nexport interface IIndentationRules {\n\tdecreaseIndentPattern: RegExp;\n\tincreaseIndentPattern: RegExp;\n\tindentNextLinePattern?: RegExp;\n\tunIndentedLinePattern?: RegExp;\n}\n\nexport interface IOnEnterRegExpRules {\n\tbeforeText: RegExp;\n\tafterText?: RegExp;\n\taction: IEnterAction;\n}\n\nexport interface IOnEnterSupportOptions {\n\tbrackets?: CharacterPair[];\n\tindentationRules?: IIndentationRules;\n\tregExpRules?: IOnEnterRegExpRules[];\n}\n\ninterface IProcessedBracketPair {\n\topen: string;\n\tclose: string;\n\topenRegExp: RegExp;\n\tcloseRegExp: RegExp;\n}\n\nexport class OnEnterSupport implements IRichEditOnEnter {\n\n\tprivate static _INDENT: IEnterAction = { indentAction: IndentAction.Indent };\n\tprivate static _INDENT_OUTDENT: IEnterAction = { indentAction: IndentAction.IndentOutdent };\n\tprivate static _OUTDENT: IEnterAction = { indentAction: IndentAction.Outdent };\n\n\tprivate _modeId: string;\n\tprivate _brackets: IProcessedBracketPair[];\n\tprivate _indentationRules: IIndentationRules;\n\tprivate _regExpRules: IOnEnterRegExpRules[];\n\n\tconstructor(modeId: string, opts?:IOnEnterSupportOptions) {\n\t\topts = opts || {};\n\t\topts.brackets = opts.brackets || [\n\t\t\t['(', ')'],\n\t\t\t['{', '}'],\n\t\t\t['[', ']']\n\t\t];\n\n\t\tthis._modeId = modeId;\n\t\tthis._brackets = opts.brackets.map((bracket) => {\n\t\t\treturn {\n\t\t\t\topen: bracket[0],\n\t\t\t\topenRegExp: OnEnterSupport._createOpenBracketRegExp(bracket[0]),\n\t\t\t\tclose: bracket[1],\n\t\t\t\tcloseRegExp: OnEnterSupport._createCloseBracketRegExp(bracket[1]),\n\t\t\t};\n\t\t});\n\t\tthis._regExpRules = opts.regExpRules || [];\n\t\tthis._indentationRules = opts.indentationRules;\n\t}\n\n\tpublic onEnter(model:ITokenizedModel, position: IPosition): IEnterAction {\n\t\tvar context = model.getLineContext(position.lineNumber);\n\n\t\treturn handleEvent(context, position.column - 1, (nestedMode:IMode, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedMode.getId()) {\n\t\t\t\treturn this._onEnter(model, position);\n\t\t\t} else if (nestedMode.richEditSupport && nestedMode.richEditSupport.onEnter) {\n\t\t\t\treturn nestedMode.richEditSupport.onEnter.onEnter(model, position);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onEnter(model:ITextModel, position: IPosition): IEnterAction {\n\t\tlet lineText = model.getLineContent(position.lineNumber);\n\t\tlet beforeEnterText = lineText.substr(0, position.column - 1);\n\t\tlet afterEnterText = lineText.substr(position.column - 1);\n\n\t\tlet oneLineAboveText = position.lineNumber === 1 ? '' : model.getLineContent(position.lineNumber - 1);\n\n\t\treturn this._actualOnEnter(oneLineAboveText, beforeEnterText, afterEnterText);\n\t}\n\n\t_actualOnEnter(oneLineAboveText:string, beforeEnterText:string, afterEnterText:string): IEnterAction {\n\t\t// (1): `regExpRules`\n\t\tfor (let i = 0, len = this._regExpRules.length; i < len; i++) {\n\t\t\tlet rule = this._regExpRules[i];\n\t\t\tif (rule.beforeText.test(beforeEnterText)) {\n\t\t\t\tif (rule.afterText) {\n\t\t\t\t\tif (rule.afterText.test(afterEnterText)) {\n\t\t\t\t\t\treturn rule.action;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn rule.action;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (2): Special indent-outdent\n\t\tif (beforeEnterText.length > 0 && afterEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText) && bracket.closeRegExp.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT_OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3): Indentation Support\n\t\tif (this._indentationRules) {\n\t\t\tif (this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(beforeEnterText)) {\n\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t}\n\t\t\tif (/^\\s/.test(beforeEnterText)) {\n\t\t\t\t// No reason to run regular expressions if there is nothing to outdent from\n\t\t\t\tif (this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(afterEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t\tif (this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(oneLineAboveText)) {\n\t\t\t\t\treturn OnEnterSupport._OUTDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (4): Open bracket based logic\n\t\tif (beforeEnterText.length > 0) {\n\t\t\tfor (let i = 0, len = this._brackets.length; i < len; i++) {\n\t\t\t\tlet bracket = this._brackets[i];\n\t\t\t\tif (bracket.openRegExp.test(beforeEnterText)) {\n\t\t\t\t\treturn OnEnterSupport._INDENT;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _createOpenBracketRegExp(bracket:string): RegExp {\n\t\tvar str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(0))) {\n\t\t\tstr = '\\\\b' + str;\n\t\t}\n\t\tstr += '\\\\s*$';\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _createCloseBracketRegExp(bracket:string): RegExp {\n\t\tvar str = strings.escapeRegExpCharacters(bracket);\n\t\tif (!/\\B/.test(str.charAt(str.length - 1))) {\n\t\t\tstr = str + '\\\\b';\n\t\t}\n\t\tstr = '^\\\\s*' + str;\n\t\treturn OnEnterSupport._safeRegExp(str);\n\t}\n\n\tprivate static _safeRegExp(def:string): RegExp {\n\t\ttry {\n\t\t\treturn new RegExp(def);\n\t\t} catch(err) {\n\t\t\tonUnexpectedError(err);\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport function getRawEnterActionAtPosition(model:ITokenizedModel, lineNumber:number, column:number): IEnterAction {\n\tlet result:IEnterAction;\n\tlet richEditSupport = model.getMode().richEditSupport;\n\n\tif (richEditSupport && richEditSupport.onEnter) {\n\t\ttry {\n\t\t\tresult = richEditSupport.onEnter.onEnter(model, new Position(lineNumber, column));\n\t\t} catch (e) {\n\t\t\tonUnexpectedError(e);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function getEnterActionAtPosition(model:ITokenizedModel, lineNumber:number, column:number): { enterAction: IEnterAction; indentation: string; } {\n\tlet lineText = model.getLineContent(lineNumber);\n\tlet indentation = strings.getLeadingWhitespace(lineText);\n\tif (indentation.length > column - 1) {\n\t\tindentation = indentation.substring(0, column - 1);\n\t}\n\n\tlet enterAction = getRawEnterActionAtPosition(model, lineNumber, column);\n\tif (!enterAction) {\n\t\tenterAction = {\n\t\t\tindentAction: IndentAction.None,\n\t\t\tappendText: '',\n\t\t};\n\t} else {\n\t\tif(!enterAction.appendText) {\n\t\t\tif (\n\t\t\t\t(enterAction.indentAction === IndentAction.Indent) ||\n\t\t\t\t(enterAction.indentAction === IndentAction.IndentOutdent)\n\t\t\t) {\n\t\t\t\tenterAction.appendText = '\\t';\n\t\t\t} else {\n\t\t\t\tenterAction.appendText = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (enterAction.removeText) {\n\t\tindentation = indentation.substring(0, indentation.length - 1);\n\t}\n\n\treturn {\n\t\tenterAction: enterAction,\n\t\tindentation: indentation\n\t};\n}\n"]}