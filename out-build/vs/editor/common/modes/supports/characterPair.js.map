{"version":3,"file":"characterPair.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/common/modes/supports/characterPair.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAUb;QAMC,8BAAY,MAAc,EAAE,YAAwC;YACnE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,gBAAgB,CAAC;YACvD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC,GAAG,YAAY,CAAC,gBAAgB,GAAG,YAAY,CAAC,gBAAgB,CAAC;QACvI,CAAC;QAEM,kDAAmB,GAA1B;YACC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;QAEM,kDAAmB,GAA1B,UAA2B,SAAgB,EAAE,OAAoB,EAAE,MAAa;YAAhF,iBAgCC;YA/BA,MAAM,CAAC,sBAAW,CAAC,OAAO,EAAE,MAAM,EAAE,UAAC,UAAgB,EAAE,OAAoB,EAAE,MAAa;gBACzF,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,KAAK,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAEzC,gCAAgC;oBAChC,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnC,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBAED,IAAI,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBACvD,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;oBAEjD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;wBACxD,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;4BAClD,EAAE,CAAC,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gCACrC,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,UAAU,EAAE,CAAC;oCAC5F,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;wCACzE,MAAM,CAAC,KAAK,CAAC;oCACd,CAAC;gCACF,CAAC;4BACF,CAAC;4BACD,KAAK,CAAC;wBACP,CAAC;oBACF,CAAC;oBAED,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,eAAe,IAAI,UAAU,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,CAAC;oBACnF,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACjG,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,kDAAmB,GAA1B;YACC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;QAC/B,CAAC;QACF,2BAAC;IAAD,CAAC,AArDD,IAqDC;IArDY,4BAAoB,uBAqDhC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IAutoClosingPair, IAutoClosingPairConditional, ILineContext, IMode, IRichEditCharacterPair} from 'vs/editor/common/modes';\nimport {handleEvent} from 'vs/editor/common/modes/supports';\n\nexport interface ICharacterPairContribution {\n\tautoClosingPairs: IAutoClosingPairConditional[];\n\tsurroundingPairs?: IAutoClosingPair[];\n}\n\nexport class CharacterPairSupport implements IRichEditCharacterPair {\n\n\tprivate _modeId: string;\n\tprivate _autoClosingPairs: IAutoClosingPairConditional[];\n\tprivate _surroundingPairs: IAutoClosingPair[];\n\n\tconstructor(modeId: string, contribution: ICharacterPairContribution) {\n\t\tthis._modeId = modeId;\n\t\tthis._autoClosingPairs = contribution.autoClosingPairs;\n\t\tthis._surroundingPairs = Array.isArray(contribution.surroundingPairs) ? contribution.surroundingPairs : contribution.autoClosingPairs;\n\t}\n\n\tpublic getAutoClosingPairs(): IAutoClosingPair[] {\n\t\treturn this._autoClosingPairs;\n\t}\n\n\tpublic shouldAutoClosePair(character:string, context:ILineContext, offset:number): boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:IMode, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedMode.getId()) {\n\n\t\t\t\t// Always complete on empty line\n\t\t\t\tif (context.getTokenCount() === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar tokenIndex = context.findIndexOfOffset(offset - 1);\n\t\t\t\tvar tokenType = context.getTokenType(tokenIndex);\n\n\t\t\t\tfor (var i = 0; i < this._autoClosingPairs.length; ++i) {\n\t\t\t\t\tif (this._autoClosingPairs[i].open === character) {\n\t\t\t\t\t\tif (this._autoClosingPairs[i].notIn) {\n\t\t\t\t\t\t\tfor (var notInIndex = 0; notInIndex < this._autoClosingPairs[i].notIn.length; ++notInIndex) {\n\t\t\t\t\t\t\t\tif (tokenType.indexOf(this._autoClosingPairs[i].notIn[notInIndex]) > -1) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} else if (nestedMode.richEditSupport && nestedMode.richEditSupport.characterPair) {\n\t\t\t\treturn nestedMode.richEditSupport.characterPair.shouldAutoClosePair(character, context, offset);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getSurroundingPairs(): IAutoClosingPair[]{\n\t\treturn this._surroundingPairs;\n\t}\n}\n"]}