{"version":3,"file":"richEditSupport.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/common/modes/supports/richEditSupport.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ICommentsConfiguration, IRichEditBrackets, IRichEditCharacterPair, IRichEditOnEnter, IRichEditSupport, CharacterPair} from 'vs/editor/common/modes';\nimport {NullMode} from 'vs/editor/common/modes/nullMode';\nimport {CharacterPairSupport} from 'vs/editor/common/modes/supports/characterPair';\nimport {ICharacterPairContribution} from 'vs/editor/common/modes/supports/characterPair';\nimport {BracketElectricCharacterSupport, IBracketElectricCharacterContribution} from 'vs/editor/common/modes/supports/electricCharacter';\nimport {IIndentationRules, IOnEnterRegExpRules, IOnEnterSupportOptions, OnEnterSupport} from 'vs/editor/common/modes/supports/onEnter';\nimport {RichEditBrackets} from 'vs/editor/common/modes/supports/richEditBrackets';\n\nexport interface CommentRule {\n\tlineComment?: string;\n\tblockComment?: CharacterPair;\n}\n\nexport interface IRichEditConfiguration {\n\tcomments?: CommentRule;\n\tbrackets?: CharacterPair[];\n\twordPattern?: RegExp;\n\tindentationRules?: IIndentationRules;\n\tonEnterRules?: IOnEnterRegExpRules[];\n\t__electricCharacterSupport?: IBracketElectricCharacterContribution;\n\t__characterPairSupport?: ICharacterPairContribution;\n}\n\nexport class RichEditSupport implements IRichEditSupport {\n\n\tprivate _conf: IRichEditConfiguration;\n\n\tpublic electricCharacter: BracketElectricCharacterSupport;\n\tpublic comments: ICommentsConfiguration;\n\tpublic characterPair: IRichEditCharacterPair;\n\tpublic wordDefinition: RegExp;\n\tpublic onEnter: IRichEditOnEnter;\n\tpublic brackets: IRichEditBrackets;\n\n\tconstructor(modeId:string, previous:IRichEditSupport, rawConf:IRichEditConfiguration) {\n\n\t\tlet prev:IRichEditConfiguration = null;\n\t\tif (previous instanceof RichEditSupport) {\n\t\t\tprev = previous._conf;\n\t\t}\n\n\t\tthis._conf = RichEditSupport._mergeConf(prev, rawConf);\n\n\t\tif (this._conf.brackets) {\n\t\t\tthis.brackets = new RichEditBrackets(modeId, this._conf.brackets);\n\t\t}\n\n\t\tthis._handleOnEnter(modeId, this._conf);\n\n\t\tthis._handleComments(modeId, this._conf);\n\n\t\tif (this._conf.__characterPairSupport) {\n\t\t\tthis.characterPair = new CharacterPairSupport(modeId, this._conf.__characterPairSupport);\n\t\t}\n\n\t\tif (this._conf.__electricCharacterSupport || this._conf.brackets) {\n\t\t\tthis.electricCharacter = new BracketElectricCharacterSupport(modeId, this.brackets, this._conf.__electricCharacterSupport);\n\t\t}\n\n\t\tthis.wordDefinition = this._conf.wordPattern || NullMode.DEFAULT_WORD_REGEXP;\n\t}\n\n\tprivate static _mergeConf(prev:IRichEditConfiguration, current:IRichEditConfiguration): IRichEditConfiguration {\n\t\treturn {\n\t\t\tcomments: (prev ? current.comments || prev.comments : current.comments),\n\t\t\tbrackets: (prev ? current.brackets || prev.brackets : current.brackets),\n\t\t\twordPattern: (prev ? current.wordPattern || prev.wordPattern : current.wordPattern),\n\t\t\tindentationRules: (prev ? current.indentationRules || prev.indentationRules : current.indentationRules),\n\t\t\tonEnterRules: (prev ? current.onEnterRules || prev.onEnterRules : current.onEnterRules),\n\t\t\t__electricCharacterSupport: (prev ? current.__electricCharacterSupport || prev.__electricCharacterSupport : current.__electricCharacterSupport),\n\t\t\t__characterPairSupport: (prev ? current.__characterPairSupport || prev.__characterPairSupport : current.__characterPairSupport),\n\t\t};\n\t}\n\n\tprivate _handleOnEnter(modeId:string, conf:IRichEditConfiguration): void {\n\t\t// on enter\n\t\tlet onEnter: IOnEnterSupportOptions = {};\n\t\tlet empty = true;\n\n\t\tif (conf.brackets) {\n\t\t\tempty = false;\n\t\t\tonEnter.brackets = conf.brackets;\n\t\t}\n\t\tif (conf.indentationRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.indentationRules = conf.indentationRules;\n\t\t}\n\t\tif (conf.onEnterRules) {\n\t\t\tempty = false;\n\t\t\tonEnter.regExpRules = conf.onEnterRules;\n\t\t}\n\n\t\tif (!empty) {\n\t\t\tthis.onEnter = new OnEnterSupport(modeId, onEnter);\n\t\t}\n\t}\n\n\tprivate _handleComments(modeId:string, conf:IRichEditConfiguration): void {\n\t\tlet commentRule = conf.comments;\n\n\t\t// comment configuration\n\t\tif (commentRule) {\n\t\t\tthis.comments = {};\n\n\t\t\tif (commentRule.lineComment) {\n\t\t\t\tthis.comments.lineCommentToken = commentRule.lineComment;\n\t\t\t}\n\t\t\tif (commentRule.blockComment) {\n\t\t\t\tlet [blockStart, blockEnd] = commentRule.blockComment;\n\t\t\t\tthis.comments.blockCommentStartToken = blockStart;\n\t\t\t\tthis.comments.blockCommentEndToken = blockEnd;\n\t\t\t}\n\t\t}\n\t}\n\n}\n"]}