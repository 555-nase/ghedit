{"version":3,"file":"declarationSupport.js","sourceRoot":"","sources":["../../../../../../src/vs/editor/common/modes/supports/declarationSupport.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAYb;QAKC;;WAEG;QACH,4BAAY,MAAc,EAAE,YAAsC;YACjE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAClC,CAAC;QAEM,+CAAkB,GAAzB,UAA0B,OAAqB,EAAE,MAAa;YAA9D,iBAYC;YAXA,MAAM,CAAC,sBAAW,CAAC,OAAO,EAAE,MAAM,EAAE,UAAC,UAAgB,EAAE,OAAoB,EAAE,MAAa;gBACzF,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,KAAK,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC;wBAC/C,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;wBACnC,sBAAW,CAAC,OAAO,EAAE,MAAM,EAAE,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1D,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC1C,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;gBAC1E,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,4CAAe,GAAtB,UAAuB,QAAa,EAAE,QAAmB;YACxD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC9D,CAAC;QACF,yBAAC;IAAD,CAAC,AA9BD,IA8BC;IA9BY,0BAAkB,qBA8B9B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IPosition} from 'vs/editor/common/editorCommon';\nimport {IDeclarationSupport, ILineContext, IMode, IReference} from 'vs/editor/common/modes';\nimport {handleEvent, isLineToken} from 'vs/editor/common/modes/supports';\n\nexport interface IDeclarationContribution {\n\ttokens?: string[];\n\tfindDeclaration: (resource: URI, position: IPosition) => TPromise<IReference>;\n}\nexport class DeclarationSupport implements IDeclarationSupport {\n\n\tprivate _modeId: string;\n\tprivate contribution: IDeclarationContribution;\n\n\t/**\n\t * Provide the token type postfixes for the tokens where a declaration can be found in the 'tokens' argument.\n\t */\n\tconstructor(modeId: string, contribution: IDeclarationContribution) {\n\t\tthis._modeId = modeId;\n\t\tthis.contribution = contribution;\n\t}\n\n\tpublic canFindDeclaration(context: ILineContext, offset:number):boolean {\n\t\treturn handleEvent(context, offset, (nestedMode:IMode, context:ILineContext, offset:number) => {\n\t\t\tif (this._modeId === nestedMode.getId()) {\n\t\t\t\treturn (!Array.isArray(this.contribution.tokens) ||\n\t\t\t\t\tthis.contribution.tokens.length < 1 ||\n\t\t\t\t\tisLineToken(context, offset, this.contribution.tokens));\n\t\t\t} else if (nestedMode.declarationSupport) {\n\t\t\t\treturn nestedMode.declarationSupport.canFindDeclaration(context, offset);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic findDeclaration(resource: URI, position: IPosition): TPromise<IReference>{\n\t\treturn this.contribution.findDeclaration(resource, position);\n\t}\n}\n"]}