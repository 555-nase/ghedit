{"version":3,"file":"vs/editor/common/modes/linkComputer.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/modes/linkComputer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ILink} from 'vs/editor/common/modes';\n\nexport interface ILinkComputerTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber:number): string;\n}\n\n// State machine for http:// or https://\nvar STATE_MAP:{[ch:string]:number}[] = [], START_STATE = 1, END_STATE = 9, ACCEPT_STATE = 10;\nSTATE_MAP[1] = { 'h': 2, 'H': 2 };\nSTATE_MAP[2] = { 't': 3, 'T': 3 };\nSTATE_MAP[3] = { 't': 4, 'T': 4 };\nSTATE_MAP[4] = { 'p': 5, 'P': 5 };\nSTATE_MAP[5] = { 's': 6, 'S': 6, ':': 7 };\nSTATE_MAP[6] = { ':': 7 };\nSTATE_MAP[7] = { '/': 8 };\nSTATE_MAP[8] = { '/': 9 };\n\nenum CharacterClass {\n\tNone = 0,\n\tForceTermination = 1,\n\tCannotEndIn = 2\n}\n\nvar getCharacterClasses = (function() {\n\tvar FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"';\n\tvar CANNOT_END_WITH_CHARACTERS = '.,;';\n\tvar _cachedResult: CharacterClass[] = null;\n\n\tvar findLargestCharCode = (str:string):number => {\n\t\tvar r = 0;\n\t\tfor (var i = 0, len = str.length; i < len; i++) {\n\t\t\tr = Math.max(r, str.charCodeAt(i));\n\t\t}\n\t\treturn r;\n\t};\n\n\tvar set = (str:string, toWhat:CharacterClass): void => {\n\t\tfor (var i = 0, len = str.length; i < len; i++) {\n\t\t\t_cachedResult[str.charCodeAt(i)] = toWhat;\n\t\t}\n\t};\n\n\treturn function(): CharacterClass[] {\n\t\tif (_cachedResult === null) {\n\t\t\t// Find cachedResult size\n\t\t\tvar largestCharCode = Math.max(\n\t\t\t\tfindLargestCharCode(FORCE_TERMINATION_CHARACTERS),\n\t\t\t\tfindLargestCharCode(CANNOT_END_WITH_CHARACTERS)\n\t\t\t);\n\n\t\t\t// Initialize cachedResult\n\t\t\t_cachedResult = [];\n\t\t\tfor (var i = 0; i < largestCharCode; i++) {\n\t\t\t\t_cachedResult[i] = CharacterClass.None;\n\t\t\t}\n\n\t\t\t// Fill in cachedResult\n\t\t\tset(FORCE_TERMINATION_CHARACTERS, CharacterClass.ForceTermination);\n\t\t\tset(CANNOT_END_WITH_CHARACTERS, CharacterClass.CannotEndIn);\n\t\t}\n\n\t\treturn _cachedResult;\n\t};\n})();\n\nlet _openParens = '('.charCodeAt(0);\nlet _closeParens = ')'.charCodeAt(0);\nlet _openSquareBracket = '['.charCodeAt(0);\nlet _closeSquareBracket = ']'.charCodeAt(0);\nlet _openCurlyBracket = '{'.charCodeAt(0);\nlet _closeCurlyBracket = '}'.charCodeAt(0);\n\nclass LinkComputer {\n\n\tprivate static _createLink(line:string, lineNumber:number, linkBeginIndex:number, linkEndIndex:number):ILink {\n\t\treturn {\n\t\t\trange: {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn: linkBeginIndex + 1,\n\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\tendColumn: linkEndIndex + 1\n\t\t\t},\n\t\t\turl: line.substring(linkBeginIndex, linkEndIndex)\n\t\t};\n\t}\n\n\tpublic static computeLinks(model:ILinkComputerTarget):ILink[] {\n\n\t\tvar i:number,\n\t\t\tlineCount:number,\n\t\t\tresult:ILink[] = [];\n\n\t\tvar line:string,\n\t\t\tj:number,\n\t\t\tlastIncludedCharIndex:number,\n\t\t\tlen:number,\n\t\t\tcharacterClasses = getCharacterClasses(),\n\t\t\tcharacterClassesLength = characterClasses.length,\n\t\t\tlinkBeginIndex:number,\n\t\t\tstate:number,\n\t\t\tch:string,\n\t\t\tchCode:number,\n\t\t\tchClass:CharacterClass,\n\t\t\tresetStateMachine:boolean,\n\t\t\thasOpenParens:boolean,\n\t\t\thasOpenSquareBracket:boolean,\n\t\t\thasOpenCurlyBracket:boolean;\n\n\t\tfor (i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n\t\t\tline = model.getLineContent(i);\n\t\t\tj = 0;\n\t\t\tlen = line.length;\n\t\t\tlinkBeginIndex = 0;\n\t\t\tstate = START_STATE;\n\t\t\thasOpenParens = false;\n\t\t\thasOpenSquareBracket = false;\n\t\t\thasOpenCurlyBracket = false;\n\n\t\t\twhile (j < len) {\n\t\t\t\tch = line.charAt(j);\n\t\t\t\tchCode = line.charCodeAt(j);\n\t\t\t\tresetStateMachine = false;\n\n\t\t\t\tif (state === ACCEPT_STATE) {\n\n\t\t\t\t\tswitch (chCode) {\n\t\t\t\t\t\tcase _openParens:\n\t\t\t\t\t\t\thasOpenParens = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeParens:\n\t\t\t\t\t\t\tchClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _openSquareBracket:\n\t\t\t\t\t\t\thasOpenSquareBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeSquareBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _openCurlyBracket:\n\t\t\t\t\t\t\thasOpenCurlyBracket = true;\n\t\t\t\t\t\t\tchClass = CharacterClass.None;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase _closeCurlyBracket:\n\t\t\t\t\t\t\tchClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tchClass = (chCode < characterClassesLength ? characterClasses[chCode] : CharacterClass.None);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\n\t\t\t\t\t\t// Do not allow to end link in certain characters...\n\t\t\t\t\t\tlastIncludedCharIndex = j - 1;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tchCode = line.charCodeAt(lastIncludedCharIndex);\n\t\t\t\t\t\t\tchClass = (chCode < characterClassesLength ? characterClasses[chCode] : CharacterClass.None);\n\t\t\t\t\t\t\tif (chClass !== CharacterClass.CannotEndIn) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastIncludedCharIndex--;\n\t\t\t\t\t\t} while (lastIncludedCharIndex > linkBeginIndex);\n\n\t\t\t\t\t\tresult.push(LinkComputer._createLink(line, i, linkBeginIndex, lastIncludedCharIndex + 1));\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (state === END_STATE) {\n\t\t\t\t\tchClass = (chCode < characterClassesLength ? characterClasses[chCode] : CharacterClass.None);\n\n\t\t\t\t\t// Check if character terminates link\n\t\t\t\t\tif (chClass === CharacterClass.ForceTermination) {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate = ACCEPT_STATE;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (STATE_MAP[state].hasOwnProperty(ch)) {\n\t\t\t\t\t\tstate = STATE_MAP[state][ch];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresetStateMachine = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (resetStateMachine) {\n\t\t\t\t\tstate = START_STATE;\n\t\t\t\t\thasOpenParens = false;\n\t\t\t\t\thasOpenSquareBracket = false;\n\t\t\t\t\thasOpenCurlyBracket = false;\n\n\t\t\t\t\t// Record where the link started\n\t\t\t\t\tlinkBeginIndex = j + 1;\n\t\t\t\t}\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tif (state === ACCEPT_STATE) {\n\t\t\t\tresult.push(LinkComputer._createLink(line, i, linkBeginIndex, len));\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model:ILinkComputerTarget):ILink[] {\n\tif (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n\t\t// Unknown caller!\n\t\treturn [];\n\t}\n\treturn LinkComputer.computeLinks(model);\n}\n"]}