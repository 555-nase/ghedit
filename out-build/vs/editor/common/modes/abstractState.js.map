{"version":3,"file":"vs/editor/common/modes/abstractState.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/modes/abstractState.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAIb;QAKC,uBAAY,IAAU,EAAE,SAAuB;YAAvB,yBAAuB,GAAvB,gBAAuB;YAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,CAAC;QAEM,+BAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;QAEM,6BAAK,GAAZ;YACC,IAAI,MAAM,GAAiB,IAAI,CAAC,SAAS,EAAE,CAAC;YAC5C,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAEM,iCAAS,GAAhB;YACC,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAEM,sCAAc,GAArB,UAAsB,KAAmB;YACxC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;QAC5E,CAAC;QAEM,oCAAY,GAAnB;YACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACvB,CAAC;QAEM,oCAAY,GAAnB,UAAoB,KAAY;YAC/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACxB,CAAC;QAEM,8BAAM,GAAb,UAAc,KAAY;YACzB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACrD,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YACD,EAAE,CAAC,CAAC,KAAK,YAAY,aAAa,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;YAClE,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAEM,gCAAQ,GAAf,UAAgB,MAAc;YAC7B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAEa,wBAAU,GAAxB,UAAyB,CAAS,EAAE,CAAS;YAC5C,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,KAAK,CAAC;YACd,CAAC;YACD,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QAEa,uBAAS,GAAvB,UAAwB,KAAa;YACpC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YACtB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,oBAAC;IAAD,CAAC,AAlED,IAkEC;IAlEY,qBAAa,gBAkEzB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IMode, IState, IStream, ITokenizationResult} from 'vs/editor/common/modes';\n\nexport class AbstractState implements IState {\n\n\tprivate mode:IMode;\n\tprivate stateData:IState;\n\n\tconstructor(mode:IMode, stateData:IState = null) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic getMode():IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic clone():IState {\n\t\tvar result:AbstractState = this.makeClone();\n\t\tresult.initializeFrom(this);\n\t\treturn result;\n\t}\n\n\tpublic makeClone():AbstractState {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic initializeFrom(other:AbstractState): void {\n\t\tthis.stateData = other.stateData !== null ? other.stateData.clone() : null;\n\t}\n\n\tpublic getStateData(): IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(state:IState):void {\n\t\tthis.stateData = state;\n\t}\n\n\tpublic equals(other:IState):boolean {\n\t\tif (other === null || this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (other instanceof AbstractState) {\n\t\t\treturn AbstractState.safeEquals(this.stateData, other.stateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:IStream):ITokenizationResult {\n\t\tthrow new Error('Abstract Method');\n\t}\n\n\tpublic static safeEquals(a: IState, b: IState): boolean {\n\t\tif (a === null && b === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (a === null || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.equals(b);\n\t}\n\n\tpublic static safeClone(state: IState): IState {\n\t\tif (state) {\n\t\t\treturn state.clone();\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}