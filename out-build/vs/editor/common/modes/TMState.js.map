{"version":3,"file":"vs/editor/common/modes/TMState.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/modes/TMState.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IMode, IState, ITokenizationResult} from 'vs/editor/common/modes';\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport {StackElement} from 'vscode-textmate';\n\nfunction stackElementEquals(a:StackElement, b:StackElement): boolean {\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\t// Not comparing enterPos since it does not represent state across lines\n\treturn (\n\t\ta.ruleId === b.ruleId\n\t\t&& a.endRule === b.endRule\n\t\t&& a.scopeName === b.scopeName\n\t\t&& a.contentName === b.contentName\n\t);\n}\n\nexport class TMState implements IState {\n\n\tprivate _mode: IMode;\n\tprivate _parentEmbedderState: IState;\n\tprivate _ruleStack: StackElement[];\n\n\tconstructor(mode: IMode, parentEmbedderState: IState, ruleStack: StackElement[]) {\n\t\tthis._mode = mode;\n\t\tthis._parentEmbedderState = parentEmbedderState;\n\t\tthis._ruleStack = ruleStack || null;\n\t}\n\n\tpublic clone():TMState {\n\t\tlet parentEmbedderStateClone = AbstractState.safeClone(this._parentEmbedderState);\n\n\t\tlet ruleStackClone: StackElement[] = null;\n\t\tif (this._ruleStack) {\n\t\t\truleStackClone = [];\n\t\t\tfor (let i = 0, len = this._ruleStack.length; i < len; i++) {\n\t\t\t\tlet rule = this._ruleStack[i];\n\t\t\t\truleStackClone.push(rule.clone());\n\t\t\t}\n\t\t}\n\n\t\treturn new TMState(this._mode, parentEmbedderStateClone, ruleStackClone);\n\t}\n\n\tpublic equals(other:IState):boolean {\n\t\tif (!other || !(other instanceof TMState)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherState = <TMState>other;\n\n\t\t// Equals on `_parentEmbedderState`\n\t\tif (!AbstractState.safeEquals(this._parentEmbedderState, otherState._parentEmbedderState)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Equals on `_ruleStack`\n\t\tif (this._ruleStack === null && otherState._ruleStack === null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._ruleStack === null || otherState._ruleStack === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._ruleStack.length !== otherState._ruleStack.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (var i = 0, len = this._ruleStack.length; i < len; i++) {\n\t\t\tif (!stackElementEquals(this._ruleStack[i], otherState._ruleStack[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getMode():IMode {\n\t\treturn this._mode;\n\t}\n\n\tpublic tokenize(stream:any):ITokenizationResult {\n\t\tthrow new Error();\n\t}\n\n\tpublic getStateData():IState {\n\t\treturn this._parentEmbedderState;\n\t}\n\n\tpublic setStateData(state:IState):void {\n\t\tthis._parentEmbedderState = state;\n\t}\n\n\tpublic getRuleStack(): StackElement[] {\n\t\treturn this._ruleStack;\n\t}\n\n\tpublic setRuleStack(ruleStack:StackElement[]): void {\n\t\tthis._ruleStack = ruleStack;\n\t}\n}"]}