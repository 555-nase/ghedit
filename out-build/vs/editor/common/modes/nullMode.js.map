{"version":3,"file":"nullMode.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/modes/nullMode.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as modes from 'vs/editor/common/modes';\nimport {USUAL_WORD_SEPARATORS} from 'vs/editor/common/config/defaultConfig';\n\nexport class NullState implements modes.IState {\n\n\tprivate mode: modes.IMode;\n\tprivate stateData: modes.IState;\n\n\tconstructor(mode: modes.IMode, stateData: modes.IState) {\n\t\tthis.mode = mode;\n\t\tthis.stateData = stateData;\n\t}\n\n\tpublic clone(): modes.IState {\n\t\tvar stateDataClone:modes.IState = (this.stateData ? this.stateData.clone() : null);\n\t\treturn new NullState(this.mode, stateDataClone);\n\t}\n\n\tpublic equals(other:modes.IState): boolean {\n\t\tif (this.mode !== other.getMode()) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherStateData = other.getStateData();\n\t\tif (!this.stateData && !otherStateData) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this.stateData && otherStateData) {\n\t\t\treturn this.stateData.equals(otherStateData);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getMode(): modes.IMode {\n\t\treturn this.mode;\n\t}\n\n\tpublic tokenize(stream:modes.IStream):modes.ITokenizationResult {\n\t\tstream.advanceToEOS();\n\t\treturn { type:'' };\n\t}\n\n\tpublic getStateData(): modes.IState {\n\t\treturn this.stateData;\n\t}\n\n\tpublic setStateData(stateData:modes.IState):void {\n\t\tthis.stateData = stateData;\n\t}\n}\n\nexport class NullMode implements modes.IMode {\n\n\t/**\n\t * Create a word definition regular expression based on default word separators.\n\t * Optionally provide allowed separators that should be included in words.\n\t *\n\t * The default would look like this:\n\t * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n\t */\n\tpublic static createWordRegExp(allowInWords:string = ''): RegExp {\n\t\tvar usualSeparators = USUAL_WORD_SEPARATORS;\n\t\tvar source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\t\tfor (var i = 0; i < usualSeparators.length; i++) {\n\t\t\tif (allowInWords.indexOf(usualSeparators[i]) >= 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsource += '\\\\' + usualSeparators[i];\n\t\t}\n\t\tsource += '\\\\s]+)';\n\t\treturn new RegExp(source, 'g');\n\t}\n\n\t// catches numbers (including floating numbers) in the first group, and alphanum in the second\n\tstatic DEFAULT_WORD_REGEXP = NullMode.createWordRegExp();\n\n\tpublic static ID = 'vs.editor.modes.nullMode';\n\n\tpublic richEditSupport: modes.IRichEditSupport;\n\n\tconstructor() {\n\t\tthis.richEditSupport = {\n\t\t\twordDefinition: NullMode.DEFAULT_WORD_REGEXP\n\t\t};\n\t}\n\n\tpublic getId():string {\n\t\treturn NullMode.ID;\n\t}\n\n\tpublic toSimplifiedMode(): modes.IMode {\n\t\treturn this;\n\t}\n}\n\nexport function nullTokenize(mode: modes.IMode, buffer:string, state: modes.IState, deltaOffset:number = 0, stopAtOffset?:number): modes.ILineTokens {\n\tvar tokens:modes.IToken[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\ttype: ''\n\t\t}\n\t];\n\n\tvar modeTransitions:modes.IModeTransition[] = [\n\t\t{\n\t\t\tstartIndex: deltaOffset,\n\t\t\tmode: mode\n\t\t}\n\t];\n\n\treturn {\n\t\ttokens: tokens,\n\t\tactualStopOffset: deltaOffset + buffer.length,\n\t\tendState: state,\n\t\tmodeTransitions: modeTransitions\n\t};\n}\n"]}