{"version":3,"file":"mirrorModel.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/model/mirrorModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {dispose} from 'vs/base/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModelLine} from 'vs/editor/common/model/modelLine';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {TextModelWithTokens} from 'vs/editor/common/model/textModelWithTokens';\nimport {IMode} from 'vs/editor/common/modes';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {PrefixSumComputer} from 'vs/editor/common/viewModel/prefixSumComputer';\n\nexport interface IMirrorModelEvents {\n\tcontentChanged: editorCommon.IModelContentChangedEvent[];\n}\n\nexport class AbstractMirrorModel extends TextModelWithTokens implements editorCommon.IMirrorModel {\n\n\t_lineStarts:PrefixSumComputer;\n\t_associatedResource:URI;\n\n\tconstructor(allowedEventTypes:string[], versionId:number, value:editorCommon.IRawText, mode:IMode|TPromise<IMode>, associatedResource?:URI) {\n\t\tsuper(allowedEventTypes.concat([editorCommon.EventType.ModelDispose]), value, false, mode);\n\n\t\tthis._setVersionId(versionId);\n\t\tthis._associatedResource = associatedResource;\n\t}\n\n\tpublic getModeId(): string {\n\t\treturn this.getMode().getId();\n\t}\n\n\tpublic getEmbeddedAtPosition(position:editorCommon.IPosition):editorCommon.IMirrorModel {\n\t\treturn null;\n\t}\n\n\tpublic getAllEmbedded():editorCommon.IMirrorModel[] {\n\t\treturn [];\n\t}\n\n\tpublic _constructLines(rawText:editorCommon.IRawText):void {\n\t\tsuper._constructLines(rawText);\n\t\t// Force EOL to be \\n\n\t\tthis._EOL = '\\n';\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.emit(editorCommon.EventType.ModelDispose);\n\t\tsuper.dispose();\n\t}\n\n\tpublic getAssociatedResource(): URI {\n\t\treturn this._associatedResource;\n\t}\n\n\tprivate _ensurePrefixSum(): void {\n\t\tif(!this._lineStarts) {\n\t\t\tvar lineStartValues:number[] = [],\n\t\t\t\teolLength = this.getEOL().length;\n\t\t\tfor (var i = 0, len = this._lines.length; i < len; i++) {\n\t\t\t\tlineStartValues.push(this._lines[i].text.length + eolLength);\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\tpublic getRangeFromOffsetAndLength(offset:number, length:number):editorCommon.IRange {\n\t\tvar startPosition = this.getPositionFromOffset(offset),\n\t\t\tendPosition = this.getPositionFromOffset(offset + length);\n\t\treturn {\n\t\t\tstartLineNumber: startPosition.lineNumber,\n\t\t\tstartColumn: startPosition.column,\n\t\t\tendLineNumber: endPosition.lineNumber,\n\t\t\tendColumn: endPosition.column\n\t\t};\n\t}\n\n\tpublic getOffsetAndLengthFromRange(range:editorCommon.IRange):{offset:number; length:number;} {\n\t\tvar startOffset = this.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn }),\n\t\t\tendOffset = this.getOffsetFromPosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\t\treturn {\n\t\t\toffset: startOffset,\n\t\t\tlength: endOffset - startOffset\n\t\t};\n\t}\n\n\tpublic getPositionFromOffset(offset:number):editorCommon.IPosition {\n\t\tthis._ensurePrefixSum();\n\n\t\tlet r = this._lineStarts.getIndexOf(offset);\n\t\treturn {\n\t\t\tlineNumber: r.index + 1,\n\t\t\tcolumn: this.getEOL().length + r.remainder\n\t\t};\n\t}\n\n\tpublic getOffsetFromPosition(position:editorCommon.IPosition): number {\n\t\treturn this.getLineStart(position.lineNumber) + position.column - 1 /* column isn't zero-index based */;\n\t}\n\n\tpublic getLineStart(lineNumber:number): number {\n\t\tthis._ensurePrefixSum();\n\n\t\tvar lineIndex = Math.min(lineNumber, this._lines.length) - 1;\n\t\treturn this._lineStarts.getAccumulatedValue(lineIndex - 1);\n\t}\n\n\tpublic getAllWordsWithRange(): editorCommon.IRangeWithText[] {\n\t\tif (this._lines.length > 10000) {\n\t\t\t// This is a very heavy method, unavailable for very heavy models\n\t\t\treturn [];\n\t\t}\n\n\t\tvar result:editorCommon.IRangeWithText[] = [],\n\t\t\ti:number;\n\n\t\tvar toTextRange = function (info: editorCommon.IWordRange) {\n\t\t\tvar s = line.text.substring(info.start, info.end);\n\t\t\tvar r = { startLineNumber: i + 1, startColumn: info.start + 1, endLineNumber: i + 1, endColumn: info.end + 1 };\n\t\t\tresult.push({ text: s, range: r});\n\t\t};\n\n\t\tfor(i = 0; i < this._lines.length; i++) {\n\t\t\tvar line = this._lines[i];\n\t\t\tthis.wordenize(line.text).forEach(toTextRange);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getAllWords(): string[] {\n\t\tvar result:string[] = [];\n\t\tthis._lines.forEach((line) => {\n\t\t\tthis.wordenize(line.text).forEach((info) => {\n\t\t\t\tresult.push(line.text.substring(info.start, info.end));\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic getAllUniqueWords(skipWordOnce?:string) : string[] {\n\t\tvar foundSkipWord = false;\n\t\tvar uniqueWords = {};\n\t\treturn this.getAllWords().filter((word) => {\n\t\t\tif (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n\t\t\t\tfoundSkipWord = true;\n\t\t\t\treturn false;\n\t\t\t} else if (uniqueWords[word]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tuniqueWords[word] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n//\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n\tprivate wordenize(content:string): editorCommon.IWordRange[] {\n\t\tvar result:editorCommon.IWordRange[] = [];\n\t\tvar match:RegExpExecArray;\n\t\tvar wordsRegexp = this._getWordDefinition();\n\t\twhile (match = wordsRegexp.exec(content)) {\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class MirrorModelEmbedded extends AbstractMirrorModel implements editorCommon.IMirrorModel {\n\n\tprivate _actualModel:MirrorModel;\n\n\tconstructor(actualModel:MirrorModel, includeRanges:editorCommon.IRange[], mode:IMode, url:URI) {\n\t\tsuper(['changed'], actualModel.getVersionId(), MirrorModelEmbedded._getMirrorValueWithinRanges(actualModel, includeRanges), mode, url);\n\t\tthis._actualModel = actualModel;\n\t}\n\n\tprivate static _getMirrorValueWithinRanges(actualModel:MirrorModel, includeRanges:editorCommon.IRange[]): editorCommon.IRawText {\n\n\t\tvar\tresultingText = '',\n\t\t\tprevLineAdded = 1,\n\t\t\tprevColumnAdded = 1,\n\t\t\ti:number;\n\n\t\tfor (i = 0; i < includeRanges.length; i++) {\n\t\t\tvar includeRange = includeRanges[i];\n\n\t\t\tresultingText += actualModel.getEmptiedValueInRange({\n\t\t\t\tstartLineNumber: prevLineAdded,\n\t\t\t\tstartColumn: prevColumnAdded,\n\t\t\t\tendLineNumber: includeRange.startLineNumber,\n\t\t\t\tendColumn: includeRange.startColumn\n\t\t\t}, ' ');\n\n\t\t\tresultingText += actualModel.getValueInRange(includeRange);\n\n\t\t\tprevLineAdded = includeRange.endLineNumber;\n\t\t\tprevColumnAdded = includeRange.endColumn;\n\t\t}\n\n\t\tvar lastLineNumber = actualModel.getLineCount(),\n\t\t\tlastColumn = actualModel.getLineMaxColumn(lastLineNumber);\n\n\t\tresultingText += actualModel.getEmptiedValueInRange({\n\t\t\tstartLineNumber: prevLineAdded,\n\t\t\tstartColumn: prevColumnAdded,\n\t\t\tendLineNumber: lastLineNumber,\n\t\t\tendColumn: lastColumn\n\t\t}, ' ');\n\n\t\tlet actualModelOptions = actualModel.getOptions();\n\t\treturn TextModel.toRawText(resultingText, {\n\t\t\ttabSize: actualModelOptions.tabSize,\n\t\t\tinsertSpaces: actualModelOptions.insertSpaces,\n\t\t\tdetectIndentation: false,\n\t\t\tdefaultEOL: actualModelOptions.defaultEOL\n\t\t});\n\t}\n\n\tpublic setIncludedRanges(newIncludedRanges:editorCommon.IRange[]): void {\n\t\tvar prevVersionId = this.getVersionId();\n\n\t\t// Force recreating of line starts (when used)\n\t\tthis._lineStarts = null;\n\t\tthis._constructLines(MirrorModelEmbedded._getMirrorValueWithinRanges(this._actualModel, newIncludedRanges));\n\t\tthis._resetTokenizationState();\n\n\t\tthis._setVersionId(prevVersionId + 1);\n\n\t\tthis.emit('changed', {});\n\t}\n\n}\n\nclass EmbeddedModeRange {\n\tpublic mode: IMode;\n\tpublic ranges: editorCommon.IRange[];\n\n\tpublic constructor(mode: IMode) {\n\t\tthis.mode = mode;\n\t\tthis.ranges = [];\n\t}\n}\n\nexport function createTestMirrorModelFromString(value:string, mode:IMode = null, associatedResource?:URI): MirrorModel {\n\treturn new MirrorModel(null, 0, TextModel.toRawText(value, TextModel.DEFAULT_CREATION_OPTIONS), mode, associatedResource);\n}\n\nexport class MirrorModel extends AbstractMirrorModel implements editorCommon.IMirrorModel {\n\n\tprivate _resourceService: IResourceService;\n\tprivate _embeddedModels: {[modeId:string]:MirrorModelEmbedded;};\n\n\tconstructor(resourceService:IResourceService, versionId:number, value:editorCommon.IRawText, mode:IMode|TPromise<IMode>, associatedResource?:URI) {\n\t\tsuper(['changed'], versionId, value, mode, associatedResource);\n\n\t\tthis._resourceService = resourceService;\n\t\tthis._embeddedModels = {};\n\t\tthis._updateEmbeddedModels();\n\t}\n\n\tpublic getEmbeddedAtPosition(position:editorCommon.IPosition):editorCommon.IMirrorModel {\n\t\tvar modeAtPosition = this.getModeAtPosition(position.lineNumber, position.column);\n\t\tif (this._embeddedModels.hasOwnProperty(modeAtPosition.getId())) {\n\t\t\treturn this._embeddedModels[modeAtPosition.getId()];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getAllEmbedded():editorCommon.IMirrorModel[] {\n\t\treturn Object.keys(this._embeddedModels).map((embeddedModeId) => this._embeddedModels[embeddedModeId]);\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t\tvar embeddedModels = Object.keys(this._embeddedModels).map((modeId) => this._embeddedModels[modeId]);\n\t\tembeddedModels.forEach((embeddedModel) => this._resourceService.remove(embeddedModel.getAssociatedResource()));\n\t\tdispose(embeddedModels);\n\t\tthis._embeddedModels = {};\n\t}\n\n\tpublic setMode(newMode:IMode): void;\n\tpublic setMode(newModePromise:TPromise<IMode>): void;\n\tpublic setMode(newModeOrPromise:any): void {\n\t\tsuper.setMode(newModeOrPromise);\n\t\tthis._updateEmbeddedModels();\n\t}\n\n\tprivate static _getModesRanges(model: editorCommon.IMirrorModel): {[modeId:string]:EmbeddedModeRange} {\n\t\tvar encounteredModesRanges:{[modeId:string]:EmbeddedModeRange} = {};\n\n\t\tvar getOrCreateEmbeddedModeRange = (modeId:string, mode:IMode) => {\n\t\t\tif (!encounteredModesRanges.hasOwnProperty(modeId)) {\n\t\t\t\tencounteredModesRanges[modeId] = new EmbeddedModeRange(mode);\n\t\t\t}\n\t\t\treturn encounteredModesRanges[modeId];\n\t\t};\n\n\t\tvar lineCount = model.getLineCount();\n\t\tvar currentModeId = model.getMode().getId();\n\t\tvar currentMode = model.getMode();\n\t\tvar currentStartLineNumber = 1, currentStartColumn = 1;\n\n\t\tfor (var lineNumber = 1; lineNumber <= lineCount; lineNumber++) {\n\t\t\tvar modeTransitions = model._getLineModeTransitions(lineNumber);\n\n\t\t\tfor (var i = 0; i < modeTransitions.length; i++) {\n\t\t\t\tvar modeTransition = modeTransitions[i];\n\t\t\t\tif (modeTransition.mode.getId() !== currentModeId) {\n\n\t\t\t\t\tvar modeRange = getOrCreateEmbeddedModeRange(currentModeId, currentMode);\n\t\t\t\t\tmodeRange.ranges.push({\n\t\t\t\t\t\tstartLineNumber: currentStartLineNumber,\n\t\t\t\t\t\tstartColumn: currentStartColumn,\n\t\t\t\t\t\tendLineNumber: lineNumber,\n\t\t\t\t\t\tendColumn: modeTransition.startIndex + 1\n\t\t\t\t\t});\n\n\t\t\t\t\tcurrentModeId = modeTransition.mode.getId();\n\t\t\t\t\tcurrentMode = modeTransition.mode;\n\t\t\t\t\tcurrentStartLineNumber = lineNumber;\n\t\t\t\t\tcurrentStartColumn = modeTransition.startIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar lastLineNumber = lineCount;\n\t\tvar lastColumn = model.getLineMaxColumn(lastLineNumber);\n\n\t\tif (currentStartLineNumber !== lastLineNumber || currentStartColumn !== lastColumn) {\n\t\t\tvar modeRange = getOrCreateEmbeddedModeRange(currentModeId, currentMode);\n\t\t\tmodeRange.ranges.push({\n\t\t\t\tstartLineNumber: currentStartLineNumber,\n\t\t\t\tstartColumn: currentStartColumn,\n\t\t\t\tendLineNumber: lastLineNumber,\n\t\t\t\tendColumn: lastColumn\n\t\t\t});\n\t\t}\n\n\t\treturn encounteredModesRanges;\n\t}\n\n\tprivate _updateEmbeddedModels(): boolean {\n\t\tif (!this._resourceService || !this.getMode().tokenizationSupport || !this.getMode().tokenizationSupport.shouldGenerateEmbeddedModels) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar newModesRanges = MirrorModel._getModesRanges(this);\n\n\t\t// Empty out embedded models that have disappeared\n\t\tvar oldNestedModesIds = Object.keys(this._embeddedModels);\n\t\tfor (var i = 0; i < oldNestedModesIds.length; i++) {\n\t\t\tvar oldNestedModeId = oldNestedModesIds[i];\n\t\t\tif (!newModesRanges.hasOwnProperty(oldNestedModeId)) {\n\t\t\t\tthis._embeddedModels[oldNestedModeId].setIncludedRanges([{\n\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\tendColumn: 1\n\t\t\t\t}]);\n\t\t\t}\n\t\t}\n\n\t\tvar newNestedModesIds = Object.keys(newModesRanges);\n\t\tfor (var i = 0; i < newNestedModesIds.length; i++) {\n\t\t\tvar newNestedModeId = newNestedModesIds[i];\n\t\t\tif (this._embeddedModels.hasOwnProperty(newNestedModeId)) {\n\t\t\t\tthis._embeddedModels[newNestedModeId].setIncludedRanges(newModesRanges[newNestedModeId].ranges);\n\t\t\t} else {\n\t\t\t\t// TODO@Alex: implement derived resources (embedded mirror models) better\n\t\t\t\tvar embeddedModelUrl = this.getAssociatedResource().withFragment(this.getAssociatedResource().fragment + 'URL_MARSHAL_REMOVE' + newNestedModeId);\n\t\t\t\tthis._embeddedModels[newNestedModeId] = new MirrorModelEmbedded(this, newModesRanges[newNestedModeId].ranges, newModesRanges[newNestedModeId].mode, embeddedModelUrl);\n\t\t\t\tthis._resourceService.insert(this._embeddedModels[newNestedModeId].getAssociatedResource(), this._embeddedModels[newNestedModeId]);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic onEvents(events:IMirrorModelEvents) : boolean {\n\t\tlet changed = false;\n\t\tfor (let i = 0, len = events.contentChanged.length; i < len; i++) {\n\t\t\tlet contentChangedEvent = events.contentChanged[i];\n\n\t\t\t// Force recreating of line starts\n\t\t\tthis._lineStarts = null;\n\n\t\t\tthis._setVersionId(contentChangedEvent.versionId);\n\t\t\tswitch (contentChangedEvent.changeType) {\n\t\t\t\tcase editorCommon.EventType.ModelContentChangedFlush:\n\t\t\t\t\tthis._onLinesFlushed(<editorCommon.IModelContentChangedFlushEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelContentChangedLinesDeleted:\n\t\t\t\t\tthis._onLinesDeleted(<editorCommon.IModelContentChangedLinesDeletedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelContentChangedLinesInserted:\n\t\t\t\t\tthis._onLinesInserted(<editorCommon.IModelContentChangedLinesInsertedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase editorCommon.EventType.ModelContentChangedLineChanged:\n\t\t\t\t\tthis._onLineChanged(<editorCommon.IModelContentChangedLineChangedEvent>contentChangedEvent);\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar shouldFlushMarkers = false;\n\t\tif (changed) {\n\t\t\tthis.emit('changed', {});\n\t\t\tshouldFlushMarkers = this._updateEmbeddedModels();\n\t\t}\n\t\treturn shouldFlushMarkers;\n\t}\n\n\tprivate _onLinesFlushed(e:editorCommon.IModelContentChangedFlushEvent): void {\n\t\t// Flush my lines\n\t\tthis._constructLines(e.detail);\n\t\tthis._resetTokenizationState();\n\t}\n\n\tprivate _onLineChanged(e:editorCommon.IModelContentChangedLineChangedEvent) : void {\n\t\tthis._lines[e.lineNumber - 1].applyEdits({}, [{\n\t\t\tstartColumn: 1,\n\t\t\tendColumn: Number.MAX_VALUE,\n\t\t\ttext: e.detail,\n\t\t\tforceMoveMarkers: false\n\t\t}]);\n\n\t\tthis._invalidateLine(e.lineNumber - 1);\n\t}\n\n\tprivate _onLinesDeleted(e:editorCommon.IModelContentChangedLinesDeletedEvent) : void {\n\t\tvar fromLineIndex = e.fromLineNumber - 1,\n\t\t\ttoLineIndex = e.toLineNumber - 1;\n\n\t\t// Save first line's state\n\t\tvar firstLineState = this._lines[fromLineIndex].getState();\n\n\t\tthis._lines.splice(fromLineIndex, toLineIndex - fromLineIndex + 1);\n\n\t\tif (fromLineIndex < this._lines.length) {\n\t\t\t// This check is always true in real world, but the tests forced this\n\n\t\t\t// Restore first line's state\n\t\t\tthis._lines[fromLineIndex].setState(firstLineState);\n\n\t\t\t// Invalidate line\n\t\t\tthis._invalidateLine(fromLineIndex);\n\t\t}\n\t}\n\n\tprivate _onLinesInserted(e:editorCommon.IModelContentChangedLinesInsertedEvent) : void {\n\t\tvar lineIndex:number,\n\t\t\ti:number,\n\t\t\tsplitLines = e.detail.split('\\n');\n\n\t\tfor (lineIndex = e.fromLineNumber - 1, i = 0; lineIndex < e.toLineNumber; lineIndex++, i++) {\n\t\t\tthis._lines.splice(lineIndex, 0, new ModelLine(0, splitLines[i]));\n\t\t}\n\n\t\tif (e.fromLineNumber >= 2) {\n\t\t\t// This check is always true in real world, but the tests forced this\n\t\t\tthis._invalidateLine(e.fromLineNumber - 2);\n\t\t}\n\t}\n}\n"]}