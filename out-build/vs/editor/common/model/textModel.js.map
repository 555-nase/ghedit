{"version":3,"file":"vs/editor/common/model/textModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/model/textModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {OrderGuaranteeEventEmitter} from 'vs/base/common/eventEmitter';\nimport * as strings from 'vs/base/common/strings';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ModelLine} from 'vs/editor/common/model/modelLine';\nimport {guessIndentation} from 'vs/editor/common/model/indentationGuesser';\nimport {DEFAULT_INDENTATION} from 'vs/editor/common/config/defaultConfig';\n\nvar LIMIT_FIND_COUNT = 999;\n\nexport class TextModel extends OrderGuaranteeEventEmitter implements editorCommon.ITextModel {\n\n\tpublic static DEFAULT_CREATION_OPTIONS: editorCommon.ITextModelCreationOptions = {\n\t\ttabSize: DEFAULT_INDENTATION.tabSize,\n\t\tinsertSpaces: DEFAULT_INDENTATION.insertSpaces,\n\t\tdetectIndentation: false,\n\t\tdefaultEOL: editorCommon.DefaultEndOfLine.LF\n\t};\n\n\t_lines:ModelLine[];\n\t_EOL:string;\n\t_isDisposed:boolean;\n\t_isDisposing:boolean;\n\tprotected _options: editorCommon.ITextModelResolvedOptions;\n\n\tprivate _versionId:number;\n\t/**\n\t * Unlike, versionId, this can go down (via undo) or go to previous values (via redo)\n\t */\n\tprivate _alternativeVersionId: number;\n\tprivate _BOM:string;\n\n\tconstructor(allowedEventTypes:string[], rawText:editorCommon.IRawText) {\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelContentChanged, editorCommon.EventType.ModelOptionsChanged);\n\t\tsuper(allowedEventTypes);\n\n\t\tthis._options = rawText.options;\n\t\tthis._constructLines(rawText);\n\t\tthis._setVersionId(1);\n\t\tthis._isDisposed = false;\n\t\tthis._isDisposing = false;\n\t}\n\n\tpublic getOptions(): editorCommon.ITextModelResolvedOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateOptions(newOpts:editorCommon.ITextModelUpdateOptions): void {\n\t\tlet somethingChanged = false;\n\t\tlet changed:editorCommon.IModelOptionsChangedEvent = {\n\t\t\ttabSize: false,\n\t\t\tinsertSpaces: false\n\t\t};\n\n\t\tif (typeof newOpts.insertSpaces !== 'undefined') {\n\t\t\tif (this._options.insertSpaces !== newOpts.insertSpaces) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t\tchanged.insertSpaces = true;\n\t\t\t\tthis._options.insertSpaces = newOpts.insertSpaces;\n\t\t\t}\n\t\t}\n\t\tif (typeof newOpts.tabSize !== 'undefined') {\n\t\t\tif (this._options.tabSize !== newOpts.tabSize) {\n\t\t\t\tsomethingChanged = true;\n\t\t\t\tchanged.tabSize = true;\n\t\t\t\tthis._options.tabSize = newOpts.tabSize;\n\t\t\t}\n\t\t}\n\n\t\tif (somethingChanged) {\n\t\t\tthis.emit(editorCommon.EventType.ModelOptionsChanged, changed);\n\t\t}\n\t}\n\n\tpublic detectIndentation(defaultInsertSpaces:boolean, defaultTabSize:number): void {\n\t\tlet lines = this._lines.map(line => line.text);\n\t\tlet guessedIndentation = guessIndentation(lines, defaultTabSize, defaultInsertSpaces);\n\t\tthis.updateOptions({\n\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\ttabSize: guessedIndentation.tabSize\n\t\t});\n\t}\n\n\tprivate _normalizeIndentationFromWhitespace(str:string): string {\n\t\tlet tabSize = this._options.tabSize;\n\t\tlet insertSpaces = this._options.insertSpaces;\n\n\t\tlet spacesCnt = 0;\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tif (str.charAt(i) === '\\t') {\n\t\t\t\tspacesCnt += tabSize;\n\t\t\t} else {\n\t\t\t\tspacesCnt++;\n\t\t\t}\n\t\t}\n\n\t\tlet result = '';\n\t\tif (!insertSpaces) {\n\t\t\tlet tabsCnt = Math.floor(spacesCnt / tabSize);\n\t\t\tspacesCnt = spacesCnt % tabSize;\n\t\t\tfor (let i = 0; i < tabsCnt; i++) {\n\t\t\t\tresult += '\\t';\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < spacesCnt; i++) {\n\t\t\tresult += ' ';\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic normalizeIndentation(str:string): string {\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(str);\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tfirstNonWhitespaceIndex = str.length;\n\t\t}\n\t\treturn this._normalizeIndentationFromWhitespace(str.substring(0, firstNonWhitespaceIndex)) + str.substring(firstNonWhitespaceIndex);\n\t}\n\n\tpublic getOneIndent(): string {\n\t\tlet tabSize = this._options.tabSize;\n\t\tlet insertSpaces = this._options.insertSpaces;\n\n\t\tif (insertSpaces) {\n\t\t\tlet result = '';\n\t\t\tfor (let i = 0; i < tabSize; i++) {\n\t\t\t\tresult += ' ';\n\t\t\t}\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn '\\t';\n\t\t}\n\t}\n\n\tpublic getVersionId(): number {\n\t\treturn this._versionId;\n\t}\n\n\tpublic getAlternativeVersionId(): number {\n\t\treturn this._alternativeVersionId;\n\t}\n\n\t_increaseVersionId(): void {\n\t\tthis._setVersionId(this._versionId + 1);\n\t}\n\n\t_setVersionId(newVersionId:number): void {\n\t\tthis._versionId = newVersionId;\n\t\tthis._alternativeVersionId = this._versionId;\n\t}\n\n\t_overwriteAlternativeVersionId(newAlternativeVersionId:number): void {\n\t\tthis._alternativeVersionId = newAlternativeVersionId;\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\t// Null out members, such that any use of a disposed model will throw exceptions sooner rather than later\n\t\tthis._lines = null;\n\t\tthis._EOL = null;\n\t\tthis._BOM = null;\n\n\t\tsuper.dispose();\n\t}\n\n\t_createContentChangedFlushEvent(): editorCommon.IModelContentChangedFlushEvent {\n\t\treturn {\n\t\t\tchangeType: editorCommon.EventType.ModelContentChangedFlush,\n\t\t\tdetail: null,\n\t\t\t// TODO@Alex -> remove these fields from here\n\t\t\tversionId: -1,\n\t\t\tisUndoing: false,\n\t\t\tisRedoing: false\n\t\t};\n\t}\n\n\tprotected _emitContentChanged2(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number, rangeLength:number, text:string, isUndoing:boolean, isRedoing:boolean): void {\n\t\tvar e:editorCommon.IModelContentChangedEvent2 = {\n\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\trangeLength: rangeLength,\n\t\t\ttext: text,\n\t\t\teol: this._EOL,\n\t\t\tversionId: this.getVersionId(),\n\t\t\tisUndoing: isUndoing,\n\t\t\tisRedoing: isRedoing\n\t\t};\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelContentChanged2, e);\n\t\t}\n\t}\n\n\t_resetValue(e:editorCommon.IModelContentChangedFlushEvent, newValue:editorCommon.IRawText): void {\n\t\tthis._constructLines(newValue);\n\n\t\tthis._increaseVersionId();\n\n\t\te.detail = this.toRawText();\n\t\te.versionId = this._versionId;\n\t}\n\n\tpublic toRawText(): editorCommon.IRawText {\n\t\treturn {\n\t\t\tBOM: this._BOM,\n\t\t\tEOL: this._EOL,\n\t\t\tlines: this.getLinesContent(),\n\t\t\tlength: this.getValueLength(),\n\t\t\toptions: this._options\n\t\t};\n\t}\n\n\tpublic equals(other: editorCommon.IRawText): boolean {\n\t\tif (this._BOM !== other.BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._EOL !== other.EOL) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._lines.length !== other.lines.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tif (this._lines[i].text !== other.lines[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic setValue(value:string): void {\n\t\tlet rawText: editorCommon.IRawText = null;\n\t\tif (value !== null) {\n\t\t\trawText = TextModel.toRawText(value, {\n\t\t\t\ttabSize: this._options.tabSize,\n\t\t\t\tinsertSpaces: this._options.insertSpaces,\n\t\t\t\tdetectIndentation: false,\n\t\t\t\tdefaultEOL: this._options.defaultEOL\n\t\t\t});\n\t\t}\n\t\tthis.setValueFromRawText(rawText);\n\t}\n\n\tpublic setValueFromRawText(newValue:editorCommon.IRawText): void {\n\t\tif (newValue === null) {\n\t\t\t// There's nothing to do\n\t\t\treturn;\n\t\t}\n\t\tvar oldFullModelRange = this.getFullModelRange();\n\t\tvar oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tvar endLineNumber = this.getLineCount();\n\t\tvar endColumn = this.getLineMaxColumn(endLineNumber);\n\t\tvar e = this._createContentChangedFlushEvent();\n\n\t\tthis._resetValue(e, newValue);\n\t\tthis._emitModelContentChangedFlushEvent(e);\n\t\tthis._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n\t}\n\n\tpublic getValue(eol?:editorCommon.EndOfLinePreference, preserveBOM:boolean=false): string {\n\t\tvar fullModelRange = this.getFullModelRange();\n\t\tvar fullModelValue = this.getValueInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._BOM + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getValueLength(eol?: editorCommon.EndOfLinePreference, preserveBOM: boolean = false): number {\n\t\tvar fullModelRange = this.getFullModelRange();\n\t\tvar fullModelValue = this.getValueLengthInRange(fullModelRange, eol);\n\n\t\tif (preserveBOM) {\n\t\t\treturn this._BOM.length + fullModelValue;\n\t\t}\n\n\t\treturn fullModelValue;\n\t}\n\n\tpublic getEmptiedValueInRange(rawRange:editorCommon.IRange, fillCharacter: string = '', eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): string {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._repeatCharacter(fillCharacter, range.endColumn - range.startColumn);\n\t\t}\n\n\t\tvar lineEnding = this._getEndOfLine(eol),\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._repeatCharacter(fillCharacter, this._lines[startLineIndex].text.length - range.startColumn + 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._repeatCharacter(fillCharacter, this._lines[i].text.length));\n\t\t}\n\t\tresultLines.push(this._repeatCharacter(fillCharacter, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tprivate _repeatCharacter(fillCharacter:string, count:number): string {\n\t\tvar r = '';\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tr += fillCharacter;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getValueInRange(rawRange:editorCommon.IRange, eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): string {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].text.substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tvar lineEnding = this._getEndOfLine(eol),\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].text.substring(range.startColumn - 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i].text);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].text.substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(rawRange:editorCommon.IRange, eol:editorCommon.EndOfLinePreference=editorCommon.EndOfLinePreference.TextDefined): number {\n\t\tvar range = this.validateRange(rawRange);\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tvar lineEndingLength = this._getEndOfLine(eol).length,\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresult = 0;\n\n\t\tresult += (this._lines[startLineIndex].text.length - range.startColumn + 1);\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresult += lineEndingLength + this._lines[i].text.length;\n\t\t}\n\t\tresult += lineEndingLength + (range.endColumn - 1);\n\n\t\treturn result;\n\t}\n\n\tpublic isDominatedByLongLines(longLineBoundary:number): boolean {\n\t\tvar smallLineCharCount = 0,\n\t\t\tlongLineCharCount = 0,\n\t\t\ti: number,\n\t\t\tlen: number,\n\t\t\tlines = this._lines,\n\t\t\tlineLength: number;\n\n\t\tfor (i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tlineLength = lines[i].text.length;\n\t\t\tif (lineLength >= longLineBoundary) {\n\t\t\t\tlongLineCharCount += lineLength;\n\t\t\t} else {\n\t\t\t\tsmallLineCharCount += lineLength;\n\t\t\t}\n\t\t}\n\n\t\treturn (longLineCharCount > smallLineCharCount);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\treturn this._lines[lineNumber - 1].text;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tvar r: string[] = [];\n\t\tfor (var i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tr[i] = this._lines[i].text;\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic getEOL(): string {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(eol: editorCommon.EndOfLineSequence): void {\n\t\tvar newEOL = (eol === editorCommon.EndOfLineSequence.CRLF ? '\\r\\n' : '\\n');\n\t\tif (this._EOL === newEOL) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tvar oldFullModelRange = this.getFullModelRange();\n\t\tvar oldModelValueLength = this.getValueLengthInRange(oldFullModelRange);\n\t\tvar endLineNumber = this.getLineCount();\n\t\tvar endColumn = this.getLineMaxColumn(endLineNumber);\n\n\t\tthis._EOL = newEOL;\n\t\tthis._increaseVersionId();\n\n\t\tvar e = this._createContentChangedFlushEvent();\n\t\te.detail = this.toRawText();\n\t\te.versionId = this._versionId;\n\n\t\tthis._emitModelContentChangedFlushEvent(e);\n\t\tthis._emitContentChanged2(1, 1, endLineNumber, endColumn, oldModelValueLength, this.getValue(), false, false);\n\t}\n\n\tpublic getLineMinColumn(lineNumber:number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber:number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\treturn this._lines[lineNumber - 1].text.length + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tvar result = strings.firstNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tif (lineNumber < 1 || lineNumber > this.getLineCount()) {\n\t\t\tthrow new Error('Illegal value ' + lineNumber + ' for `lineNumber`');\n\t\t}\n\n\t\tvar result = strings.lastNonWhitespaceIndex(this._lines[lineNumber - 1].text);\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tpublic validateLineNumber(lineNumber:number): number {\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t}\n\t\tif (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t}\n\t\treturn lineNumber;\n\t}\n\n\tpublic validatePosition(position:editorCommon.IPosition): editorCommon.IEditorPosition {\n\t\tvar lineNumber = position.lineNumber ? position.lineNumber : 1;\n\t\tvar column = position.column ? position.column : 1;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t}\n\t\tif (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t}\n\n\t\tif (column < 1) {\n\t\t\tcolumn = 1;\n\t\t}\n\t\tvar maxColumn = this.getLineMaxColumn(lineNumber);\n\t\tif (column > maxColumn) {\n\t\t\tcolumn = maxColumn;\n\t\t}\n\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tpublic validateRange(range:editorCommon.IRange): editorCommon.IEditorRange {\n\t\tvar start = this.validatePosition(new Position(range.startLineNumber, range.startColumn));\n\t\tvar end = this.validatePosition(new Position(range.endLineNumber, range.endColumn));\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\tpublic modifyPosition(rawPosition: editorCommon.IPosition, offset: number) : editorCommon.IEditorPosition {\n\t\tvar position = this.validatePosition(rawPosition);\n\n\t\t// Handle positive offsets, one line at a time\n\t\twhile (offset > 0) {\n\t\t\tvar maxColumn = this.getLineMaxColumn(position.lineNumber);\n\n\t\t\t// Get to end of line\n\t\t\tif (position.column < maxColumn) {\n\t\t\t\tvar subtract = Math.min(offset, maxColumn - position.column);\n\t\t\t\toffset -= subtract;\n\t\t\t\tposition.column += subtract;\n\t\t\t}\n\n\t\t\tif (offset === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Go to next line\n\t\t\toffset -= this._EOL.length;\n\t\t\tif (offset < 0) {\n\t\t\t\tthrow new Error('TextModel.modifyPosition: Breaking line terminators');\n\t\t\t}\n\n\t\t\t++position.lineNumber;\n\t\t\tif (position.lineNumber > this._lines.length) {\n\t\t\t\tthrow new Error('TextModel.modifyPosition: Offset goes beyond the end of the model');\n\t\t\t}\n\n\t\t\tposition.column = 1;\n\t\t}\n\n\t\t// Handle negative offsets, one line at a time\n\t\twhile (offset < 0) {\n\n\t\t\t// Get to the start of the line\n\t\t\tif (position.column > 1) {\n\t\t\t\tvar add = Math.min(-offset, position.column - 1);\n\t\t\t\toffset += add;\n\t\t\t\tposition.column -= add;\n\t\t\t}\n\n\t\t\tif (offset === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Go to the previous line\n\t\t\toffset += this._EOL.length;\n\t\t\tif (offset > 0) {\n\t\t\t\tthrow new Error('TextModel.modifyPosition: Breaking line terminators');\n\t\t\t}\n\n\t\t\t--position.lineNumber;\n\t\t\tif (position.lineNumber < 1) {\n\t\t\t\tthrow new Error('TextModel.modifyPosition: Offset goes beyond the beginning of the model');\n\t\t\t}\n\n\t\t\tposition.column = this.getLineMaxColumn(position.lineNumber);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\tpublic getFullModelRange(): editorCommon.IEditorRange {\n\t\tvar lineCount = this.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.getLineMaxColumn(lineCount));\n\t}\n\n\t_emitModelContentChangedFlushEvent(e:editorCommon.IModelContentChangedFlushEvent): void {\n\t\tif (!this._isDisposing) {\n\t\t\tthis.emit(editorCommon.EventType.ModelContentChanged, e);\n\t\t}\n\t}\n\n\tpublic static toRawText(rawText:string, opts:editorCommon.ITextModelCreationOptions): editorCommon.IRawText {\n\t\t// Count the number of lines that end with \\r\\n\n\t\tvar carriageReturnCnt = 0,\n\t\t\tlastCarriageReturnIndex = -1;\n\t\twhile ((lastCarriageReturnIndex = rawText.indexOf('\\r', lastCarriageReturnIndex + 1)) !== -1) {\n\t\t\tcarriageReturnCnt++;\n\t\t}\n\n\t\t// Split the text into liens\n\t\tvar lines = rawText.split(/\\r\\n|\\r|\\n/);\n\n\t\t// Remove the BOM (if present)\n\t\tvar BOM = '';\n\t\tif (strings.startsWithUTF8BOM(lines[0])) {\n\t\t\tBOM = strings.UTF8_BOM_CHARACTER;\n\t\t\tlines[0] = lines[0].substr(1);\n\t\t}\n\n\t\tvar lineFeedCnt = lines.length - 1;\n\t\tvar EOL = '';\n\t\tif (lineFeedCnt === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\tEOL = (opts.defaultEOL === editorCommon.DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t} else if (carriageReturnCnt > lineFeedCnt / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\tEOL = '\\r\\n';\n\t\t} else {\n\t\t\t// At least one line more ends in \\n\n\t\t\tEOL = '\\n';\n\t\t}\n\n\t\tlet resolvedOpts: editorCommon.ITextModelResolvedOptions;\n\t\tif (opts.detectIndentation) {\n\t\t\tlet guessedIndentation = guessIndentation(lines, opts.tabSize, opts.insertSpaces);\n\t\t\tresolvedOpts = {\n\t\t\t\ttabSize: guessedIndentation.tabSize,\n\t\t\t\tinsertSpaces: guessedIndentation.insertSpaces,\n\t\t\t\tdefaultEOL: opts.defaultEOL\n\t\t\t};\n\t\t} else {\n\t\t\tresolvedOpts = {\n\t\t\t\ttabSize: opts.tabSize,\n\t\t\t\tinsertSpaces: opts.insertSpaces,\n\t\t\t\tdefaultEOL: opts.defaultEOL\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tBOM: BOM,\n\t\t\tEOL: EOL,\n\t\t\tlines: lines,\n\t\t\tlength: rawText.length,\n\t\t\toptions: resolvedOpts\n\t\t};\n\t}\n\n\t_constructLines(rawText:editorCommon.IRawText): void {\n\t\tvar rawLines = rawText.lines,\n\t\t\tmodelLines: ModelLine[] = [],\n\t\t\ti: number,\n\t\t\tlen: number;\n\n\t\tfor (i = 0, len = rawLines.length; i < len; i++) {\n\t\t\tmodelLines.push(new ModelLine(i + 1, rawLines[i]));\n\t\t}\n\t\tthis._BOM = rawText.BOM;\n\t\tthis._EOL = rawText.EOL;\n\t\tthis._lines = modelLines;\n\t}\n\n\tprivate _getEndOfLine(eol:editorCommon.EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase editorCommon.EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase editorCommon.EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase editorCommon.EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t}\n\t\tthrow new Error('Unknown EOL preference');\n\t}\n\n\tpublic findMatches(searchString:string, rawSearchScope:any, isRegex:boolean, matchCase:boolean, wholeWord:boolean, limitResultCount:number = LIMIT_FIND_COUNT): editorCommon.IEditorRange[] {\n\t\tvar regex = strings.createSafeRegExp(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!regex) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar searchRange:editorCommon.IEditorRange;\n\t\tif (Range.isIRange(rawSearchScope)) {\n\t\t\tsearchRange = rawSearchScope;\n\t\t} else {\n\t\t\tsearchRange = this.getFullModelRange();\n\t\t}\n\n\t\treturn this._doFindMatches(searchRange, regex, limitResultCount);\n\t}\n\n\tpublic findNextMatch(searchString:string, rawSearchStart:editorCommon.IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): editorCommon.IEditorRange {\n\t\tvar regex = strings.createSafeRegExp(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar searchStart = this.validatePosition(rawSearchStart),\n\t\t\tlineCount = this.getLineCount(),\n\t\t\tstartLineNumber = searchStart.lineNumber,\n\t\t\ttext: string,\n\t\t\tr: editorCommon.IEditorRange;\n\n\t\t// Look in first line\n\t\ttext = this._lines[startLineNumber - 1].text.substring(searchStart.column - 1);\n\t\tr = this._findMatchInLine(regex, text, startLineNumber, searchStart.column - 1);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (var i = 1; i <= lineCount; i++) {\n\t\t\tvar lineIndex = (startLineNumber + i - 1) % lineCount;\n\t\t\ttext = this._lines[lineIndex].text;\n\t\t\tr = this._findMatchInLine(regex, text, lineIndex + 1, 0);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic findPreviousMatch(searchString:string, rawSearchStart:editorCommon.IPosition, isRegex:boolean, matchCase:boolean, wholeWord:boolean): editorCommon.IEditorRange {\n\t\tvar regex = strings.createSafeRegExp(searchString, isRegex, matchCase, wholeWord);\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar searchStart = this.validatePosition(rawSearchStart),\n\t\t\tlineCount = this.getLineCount(),\n\t\t\tstartLineNumber = searchStart.lineNumber,\n\t\t\ttext: string,\n\t\t\tr: editorCommon.IEditorRange;\n\n\t\t// Look in first line\n\t\ttext = this._lines[startLineNumber - 1].text.substring(0, searchStart.column - 1);\n\t\tr = this._findLastMatchInLine(regex, text, startLineNumber);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (var i = 1; i <= lineCount; i++) {\n\t\t\tvar lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n\t\t\ttext = this._lines[lineIndex].text;\n\t\t\tr = this._findLastMatchInLine(regex, text, lineIndex + 1);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _doFindMatches(searchRange:editorCommon.IEditorRange, searchRegex:RegExp, limitResultCount:number): editorCommon.IEditorRange[] {\n\t\tvar result:editorCommon.IEditorRange[] = [],\n\t\t\ttext: string,\n\t\t\tcounter = 0;\n\n\t\t// Early case for a search range that starts & stops on the same line number\n\t\tif (searchRange.startLineNumber === searchRange.endLineNumber) {\n\t\t\ttext = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n\t\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\t// Collect results from first line\n\t\ttext = this._lines[searchRange.startLineNumber - 1].text.substring(searchRange.startColumn - 1);\n\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.startLineNumber, searchRange.startColumn - 1, counter, result, limitResultCount);\n\n\t\t// Collect results from middle lines\n\t\tfor (var lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && counter < limitResultCount; lineNumber++) {\n\t\t\tcounter = this._findMatchesInLine(searchRegex, this._lines[lineNumber - 1].text, lineNumber, 0, counter, result, limitResultCount);\n\t\t}\n\n\t\t// Collect results from last line\n\t\tif (counter < limitResultCount) {\n\t\t\ttext = this._lines[searchRange.endLineNumber - 1].text.substring(0, searchRange.endColumn - 1);\n\t\t\tcounter = this._findMatchesInLine(searchRegex, text, searchRange.endLineNumber, 0, counter, result, limitResultCount);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _findMatchInLine(searchRegex:RegExp, text:string, lineNumber:number, deltaOffset:number): editorCommon.IEditorRange {\n\t\tvar m = searchRegex.exec(text);\n\t\tif (!m) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n\t}\n\n\tprivate _findLastMatchInLine(searchRegex:RegExp, text:string, lineNumber:number): editorCommon.IEditorRange {\n\t\tlet bestResult: editorCommon.IEditorRange = null;\n\t\tlet m:RegExpExecArray;\n\t\twhile ((m = searchRegex.exec(text))) {\n\t\t\tlet result = new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length);\n\t\t\tif (result.equalsRange(bestResult)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbestResult = result;\n\t\t}\n\t\treturn bestResult;\n\t}\n\n\tprivate _findMatchesInLine(searchRegex:RegExp, text:string, lineNumber:number, deltaOffset:number, counter:number, result:editorCommon.IEditorRange[], limitResultCount:number): number {\n\t\tvar m:RegExpExecArray;\n\t\t// Reset regex to search from the beginning\n\t\tsearchRegex.lastIndex = 0;\n\t\tdo {\n\t\t\tm = searchRegex.exec(text);\n\t\t\tif (m) {\n\t\t\t\tvar range = new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset);\n\t\t\t\t// Exit early if the regex matches the same range\n\t\t\t\tif (range.equalsRange(result[result.length - 1])) {\n\t\t\t\t\treturn counter;\n\t\t\t\t}\n\t\t\t\tresult.push(range);\n\t\t\t\tcounter++;\n\t\t\t\tif (counter >= limitResultCount) {\n\t\t\t\t\treturn counter;\n\t\t\t\t}\n\t\t\t}\n\t\t} while(m);\n\t\treturn counter;\n\t}\n}\n\nexport class RawText {\n\n\tpublic static fromString(rawText:string, opts:editorCommon.ITextModelCreationOptions): editorCommon.IRawText {\n\t\treturn TextModel.toRawText(rawText, opts);\n\t}\n\n\tpublic static fromStringWithModelOptions(rawText:string, model:editorCommon.IModel): editorCommon.IRawText {\n\t\tlet opts = model.getOptions();\n\t\treturn TextModel.toRawText(rawText, {\n\t\t\ttabSize: opts.tabSize,\n\t\t\tinsertSpaces: opts.insertSpaces,\n\t\t\tdetectIndentation: false,\n\t\t\tdefaultEOL: opts.defaultEOL\n\t\t});\n\t}\n\n}"]}