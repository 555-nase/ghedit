{"version":3,"file":"vs/editor/common/model/editableTextModel.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/model/editableTextModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {EditStack} from 'vs/editor/common/model/editStack';\nimport {ILineEdit, ILineMarker, ModelLine} from 'vs/editor/common/model/modelLine';\nimport {DeferredEventsBuilder, TextModelWithDecorations} from 'vs/editor/common/model/textModelWithDecorations';\nimport {IMode} from 'vs/editor/common/modes';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: editorCommon.ISingleEditOperationIdentifier;\n\trange: editorCommon.IEditorRange;\n\trangeLength: number;\n\tlines: string[];\n\tforceMoveMarkers: boolean;\n}\n\ninterface IIdentifiedLineEdit extends ILineEdit{\n\tlineNumber: number;\n}\n\nexport class EditableTextModel extends TextModelWithDecorations implements editorCommon.IEditableTextModel {\n\n\tprivate _commandManager:EditStack;\n\n\t// for extra details about change events:\n\tprivate _isUndoing:boolean;\n\tprivate _isRedoing:boolean;\n\n\t// editable range\n\tprivate _hasEditableRange:boolean;\n\tprivate _editableRangeId:string;\n\n\tconstructor(allowedEventTypes:string[], rawText:editorCommon.IRawText, modeOrPromise:IMode|TPromise<IMode>) {\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelContentChanged);\n\t\tallowedEventTypes.push(editorCommon.EventType.ModelContentChanged2);\n\t\tsuper(allowedEventTypes, rawText, modeOrPromise);\n\n\t\tthis._commandManager = new EditStack(this);\n\n\t\tthis._isUndoing = false;\n\t\tthis._isRedoing = false;\n\n\t\tthis._hasEditableRange = false;\n\t\tthis._editableRangeId = null;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._commandManager = null;\n\t\tsuper.dispose();\n\t}\n\n\t_resetValue(e:editorCommon.IModelContentChangedFlushEvent, newValue:editorCommon.IRawText): void {\n\t\tsuper._resetValue(e, newValue);\n\n\t\t// Destroy my edit history and settings\n\t\tthis._commandManager = new EditStack(this);\n\t\tthis._hasEditableRange = false;\n\t\tthis._editableRangeId = null;\n\t}\n\n\tpublic pushStackElement(): void {\n\t\tthis._commandManager.pushStackElement();\n\t}\n\n\tpublic pushEditOperations(beforeCursorState:editorCommon.IEditorSelection[], editOperations:editorCommon.IIdentifiedSingleEditOperation[], cursorStateComputer:editorCommon.ICursorStateComputer): editorCommon.IEditorSelection[] {\n\t\treturn this.deferredEmit(() => {\n\t\t\treturn this._commandManager.pushEditOperation(beforeCursorState, editOperations, cursorStateComputer);\n\t\t});\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations:IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high ammount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations:IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false,\n\t\t\tfirstEditRange = operations[0].range,\n\t\t\tlastEditRange = operations[operations.length-1].range,\n\t\t\tentireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn),\n\t\t\tlastEndLineNumber = firstEditRange.startLineNumber,\n\t\t\tlastEndColumn = firstEditRange.startColumn,\n\t\t\tresult: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tlet operation = operations[i],\n\t\t\t\trange = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tfor (let lineNumber = lastEndLineNumber; lineNumber < range.startLineNumber; lineNumber++) {\n\t\t\t\tif (lineNumber === lastEndLineNumber) {\n\t\t\t\t\tresult.push(this._lines[lineNumber - 1].text.substring(lastEndColumn - 1));\n\t\t\t\t} else {\n\t\t\t\t\tresult.push('\\n');\n\t\t\t\t\tresult.push(this._lines[lineNumber - 1].text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (range.startLineNumber === lastEndLineNumber) {\n\t\t\t\tresult.push(this._lines[range.startLineNumber - 1].text.substring(lastEndColumn - 1, range.startColumn - 1));\n\t\t\t} else {\n\t\t\t\tresult.push('\\n');\n\t\t\t\tresult.push(this._lines[range.startLineNumber - 1].text.substring(0, range.startColumn - 1));\n\t\t\t}\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.lines) {\n\t\t\t\tfor (let j = 0, lenJ = operation.lines.length; j < lenJ; j++) {\n\t\t\t\t\tif (j !== 0) {\n\t\t\t\t\t\tresult.push('\\n');\n\t\t\t\t\t}\n\t\t\t\t\tresult.push(operation.lines[j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastEndLineNumber = operation.range.endLineNumber;\n\t\t\tlastEndColumn = operation.range.endColumn;\n\t\t}\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange),\n\t\t\tlines: result.join('').split('\\n'),\n\t\t\tforceMoveMarkers: forceMoveMarkers\n\t\t};\n\t}\n\n\tprivate static _sortOpsAscending(a:IValidatedEditOperation, b:IValidatedEditOperation): number {\n\t\tlet r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a:IValidatedEditOperation, b:IValidatedEditOperation): number {\n\t\tlet r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\n\tpublic applyEdits(rawOperations:editorCommon.IIdentifiedSingleEditOperation[]): editorCommon.IIdentifiedSingleEditOperation[] {\n\t\tif (rawOperations.length === 0) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet operations:IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tlet op = rawOperations[i];\n\t\t\tlet validatedRange = this.validateRange(op.range);\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\tlines: op.text ? op.text.split(/\\r\\n|\\r|\\n/) : null,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(EditableTextModel._sortOpsAscending);\n\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tlet rangeEnd = operations[i].range.getEndPosition();\n\t\t\tlet nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t// overlapping ranges\n\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t}\n\t\t}\n\n\t\toperations = this._reduceOperations(operations);\n\n\t\tlet editableRange = this.getEditableRange();\n\t\tlet editableRangeStart = editableRange.getStartPosition();\n\t\tlet editableRangeEnd = editableRange.getEndPosition();\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tlet operationRange = operations[i].range;\n\t\t\tif (!editableRangeStart.isBeforeOrEqual(operationRange.getStartPosition()) || !operationRange.getEndPosition().isBeforeOrEqual(editableRangeEnd)) {\n\t\t\t\tthrow new Error('Editing outside of editable range not allowed!');\n\t\t\t}\n\t\t}\n\n\t\t// Delta encode operations\n\t\tlet reverseRanges = EditableTextModel._getInverseEditRanges(operations);\n\t\tlet reverseOperations: editorCommon.IIdentifiedSingleEditOperation[] = [];\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\treverseOperations[i] = {\n\t\t\t\tidentifier: operations[i].identifier,\n\t\t\t\trange: reverseRanges[i],\n\t\t\t\ttext: this.getValueInRange(operations[i].range),\n\t\t\t\tforceMoveMarkers: operations[i].forceMoveMarkers\n\t\t\t};\n\t\t}\n\n\t\tthis._applyEdits(operations);\n\n\t\treturn reverseOperations;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations:IValidatedEditOperation[]): editorCommon.IEditorRange[] {\n\t\tlet result:editorCommon.IEditorRange[] = [];\n\n\t\tlet prevOpEndLineNumber: number;\n\t\tlet prevOpEndColumn: number;\n\t\tlet prevOp:IValidatedEditOperation = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tlet op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: editorCommon.IEditorRange;\n\n\t\t\tif (op.lines && op.lines.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tlet lineCount = op.lines.length;\n\t\t\t\tlet firstLine = op.lines[0];\n\t\t\t\tlet lastLine = op.lines[lineCount - 1];\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLine.length);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLine.length + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _applyEdits(operations:IValidatedEditOperation[]): void {\n\n\t\t// Sort operations descending\n\t\toperations.sort(EditableTextModel._sortOpsDescending);\n\n\n\t\tthis._withDeferredEvents((deferredEventsBuilder:DeferredEventsBuilder) => {\n\t\t\tlet contentChangedEvents: editorCommon.IModelContentChangedEvent[] = [];\n\t\t\tlet contentChanged2Events: editorCommon.IModelContentChangedEvent2[] = [];\n\t\t\tlet lineEditsQueue: IIdentifiedLineEdit[] = [];\n\n\t\t\tlet queueLineEdit = (lineEdit:IIdentifiedLineEdit) => {\n\t\t\t\tif (lineEdit.startColumn === lineEdit.endColumn && lineEdit.text.length === 0) {\n\t\t\t\t\t// empty edit => ignore it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlineEditsQueue.push(lineEdit);\n\t\t\t};\n\n\t\t\tlet flushLineEdits = () => {\n\t\t\t\tif (lineEditsQueue.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlineEditsQueue.reverse();\n\n\t\t\t\t// `lineEditsQueue` now contains edits from smaller (line number,column) to larger (line number,column)\n\t\t\t\tlet currentLineNumber = lineEditsQueue[0].lineNumber, currentLineNumberStart = 0;\n\n\t\t\t\tfor (let i = 1, len = lineEditsQueue.length; i < len; i++) {\n\t\t\t\t\tlet lineNumber = lineEditsQueue[i].lineNumber;\n\n\t\t\t\t\tif (lineNumber === currentLineNumber) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._invalidateLine(currentLineNumber - 1);\n\t\t\t\t\tthis._lines[currentLineNumber - 1].applyEdits(deferredEventsBuilder.changedMarkers, lineEditsQueue.slice(currentLineNumberStart, i));\n\t\t\t\t\tcontentChangedEvents.push(this._createLineChangedEvent(currentLineNumber));\n\n\t\t\t\t\tcurrentLineNumber = lineNumber;\n\t\t\t\t\tcurrentLineNumberStart = i;\n\t\t\t\t}\n\n\t\t\t\tthis._invalidateLine(currentLineNumber - 1);\n\t\t\t\tthis._lines[currentLineNumber - 1].applyEdits(deferredEventsBuilder.changedMarkers, lineEditsQueue.slice(currentLineNumberStart, lineEditsQueue.length));\n\t\t\t\tcontentChangedEvents.push(this._createLineChangedEvent(currentLineNumber));\n\n\t\t\t\tlineEditsQueue = [];\n\t\t\t};\n\n\t\t\tlet minTouchedLineNumber = operations[operations.length - 1].range.startLineNumber;\n\t\t\tlet maxTouchedLineNumber = operations[0].range.endLineNumber + 1;\n\t\t\tlet totalLinesCountDelta = 0;\n\n\t\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\t\tlet op = operations[i];\n\n\t\t\t\t// console.log();\n\t\t\t\t// console.log('-------------------');\n\t\t\t\t// console.log('OPERATION #' + (i));\n\t\t\t\t// console.log('op: ', op);\n\t\t\t\t// console.log('<<<\\n' + this._lines.map(l => l.text).join('\\n') + '\\n>>>');\n\n\t\t\t\tlet startLineNumber = op.range.startLineNumber;\n\t\t\t\tlet startColumn = op.range.startColumn;\n\t\t\t\tlet endLineNumber = op.range.endLineNumber;\n\t\t\t\tlet endColumn = op.range.endColumn;\n\n\t\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && (!op.lines || op.lines.length === 0)) {\n\t\t\t\t\t// no-op\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet deletingLinesCnt = endLineNumber - startLineNumber;\n\t\t\t\tlet insertingLinesCnt = (op.lines ? op.lines.length - 1 : 0);\n\t\t\t\tlet editingLinesCnt = Math.min(deletingLinesCnt, insertingLinesCnt);\n\n\t\t\t\ttotalLinesCountDelta += (insertingLinesCnt - deletingLinesCnt);\n\n\t\t\t\t// Iterating descending to overlap with previous op\n\t\t\t\t// in case there are common lines being edited in both\n\t\t\t\tfor (let j = editingLinesCnt; j >= 0; j--) {\n\t\t\t\t\tlet editLineNumber = startLineNumber + j;\n\n\t\t\t\t\tqueueLineEdit({\n\t\t\t\t\t\tlineNumber: editLineNumber,\n\t\t\t\t\t\tstartColumn: (editLineNumber === startLineNumber ? startColumn : 1),\n\t\t\t\t\t\tendColumn: (editLineNumber === endLineNumber ? endColumn : this.getLineMaxColumn(editLineNumber)),\n\t\t\t\t\t\ttext: (op.lines ? op.lines[j] : ''),\n\t\t\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < deletingLinesCnt) {\n\t\t\t\t\t// Must delete some lines\n\n\t\t\t\t\t// Flush any pending line edits\n\t\t\t\t\tflushLineEdits();\n\n\t\t\t\t\tlet spliceStartLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\tlet spliceStartColumn = this.getLineMaxColumn(spliceStartLineNumber);\n\n\t\t\t\t\tlet endLineRemains = this._lines[endLineNumber - 1].split(deferredEventsBuilder.changedMarkers, endColumn, false);\n\t\t\t\t\tthis._invalidateLine(spliceStartLineNumber - 1);\n\n\t\t\t\t\tlet spliceCnt = endLineNumber - spliceStartLineNumber;\n\n\t\t\t\t\t// Collect all these markers\n\t\t\t\t\tlet markersOnDeletedLines: ILineMarker[] = [];\n\t\t\t\t\tfor (let j = 0; j < spliceCnt; j++) {\n\t\t\t\t\t\tlet deleteLineIndex = spliceStartLineNumber + j;\n\t\t\t\t\t\tmarkersOnDeletedLines = markersOnDeletedLines.concat(this._lines[deleteLineIndex].deleteLine(deferredEventsBuilder.changedMarkers, spliceStartColumn, deleteLineIndex + 1));\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._lines.splice(spliceStartLineNumber, spliceCnt);\n\n\t\t\t\t\t// Reconstruct first line\n\t\t\t\t\tthis._lines[spliceStartLineNumber - 1].append(deferredEventsBuilder.changedMarkers, endLineRemains);\n\t\t\t\t\tthis._lines[spliceStartLineNumber - 1].addMarkers(markersOnDeletedLines);\n\t\t\t\t\tcontentChangedEvents.push(this._createLineChangedEvent(spliceStartLineNumber));\n\n\t\t\t\t\tcontentChangedEvents.push(this._createLinesDeletedEvent(spliceStartLineNumber + 1, spliceStartLineNumber + spliceCnt));\n\t\t\t\t}\n\n\t\t\t\tif (editingLinesCnt < insertingLinesCnt) {\n\t\t\t\t\t// Must insert some lines\n\n\t\t\t\t\t// Flush any pending line edits\n\t\t\t\t\tflushLineEdits();\n\n\t\t\t\t\tlet spliceLineNumber = startLineNumber + editingLinesCnt;\n\t\t\t\t\tlet spliceColumn = (spliceLineNumber === startLineNumber ? startColumn : 1);\n\t\t\t\t\tif (op.lines) {\n\t\t\t\t\t\tspliceColumn += op.lines[editingLinesCnt].length;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Split last line\n\t\t\t\t\tlet leftoverLine = this._lines[spliceLineNumber - 1].split(deferredEventsBuilder.changedMarkers, spliceColumn, op.forceMoveMarkers);\n\t\t\t\t\tcontentChangedEvents.push(this._createLineChangedEvent(spliceLineNumber));\n\t\t\t\t\tthis._invalidateLine(spliceLineNumber - 1);\n\n\t\t\t\t\t// Lines in the middle\n\t\t\t\t\tlet newLinesContent:string[] = [];\n\t\t\t\t\tfor (let j = editingLinesCnt + 1; j <= insertingLinesCnt; j++) {\n\t\t\t\t\t\tlet newLineNumber = startLineNumber + j;\n\t\t\t\t\t\tthis._lines.splice(newLineNumber - 1, 0, new ModelLine(newLineNumber, op.lines[j]));\n\t\t\t\t\t\tnewLinesContent.push(op.lines[j]);\n\t\t\t\t\t}\n\t\t\t\t\tnewLinesContent[newLinesContent.length - 1] += leftoverLine.text;\n\n\t\t\t\t\t// Last line\n\t\t\t\t\tthis._lines[startLineNumber + insertingLinesCnt - 1].append(deferredEventsBuilder.changedMarkers, leftoverLine);\n\t\t\t\t\tcontentChangedEvents.push(this._createLinesInsertedEvent(spliceLineNumber + 1, startLineNumber + insertingLinesCnt, newLinesContent.join('\\n')));\n\t\t\t\t}\n\n\t\t\t\tcontentChanged2Events.push({\n\t\t\t\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\t\ttext: op.lines ? op.lines.join(this.getEOL()) : '',\n\t\t\t\t\teol: this._EOL,\n\t\t\t\t\tversionId: -1,\n\t\t\t\t\tisUndoing: this._isUndoing,\n\t\t\t\t\tisRedoing: this._isRedoing\n\t\t\t\t});\n\n\t\t\t\t// console.log('AFTER:');\n\t\t\t\t// console.log('<<<\\n' + this._lines.map(l => l.text).join('\\n') + '\\n>>>');\n\t\t\t}\n\n\t\t\tflushLineEdits();\n\n\t\t\tmaxTouchedLineNumber = Math.max(1, Math.min(this.getLineCount(), maxTouchedLineNumber + totalLinesCountDelta));\n\t\t\tif (totalLinesCountDelta !== 0) {\n\t\t\t\t// must update line numbers all the way to the bottom\n\t\t\t\tmaxTouchedLineNumber = this.getLineCount();\n\t\t\t}\n\n\t\t\tfor (let lineNumber = minTouchedLineNumber; lineNumber <= maxTouchedLineNumber; lineNumber++) {\n\t\t\t\tthis._lines[lineNumber - 1].updateLineNumber(deferredEventsBuilder.changedMarkers, lineNumber);\n\t\t\t}\n\n\t\t\tif (contentChangedEvents.length !== 0 || contentChanged2Events.length !== 0) {\n\t\t\t\tif (contentChangedEvents.length === 0) {\n\t\t\t\t\t// Fabricate a fake line changed event to get an event out\n\t\t\t\t\t// This most likely occurs when there edit operations are no-ops\n\t\t\t\t\tcontentChangedEvents.push(this._createLineChangedEvent(minTouchedLineNumber));\n\t\t\t\t}\n\n\t\t\t\tlet versionBumps = Math.max(contentChangedEvents.length, contentChanged2Events.length);\n\t\t\t\tlet finalVersionId = this.getVersionId() + versionBumps;\n\t\t\t\tthis._setVersionId(finalVersionId);\n\n\t\t\t\tfor (let i = contentChangedEvents.length - 1, versionId = finalVersionId; i >= 0; i--, versionId--) {\n\t\t\t\t\tcontentChangedEvents[i].versionId = versionId;\n\t\t\t\t}\n\t\t\t\tfor (let i = contentChanged2Events.length - 1, versionId = finalVersionId; i >= 0; i--, versionId--) {\n\t\t\t\t\tcontentChanged2Events[i].versionId = versionId;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, len = contentChangedEvents.length; i < len; i++) {\n\t\t\t\t\tthis.emit(editorCommon.EventType.ModelContentChanged, contentChangedEvents[i]);\n\t\t\t\t}\n\t\t\t\tfor (let i = 0, len = contentChanged2Events.length; i < len; i++) {\n\t\t\t\t\tthis.emit(editorCommon.EventType.ModelContentChanged2, contentChanged2Events[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// this._assertLineNumbersOK();\n\t\t});\n\t}\n\n\tpublic _assertLineNumbersOK(): void {\n\t\tlet foundMarkersCnt = 0;\n\t\tfor (let i = 0, len = this._lines.length; i < len; i++) {\n\t\t\tlet line = this._lines[i];\n\t\t\tlet lineNumber = i + 1;\n\n\t\t\tif (line.lineNumber !== lineNumber) {\n\t\t\t\tthrow new Error('Invalid lineNumber at line: ' + lineNumber + '; text is: ' + this.getValue());\n\t\t\t}\n\n\t\t\tlet markers = line.getMarkers();\n\t\t\tfor (let j = 0, lenJ = markers.length; j < lenJ; j++) {\n\t\t\t\tfoundMarkersCnt++;\n\t\t\t\tlet markerId = markers[j].id;\n\t\t\t\tlet marker = this._markerIdToMarker[markerId];\n\t\t\t\tif (marker.line !== line) {\n\t\t\t\t\tthrow new Error('Misplaced marker with id ' + markerId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet totalMarkersCnt = Object.keys(this._markerIdToMarker).length;\n\t\tif (totalMarkersCnt !== foundMarkersCnt) {\n\t\t\tthrow new Error('There are misplaced markers!');\n\t\t}\n\t}\n\n\tpublic undo(): editorCommon.IEditorSelection[] {\n\t\treturn this._withDeferredEvents(() => {\n\t\t\tthis._isUndoing = true;\n\t\t\tlet r = this._commandManager.undo();\n\t\t\tthis._isUndoing = false;\n\n\t\t\tif (!r) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._overwriteAlternativeVersionId(r.recordedVersionId);\n\n\t\t\treturn r.selections;\n\t\t});\n\t}\n\n\tpublic redo(): editorCommon.IEditorSelection[] {\n\t\treturn this._withDeferredEvents(() => {\n\t\t\tthis._isRedoing = true;\n\t\t\tlet r = this._commandManager.redo();\n\t\t\tthis._isRedoing = false;\n\n\t\t\tif (!r) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._overwriteAlternativeVersionId(r.recordedVersionId);\n\n\t\t\treturn r.selections;\n\t\t});\n\t}\n\n\tpublic setEditableRange(range:editorCommon.IRange): void {\n\t\tthis._commandManager.clear();\n\t\tif (this._hasEditableRange) {\n\t\t\tthis.removeTrackedRange(this._editableRangeId);\n\t\t\tthis._editableRangeId = null;\n\t\t\tthis._hasEditableRange = false;\n\t\t}\n\n\t\tif (range) {\n\t\t\tthis._hasEditableRange = true;\n\t\t\tthis._editableRangeId = this.addTrackedRange(range, editorCommon.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t\t}\n\t}\n\n\tpublic hasEditableRange(): boolean {\n\t\treturn this._hasEditableRange;\n\t}\n\n\tpublic getEditableRange(): editorCommon.IEditorRange {\n\t\tif (this._hasEditableRange) {\n\t\t\treturn this.getTrackedRange(this._editableRangeId);\n\t\t} else {\n\t\t\treturn this.getFullModelRange();\n\t\t}\n\t}\n\n\tprivate _createLineChangedEvent(lineNumber: number): editorCommon.IModelContentChangedLineChangedEvent {\n\t\treturn {\n\t\t\tchangeType: editorCommon.EventType.ModelContentChangedLineChanged,\n\t\t\tlineNumber: lineNumber,\n\t\t\tdetail: this._lines[lineNumber - 1].text,\n\t\t\tversionId: -1,\n\t\t\tisUndoing: this._isUndoing,\n\t\t\tisRedoing: this._isRedoing\n\t\t};\n\t}\n\n\tprivate _createLinesDeletedEvent(fromLineNumber: number, toLineNumber: number): editorCommon.IModelContentChangedLinesDeletedEvent {\n\t\treturn {\n\t\t\tchangeType: editorCommon.EventType.ModelContentChangedLinesDeleted,\n\t\t\tfromLineNumber: fromLineNumber,\n\t\t\ttoLineNumber: toLineNumber,\n\t\t\tversionId: -1,\n\t\t\tisUndoing: this._isUndoing,\n\t\t\tisRedoing: this._isRedoing\n\t\t};\n\t}\n\n\tprivate _createLinesInsertedEvent(fromLineNumber: number, toLineNumber: number, newLinesContent: string): editorCommon.IModelContentChangedLinesInsertedEvent {\n\t\treturn {\n\t\t\tchangeType: editorCommon.EventType.ModelContentChangedLinesInserted,\n\t\t\tfromLineNumber: fromLineNumber,\n\t\t\ttoLineNumber: toLineNumber,\n\t\t\tdetail: newLinesContent,\n\t\t\tversionId: -1,\n\t\t\tisUndoing: this._isUndoing,\n\t\t\tisRedoing: this._isRedoing\n\t\t};\n\t}\n}"]}