{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/model/model.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IASb,oBAAoB;IACpB,mJAAmJ;IAEnJ,IAAI,QAAQ,GAAG,CAAC,CAAC;IAEjB,IAAI,WAAW,GAA+B,EAAE,CAAC;IAEjD,oBAAoB;IACpB,sBAAsB;IACtB,8CAA8C;IAC9C,2BAA2B;IAC3B,YAAY;IACZ,KAAK;IACL,kCAAkC;IAClC,qDAAqD;IACrD,mBAAmB;IACnB,WAAW;IAEX;QAA2B,yBAAiB;QAS3C;;;;;;;;;;;;WAYG;QACH,eAAY,OAAc,EAAE,OAAiC,EAAE,aAAmC,EAAE,kBAA2B;YAA3B,kCAA2B,GAA3B,yBAA2B;YAC9H,kBAAM;gBACL,wBAAS,CAAC,YAAY;aACtB,EAAE,qBAAS,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,EAAE,aAAa,CAAC,CAAC;YAEzD,iCAAiC;YACjC,QAAQ,EAAE,CAAC;YACX,IAAI,CAAC,EAAE,GAAG,QAAQ,GAAG,QAAQ,CAAC;YAE9B,EAAE,CAAC,CAAC,OAAO,kBAAkB,KAAK,WAAW,IAAI,kBAAkB,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC9E,IAAI,CAAC,mBAAmB,GAAG,aAAG,CAAC,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC;YACtE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;YAC/C,CAAC;YAGD,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;YACzE,CAAC;YAED,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;YAE9B,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,IAAI,CAAC;YACrD,uEAAuE;QACxE,CAAC;QAEM,yBAAS,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;QAEM,uBAAO,GAAd;YACC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;QAEM,uBAAO,GAAd;YACC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,IAAI,CAAC,wBAAS,CAAC,YAAY,CAAC,CAAC;YAClC,gBAAK,CAAC,OAAO,WAAE,CAAC;YAChB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,uEAAuE;QACxE,CAAC;QAEM,gCAAgB,GAAvB;YACC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,gCAAgC;YAChC,IAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC;QAEM,gCAAgB,GAAvB;YACC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5B,8BAA8B;QAC/B,CAAC;QAEM,kCAAkB,GAAzB;YACC,MAAM,CAAC,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;QACtC,CAAC;QAEM,qCAAqB,GAA5B;YACC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACjC,CAAC;QAlFa,8BAAwB,GAA8B,qBAAS,CAAC,wBAAwB,CAAC;QAmFxG,YAAC;IAAD,CAAC,AArFD,CAA2B,qCAAiB,GAqF3C;IArFY,aAAK,QAqFjB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {EventType, IModel, ITextModelCreationOptions} from 'vs/editor/common/editorCommon';\nimport {EditableTextModel} from 'vs/editor/common/model/editableTextModel';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {IMode} from 'vs/editor/common/modes';\n\n// The hierarchy is:\n// Model -> EditableTextModel -> TextModelWithDecorations -> TextModelWithTrackedRanges -> TextModelWithMarkers -> TextModelWithTokens -> TextModel\n\nvar MODEL_ID = 0;\n\nvar aliveModels:{[modelId:string]:boolean;} = {};\n\n// var LAST_CNT = 0;\n// setInterval(() => {\n// \tvar cnt = Object.keys(aliveModels).length;\n// \tif (cnt === LAST_CNT) {\n// \t\treturn;\n// \t}\n// \tconsole.warn('ALIVE MODELS:');\n// \tconsole.log(Object.keys(aliveModels).join('\\n'));\n// \tLAST_CNT = cnt;\n// }, 100);\n\nexport class Model extends EditableTextModel implements IModel {\n\n\tpublic static DEFAULT_CREATION_OPTIONS: ITextModelCreationOptions = TextModel.DEFAULT_CREATION_OPTIONS;\n\n\tpublic id:string;\n\n\tprivate _associatedResource:URI;\n\tprivate _attachedEditorCount:number;\n\n\t/**\n\t * Instantiates a new model\n\t * @param rawText\n\t *   The raw text buffer. It may start with a UTF-16 BOM, which can be\n\t *   optionally preserved when doing a getValue call. The lines may be\n\t *   separated by different EOL combinations, such as \\n or \\r\\n. These\n\t *   can also be preserved when doing a getValue call.\n\t * @param mode\n\t *   The language service name this model is bound to.\n\t * @param associatedResource\n\t *   The resource associated with this model. If the value is not provided an\n\t *   unique in memory URL is constructed as the associated resource.\n\t */\n\tconstructor(rawText:string, options:ITextModelCreationOptions, modeOrPromise:IMode|TPromise<IMode>, associatedResource:URI=null) {\n\t\tsuper([\n\t\t\tEventType.ModelDispose\n\t\t], TextModel.toRawText(rawText, options), modeOrPromise);\n\n\t\t// Generate a new unique model id\n\t\tMODEL_ID++;\n\t\tthis.id = '$model' + MODEL_ID;\n\n\t\tif (typeof associatedResource === 'undefined' || associatedResource === null) {\n\t\t\tthis._associatedResource = URI.parse('inmemory://model/' + MODEL_ID);\n\t\t} else {\n\t\t\tthis._associatedResource = associatedResource;\n\t\t}\n\n\n\t\tif (aliveModels[String(this._associatedResource)]) {\n\t\t\tthrow new Error('Cannot instantiate a second Model with the same URI!');\n\t\t}\n\n\t\tthis._attachedEditorCount = 0;\n\n\t\taliveModels[String(this._associatedResource)] = true;\n\t\t// console.log('ALIVE MODELS: ' + Object.keys(aliveModels).join('\\n'));\n\t}\n\n\tpublic getModeId(): string {\n\t\treturn this.getMode().getId();\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposing = true;\n\t\tdelete aliveModels[String(this._associatedResource)];\n\t\tthis.emit(EventType.ModelDispose);\n\t\tsuper.dispose();\n\t\tthis._isDisposing = false;\n\t\t// console.log('ALIVE MODELS: ' + Object.keys(aliveModels).join('\\n'));\n\t}\n\n\tpublic onBeforeAttached(): void {\n\t\tthis._attachedEditorCount++;\n\n\t\t// Warm up tokens for the editor\n\t\tthis._warmUpTokens();\n\t}\n\n\tpublic onBeforeDetached(): void {\n\t\tthis._attachedEditorCount--;\n\n\t\t// Intentional empty (for now)\n\t}\n\n\tpublic isAttachedToEditor(): boolean {\n\t\treturn this._attachedEditorCount > 0;\n\t}\n\n\tpublic getAssociatedResource(): URI {\n\t\treturn this._associatedResource;\n\t}\n}\n"]}