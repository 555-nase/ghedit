{"version":3,"file":"textModelWithTrackedRanges.js","sourceRoot":"","sources":["../../../../../src/vs/editor/common/model/textModelWithTrackedRanges.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IdGenerator} from 'vs/editor/common/core/idGenerator';\nimport {Range} from 'vs/editor/common/core/range';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {ILineMarker} from 'vs/editor/common/model/modelLine';\nimport {INewMarker, TextModelWithMarkers} from 'vs/editor/common/model/textModelWithMarkers';\nimport {FullModelRetokenizer, IRetokenizeRequest} from 'vs/editor/common/model/textModelWithTokens';\nimport {IMode} from 'vs/editor/common/modes';\n\ninterface ITrackedRange {\n\tid:string;\n\tstartMarkerId:string;\n\tendMarkerId:string;\n}\n\ninterface ITrackedRangesMap {\n\t[key:string]:ITrackedRange;\n}\n\ninterface IMarkerIdToRangeIdMap {\n\t[key:string]:string;\n}\n\nclass TrackedRangeModelRetokenizer extends FullModelRetokenizer {\n\n\tprivate trackedRangeId: string;\n\n\tconstructor(retokenizePromise:TPromise<void>, lineNumber:number, model:TextModelWithTrackedRanges) {\n\t\tsuper(retokenizePromise, model);\n\t\tthis.trackedRangeId = model.addTrackedRange({\n\t\t\tstartLineNumber: lineNumber,\n\t\t\tstartColumn : 1,\n\t\t\tendLineNumber: lineNumber,\n\t\t\tendColumn: model.getLineMaxColumn(lineNumber)\n\t\t}, editorCommon.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t}\n\n\tpublic getRange(): editorCommon.IRange {\n\t\treturn (<TextModelWithTrackedRanges>this._model).getTrackedRange(this.trackedRangeId);\n\t}\n\n\tpublic dispose(): void {\n\t\tvar model = (<TextModelWithTrackedRanges>this._model);\n\t\t// if this .dispose() is being called as part of the model.dispose(), then the tracked ranges might no longer be available (e.g. throw exceptions)\n\t\tif (model.isValidTrackedRange(this.trackedRangeId)) {\n\t\t\tmodel.removeTrackedRange(this.trackedRangeId);\n\t\t}\n\t\tsuper.dispose();\n\t}\n}\n\nclass TrackedRange implements ITrackedRange {\n\tid:string;\n\tstartMarkerId:string;\n\tendMarkerId:string;\n\n\tconstructor(id:string, startMarkedId:string, endMarkerId:string) {\n\t\tthis.id = id;\n\t\tthis.startMarkerId = startMarkedId;\n\t\tthis.endMarkerId = endMarkerId;\n\t}\n}\n\nvar _INSTANCE_COUNT = 0;\n\nexport class TextModelWithTrackedRanges extends TextModelWithMarkers implements editorCommon.ITextModelWithTrackedRanges {\n\n\tprivate _rangeIdGenerator: IdGenerator;\n\tprivate _ranges:ITrackedRangesMap;\n\tprivate _markerIdToRangeId:IMarkerIdToRangeIdMap;\n\tprivate _multiLineTrackedRanges: { [key:string]: boolean; };\n\n\tconstructor(allowedEventTypes:string[], rawText:editorCommon.IRawText, modeOrPromise:IMode|TPromise<IMode>) {\n\t\tsuper(allowedEventTypes, rawText, modeOrPromise);\n\t\tthis._rangeIdGenerator = new IdGenerator((++_INSTANCE_COUNT) + ';');\n\t\tthis._ranges = {};\n\t\tthis._markerIdToRangeId = {};\n\t\tthis._multiLineTrackedRanges = {};\n\t}\n\n\t_createRetokenizer(retokenizePromise:TPromise<void>, lineNumber:number): IRetokenizeRequest {\n\t\treturn new TrackedRangeModelRetokenizer(retokenizePromise, lineNumber, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._ranges = null;\n\t\tthis._markerIdToRangeId = null;\n\t\tthis._multiLineTrackedRanges = null;\n\t\tsuper.dispose();\n\t}\n\n\t_resetValue(e:editorCommon.IModelContentChangedFlushEvent, newValue:editorCommon.IRawText): void {\n\t\tsuper._resetValue(e, newValue);\n\n\t\t// Destroy all my tracked ranges\n\t\tthis._ranges = {};\n\t\tthis._markerIdToRangeId = {};\n\t\tthis._multiLineTrackedRanges = {};\n\t}\n\n\tprivate _setRangeIsMultiLine(rangeId: string, rangeIsMultiLine: boolean): void {\n\t\tvar rangeWasMultiLine = this._multiLineTrackedRanges.hasOwnProperty(rangeId);\n\t\tif (!rangeWasMultiLine && rangeIsMultiLine) {\n\t\t\tthis._multiLineTrackedRanges[rangeId] = true;\n\t\t} else if (rangeWasMultiLine && !rangeIsMultiLine) {\n\t\t\tdelete this._multiLineTrackedRanges[rangeId];\n\t\t}\n\t}\n\n\tprivate _shouldStartMarkerSticksToPreviousCharacter(stickiness:editorCommon.TrackedRangeStickiness): boolean {\n\t\tif (stickiness === editorCommon.TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges || stickiness === editorCommon.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _shouldEndMarkerSticksToPreviousCharacter(stickiness:editorCommon.TrackedRangeStickiness): boolean {\n\t\tif (stickiness === editorCommon.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges || stickiness === editorCommon.TrackedRangeStickiness.GrowsOnlyWhenTypingBefore) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t_getTrackedRangesCount(): number {\n\t\treturn Object.keys(this._ranges).length;\n\t}\n\n\tpublic addTrackedRange(textRange:editorCommon.IRange, stickiness:editorCommon.TrackedRangeStickiness): string {\n\t\ttextRange = this.validateRange(textRange);\n\n\t\tvar startMarkerSticksToPreviousCharacter = this._shouldStartMarkerSticksToPreviousCharacter(stickiness);\n\t\tvar endMarkerSticksToPreviousCharacter = this._shouldEndMarkerSticksToPreviousCharacter(stickiness);\n\n\t\tvar startMarkerId = this._addMarker(textRange.startLineNumber, textRange.startColumn, startMarkerSticksToPreviousCharacter);\n\t\tvar endMarkerId = this._addMarker(textRange.endLineNumber, textRange.endColumn, endMarkerSticksToPreviousCharacter);\n\n\t\tvar range = new TrackedRange(this._rangeIdGenerator.generate(), startMarkerId, endMarkerId);\n\t\tthis._ranges[range.id] = range;\n\t\tthis._markerIdToRangeId[startMarkerId] = range.id;\n\t\tthis._markerIdToRangeId[endMarkerId] = range.id;\n\n\t\tthis._setRangeIsMultiLine(range.id, (textRange.startLineNumber !== textRange.endLineNumber));\n\n\t\treturn range.id;\n\t}\n\n\tprotected _addTrackedRanges(textRanges:editorCommon.IRange[], stickinessArr:editorCommon.TrackedRangeStickiness[]): string[] {\n\t\tlet addMarkers: INewMarker[] = [];\n\t\tfor (let i = 0, len = textRanges.length; i < len; i++) {\n\t\t\tlet textRange = textRanges[i];\n\t\t\tlet stickiness = stickinessArr[i];\n\n\t\t\taddMarkers.push({\n\t\t\t\tlineNumber: textRange.startLineNumber,\n\t\t\t\tcolumn: textRange.startColumn,\n\t\t\t\tstickToPreviousCharacter: this._shouldStartMarkerSticksToPreviousCharacter(stickiness)\n\t\t\t});\n\t\t\taddMarkers.push({\n\t\t\t\tlineNumber: textRange.endLineNumber,\n\t\t\t\tcolumn: textRange.endColumn,\n\t\t\t\tstickToPreviousCharacter: this._shouldEndMarkerSticksToPreviousCharacter(stickiness)\n\t\t\t});\n\t\t}\n\n\t\tlet markerIds = this._addMarkers(addMarkers);\n\n\t\tlet result:string[] = [];\n\t\tfor (let i = 0, len = textRanges.length; i < len; i++) {\n\t\t\tlet textRange = textRanges[i];\n\t\t\tlet startMarkerId = markerIds[2 * i];\n\t\t\tlet endMarkerId = markerIds[2 * i + 1];\n\n\t\t\tlet range = new TrackedRange(this._rangeIdGenerator.generate(), startMarkerId, endMarkerId);\n\t\t\tthis._ranges[range.id] = range;\n\t\t\tthis._markerIdToRangeId[startMarkerId] = range.id;\n\t\t\tthis._markerIdToRangeId[endMarkerId] = range.id;\n\n\t\t\tthis._setRangeIsMultiLine(range.id, (textRange.startLineNumber !== textRange.endLineNumber));\n\n\t\t\tresult.push(range.id);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic changeTrackedRange(rangeId:string, newTextRange:editorCommon.IRange): void {\n\t\tif (this._ranges.hasOwnProperty(rangeId)) {\n\t\t\tnewTextRange = this.validateRange(newTextRange);\n\n\t\t\tvar range = this._ranges[rangeId];\n\t\t\tthis._changeMarker(range.startMarkerId, newTextRange.startLineNumber, newTextRange.startColumn);\n\t\t\tthis._changeMarker(range.endMarkerId, newTextRange.endLineNumber, newTextRange.endColumn);\n\n\t\t\tthis._setRangeIsMultiLine(range.id, (newTextRange.startLineNumber !== newTextRange.endLineNumber));\n\t\t}\n\t}\n\n\tpublic changeTrackedRangeStickiness(rangeId:string, newStickiness:editorCommon.TrackedRangeStickiness): void {\n\t\tif (this._ranges.hasOwnProperty(rangeId)) {\n\t\t\tvar range = this._ranges[rangeId];\n\t\t\tthis._changeMarkerStickiness(range.startMarkerId, this._shouldStartMarkerSticksToPreviousCharacter(newStickiness));\n\t\t\tthis._changeMarkerStickiness(range.endMarkerId, this._shouldEndMarkerSticksToPreviousCharacter(newStickiness));\n\t\t}\n\t}\n\n\tpublic isValidTrackedRange(rangeId:string): boolean {\n\t\tif (this._isDisposed || !this._ranges) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._ranges.hasOwnProperty(rangeId);\n\t}\n\n\tpublic removeTrackedRange(rangeId:string): void {\n\t\tif (this._ranges.hasOwnProperty(rangeId)) {\n\t\t\tvar range = this._ranges[rangeId];\n\n\t\t\tthis._removeMarker(range.startMarkerId);\n\t\t\tthis._removeMarker(range.endMarkerId);\n\n\t\t\tthis._setRangeIsMultiLine(range.id, false);\n\t\t\tdelete this._ranges[range.id];\n\t\t\tdelete this._markerIdToRangeId[range.startMarkerId];\n\t\t\tdelete this._markerIdToRangeId[range.endMarkerId];\n\t\t}\n\t}\n\n\tprotected removeTrackedRanges(ids:string[]): void {\n\t\tlet removeMarkers: string[] = [];\n\n\t\tfor (let i = 0, len = ids.length; i < len; i++) {\n\t\t\tlet rangeId = ids[i];\n\n\t\t\tif (!this._ranges.hasOwnProperty(rangeId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet range = this._ranges[rangeId];\n\n\t\t\tremoveMarkers.push(range.startMarkerId);\n\t\t\tremoveMarkers.push(range.endMarkerId);\n\n\t\t\tthis._setRangeIsMultiLine(range.id, false);\n\t\t\tdelete this._ranges[range.id];\n\t\t\tdelete this._markerIdToRangeId[range.startMarkerId];\n\t\t\tdelete this._markerIdToRangeId[range.endMarkerId];\n\t\t}\n\n\t\tif (removeMarkers.length > 0) {\n\t\t\tthis._removeMarkers(removeMarkers);\n\t\t}\n\t}\n\n\tprivate _newEditorRange(startPosition: editorCommon.IEditorPosition, endPosition: editorCommon.IEditorPosition): editorCommon.IEditorRange {\n\t\tif (endPosition.isBefore(startPosition)) {\n\t\t\t// This tracked range has turned in on itself (end marker before start marker)\n\t\t\t// This can happen in extreme editing conditions where lots of text is removed and lots is added\n\n\t\t\t// Treat it as a collapsed range\n\t\t\treturn new Range(startPosition.lineNumber, startPosition.column, startPosition.lineNumber, startPosition.column);\n\t\t}\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getTrackedRange(rangeId:string): editorCommon.IEditorRange {\n\t\tvar range = this._ranges[rangeId];\n\t\tvar startMarker = this._getMarker(range.startMarkerId);\n\t\tvar endMarker = this._getMarker(range.endMarkerId);\n\n\t\treturn this._newEditorRange(startMarker, endMarker);\n\t}\n\n\t/**\n\t * Fetch only multi-line ranges that intersect with the given line number range\n\t */\n\tprivate _getMultiLineTrackedRanges(filterStartLineNumber: number, filterEndLineNumber: number): editorCommon.IModelTrackedRange[] {\n\t\tlet result: editorCommon.IModelTrackedRange[] = [];\n\n\t\tlet keys = Object.keys(this._multiLineTrackedRanges);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tlet rangeId = keys[i];\n\t\t\tlet range = this._ranges[rangeId];\n\n\t\t\tlet startMarker = this._getMarker(range.startMarkerId);\n\t\t\tif (startMarker.lineNumber > filterEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet endMarker = this._getMarker(range.endMarkerId);\n\t\t\tif (endMarker.lineNumber < filterStartLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresult.push({\n\t\t\t\tid: range.id,\n\t\t\t\trange: this._newEditorRange(startMarker, endMarker)\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic getLinesTrackedRanges(startLineNumber:number, endLineNumber:number): editorCommon.IModelTrackedRange[] {\n\t\tvar result = this._getMultiLineTrackedRanges(startLineNumber, endLineNumber),\n\t\t\tresultMap: { [rangeId:string]: boolean; } = {},\n\t\t\tlineMarkers: editorCommon.IReadOnlyLineMarker[],\n\t\t\tlineMarker: editorCommon.IReadOnlyLineMarker,\n\t\t\trangeId: string,\n\t\t\ti: number,\n\t\t\tlen: number,\n\t\t\tlineNumber: number,\n\t\t\tstartMarker: editorCommon.IEditorPosition,\n\t\t\tendMarker: editorCommon.IEditorPosition;\n\n\t\tfor (i = 0, len = result.length; i < len; i++) {\n\t\t\tresultMap[result[i].id] = true;\n\t\t}\n\n\t\tfor (lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tlineMarkers = this._getLineMarkers(lineNumber);\n\t\t\tfor (i = 0, len = lineMarkers.length; i < len; i++) {\n\t\t\t\tlineMarker = lineMarkers[i];\n\n\t\t\t\tif (this._markerIdToRangeId.hasOwnProperty(lineMarker.id)) {\n\t\t\t\t\trangeId = this._markerIdToRangeId[lineMarker.id];\n\t\t\t\t\tif (!resultMap.hasOwnProperty(rangeId)) {\n\t\t\t\t\t\tstartMarker = this._getMarker(this._ranges[rangeId].startMarkerId);\n\t\t\t\t\t\tendMarker = this._getMarker(this._ranges[rangeId].endMarkerId);\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tid: rangeId,\n\t\t\t\t\t\t\trange: this._newEditorRange(startMarker, endMarker)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresultMap[rangeId] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t_onChangedMarkers(changedMarkers:ILineMarker[]): editorCommon.IChangedTrackedRanges {\n\t\tvar changedRanges:editorCommon.IChangedTrackedRanges = {},\n\t\t\tchangedRange:editorCommon.IRange,\n\t\t\trange:ITrackedRange,\n\t\t\trangeId:string,\n\t\t\tmarker:ILineMarker,\n\t\t\ti:number,\n\t\t\tlen:number;\n\n\t\tfor (i = 0, len = changedMarkers.length; i < len; i++) {\n\t\t\tmarker = changedMarkers[i];\n\n\t\t\tif (this._markerIdToRangeId.hasOwnProperty(marker.id)) {\n\t\t\t\trangeId = this._markerIdToRangeId[marker.id];\n\n\t\t\t\trange = this._ranges[rangeId];\n\n\t\t\t\tif (changedRanges.hasOwnProperty(range.id)) {\n\t\t\t\t\tchangedRange = changedRanges[range.id];\n\t\t\t\t} else {\n\t\t\t\t\tchangedRange = {\n\t\t\t\t\t\tstartLineNumber: 0,\n\t\t\t\t\t\tstartColumn: 0,\n\t\t\t\t\t\tendLineNumber: 0,\n\t\t\t\t\t\tendColumn: 0\n\t\t\t\t\t};\n\t\t\t\t\tchangedRanges[range.id] = changedRange;\n\t\t\t\t}\n\n\t\t\t\tif (marker.id === range.startMarkerId) {\n\t\t\t\t\tchangedRange.startLineNumber = marker.oldLineNumber;\n\t\t\t\t\tchangedRange.startColumn = marker.oldColumn;\n\t\t\t\t} else {\n\t\t\t\t\tchangedRange.endLineNumber = marker.oldLineNumber;\n\t\t\t\t\tchangedRange.endColumn = marker.oldColumn;\n\t\t\t\t}\n\n\t\t\t\tthis._setRangeIsMultiLine(range.id, (this._getMarker(range.startMarkerId).lineNumber !== this._getMarker(range.endMarkerId).lineNumber));\n\t\t\t}\n\t\t}\n\t\treturn changedRanges;\n\t}\n\n}"]}