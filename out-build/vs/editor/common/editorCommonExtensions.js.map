{"version":3,"file":"vs/editor/common/editorCommonExtensions.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/editorCommonExtensions.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {illegalArgument, onUnexpectedError} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {SyncDescriptor1, createSyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {ICommandHandler, IKeybindings, KbExpr} from 'vs/platform/keybinding/common/keybindingService';\nimport {ICommandDescriptor, KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {Registry} from 'vs/platform/platform';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {findFocusedEditor, getActiveEditor, withCodeEditorFromCommandHandler} from 'vs/editor/common/config/config';\nimport {Position} from 'vs/editor/common/core/position';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\n// --- Keybinding extensions to make it more concise to express keybindings conditions\nexport enum ContextKey {\n\tNone = 0,\n\tEditorTextFocus = 1,\n\tEditorFocus = 2\n}\nexport interface IEditorActionKeybindingOptions extends IKeybindings {\n\thandler?: ICommandHandler;\n\tcontext: ContextKey;\n\tkbExpr?: KbExpr;\n}\nexport interface IEditorCommandKeybindingOptions extends IKeybindings {\n\tcontext: ContextKey;\n}\n\n// --- Editor Actions\nexport class EditorActionDescriptor {\n\n\tpublic ctor:editorCommon.IEditorActionContributionCtor;\n\tpublic id:string;\n\tpublic label:string;\n\n\tpublic kbOpts:IEditorActionKeybindingOptions;\n\n\tconstructor(ctor:editorCommon.IEditorActionContributionCtor, id:string, label:string, kbOpts: IEditorActionKeybindingOptions = defaultEditorActionKeybindingOptions) {\n\t\tthis.ctor = ctor;\n\t\tthis.id = id;\n\t\tthis.label = label;\n\t\tthis.kbOpts = kbOpts;\n\t}\n}\n\nexport interface IEditorCommandHandler {\n\t(accessor:ServicesAccessor, editor: editorCommon.ICommonCodeEditor, args: any): void;\n}\n\nexport module CommonEditorRegistry {\n\n\texport function registerEditorAction(desc:EditorActionDescriptor) {\n\t\t(<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).registerEditorAction(desc);\n\t}\n\n\t// --- Editor Contributions\n\texport function registerEditorContribution(ctor:editorCommon.ICommonEditorContributionCtor): void {\n\t\t(<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).registerEditorContribution2(ctor);\n\t}\n\texport function getEditorContributions(): editorCommon.ICommonEditorContributionDescriptor[] {\n\t\treturn (<EditorContributionRegistry>Registry.as(Extensions.EditorCommonContributions)).getEditorContributions2();\n\t}\n\n\t// --- Editor Commands\n\texport function commandWeight(importance: number = 0): number {\n\t\treturn KeybindingsRegistry.WEIGHT.editorContrib(importance);\n\t}\n\n\texport function registerEditorCommand(commandId: string, weight: number, keybinding:IKeybindings, needsTextFocus: boolean, needsKey: string, handler: IEditorCommandHandler): void {\n\t\tvar commandDesc: ICommandDescriptor = {\n\t\t\tid: commandId,\n\t\t\thandler: createCommandHandler(commandId, handler),\n\t\t\tweight: weight,\n\t\t\tcontext: contextRule(needsTextFocus, needsKey),\n\t\t\tprimary: keybinding.primary,\n\t\t\tsecondary: keybinding.secondary,\n\t\t\twin: keybinding.win,\n\t\t\tlinux: keybinding.linux,\n\t\t\tmac: keybinding.mac,\n\t\t};\n\n\t\tKeybindingsRegistry.registerCommandDesc(commandDesc);\n\t}\n\n\texport function registerLanguageCommand(id: string, handler: (accessor: ServicesAccessor, args: { [n: string]: any }) => any) {\n\t\tKeybindingsRegistry.registerCommandDesc({\n\t\t\tid,\n\t\t\thandler(accessor, args: any[]) {\n\t\t\t\tif (args && args.length > 1 || typeof args[0] !== 'object') {\n\t\t\t\t\tthrow illegalArgument();\n\t\t\t\t}\n\t\t\t\treturn handler(accessor, args && args[0]);\n\t\t\t},\n\t\t\tweight: KeybindingsRegistry.WEIGHT.editorContrib(),\n\t\t\tprimary: undefined,\n\t\t\tcontext: undefined,\n\t\t});\n\t}\n\n\texport function registerDefaultLanguageCommand(id: string, handler: (model: editorCommon.IModel, position: editorCommon.IPosition, args: { [n: string]: any }) => any) {\n\t\tregisterLanguageCommand(id, function(accessor, args) {\n\n\t\t\tconst {resource, position} = args;\n\t\t\tif (!(resource instanceof URI) || !Position.isIPosition(position)) {\n\t\t\t\tthrow illegalArgument();\n\t\t\t}\n\n\t\t\tconst model = accessor.get(IModelService).getModel(resource);\n\t\t\tif (!model) {\n\t\t\t\tthrow illegalArgument();\n\t\t\t}\n\n\t\t\treturn handler(model, position, args);\n\t\t});\n\t}\n}\n\nclass SimpleEditorContributionDescriptor implements editorCommon.ICommonEditorContributionDescriptor {\n\tprivate _ctor:editorCommon.ICommonEditorContributionCtor;\n\n\tconstructor(ctor:editorCommon.ICommonEditorContributionCtor) {\n\t\tthis._ctor = ctor;\n\t}\n\n\tpublic createInstance(instantiationService: IInstantiationService, editor:editorCommon.ICommonCodeEditor): editorCommon.IEditorContribution {\n\t\treturn instantiationService.createInstance(this._ctor, editor);\n\t}\n}\n\nclass InternalEditorActionDescriptor implements editorCommon.ICommonEditorContributionDescriptor {\n\n\tprivate _descriptor: SyncDescriptor1<editorCommon.ICommonCodeEditor, editorCommon.IEditorContribution>;\n\n\tconstructor(ctor:editorCommon.IEditorActionContributionCtor, id:string, label:string) {\n\t\tthis._descriptor = createSyncDescriptor(ctor, {\n\t\t\tid: id,\n\t\t\tlabel: label\n\t\t});\n\t}\n\n\tpublic createInstance(instService:IInstantiationService, editor:editorCommon.ICommonCodeEditor): editorCommon.IEditorContribution {\n\t\treturn instService.createInstance(this._descriptor, editor);\n\t}\n}\n\n// Editor extension points\nvar Extensions = {\n\tEditorCommonContributions: 'editor.commonContributions'\n};\n\nclass EditorContributionRegistry {\n\n\tprivate editorContributions: editorCommon.ICommonEditorContributionDescriptor[];\n\n\tconstructor() {\n\t\tthis.editorContributions = [];\n\t}\n\n\tpublic registerEditorContribution2(ctor:editorCommon.ICommonEditorContributionCtor): void {\n\t\tthis.editorContributions.push(new SimpleEditorContributionDescriptor(ctor));\n\t}\n\n\tpublic registerEditorAction(desc:EditorActionDescriptor): void {\n\t\tvar handler = desc.kbOpts.handler;\n\t\tif (!handler) {\n\t\t\tif (desc.kbOpts.context === ContextKey.EditorTextFocus || desc.kbOpts.context === ContextKey.EditorFocus) {\n\t\t\t\thandler = triggerEditorAction.bind(null, desc.id);\n\t\t\t} else {\n\t\t\t\thandler = triggerEditorActionGlobal.bind(null, desc.id);\n\t\t\t}\n\t\t}\n\n\t\tvar context: KbExpr = null;\n\t\tif (typeof desc.kbOpts.kbExpr === 'undefined') {\n\t\t\tif (desc.kbOpts.context === ContextKey.EditorTextFocus) {\n\t\t\t\tcontext = KbExpr.has(editorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS);\n\t\t\t} else if (desc.kbOpts.context === ContextKey.EditorFocus) {\n\t\t\t\tcontext = KbExpr.has(editorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext = desc.kbOpts.kbExpr;\n\t\t}\n\n\t\tvar commandDesc: ICommandDescriptor = {\n\t\t\tid: desc.id,\n\t\t\thandler: handler,\n\t\t\tweight: KeybindingsRegistry.WEIGHT.editorContrib(),\n\t\t\tcontext: context,\n\t\t\tprimary: desc.kbOpts.primary,\n\t\t\tsecondary: desc.kbOpts.secondary,\n\t\t\twin: desc.kbOpts.win,\n\t\t\tlinux: desc.kbOpts.linux,\n\t\t\tmac: desc.kbOpts.mac,\n\t\t};\n\n\t\tKeybindingsRegistry.registerCommandDesc(commandDesc);\n\t\tthis.editorContributions.push(new InternalEditorActionDescriptor(desc.ctor, desc.id, desc.label));\n\t}\n\n\tpublic getEditorContributions2(): editorCommon.ICommonEditorContributionDescriptor[] {\n\t\treturn this.editorContributions.slice(0);\n\t}\n}\nRegistry.add(Extensions.EditorCommonContributions, new EditorContributionRegistry());\n\nfunction triggerEditorAction(actionId: string, accessor: ServicesAccessor, args: any): void {\n\twithCodeEditorFromCommandHandler(actionId, accessor, args,(editor) => {\n\t\teditor.trigger('keyboard', actionId, args);\n\t});\n}\n\nfunction triggerEditorActionGlobal(actionId: string, accessor: ServicesAccessor, args: any): void {\n\t// TODO: this is not necessarily keyboard\n\tvar focusedEditor = findFocusedEditor(actionId, accessor, args, false);\n\tif (focusedEditor) {\n\t\tfocusedEditor.trigger('keyboard', actionId, args);\n\t\treturn;\n\t}\n\n\tvar activeEditor = getActiveEditor(accessor);\n\tif (activeEditor) {\n\t\tvar action = activeEditor.getAction(actionId);\n\t\tif (action) {\n\t\t\taccessor.get(ITelemetryService).publicLog('editorActionInvoked', {name: action.label} );\n\t\t\taction.run().done(null, onUnexpectedError);\n\t\t}\n\t\treturn;\n\t}\n}\n\nvar defaultEditorActionKeybindingOptions:IEditorActionKeybindingOptions = { primary: null, context: ContextKey.EditorTextFocus };\n\nfunction contextRule(needsTextFocus: boolean, needsKey: string): KbExpr {\n\n\tlet base = KbExpr.has(needsTextFocus ? editorCommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS : editorCommon.KEYBINDING_CONTEXT_EDITOR_FOCUS);\n\n\tif (needsKey) {\n\t\treturn KbExpr.and(base, KbExpr.has(needsKey));\n\t}\n\n\treturn base;\n}\n\nfunction createCommandHandler(commandId: string, handler: IEditorCommandHandler): ICommandHandler {\n\treturn (accessor, args) => {\n\t\twithCodeEditorFromCommandHandler(commandId, accessor, args, (editor) => {\n\t\t\thandler(accessor, editor, args);\n\t\t});\n\t};\n}"]}