{"version":3,"file":"vs/base/browser/idleMonitor.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/idleMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TimeoutTimer} from 'vs/base/common/async';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\nimport {Disposable, IDisposable} from 'vs/base/common/lifecycle';\nimport {getService} from 'vs/base/browser/browserService';\nimport * as dom from 'vs/base/browser/dom';\n\nexport enum UserStatus {\n\tIdle,\n\tActive\n}\n\nexport const DEFAULT_IDLE_TIME = 60 * 60 * 1000; // 60 minutes\n\nexport class IdleMonitor extends Disposable {\n\n\tprivate _lastActiveTime: number;\n\tprivate _idleCheckTimeout: TimeoutTimer;\n\tprivate _status: UserStatus;\n\tprivate _eventEmitter: EventEmitter;\n\tprivate _idleTime: number;\n\n\tconstructor(idleTime: number = DEFAULT_IDLE_TIME) {\n\t\tsuper();\n\n\t\tthis._status = null;\n\t\tthis._idleCheckTimeout = this._register(new TimeoutTimer());\n\t\tthis._lastActiveTime = -1;\n\t\tthis._idleTime = idleTime;\n\n\t\tthis._eventEmitter = this._register(new EventEmitter());\n\t\tthis._register(dom.addDisposableListener(getService().document, 'mousemove', () => this._onUserActive()));\n\t\tthis._register(dom.addDisposableListener(getService().document, 'keydown', () => this._onUserActive()));\n\t\tthis._onUserActive();\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic addOneTimeActiveListener(callback: () => void): IDisposable {\n\t\treturn this._eventEmitter.addOneTimeDisposableListener('onActive', callback);\n\t}\n\n\tpublic addOneTimeIdleListener(callback: () => void): IDisposable {\n\t\treturn this._eventEmitter.addOneTimeDisposableListener('onIdle', callback);\n\t}\n\n\tpublic getStatus(): UserStatus {\n\t\treturn this._status;\n\t}\n\n\tprivate _onUserActive(): void {\n\t\tthis._lastActiveTime = (new Date()).getTime();\n\t\tif (this._status !== UserStatus.Active) {\n\t\t\tthis._status = UserStatus.Active;\n\t\t\tthis._scheduleIdleCheck();\n\t\t\tthis._eventEmitter.emit('onActive');\n\t\t}\n\t}\n\n\tprivate _onUserIdle(): void {\n\t\tif (this._status !== UserStatus.Idle) {\n\t\t\tthis._status = UserStatus.Idle;\n\t\t\tthis._eventEmitter.emit('onIdle');\n\t\t}\n\t}\n\n\tprivate _scheduleIdleCheck(): void {\n\t\tlet minimumTimeWhenUserCanBecomeIdle = this._lastActiveTime + this._idleTime;\n\t\tthis._idleCheckTimeout.setIfNotSet(() => {\n\t\t\tthis._checkIfUserIsIdle();\n\t\t}, minimumTimeWhenUserCanBecomeIdle - (new Date()).getTime());\n\t}\n\n\tprivate _checkIfUserIsIdle(): void {\n\t\tlet actualIdleTime = (new Date()).getTime() - this._lastActiveTime;\n\t\tif (actualIdleTime >= this._idleTime) {\n\t\t\tthis._onUserIdle();\n\t\t} else {\n\t\t\tthis._scheduleIdleCheck();\n\t\t}\n\t}\n}\n"]}