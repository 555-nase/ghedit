{"version":3,"file":"vs/base/browser/iframe.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/iframe.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Represents a window in a possible chain of iframes\n */\nexport interface IWindowChainElement {\n\t/**\n\t * The window object for it\n\t */\n\twindow: Window;\n\t/**\n\t * The iframe element inside the window.parent corresponding to window\n\t */\n\tiframeElement: HTMLIFrameElement;\n}\n\nlet hasDifferentOriginAncestorFlag: boolean = false;\nlet sameOriginWindowChainCache: IWindowChainElement[] = null;\n\nfunction getParentWindowIfSameOrigin(w: Window): Window {\n\tif (!w.parent || w.parent === w) {\n\t\treturn null;\n\t}\n\n\t// Cannot really tell if we have access to the parent window unless we try to access something in it\n\ttry {\n\t\tlet location = w.location;\n\t\tlet parentLocation = w.parent.location;\n\t\tif (location.protocol !== parentLocation.protocol || location.hostname !== parentLocation.hostname || location.port !== parentLocation.port) {\n\t\t\thasDifferentOriginAncestorFlag = true;\n\t\t\treturn null;\n\t\t}\n\t} catch (e) {\n\t\thasDifferentOriginAncestorFlag = true;\n\t\treturn null;\n\t}\n\n\treturn w.parent;\n}\n\nfunction findIframeElementInParentWindow(parentWindow: Window, childWindow: Window): HTMLIFrameElement {\n\tlet parentWindowIframes = parentWindow.document.getElementsByTagName('iframe');\n\tlet iframe: HTMLIFrameElement;\n\tfor (let i = 0, len = parentWindowIframes.length; i < len; i++) {\n\t\tiframe = parentWindowIframes[i];\n\t\tif (iframe.contentWindow === childWindow) {\n\t\t\treturn iframe;\n\t\t}\n\t}\n\treturn null;\n}\n\nexport class IframeUtils {\n\n\t/**\n\t * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n\t * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n\t * To distinguish if at one point the current execution environment is running inside a window with a different origin, see hasDifferentOriginAncestor()\n\t */\n\tpublic static getSameOriginWindowChain(): IWindowChainElement[] {\n\t\tif (!sameOriginWindowChainCache) {\n\t\t\tsameOriginWindowChainCache = [];\n\t\t\tlet w = window, parent: Window;\n\t\t\tdo {\n\t\t\t\tparent = getParentWindowIfSameOrigin(w);\n\t\t\t\tif (parent) {\n\t\t\t\t\tsameOriginWindowChainCache.push({\n\t\t\t\t\t\twindow: w,\n\t\t\t\t\t\tiframeElement: findIframeElementInParentWindow(parent, w)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tsameOriginWindowChainCache.push({\n\t\t\t\t\t\twindow: w,\n\t\t\t\t\t\tiframeElement: null\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tw = parent;\n\t\t\t} while (w);\n\t\t}\n\t\treturn sameOriginWindowChainCache.slice(0);\n\t}\n\n\t/**\n\t * Returns true if the current execution environment is chained in a list of iframes which at one point ends in a window with a different origin.\n\t * Returns false if the current execution environment is not running inside an iframe or if the entire chain of iframes have the same origin.\n\t */\n\tpublic static hasDifferentOriginAncestor(): boolean {\n\t\tif (!sameOriginWindowChainCache) {\n\t\t\tthis.getSameOriginWindowChain();\n\t\t}\n\t\treturn hasDifferentOriginAncestorFlag;\n\t}\n\n\t/**\n\t * Returns the position of `childWindow` relative to `ancestorWindow`\n\t */\n\tpublic static getPositionOfChildWindowRelativeToAncestorWindow(childWindow: Window, ancestorWindow: any) {\n\n\t\tif (!ancestorWindow || childWindow === ancestorWindow) {\n\t\t\treturn {\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0\n\t\t\t};\n\t\t}\n\n\t\tlet top = 0, left = 0;\n\n\t\tlet windowChain = this.getSameOriginWindowChain();\n\n\t\tfor (let i = 0; i < windowChain.length; i++) {\n\t\t\tlet windowChainEl = windowChain[i];\n\n\t\t\tif (windowChainEl.window === ancestorWindow) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!windowChainEl.iframeElement) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tlet boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n\t\t\ttop += boundingRect.top;\n\t\t\tleft += boundingRect.left;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left\n\t\t};\n\t}\n}\n"]}