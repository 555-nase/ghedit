{"version":3,"file":"vs/base/browser/browserService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/browserService.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAsBb,8BAAqC,CAAM;QAC1C,EAAE,CAAC,CAAC,OAAO,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,CAAC,YAAY,WAAW,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;IACzF,CAAC;IALe,4BAAoB,uBAKnC,CAAA;IAED;QAMC;YACC,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;QAEM,6BAAI,GAAX,UAAY,MAA2B;YACtC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;QAC3C,CAAC;QAEM,gCAAO,GAAd;YACC,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC;YAC1C,EAAE,CAAC,CAAC,uBAAa,EAAE,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACtB,CAAC;QACF,CAAC;QACF,qBAAC;IAAD,CAAC,AA1BD,IA0BC;IAED,IAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;IAE5C;QACC,MAAM,CAAC,cAAc,CAAC;IACvB,CAAC;IAFe,kBAAU,aAEzB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {isInWebWorker} from 'vs/base/browser/browser';\n\nexport interface IBrowserServiceData {\n\tdocument: Document;\n\twindow: Window;\n\tisHTMLElement: (o: any) => boolean;\n}\n\nexport interface IBrowserService extends IBrowserServiceData {\n\t/**\n\t * Mock the DOM with dummy objects\n\t */\n\tmock(source: IBrowserServiceData): void;\n\n\t/**\n\t * Restore the normal DOM\n\t */\n\trestore(): void;\n}\n\nexport function regularIsHTMLElement(o: any): boolean {\n\tif (typeof HTMLElement === 'object') {\n\t\treturn o instanceof HTMLElement;\n\t}\n\treturn o && typeof o === 'object' && o.nodeType === 1 && typeof o.nodeName === 'string';\n}\n\nclass BrowserService implements IBrowserService {\n\n\tpublic document: Document;\n\tpublic window: Window;\n\tpublic isHTMLElement: (o: any) => boolean;\n\n\tconstructor() {\n\t\tthis.restore();\n\t}\n\n\tpublic mock(source: IBrowserServiceData): void {\n\t\tthis.document = source.document;\n\t\tthis.window = source.window;\n\t\tthis.isHTMLElement = source.isHTMLElement;\n\t}\n\n\tpublic restore(): void {\n\t\tthis.isHTMLElement = regularIsHTMLElement;\n\t\tif (isInWebWorker()) {\n\t\t\tthis.document = null;\n\t\t\tthis.window = null;\n\t\t} else {\n\t\t\tthis.document = window.document;\n\t\t\tthis.window = window;\n\t\t}\n\t}\n}\n\nconst browserService = new BrowserService();\n\nexport function getService(): IBrowserService {\n\treturn browserService;\n}"]}