{"version":3,"file":"messageList.js","sourceRoot":"","sources":["../../../../../../src/vs/base/browser/ui/messagelist/messageList.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./messageList';\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Builder, withElementById, $} from 'vs/base/browser/builder';\nimport DOM = require('vs/base/browser/dom');\nimport errors = require('vs/base/common/errors');\nimport aria = require('vs/base/browser/ui/aria/aria');\nimport types = require('vs/base/common/types');\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {Action} from 'vs/base/common/actions';\nimport htmlRenderer = require('vs/base/browser/htmlContentRenderer');\nimport {StandardKeyboardEvent} from 'vs/base/browser/keyboardEvent';\nimport {CommonKeybindings} from 'vs/base/common/keyCodes';\n\nexport enum Severity {\n\tInfo,\n\tWarning,\n\tError\n}\n\nexport interface IMessageWithAction {\n\tmessage: string;\n\tactions: Action[];\n}\n\ninterface IMessageEntry {\n\tid: any;\n\ttext: string;\n\tseverity: Severity;\n\ttime?: number;\n\tcount?: number;\n\tactions?: Action[];\n}\n\nexport class IMessageListOptions {\n\tpurgeInterval: number;\n\tmaxMessages: number;\n\tmaxMessageLength: number;\n}\n\nexport interface IUsageLogger {\n\tpublicLog(eventName: string, data?: any): void;\n}\n\nexport class MessageList {\n\n\tprivate static DEFAULT_MESSAGE_PURGER_INTERVAL = 10000;\n\tprivate static DEFAULT_MAX_MESSAGES = 5;\n\tprivate static DEFAULT_MAX_MESSAGE_LENGTH = 500;\n\n\tprivate messages: IMessageEntry[];\n\tprivate messageListPurger: TPromise<void>;\n\tprivate messageListContainer: Builder;\n\n\tprivate containerElementId: string;\n\tprivate options: IMessageListOptions;\n\tprivate usageLogger: IUsageLogger;\n\n\tprivate _onMessagesShowing: Emitter<void>;\n\tprivate _onMessagesCleared: Emitter<void>;\n\n\tconstructor(containerElementId: string, usageLogger?: IUsageLogger, options: IMessageListOptions = { purgeInterval: MessageList.DEFAULT_MESSAGE_PURGER_INTERVAL, maxMessages: MessageList.DEFAULT_MAX_MESSAGES, maxMessageLength: MessageList.DEFAULT_MAX_MESSAGE_LENGTH }) {\n\t\tthis.messages = [];\n\t\tthis.messageListPurger = null;\n\t\tthis.containerElementId = containerElementId;\n\t\tthis.usageLogger = usageLogger;\n\t\tthis.options = options;\n\n\t\tthis._onMessagesShowing = new Emitter<void>();\n\t\tthis._onMessagesCleared = new Emitter<void>();\n\t}\n\n\tpublic get onMessagesShowing(): Event<void> {\n\t\treturn this._onMessagesShowing.event;\n\t}\n\n\tpublic get onMessagesCleared(): Event<void> {\n\t\treturn this._onMessagesCleared.event;\n\t}\n\n\tpublic showMessage(severity: Severity, message: string): () => void;\n\tpublic showMessage(severity: Severity, message: Error): () => void;\n\tpublic showMessage(severity: Severity, message: string[]): () => void;\n\tpublic showMessage(severity: Severity, message: Error[]): () => void;\n\tpublic showMessage(severity: Severity, message: IMessageWithAction): () => void;\n\tpublic showMessage(severity: Severity, message: any): () => void {\n\t\tif (Array.isArray(message)) {\n\t\t\tlet closeFns: Function[] = [];\n\t\t\tmessage.forEach((msg: any) => closeFns.push(this.showMessage(severity, msg)));\n\n\t\t\treturn () => closeFns.forEach((fn) => fn());\n\t\t}\n\n\t\t// Return only if we are unable to extract a message text\n\t\tlet messageText = this.getMessageText(message);\n\t\tif (!messageText || typeof messageText !== 'string') {\n\t\t\treturn () => {/* empty */ };\n\t\t}\n\n\t\t// Show message\n\t\treturn this.doShowMessage(message, messageText, severity);\n\t}\n\n\tprivate getMessageText(message: any): string {\n\t\tif (types.isString(message)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tif (message instanceof Error) {\n\t\t\treturn errors.toErrorMessage(message, false);\n\t\t}\n\n\t\tif ((<IMessageWithAction>message).message) {\n\t\t\treturn (<IMessageWithAction>message).message;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate doShowMessage(id: string, message: string, severity: Severity): () => void;\n\tprivate doShowMessage(id: Error, message: string, severity: Severity): () => void;\n\tprivate doShowMessage(id: IMessageWithAction, message: string, severity: Severity): () => void;\n\tprivate doShowMessage(id: any, message: string, severity: Severity): () => void {\n\n\t\t// Trigger Auto-Purge of messages to keep list small\n\t\tthis.purgeMessages();\n\n\t\t// Store in Memory (new messages come first so that they show up on top)\n\t\tthis.messages.unshift({\n\t\t\tid: id,\n\t\t\ttext: message,\n\t\t\tseverity: severity,\n\t\t\ttime: new Date().getTime(),\n\t\t\tactions: (<IMessageWithAction>id).actions\n\t\t});\n\n\t\t// Render\n\t\tthis.renderMessages(true, 1);\n\n\t\t// Support in Screen Readers too\n\t\tlet alertText: string;\n\t\tif (severity === Severity.Error) {\n\t\t\talertText = nls.localize('alertErrorMessage', \"Error: {0}\", message);\n\t\t} else if (severity === Severity.Warning) {\n\t\t\talertText = nls.localize('alertWarningMessage', \"Warning: {0}\", message);\n\t\t} else {\n\t\t\talertText = nls.localize('alertInfoMessage', \"Info: {0}\", message);\n\t\t}\n\n\t\taria.alert(alertText);\n\n\t\treturn () => {\n\t\t\tthis.hideMessage(id);\n\t\t};\n\t}\n\n\tprivate renderMessages(animate: boolean, delta: number): void {\n\t\tlet container = withElementById(this.containerElementId);\n\t\tif (!container) {\n\t\t\treturn; // Cannot build container for messages yet, return\n\t\t}\n\n\t\t// Lazily create, otherwise clear old\n\t\tif (!this.messageListContainer) {\n\t\t\tthis.messageListContainer = $('.global-message-list').appendTo(container);\n\t\t} else {\n\t\t\t$(this.messageListContainer).empty();\n\t\t\t$(this.messageListContainer).removeClass('transition');\n\t\t}\n\n\t\t// Support animation for messages by moving the container out of view and then in\n\t\tif (animate) {\n\t\t\t$(this.messageListContainer).style('top', '-35px');\n\t\t}\n\n\t\t// Render Messages as List Items\n\t\t$(this.messageListContainer).ul({ 'class': 'message-list' }, (ul: Builder) => {\n\t\t\tlet messages = this.prepareMessages();\n\t\t\tif (messages.length > 0) {\n\t\t\t\tthis._onMessagesShowing.fire();\n\t\t\t} else {\n\t\t\t\tthis._onMessagesCleared.fire();\n\t\t\t}\n\n\t\t\tmessages.forEach((message: IMessageEntry, index: number) => {\n\t\t\t\tthis.renderMessage(message, $(ul), messages.length, delta);\n\t\t\t});\n\n\t\t\t// Support animation for messages by moving the container out of view and then in\n\t\t\tif (animate) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t$(this.messageListContainer).addClass('transition');\n\t\t\t\t\t$(this.messageListContainer).style('top', '0');\n\t\t\t\t}, 50 /* Need this delay to reliably get the animation on some browsers */);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate renderMessage(message: IMessageEntry, container: Builder, total: number, delta: number): void {\n\t\tcontainer.li({ class: 'message-list-entry message-list-entry-with-action' }, (li) => {\n\n\t\t\t// Actions (if none provided, add one default action to hide message)\n\t\t\tlet messageActions = this.getMessageActions(message);\n\t\t\tli.div({ class: 'actions-container' }, (actionContainer) => {\n\t\t\t\tfor (let i = messageActions.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet action = messageActions[i];\n\t\t\t\t\tactionContainer.div({ class: 'message-action' }, (div) => {\n\t\t\t\t\t\tdiv.a({ class: 'action-button', tabindex: '0', role: 'button' }).text(action.label).on([DOM.EventType.CLICK, DOM.EventType.KEY_DOWN], (e) => {\n\t\t\t\t\t\t\tif (e instanceof KeyboardEvent) {\n\t\t\t\t\t\t\t\tlet event = new StandardKeyboardEvent(e);\n\t\t\t\t\t\t\t\tif (!event.equals(CommonKeybindings.ENTER) && !event.equals(CommonKeybindings.SPACE)) {\n\t\t\t\t\t\t\t\t\treturn; // Only handle Enter/Escape for keyboard access\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tDOM.EventHelper.stop(e, true);\n\n\t\t\t\t\t\t\tif (this.usageLogger) {\n\t\t\t\t\t\t\t\tthis.usageLogger.publicLog('workbenchActionExecuted', { id: action.id, from: 'message' });\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t(action.run() || TPromise.as(null))\n\t\t\t\t\t\t\t\t.then<any>(null, error => this.showMessage(Severity.Error, error))\n\t\t\t\t\t\t\t\t.done((r) => {\n\t\t\t\t\t\t\t\t\tif (r === false) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.hideMessage(message.text); // hide all matching the text since there may be duplicates\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Text\n\t\t\tlet text = message.text.substr(0, this.options.maxMessageLength);\n\t\t\tli.div({ class: 'message-left-side' }, (div) => {\n\t\t\t\tdiv.addClass('message-overflow-ellipsis');\n\n\t\t\t\t// Severity indicator\n\t\t\t\tlet sev = message.severity;\n\t\t\t\tlet label = (sev === Severity.Error) ? nls.localize('error', \"Error\") : (sev === Severity.Warning) ? nls.localize('warning', \"Warn\") : nls.localize('info', \"Info\");\n\t\t\t\t$().span({ class: 'message-left-side severity ' + ((sev === Severity.Error) ? 'app-error' : (sev === Severity.Warning) ? 'app-warning' : 'app-info'), text: label }).appendTo(div);\n\n\t\t\t\t// Error message\n\t\t\t\tlet messageContentElement: HTMLElement = <any>htmlRenderer.renderHtml({\n\t\t\t\t\ttagName: 'span',\n\t\t\t\t\tclassName: 'message-left-side',\n\t\t\t\t\tformattedText: text\n\t\t\t\t});\n\n\t\t\t\t$(messageContentElement).title(messageContentElement.textContent).appendTo(div);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate getMessageActions(message: IMessageEntry): Action[] {\n\t\tlet messageActions: Action[];\n\t\tif (message.actions && message.actions.length > 0) {\n\t\t\tmessageActions = message.actions;\n\t\t} else {\n\t\t\tmessageActions = [\n\t\t\t\tnew Action('close.message.action', nls.localize('close', \"Close\"), null, true, () => {\n\t\t\t\t\tthis.hideMessage(message.text); // hide all matching the text since there may be duplicates\n\n\t\t\t\t\treturn TPromise.as(true);\n\t\t\t\t})\n\t\t\t];\n\t\t}\n\n\t\treturn messageActions;\n\t}\n\n\tprivate prepareMessages(): IMessageEntry[] {\n\n\t\t// Aggregate Messages by text to reduce their count\n\t\tlet messages: IMessageEntry[] = [];\n\t\tlet handledMessages: { [message: string]: number; } = {};\n\n\t\tlet offset = 0;\n\t\tfor (let i = 0; i < this.messages.length; i++) {\n\t\t\tlet message = this.messages[i];\n\t\t\tif (types.isUndefinedOrNull(handledMessages[message.text])) {\n\t\t\t\tmessage.count = 1;\n\t\t\t\tmessages.push(message);\n\t\t\t\thandledMessages[message.text] = offset++;\n\t\t\t} else {\n\t\t\t\tmessages[handledMessages[message.text]].count++;\n\t\t\t}\n\t\t}\n\n\t\tif (messages.length > this.options.maxMessages) {\n\t\t\treturn messages.splice(messages.length - this.options.maxMessages, messages.length);\n\t\t}\n\n\t\treturn messages;\n\t}\n\n\tprivate disposeMessages(messages: IMessageEntry[]): void {\n\t\tmessages.forEach((message) => {\n\t\t\tif (message.actions) {\n\t\t\t\tmessage.actions.forEach((action) => {\n\t\t\t\t\taction.dispose();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic hideMessages(): void {\n\t\tthis.hideMessage();\n\t}\n\n\tpublic show(): void {\n\t\tif (this.messageListContainer && this.messageListContainer.isHidden()) {\n\t\t\tthis.messageListContainer.show();\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (this.messageListContainer && !this.messageListContainer.isHidden()) {\n\t\t\tthis.messageListContainer.hide();\n\t\t}\n\t}\n\n\tprivate hideMessage(messageText?: string): void;\n\tprivate hideMessage(messageObj?: any): void {\n\t\tlet messageFound = false;\n\n\t\tfor (let i = 0; i < this.messages.length; i++) {\n\t\t\tlet message = this.messages[i];\n\t\t\tlet hide = false;\n\n\t\t\t// Hide specific message\n\t\t\tif (messageObj) {\n\t\t\t\thide = ((types.isString(messageObj) && message.text === messageObj) || message.id === messageObj);\n\t\t\t}\n\n\t\t\t// Hide all messages\n\t\t\telse {\n\t\t\t\thide = true;\n\t\t\t}\n\n\t\t\tif (hide) {\n\t\t\t\tthis.disposeMessages(this.messages.splice(i, 1));\n\t\t\t\ti--;\n\t\t\t\tmessageFound = true;\n\t\t\t}\n\t\t}\n\n\t\tif (messageFound) {\n\t\t\tthis.renderMessages(false, -1);\n\t\t}\n\t}\n\n\tprivate purgeMessages(): void {\n\n\t\t// Cancel previous\n\t\tif (this.messageListPurger) {\n\t\t\tthis.messageListPurger.cancel();\n\t\t}\n\n\t\t// Configure\n\t\tthis.messageListPurger = TPromise.timeout(this.options.purgeInterval).then(() => {\n\t\t\tlet needsUpdate = false;\n\t\t\tlet counter = 0;\n\n\t\t\tfor (let i = 0; i < this.messages.length; i++) {\n\t\t\t\tlet message = this.messages[i];\n\n\t\t\t\t// Only purge infos and warnings and only if they are not providing actions\n\t\t\t\tif (message.severity !== Severity.Error && !message.actions) {\n\t\t\t\t\tthis.disposeMessages(this.messages.splice(i, 1));\n\t\t\t\t\tcounter--;\n\t\t\t\t\ti--;\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tthis.renderMessages(false, counter);\n\t\t\t}\n\t\t});\n\t}\n}"]}