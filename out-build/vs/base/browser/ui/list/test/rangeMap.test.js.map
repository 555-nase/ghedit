{"version":3,"file":"vs/base/browser/ui/list/test/rangeMap.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/list/test/rangeMap.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport assert = require('assert');\nimport { RangeMap, intersect, groupIntersect, consolidate } from '../rangeMap';\n\nsuite('RangeMap', () => {\n\tvar rangeMap: RangeMap;\n\n\tsetup(() => {\n\t\trangeMap = new RangeMap();\n\t});\n\n\tteardown(() => {\n\t\trangeMap.dispose();\n\t});\n\n\ttest('intersection', () => {\n\t\tassert.deepEqual(intersect({ start: 0, end: 0 }, { start: 0, end: 0 }), null);\n\t\tassert.deepEqual(intersect({ start: 0, end: 0 }, { start: 5, end: 5 }), null);\n\t\tassert.deepEqual(intersect({ start: 0, end: 1 }, { start: 5, end: 6 }), null);\n\t\tassert.deepEqual(intersect({ start: 5, end: 6 }, { start: 0, end: 1 }), null);\n\t\tassert.deepEqual(intersect({ start: 0, end: 5 }, { start: 2, end: 2 }), null);\n\t\tassert.deepEqual(intersect({ start: 0, end: 1 }, { start: 0, end: 1 }), { start: 0, end: 1 });\n\t\tassert.deepEqual(intersect({ start: 0, end: 10 }, { start: 0, end: 5 }), { start: 0, end: 5 });\n\t\tassert.deepEqual(intersect({ start: 0, end: 5 }, { start: 0, end: 10 }), { start: 0, end: 5 });\n\t\tassert.deepEqual(intersect({ start: 0, end: 10 }, { start: 5, end: 10 }), { start: 5, end: 10 });\n\t\tassert.deepEqual(intersect({ start: 5, end: 10 }, { start: 0, end: 10 }), { start: 5, end: 10 });\n\t\tassert.deepEqual(intersect({ start: 0, end: 10 }, { start: 2, end: 8 }), { start: 2, end: 8 });\n\t\tassert.deepEqual(intersect({ start: 2, end: 8 }, { start: 0, end: 10 }), { start: 2, end: 8 });\n\t\tassert.deepEqual(intersect({ start: 0, end: 10 }, { start: 5, end: 15 }), { start: 5, end: 10 });\n\t\tassert.deepEqual(intersect({ start: 5, end: 15 }, { start: 0, end: 10 }), { start: 5, end: 10 });\n\t});\n\n\ttest('multiIntersect', () => {\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 0, end: 0 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }]\n\t\t\t),\n\t\t\t[]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 10, end: 20 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }]\n\t\t\t),\n\t\t\t[]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 2, end: 8 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }]\n\t\t\t),\n\t\t\t[{ range: { start: 2, end: 8 }, size: 1 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 2, end: 8 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }, { range: { start: 10, end: 20 }, size: 5 }]\n\t\t\t),\n\t\t\t[{ range: { start: 2, end: 8 }, size: 1 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 12, end: 18 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }, { range: { start: 10, end: 20 }, size: 5 }]\n\t\t\t),\n\t\t\t[{ range: { start: 12, end: 18 }, size: 5 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 2, end: 18 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }, { range: { start: 10, end: 20 }, size: 5 }]\n\t\t\t),\n\t\t\t[{ range: { start: 2, end: 10 }, size: 1 }, { range: { start: 10, end: 18 }, size: 5 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tgroupIntersect(\n\t\t\t\t{ start: 2, end: 28 },\n\t\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }, { range: { start: 10, end: 20 }, size: 5 }, { range: { start: 20, end: 30 }, size: 10 }]\n\t\t\t),\n\t\t\t[{ range: { start: 2, end: 10 }, size: 1 }, { range: { start: 10, end: 20 }, size: 5 }, { range: { start: 20, end: 28 }, size: 10 }]\n\t\t);\n\t});\n\n\ttest('consolidate', () => {\n\t\tassert.deepEqual(consolidate([]), []);\n\n\t\tassert.deepEqual(\n\t\t\tconsolidate([{ range: { start: 0, end: 10 }, size: 1 }]),\n\t\t\t[{ range: { start: 0, end: 10 }, size: 1 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tconsolidate([\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 20 }, size: 1 }\n\t\t\t]),\n\t\t\t[{ range: { start: 0, end: 20 }, size: 1 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tconsolidate([\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 20 }, size: 1 },\n\t\t\t\t{ range: { start: 20, end: 100 }, size: 1 }\n\t\t\t]),\n\t\t\t[{ range: { start: 0, end: 100 }, size: 1 }]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tconsolidate([\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 20 }, size: 5 },\n\t\t\t\t{ range: { start: 20, end: 30 }, size: 10 }\n\t\t\t]),\n\t\t\t[\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 20 }, size: 5 },\n\t\t\t\t{ range: { start: 20, end: 30 }, size: 10 }\n\t\t\t]\n\t\t);\n\n\t\tassert.deepEqual(\n\t\t\tconsolidate([\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 20 }, size: 2 },\n\t\t\t\t{ range: { start: 20, end: 100 }, size: 2 }\n\t\t\t]),\n\t\t\t[\n\t\t\t\t{ range: { start: 0, end: 10 }, size: 1 },\n\t\t\t\t{ range: { start: 10, end: 100 }, size: 2 }\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('empty', () => {\n\t\tassert.equal(rangeMap.size, 0);\n\t\tassert.equal(rangeMap.count, 0);\n\t});\n\n\tconst one = { size: 1 };\n\tconst two = { size: 2 };\n\tconst three = { size: 3 };\n\tconst five = { size: 5 };\n\tconst ten = { size: 10 };\n\n\ttest('length & count', () => {\n\t\trangeMap.splice(0, 0, one);\n\t\tassert.equal(rangeMap.size, 1);\n\t\tassert.equal(rangeMap.count, 1);\n\t});\n\n\ttest('length & count #2', () => {\n\t\trangeMap.splice(0, 0, one, one, one, one, one);\n\t\tassert.equal(rangeMap.size, 5);\n\t\tassert.equal(rangeMap.count, 5);\n\t});\n\n\ttest('length & count #3', () => {\n\t\trangeMap.splice(0, 0, five);\n\t\tassert.equal(rangeMap.size, 5);\n\t\tassert.equal(rangeMap.count, 1);\n\t});\n\n\ttest('length & count #4', () => {\n\t\trangeMap.splice(0, 0, five, five, five, five, five);\n\t\tassert.equal(rangeMap.size, 25);\n\t\tassert.equal(rangeMap.count, 5);\n\t});\n\n\ttest('insert', () => {\n\t\trangeMap.splice(0, 0, five, five, five, five, five);\n\t\tassert.equal(rangeMap.size, 25);\n\t\tassert.equal(rangeMap.count, 5);\n\n\t\trangeMap.splice(0, 0, five, five, five, five, five);\n\t\tassert.equal(rangeMap.size, 50);\n\t\tassert.equal(rangeMap.count, 10);\n\n\t\trangeMap.splice(5, 0, ten, ten);\n\t\tassert.equal(rangeMap.size, 70);\n\t\tassert.equal(rangeMap.count, 12);\n\n\t\trangeMap.splice(12, 0, { size: 200 });\n\t\tassert.equal(rangeMap.size, 270);\n\t\tassert.equal(rangeMap.count, 13);\n\t});\n\n\ttest('delete', () => {\n\t\trangeMap.splice(0, 0, five, five, five, five, five,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfive, five, five, five, five,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfive, five, five, five, five,\n\t\t\t\t\t\t\t\t\t\t\t\t\tfive, five, five, five, five);\n\t\tassert.equal(rangeMap.size, 100);\n\t\tassert.equal(rangeMap.count, 20);\n\n\t\trangeMap.splice(10, 5);\n\t\tassert.equal(rangeMap.size, 75);\n\t\tassert.equal(rangeMap.count, 15);\n\n\t\trangeMap.splice(0, 1);\n\t\tassert.equal(rangeMap.size, 70);\n\t\tassert.equal(rangeMap.count, 14);\n\n\t\trangeMap.splice(1, 13);\n\t\tassert.equal(rangeMap.size, 5);\n\t\tassert.equal(rangeMap.count, 1);\n\n\t\trangeMap.splice(1, 1);\n\t\tassert.equal(rangeMap.size, 5);\n\t\tassert.equal(rangeMap.count, 1);\n\t});\n\n\ttest('insert & delete', () => {\n\t\tassert.equal(rangeMap.size, 0);\n\t\tassert.equal(rangeMap.count, 0);\n\n\t\trangeMap.splice(0, 0, one);\n\t\tassert.equal(rangeMap.size, 1);\n\t\tassert.equal(rangeMap.count, 1);\n\n\t\trangeMap.splice(0, 1);\n\t\tassert.equal(rangeMap.size, 0);\n\t\tassert.equal(rangeMap.count, 0);\n\t});\n\n\ttest('insert & delete #2', () => {\n\t\trangeMap.splice(0, 0, one, one, one, one, one,\n\t\t\t\t\t\t\t\t\t\t\t\t\tone, one, one, one, one);\n\t\trangeMap.splice(2, 6);\n\t\tassert.equal(rangeMap.count, 4);\n\t\tassert.equal(rangeMap.size, 4);\n\t});\n\n\ttest('insert & delete #3', () => {\n\t\trangeMap.splice(0, 0, one, one, one, one, one,\n\t\t\t\t\t\t\t\t\t\t\t\t\tone, one, one, one, one,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttwo, two, two, two, two,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttwo, two, two, two, two);\n\t\trangeMap.splice(8, 4);\n\t\tassert.equal(rangeMap.count, 16);\n\t\tassert.equal(rangeMap.size, 24);\n\t});\n\n\ttest('insert & delete #3', () => {\n\t\trangeMap.splice(0, 0, one, one, one, one, one,\n\t\t\t\t\t\t\t\t\t\t\t\t\tone, one, one, one, one,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttwo, two, two, two, two,\n\t\t\t\t\t\t\t\t\t\t\t\t\ttwo, two, two, two, two);\n\t\trangeMap.splice(5, 0, three, three, three, three, three);\n\t\tassert.equal(rangeMap.count, 25);\n\t\tassert.equal(rangeMap.size, 45);\n\n\t\trangeMap.splice(4, 7);\n\t\tassert.equal(rangeMap.count, 18);\n\t\tassert.equal(rangeMap.size, 28);\n\t});\n\n\tsuite('indexAt, positionAt', () => {\n\t\ttest('empty', () => {\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(10), 0);\n\t\t\tassert.equal(rangeMap.indexAt(-1), -1);\n\t\t\tassert.equal(rangeMap.positionAt(0), -1);\n\t\t\tassert.equal(rangeMap.positionAt(10), -1);\n\t\t\tassert.equal(rangeMap.positionAt(-1), -1);\n\t\t});\n\n\t\ttest('simple', () => {\n\t\t\trangeMap.splice(0, 0, one);\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(1), 1);\n\t\t\tassert.equal(rangeMap.positionAt(0), 0);\n\t\t\tassert.equal(rangeMap.positionAt(1), -1);\n\t\t});\n\n\t\ttest('simple #2', () => {\n\t\t\trangeMap.splice(0, 0, ten);\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(5), 0);\n\t\t\tassert.equal(rangeMap.indexAt(9), 0);\n\t\t\tassert.equal(rangeMap.indexAt(10), 1);\n\t\t\tassert.equal(rangeMap.positionAt(0), 0);\n\t\t\tassert.equal(rangeMap.positionAt(1), -1);\n\t\t});\n\n\t\ttest('insert', () => {\n\t\t\trangeMap.splice(0, 0, one, one, one, one, one, one, one, one, one, one);\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(1), 1);\n\t\t\tassert.equal(rangeMap.indexAt(5), 5);\n\t\t\tassert.equal(rangeMap.indexAt(9), 9);\n\t\t\tassert.equal(rangeMap.indexAt(10), 10);\n\t\t\tassert.equal(rangeMap.indexAt(11), 10);\n\n\t\t\trangeMap.splice(10, 0, one, one, one, one, one, one, one, one, one, one);\n\t\t\tassert.equal(rangeMap.indexAt(10), 10);\n\t\t\tassert.equal(rangeMap.indexAt(19), 19);\n\t\t\tassert.equal(rangeMap.indexAt(20), 20);\n\t\t\tassert.equal(rangeMap.indexAt(21), 20);\n\t\t\tassert.equal(rangeMap.positionAt(0), 0);\n\t\t\tassert.equal(rangeMap.positionAt(1), 1);\n\t\t\tassert.equal(rangeMap.positionAt(19), 19);\n\t\t\tassert.equal(rangeMap.positionAt(20), -1);\n\t\t});\n\n\t\ttest('delete', () => {\n\t\t\trangeMap.splice(0, 0, one, one, one, one, one, one, one, one, one, one);\n\t\t\trangeMap.splice(2, 6);\n\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(1), 1);\n\t\t\tassert.equal(rangeMap.indexAt(3), 3);\n\t\t\tassert.equal(rangeMap.indexAt(4), 4);\n\t\t\tassert.equal(rangeMap.indexAt(5), 4);\n\t\t\tassert.equal(rangeMap.positionAt(0), 0);\n\t\t\tassert.equal(rangeMap.positionAt(1), 1);\n\t\t\tassert.equal(rangeMap.positionAt(3), 3);\n\t\t\tassert.equal(rangeMap.positionAt(4), -1);\n\t\t});\n\n\t\ttest('delete #2', () => {\n\t\t\trangeMap.splice(0, 0, ten, ten, ten, ten, ten, ten, ten, ten, ten, ten);\n\t\t\trangeMap.splice(2, 6);\n\n\t\t\tassert.equal(rangeMap.indexAt(0), 0);\n\t\t\tassert.equal(rangeMap.indexAt(1), 0);\n\t\t\tassert.equal(rangeMap.indexAt(30), 3);\n\t\t\tassert.equal(rangeMap.indexAt(40), 4);\n\t\t\tassert.equal(rangeMap.indexAt(50), 4);\n\t\t\tassert.equal(rangeMap.positionAt(0), 0);\n\t\t\tassert.equal(rangeMap.positionAt(1), 10);\n\t\t\tassert.equal(rangeMap.positionAt(2), 20);\n\t\t\tassert.equal(rangeMap.positionAt(3), 30);\n\t\t\tassert.equal(rangeMap.positionAt(4), -1);\n\t\t});\n\t});\n});"]}