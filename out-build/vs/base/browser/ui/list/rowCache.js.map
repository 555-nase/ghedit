{"version":3,"file":"vs/base/browser/ui/list/rowCache.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/list/rowCache.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRenderer } from './list';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { emmet as $, addClass, removeClass } from 'vs/base/browser/dom';\n\nexport interface IRow {\n\tdomNode: HTMLElement;\n\ttemplateId: string;\n\ttemplateData: any;\n}\n\nfunction getLastScrollTime(element: HTMLElement): number {\n\tvar value = element.getAttribute('last-scroll-time');\n\treturn value ? parseInt(value, 10) : 0;\n}\n\nfunction removeFromParent(element: HTMLElement): void {\n\ttry {\n\t\telement.parentElement.removeChild(element);\n\t} catch (e) {\n\t\t// this will throw if this happens due to a blur event, nasty business\n\t}\n}\n\nexport class RowCache<T> implements IDisposable {\n\n\tprivate cache: { [templateId:string]: IRow[]; };\n\tprivate scrollingRow: IRow;\n\n\tconstructor(private renderers: { [templateId: string]: IRenderer<T, any>; }) {\n\t\tthis.cache = Object.create(null);\n\t\tthis.scrollingRow = null;\n\t}\n\n\t/**\n\t * Returns a row either by creating a new one or reusing\n\t * a previously released row which shares the same templateId.\n\t */\n\talloc(templateId: string): IRow {\n\t\tlet result = this.getTemplateCache(templateId).pop();\n\n\t\tif (!result) {\n\t\t\tconst domNode = $('.monaco-list-row');\n\t\t\tconst renderer = this.renderers[templateId];\n\t\t\tconst templateData = renderer.renderTemplate(domNode);\n\t\t\tresult = { domNode, templateId, templateData };\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Releases the row for eventual reuse. The row's domNode\n\t * will eventually be removed from its parent, given that\n\t * it is not the currently scrolling row (for OS X ballistic\n\t * scrolling).\n\t */\n\trelease(row: IRow): void {\n\t\tvar lastScrollTime = getLastScrollTime(row.domNode);\n\n\t\tif (!lastScrollTime) {\n\t\t\tremoveFromParent(row.domNode);\n\t\t\tthis.getTemplateCache(row.templateId).push(row);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.scrollingRow) {\n\t\t\tvar lastKnownScrollTime = getLastScrollTime(this.scrollingRow.domNode);\n\n\t\t\tif (lastKnownScrollTime > lastScrollTime) {\n\t\t\t\tremoveFromParent(row.domNode);\n\t\t\t\tthis.getTemplateCache(row.templateId).push(row);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.scrollingRow.domNode.parentElement) {\n\t\t\t\tremoveFromParent(this.scrollingRow.domNode);\n\t\t\t\tremoveClass(this.scrollingRow.domNode, 'scrolling');\n\t\t\t\tthis.getTemplateCache(this.scrollingRow.templateId).push(this.scrollingRow);\n\t\t\t}\n\t\t}\n\n\t\tthis.scrollingRow = row;\n\t\taddClass(this.scrollingRow.domNode, 'scrolling');\n\t}\n\n\tprivate getTemplateCache(templateId: string): IRow[] {\n\t\treturn this.cache[templateId] || (this.cache[templateId] = []);\n\t}\n\n\tgarbageCollect(): void {\n\t\tif (this.cache) {\n\t\t\tObject.keys(this.cache).forEach(templateId => {\n\t\t\t\tthis.cache[templateId].forEach(cachedRow => {\n\t\t\t\t\tconst renderer = this.renderers[templateId];\n\t\t\t\t\trenderer.disposeTemplate(cachedRow.templateData);\n\t\t\t\t\tcachedRow.domNode = null;\n\t\t\t\t\tcachedRow.templateData = null;\n\t\t\t\t});\n\n\t\t\t\tdelete this.cache[templateId];\n\t\t\t});\n\t\t}\n\n\t\tif (this.scrollingRow) {\n\t\t\tconst renderer = this.renderers[this.scrollingRow.templateId];\n\t\t\trenderer.disposeTemplate(this.scrollingRow.templateData);\n\t\t\tthis.scrollingRow = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.garbageCollect();\n\t\tthis.cache = null;\n\t\tthis.renderers = null;\n\t}\n}"]}