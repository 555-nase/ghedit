{"version":3,"file":"vs/base/browser/ui/dropdown/linksDropdown.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/dropdown/linksDropdown.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAYb;QAAuC,qCAAY;QAElD,2BAAY,SAAsB,EAAE,OAAkC;YACrE,kBAAM,SAAS,EAAE,OAAO,CAAC,CAAC;YAE1B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;QAED,aAAa,CAAQ,mCAAO,GAAd,UAAe,CAAQ,EAAE,aAA0B;YAChE,EAAE,CAAC,CAAC,CAAC,YAAY,aAAa,IAAI,CAAiB,CAAE,CAAC,OAAO,IAAI,CAAC,sBAAW,IAAoB,CAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/G,MAAM,CAAC,CAAC,oDAAoD;YAC7D,CAAC;YAED,IAAI,CAAC,IAAI,EAAE,CAAC;QACb,CAAC;QACF,wBAAC;IAAD,CAAC,AAfD,CAAuC,uBAAY,GAelD;IAfY,yBAAiB,oBAe7B,CAAA;IAED;QAAwC,sCAAM;QAI7C,4BAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,GAAQ,EAAE,iBAA2B;YACzF,kBAAM,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,UAAC,CAAQ;gBACrC,IAAI,SAAS,GAAG,GAAG,CAAC;gBAEpB,EAAE,CAAC,CAAC,kBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACrB,SAAS,GAAG,GAAG,EAAE,CAAC;gBACnB,CAAC;gBAED,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,YAAY,UAAU,IAAI,CAAc,CAAE,CAAC,OAAO,IAAI,CAAC,sBAAW,IAAiB,CAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7H,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC;gBAClC,CAAC;gBAED,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;QACJ,CAAC;QACF,yBAAC;IAAD,CAAC,AArBD,CAAwC,gBAAM,GAqB7C;IArBY,0BAAkB,qBAqB9B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {isMacintosh} from 'vs/base/common/platform';\nimport {isFunction} from 'vs/base/common/types';\nimport {Action} from 'vs/base/common/actions';\nimport {DropdownMenu, IDropdownMenuOptions} from 'vs/base/browser/ui/dropdown/dropdown';\n\nexport interface ILinksDropdownMenuOptions extends IDropdownMenuOptions {\n\ttooltip: string;\n}\n\nexport class LinksDropdownMenu extends DropdownMenu {\n\n\tconstructor(container: HTMLElement, options: ILinksDropdownMenuOptions) {\n\t\tsuper(container, options);\n\n\t\tthis.tooltip = options.tooltip;\n\t}\n\n\t/*protected*/ public onEvent(e: Event, activeElement: HTMLElement): void {\n\t\tif (e instanceof KeyboardEvent && ((<KeyboardEvent>e).ctrlKey || (isMacintosh && (<KeyboardEvent>e).metaKey))) {\n\t\t\treturn; // allow to use Ctrl/Meta in workspace dropdown menu\n\t\t}\n\n\t\tthis.hide();\n\t}\n}\n\nexport class LinkDropdownAction extends Action {\n\n\tconstructor(id: string, name: string, clazz: string, url: () => string, forceOpenInNewTab?: boolean);\n\tconstructor(id: string, name: string, clazz: string, url: string, forceOpenInNewTab?: boolean);\n\tconstructor(id: string, name: string, clazz: string, url: any, forceOpenInNewTab?: boolean) {\n\t\tsuper(id, name, clazz, true, (e: Event) => {\n\t\t\tlet urlString = url;\n\n\t\t\tif (isFunction(url)) {\n\t\t\t\turlString = url();\n\t\t\t}\n\n\t\t\tif (forceOpenInNewTab || (e instanceof MouseEvent && ((<MouseEvent>e).ctrlKey || (isMacintosh && (<MouseEvent>e).metaKey)))) {\n\t\t\t\twindow.open(urlString, '_blank');\n\t\t\t} else {\n\t\t\t\twindow.location.href = urlString;\n\t\t\t}\n\n\t\t\treturn TPromise.as(true);\n\t\t});\n\t}\n}"]}