{"version":3,"file":"aria.js","sourceRoot":"","sources":["../../../../../../src/vs/base/browser/ui/aria/aria.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAOb,IAAI,aAAsB,CAAC;IAC3B,IAAI,cAAuB,CAAC;IAC5B,IAAI,eAAwB,CAAC;IAC7B,0BAAiC,MAAmB;QACnD,aAAa,GAAG,WAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtD,cAAc,GAAG,WAAC,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;QACtG,eAAe,GAAG,WAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1G,CAAC;IALe,wBAAgB,mBAK/B,CAAA;IAED;;OAEG;IACH,eAAsB,GAAW;QAChC,aAAa,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IACpC,CAAC;IAFe,aAAK,QAEpB,CAAA;IAED;;OAEG;IACH,gBAAuB,GAAW;QACjC,EAAE,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC;YACjB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,iDAAiD;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,aAAa,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QACrC,CAAC;IACF,CAAC;IANe,cAAM,SAMrB,CAAA;IAED,uBAAuB,MAAe,EAAE,GAAW;QAClD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACpB,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;YAC/E,MAAM,CAAC;QACR,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,WAAW,KAAK,GAAG,CAAC,CAAC,CAAC;YACjD,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,sBAAsB,EAAE,GAAG,CAAC,CAAC;QAC7D,CAAC;QAED,WAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QAClB,WAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./aria';\nimport nls = require('vs/nls');\nimport {isMacintosh} from 'vs/base/common/platform';\nimport {Builder, $} from 'vs/base/browser/builder';\n\nlet ariaContainer: Builder;\nlet alertContainer: Builder;\nlet statusContainer: Builder;\nexport function setARIAContainer(parent: HTMLElement) {\n\tariaContainer = $('.aria-container').appendTo(parent);\n\n\talertContainer = $('.alert').appendTo(ariaContainer).attr({ 'role': 'alert', 'aria-atomic': 'true' });\n\tstatusContainer = $('.status').appendTo(ariaContainer).attr({ 'role': 'status', 'aria-atomic': 'true' });\n}\n\n/**\n * Given the provided message, will make sure that it is read as alert to screen readers.\n */\nexport function alert(msg: string): void {\n\tinsertMessage(alertContainer, msg);\n}\n\n/**\n * Given the provided message, will make sure that it is read as status to screen readers.\n */\nexport function status(msg: string): void {\n\tif (isMacintosh) {\n\t\talert(msg); // VoiceOver does not seem to support status role\n\t} else {\n\t\tinsertMessage(statusContainer, msg);\n\t}\n}\n\nfunction insertMessage(target: Builder, msg: string): void {\n\tif (!ariaContainer) {\n\t\tconsole.warn('ARIA support needs a container. Call setARIAContainer() first.');\n\t\treturn;\n\t}\n\n\tif (target.getHTMLElement().textContent === msg) {\n\t\tmsg = nls.localize('repeated', \"{0} (occurred again)\", msg);\n\t}\n\n\t$(target).empty();\n\t$(target).text(msg);\n}"]}