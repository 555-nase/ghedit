{"version":3,"sources":["vs/base/browser/ui/toolbar/toolbar.ts"],"names":[],"mappings":"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","file":"vs/base/browser/ui/toolbar/toolbar.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./toolbar';\nimport nls = require('vs/nls');\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {Builder, $} from 'vs/base/browser/builder';\nimport types = require('vs/base/common/types');\nimport {Action, IActionRunner, IAction} from 'vs/base/common/actions';\nimport {ActionBar, ActionsOrientation, IActionItemProvider, BaseActionItem} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {IContextMenuProvider, DropdownMenu, IActionProvider, ILabelRenderer, IDropdownMenuOptions} from 'vs/base/browser/ui/dropdown/dropdown';\nimport {ListenerUnbind} from 'vs/base/common/eventEmitter';\n\nexport const CONTEXT = 'context.toolbar';\n\nexport interface IToolBarOptions {\n\torientation?: ActionsOrientation;\n\tactionItemProvider?: IActionItemProvider;\n\tariaLabel?: string;\n}\n\n/**\n * A widget that combines an action bar for primary actions and a dropdown for secondary actions.\n */\nexport class ToolBar {\n\tprivate options: IToolBarOptions;\n\tprivate actionBar: ActionBar;\n\tprivate toggleMenuAction: ToggleMenuAction;\n\tprivate toggleMenuActionItem: DropdownMenuActionItem;\n\tprivate hasSecondaryActions: boolean;\n\n\tconstructor(container: HTMLElement, contextMenuProvider: IContextMenuProvider, options: IToolBarOptions = { orientation: ActionsOrientation.HORIZONTAL }) {\n\t\tthis.options = options;\n\t\tthis.toggleMenuAction = new ToggleMenuAction(() => this.toggleMenuActionItem && this.toggleMenuActionItem.show());\n\n\t\tlet element = document.createElement('div');\n\t\telement.className = 'monaco-toolbar';\n\t\tcontainer.appendChild(element);\n\n\t\tthis.actionBar = new ActionBar($(element), {\n\t\t\torientation: options.orientation,\n\t\t\tariaLabel: options.ariaLabel,\n\t\t\tactionItemProvider: (action: Action) => {\n\n\t\t\t\t// Return special action item for the toggle menu action\n\t\t\t\tif (action.id === ToggleMenuAction.ID) {\n\n\t\t\t\t\t// Dispose old\n\t\t\t\t\tif (this.toggleMenuActionItem) {\n\t\t\t\t\t\tthis.toggleMenuActionItem.dispose();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create new\n\t\t\t\t\tthis.toggleMenuActionItem = new DropdownMenuActionItem(\n\t\t\t\t\t\taction,\n\t\t\t\t\t\t(<ToggleMenuAction>action).menuActions,\n\t\t\t\t\t\tcontextMenuProvider,\n\t\t\t\t\t\tthis.options.actionItemProvider,\n\t\t\t\t\t\tthis.actionRunner,\n\t\t\t\t\t\t'toolbar-toggle-more'\n\t\t\t\t\t);\n\n\t\t\t\t\treturn this.toggleMenuActionItem;\n\t\t\t\t}\n\n\t\t\t\treturn options.actionItemProvider ? options.actionItemProvider(action) : null;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic set actionRunner(actionRunner: IActionRunner) {\n\t\tthis.actionBar.actionRunner = actionRunner;\n\t}\n\n\tpublic get actionRunner(): IActionRunner {\n\t\treturn this.actionBar.actionRunner;\n\t}\n\n\tpublic getContainer(): Builder {\n\t\treturn this.actionBar.getContainer();\n\t}\n\n\tpublic setAriaLabel(label: string): void {\n\t\tthis.actionBar.setAriaLabel(label);\n\t}\n\n\tpublic setActions(primaryActions: IAction[], secondaryActions?: IAction[]): () => void {\n\t\treturn () => {\n\t\t\tlet primaryActionsToSet = primaryActions ? primaryActions.slice(0) : [];\n\n\t\t\t// Inject additional action to open secondary actions if present\n\t\t\tthis.hasSecondaryActions = secondaryActions && secondaryActions.length > 0;\n\t\t\tif (this.hasSecondaryActions) {\n\t\t\t\tthis.toggleMenuAction.menuActions = secondaryActions.slice(0);\n\t\t\t\tprimaryActionsToSet.push(this.toggleMenuAction);\n\t\t\t}\n\n\t\t\tthis.actionBar.clear();\n\t\t\tthis.actionBar.push(primaryActionsToSet, { icon: true, label: false });\n\t\t};\n\t}\n\n\tpublic addPrimaryAction(primaryActions: IAction): () => void {\n\t\treturn () => {\n\n\t\t\t// Add after the \"...\" action if we have secondary actions\n\t\t\tif (this.hasSecondaryActions) {\n\t\t\t\tlet itemCount = this.actionBar.length();\n\t\t\t\tthis.actionBar.push(primaryActions, { icon: true, label: false, index: itemCount });\n\t\t\t}\n\n\t\t\t// Otherwise just add to the end\n\t\t\telse {\n\t\t\t\tthis.actionBar.push(primaryActions, { icon: true, label: false });\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.actionBar.dispose();\n\t\tthis.toggleMenuAction.dispose();\n\n\t\tif (this.toggleMenuActionItem) {\n\t\t\tthis.toggleMenuActionItem.dispose();\n\t\t}\n\t}\n}\n\nclass ToggleMenuAction extends Action {\n\n\tpublic static ID = 'toolbar.toggle.more';\n\n\tprivate _menuActions: IAction[];\n\tprivate toggleDropdownMenu: () => void;\n\n\tconstructor(toggleDropdownMenu: () => void) {\n\t\tsuper(ToggleMenuAction.ID, nls.localize('more', \"More\"), null, true);\n\n\t\tthis.toggleDropdownMenu = toggleDropdownMenu;\n\t}\n\n\tpublic run(): TPromise<any> {\n\t\tthis.toggleDropdownMenu();\n\n\t\treturn TPromise.as(true);\n\t}\n\n\tpublic get menuActions() {\n\t\treturn this._menuActions;\n\t}\n\n\tpublic set menuActions(actions: IAction[]) {\n\t\tthis._menuActions = actions;\n\t}\n}\n\nexport class DropdownMenuActionItem extends BaseActionItem {\n\tprivate menuActionsOrProvider: any;\n\tprivate dropdownMenu: DropdownMenu;\n\tprivate toUnbind: ListenerUnbind;\n\tprivate contextMenuProvider: IContextMenuProvider;\n\tprivate actionItemProvider: IActionItemProvider;\n\tprivate clazz: string;\n\n\tconstructor(action: IAction, menuActions: IAction[], contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider, actionRunner: IActionRunner, clazz: string);\n\tconstructor(action: IAction, actionProvider: IActionProvider, contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider, actionRunner: IActionRunner, clazz: string);\n\tconstructor(action: IAction, menuActionsOrProvider: any, contextMenuProvider: IContextMenuProvider, actionItemProvider: IActionItemProvider, actionRunner: IActionRunner, clazz: string) {\n\t\tsuper(null, action);\n\n\t\tthis.menuActionsOrProvider = menuActionsOrProvider;\n\t\tthis.contextMenuProvider = contextMenuProvider;\n\t\tthis.actionItemProvider = actionItemProvider;\n\t\tthis.actionRunner = actionRunner;\n\t\tthis.clazz = clazz;\n\t}\n\n\tpublic render(container: HTMLElement): void {\n\t\tlet labelRenderer: ILabelRenderer = (el: HTMLElement): IDisposable => {\n\t\t\tthis.builder = $('a.action-label').attr({\n\t\t\t\ttabIndex: '0',\n\t\t\t\trole: 'button',\n\t\t\t\t'aria-haspopup': 'true',\n\t\t\t\ttitle: this._action.label || '',\n\t\t\t\tclass: this.clazz\n\t\t\t});\n\n\t\t\tthis.builder.appendTo(el);\n\n\t\t\treturn null;\n\t\t};\n\n\t\tlet options: IDropdownMenuOptions = {\n\t\t\tcontextMenuProvider: this.contextMenuProvider,\n\t\t\tlabelRenderer: labelRenderer\n\t\t};\n\n\t\t// Render the DropdownMenu around a simple action to toggle it\n\t\tif (types.isArray(this.menuActionsOrProvider)) {\n\t\t\toptions.actions = this.menuActionsOrProvider;\n\t\t} else {\n\t\t\toptions.actionProvider = this.menuActionsOrProvider;\n\t\t}\n\n\t\tthis.dropdownMenu = new DropdownMenu(container, options);\n\n\t\tthis.dropdownMenu.menuOptions = {\n\t\t\tactionItemProvider: this.actionItemProvider,\n\t\t\tactionRunner: this.actionRunner\n\t\t};\n\n\t\t// Reemit events for running actions\n\t\tthis.toUnbind = this.addEmitter(this.dropdownMenu);\n\t}\n\n\tpublic show(): void {\n\t\tif (this.dropdownMenu) {\n\t\t\tthis.dropdownMenu.show();\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.toUnbind();\n\t\tthis.dropdownMenu.dispose();\n\n\t\tsuper.dispose();\n\t}\n}"]}