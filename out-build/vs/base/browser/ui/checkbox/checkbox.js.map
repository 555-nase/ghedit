{"version":3,"file":"vs/base/browser/ui/checkbox/checkbox.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/checkbox/checkbox.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./checkbox';\n\nimport DOM = require('vs/base/browser/dom');\nimport {KeyCode} from 'vs/base/common/keyCodes';\nimport {Widget} from 'vs/base/browser/ui/widget';\nimport {IKeyboardEvent} from 'vs/base/browser/keyboardEvent';\n\nexport interface ICheckboxOpts {\n\tactionClassName: string;\n\ttitle: string;\n\tisChecked: boolean;\n\tonChange: (viaKeyboard: boolean) => void;\n\tonKeyDown?: (e: IKeyboardEvent) => void;\n}\n\nexport class Checkbox extends Widget {\n\n\tprivate _opts: ICheckboxOpts;\n\tpublic domNode: HTMLElement;\n\n\tprivate _checked: boolean;\n\n\tconstructor(opts: ICheckboxOpts) {\n\t\tsuper();\n\t\tthis._opts = opts;\n\t\tthis._checked = this._opts.isChecked;\n\n\t\tthis.domNode = document.createElement('div');\n\t\tthis.domNode.title = this._opts.title;\n\t\tthis.domNode.className = this._className();\n\t\tthis.domNode.tabIndex = 0;\n\t\tthis.domNode.setAttribute('role', 'checkbox');\n\t\tthis.domNode.setAttribute('aria-checked', String(this._checked));\n\t\tthis.domNode.setAttribute('aria-label', this._opts.title);\n\n\t\tthis.onclick(this.domNode, (ev) => {\n\t\t\tthis.checked = !this._checked;\n\t\t\tthis._opts.onChange(false);\n\t\t\tev.preventDefault();\n\t\t});\n\n\t\tthis.onkeydown(this.domNode, (keyboardEvent) => {\n\t\t\tif (keyboardEvent.keyCode === KeyCode.Space || keyboardEvent.keyCode === KeyCode.Enter) {\n\t\t\t\tthis.checked = !this._checked;\n\t\t\t\tthis._opts.onChange(true);\n\t\t\t\tkeyboardEvent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._opts.onKeyDown) {\n\t\t\t\tthis._opts.onKeyDown(keyboardEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic focus(): void {\n\t\tthis.domNode.focus();\n\t}\n\n\tpublic get checked(): boolean {\n\t\treturn this._checked;\n\t}\n\n\tpublic set checked(newIsChecked: boolean) {\n\t\tthis._checked = newIsChecked;\n\t\tthis.domNode.setAttribute('aria-checked', String(this._checked));\n\t\tthis.domNode.className = this._className();\n\t}\n\n\tprivate _className(): string {\n\t\treturn 'custom-checkbox ' + this._opts.actionClassName + ' ' + (this._checked ? 'checked' : 'unchecked');\n\t}\n\n\tpublic width(): number {\n\t\treturn 2 /*marginleft*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n\t}\n\n\tpublic enable(): void {\n\t\tthis.domNode.tabIndex = 0;\n\t\tthis.domNode.setAttribute('aria-disabled', String(false));\n\t}\n\n\tpublic disable(): void {\n\t\tDOM.removeTabIndexAndUpdateFocus(this.domNode);\n\t\tthis.domNode.setAttribute('aria-disabled', String(true));\n\t}\n}\n"]}