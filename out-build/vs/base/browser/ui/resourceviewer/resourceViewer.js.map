{"version":3,"sources":["vs/base/browser/ui/resourceviewer/resourceViewer.ts"],"names":[],"mappings":"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","file":"vs/base/browser/ui/resourceviewer/resourceViewer.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./resourceviewer';\nimport nls = require('vs/nls');\nimport mimes = require('vs/base/common/mime');\nimport URI from 'vs/base/common/uri';\nimport paths = require('vs/base/common/paths');\nimport {Builder, $} from 'vs/base/browser/builder';\nimport DOM = require('vs/base/browser/dom');\nimport {DomNodeScrollable} from 'vs/base/browser/ui/scrollbar/domNodeScrollable';\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes = {\n\t'.bmp': 'image/bmp',\n\t'.gif': 'image/gif',\n\t'.jpg': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpe': 'image/jpg',\n\t'.png': 'image/png',\n\t'.tiff': 'image/tiff',\n\t'.tif': 'image/tiff',\n\t'.ico': 'image/x-icon',\n\t'.tga': 'image/x-tga',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mp4a': 'audio/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.spx': 'audio/ogg',\n\t'.aac': 'audio/x-aac',\n\t'.wav': 'audio/x-wav',\n\t'.wma': 'audio/x-ms-wma',\n\t'.mp4': 'video/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpg4': 'video/mp4',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpe': 'video/mpeg',\n\t'.m1v': 'video/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.ogv': 'video/ogg',\n\t'.qt': 'video/quicktime',\n\t'.mov': 'video/quicktime',\n\t'.webm': 'video/webm',\n\t'.mkv': 'video/x-matroska',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.flv': 'video/x-flv',\n\t'.avi': 'video/x-msvideo',\n\t'.movie': 'video/x-sgi-movie'\n};\n\n/**\n * Helper to actually render the given resource into the provided container. Will adjust scrollbar (if provided) automatically based on loading\n * progress of the binary resource.\n */\nexport class ResourceViewer {\n\n\tpublic static show(name: string, resource: URI, container: Builder, scrollable?: DomNodeScrollable): void {\n\n\t\t// Ensure CSS class\n\t\t$(container).addClass('monaco-resource-viewer');\n\n\t\t// Lookup media mime if any\n\t\tlet mime: string;\n\t\tconst ext = paths.extname(resource.toString());\n\t\tif (ext) {\n\t\t\tmime = mapExtToMediaMimes[ext.toLowerCase()];\n\t\t}\n\n\t\tif (!mime) {\n\t\t\tmime = mimes.MIME_BINARY;\n\t\t}\n\n\t\t// Show Image inline\n\t\tif (mime.indexOf('image/') >= 0) {\n\t\t\t$(container)\n\t\t\t\t.empty()\n\t\t\t\t.style({ paddingLeft: '20px' }) // restore CSS value in case the user saw a PDF before where we remove padding\n\t\t\t\t.img({\n\t\t\t\t\tsrc: resource.toString() + '?' + new Date().getTime() // We really want to avoid the browser from caching this resource, so we add a fake query param that is unique\n\t\t\t\t}).on(DOM.EventType.LOAD, () => {\n\t\t\t\t\tif (scrollable) {\n\t\t\t\t\t\tscrollable.onContentsDimensions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\t// Embed Object (only PDF for now)\n\t\telse if (false /* PDF is currently not supported in Electron it seems */ && mime.indexOf('pdf') >= 0) {\n\t\t\t$(container)\n\t\t\t\t.empty()\n\t\t\t\t.style({ padding: 0, margin: 0 }) // We really do not want any paddings or margins when displaying PDFs\n\t\t\t\t.element('object')\n\t\t\t\t.attr({\n\t\t\t\t\tdata: resource.toString() + '?' + new Date().getTime(), // We really want to avoid the browser from caching this resource, so we add a fake query param that is unique\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\ttype: mime\n\t\t\t\t});\n\t\t}\n\n\t\t// Embed Audio (if supported in browser)\n\t\telse if (mime.indexOf('audio/') >= 0) {\n\t\t\t$(container)\n\t\t\t\t.empty()\n\t\t\t\t.style({ paddingLeft: '20px' }) // restore CSS value in case the user saw a PDF before where we remove padding\n\t\t\t\t.element('audio')\n\t\t\t\t.attr({\n\t\t\t\t\tsrc: resource.toString() + '?' + new Date().getTime(), // We really want to avoid the browser from caching this resource, so we add a fake query param that is unique\n\t\t\t\t\ttext: nls.localize('missingAudioSupport', \"Sorry but playback of audio files is not supported.\"),\n\t\t\t\t\tcontrols: 'controls'\n\t\t\t\t}).on(DOM.EventType.LOAD, () => {\n\t\t\t\t\tif (scrollable) {\n\t\t\t\t\t\tscrollable.onContentsDimensions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\t// Embed Video (if supported in browser)\n\t\telse if (mime.indexOf('video/') >= 0) {\n\t\t\t$(container)\n\t\t\t\t.empty()\n\t\t\t\t.style({ paddingLeft: '20px' }) // restore CSS value in case the user saw a PDF before where we remove padding\n\t\t\t\t.element('video')\n\t\t\t\t.attr({\n\t\t\t\t\tsrc: resource.toString() + '?' + new Date().getTime(), // We really want to avoid the browser from caching this resource, so we add a fake query param that is unique\n\t\t\t\t\ttext: nls.localize('missingVideoSupport', \"Sorry but playback of video files is not supported.\"),\n\t\t\t\t\tcontrols: 'controls'\n\t\t\t\t}).on(DOM.EventType.LOAD, () => {\n\t\t\t\t\tif (scrollable) {\n\t\t\t\t\t\tscrollable.onContentsDimensions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\t// Handle generic Binary Files\n\t\telse {\n\t\t\t$(container)\n\t\t\t\t.empty()\n\t\t\t\t.style({ paddingLeft: '20px' }) // restore CSS value in case the user saw a PDF before where we remove padding\n\t\t\t\t.span({\n\t\t\t\t\ttext: nls.localize('nativeBinaryError', \"The file cannot be displayed in the editor because it is either binary, very large or uses an unsupported text encoding.\")\n\t\t\t\t});\n\n\t\t\tif (scrollable) {\n\t\t\t\tscrollable.onContentsDimensions();\n\t\t\t}\n\t\t}\n\t}\n}"]}