{"version":3,"file":"domNodeScrollable.js","sourceRoot":"","sources":["../../../../../../src/vs/base/browser/ui/scrollbar/domNodeScrollable.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAQb;QAAuC,qCAAU;QAShD,2BAAY,OAAoB;YATjC,iBA2EC;YAjEC,iBAAO,CAAC;YAND,cAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,EAAe,CAAC,CAAC;YAO9D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,eAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAElE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAE5C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAC,CAAC;gBACxE,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,gDAAoB,GAA3B;YACC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzB,CAAC;QAEO,4CAAgB,GAAxB;YACC,IAAI,QAAQ,GAAG,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAE1C,IAAI,UAAU,GAAG,CAAC,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YACjE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAE5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,wBAAW,CAClC,IAAI,CAAC,YAAY,EAAE,EACnB,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,cAAc,EAAE,EACrB,IAAI,CAAC,eAAe,EAAE,EACtB,QAAQ,EACR,UAAU,CACV,CAAC,CAAC;QACJ,CAAC;QAEM,mCAAO,GAAd;YACC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,gBAAK,CAAC,OAAO,WAAE,CAAC;QACjB,CAAC;QAEM,2CAAe,GAAtB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACnC,CAAC;QAEM,0CAAc,GAArB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAClC,CAAC;QAEM,yCAAa,GAApB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QACjC,CAAC;QAEM,yCAAa,GAApB,UAAqB,UAAkB;YACtC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACvC,CAAC;QAEM,wCAAY,GAAnB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAChC,CAAC;QAEM,wCAAY,GAAnB,UAAoB,SAAiB;YACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;QACrC,CAAC;QAEM,6CAAiB,GAAxB,UAAyB,QAAiC;YACzD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;QACF,wBAAC;IAAD,CAAC,AA3ED,CAAuC,sBAAU,GA2EhD;IA3EY,yBAAiB,oBA2E7B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as DomUtils from 'vs/base/browser/dom';\nimport {Gesture} from 'vs/base/browser/touch';\nimport {Disposable, IDisposable} from 'vs/base/common/lifecycle';\nimport {IScrollable, ScrollEvent} from 'vs/base/common/scrollable';\nimport {Emitter} from 'vs/base/common/event';\n\nexport class DomNodeScrollable extends Disposable implements IScrollable {\n\n\tprivate _domNode: HTMLElement;\n\tprivate _gestureHandler: Gesture;\n\tprivate _onScroll = this._register(new Emitter<ScrollEvent>());\n\n\tprivate _lastScrollTop:number;\n\tprivate _lastScrollLeft:number;\n\n\tconstructor(domNode: HTMLElement) {\n\t\tsuper();\n\t\tthis._domNode = domNode;\n\t\tthis._gestureHandler = this._register(new Gesture(this._domNode));\n\n\t\tthis._lastScrollTop = this.getScrollTop();\n\t\tthis._lastScrollLeft = this.getScrollLeft();\n\n\t\tthis._register(DomUtils.addDisposableListener(this._domNode, 'scroll', (e) => {\n\t\t\tthis._emitScrollEvent();\n\t\t}));\n\t}\n\n\tpublic onContentsDimensions(): void {\n\t\tthis._emitScrollEvent();\n\t}\n\n\tprivate _emitScrollEvent(): void {\n\t\tlet vertical = (this._lastScrollTop !== this.getScrollTop());\n\t\tthis._lastScrollTop = this.getScrollTop();\n\n\t\tlet horizontal = (this._lastScrollLeft !== this.getScrollLeft());\n\t\tthis._lastScrollLeft = this.getScrollLeft();\n\n\t\tthis._onScroll.fire(new ScrollEvent(\n\t\t\tthis.getScrollTop(),\n\t\t\tthis.getScrollLeft(),\n\t\t\tthis.getScrollWidth(),\n\t\t\tthis.getScrollHeight(),\n\t\t\tvertical,\n\t\t\thorizontal\n\t\t));\n\t}\n\n\tpublic dispose() {\n\t\tthis._domNode = null;\n\t\tsuper.dispose();\n\t}\n\n\tpublic getScrollHeight(): number {\n\t\treturn this._domNode.scrollHeight;\n\t}\n\n\tpublic getScrollWidth(): number {\n\t\treturn this._domNode.scrollWidth;\n\t}\n\n\tpublic getScrollLeft(): number {\n\t\treturn this._domNode.scrollLeft;\n\t}\n\n\tpublic setScrollLeft(scrollLeft: number): void {\n\t\tthis._domNode.scrollLeft = scrollLeft;\n\t}\n\n\tpublic getScrollTop(): number {\n\t\treturn this._domNode.scrollTop;\n\t}\n\n\tpublic setScrollTop(scrollTop: number): void {\n\t\tthis._domNode.scrollTop = scrollTop;\n\t}\n\n\tpublic addScrollListener(callback: (v:ScrollEvent) => void): IDisposable {\n\t\treturn this._onScroll.event(callback);\n\t}\n}\n"]}