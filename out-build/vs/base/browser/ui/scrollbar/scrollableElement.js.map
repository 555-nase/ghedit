{"version":3,"file":"vs/base/browser/ui/scrollbar/scrollableElement.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/scrollbar/scrollableElement.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IA4Mb,WAAY,UAAU;QACrB,2CAAI,CAAA;QACJ,+CAAM,CAAA;QACN,iDAAO,CAAA;IACR,CAAC,EAJW,kBAAU,KAAV,kBAAU,QAIrB;IAJD,IAAY,UAAU,GAAV,kBAIX,CAAA;IAED,8BAAqC,UAAkB;QACtD,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,KAAK,QAAQ;gBACZ,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;YAC1B,KAAK,SAAS;gBACb,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B;gBACC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;QACzB,CAAC;IACF,CAAC;IATe,4BAAoB,uBASnC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {FastDomNode} from 'vs/base/browser/styleMutator';\n\nexport interface IScrollableElementCreationOptions {\n\t/**\n\t * Prevent the scrollbar rendering from using translate3d. Defaults to false.\n\t */\n\tforbidTranslate3dUse?: boolean;\n\n\t/**\n\t * The scrollable element should not do any DOM mutations until renderNow() is called.\n\t * Defaults to false.\n\t */\n\tlazyRender?: boolean;\n\n\t/**\n\t * CSS Class name for the scrollable element.\n\t */\n\tclassName?: string;\n\n\t/**\n\t * Drop subtle horizontal and vertical shadows.\n\t * Defaults to false.\n\t */\n\tuseShadows?: boolean;\n\n\t/**\n\t * Handle mouse wheel (listen to mouse wheel scrolling).\n\t * Defaults to true\n\t */\n\thandleMouseWheel?: boolean;\n\n\t/**\n\t * Flip axes. Treat vertical scrolling like horizontal and vice-versa.\n\t * Defaults to false;\n\t */\n\tflipAxes?: boolean;\n\n\t/**\n\t * A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\n\t * Defaults to 1.\n\t */\n\tmouseWheelScrollSensitivity?: number;\n\n\t/**\n\t * Height for vertical arrows (top/bottom) and width for horizontal arrows (left/right).\n\t * Defaults to 11.\n\t */\n\tarrowSize?: number;\n\n\t/**\n\t * The dom node events should be bound to.\n\t * If no listenOnDomNode is provided, the dom node passed to the constructor will be used for event listening.\n\t */\n\tlistenOnDomNode?: HTMLElement;\n\n\t/**\n\t * Control the visibility of the horizontal scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\thorizontal?: string;\n\n\t/**\n\t * Height (in px) of the horizontal scrollbar.\n\t * Defaults to 10.\n\t */\n\thorizontalScrollbarSize?: number;\n\n\t/**\n\t * Height (in px) of the horizontal scrollbar slider.\n\t * Defaults to `horizontalScrollbarSize`\n\t */\n\thorizontalSliderSize?: number;\n\n\t/**\n\t * Render arrows (left/right) for the horizontal scrollbar.\n\t * Defaults to false.\n\t */\n\thorizontalHasArrows?: boolean;\n\n\t/**\n\t * Control the visibility of the vertical scrollbar.\n\t * Accepted values: 'auto' (on mouse over), 'visible' (always visible), 'hidden' (never visible)\n\t * Defaults to 'auto'.\n\t */\n\tvertical?: string;\n\n\t/**\n\t * Width (in px) of the vertical scrollbar.\n\t * Defaults to 10.\n\t */\n\tverticalScrollbarSize?: number;\n\n\t/**\n\t * Width (in px) of the vertical scrollbar slider.\n\t * Defaults to `verticalScrollbarSize`\n\t */\n\tverticalSliderSize?: number;\n\n\t/**\n\t * Render arrows (top/bottom) for the vertical scrollbar.\n\t * Defaults to false.\n\t */\n\tverticalHasArrows?: boolean;\n\n\t/**\n\t * Add a `last-scroll-time` attribute to scroll targets or parents of scroll targets matching the following class name\n\t */\n\tsaveLastScrollTimeOnClassName?: string;\n}\n\nexport interface IOverviewRulerLayoutInfo {\n\tparent: HTMLElement;\n\tinsertBefore: HTMLElement;\n}\n\nexport interface IDimensions {\n\twidth: number;\n\theight: number;\n}\n\n/**\n * An Element that uses fancy scrollbars.\n */\nexport interface IScrollableElement {\n\n\tverticalScrollbarWidth: number;\n\n\thorizontalScrollbarHeight: number;\n\n\t/**\n\t * Get the generated 'scrollable' dom node\n\t */\n\tgetDomNode(): HTMLElement;\n\n\t/**\n\t * Let the scrollable element know that the generated dom node's width / height might have changed.\n\t */\n\tonElementDimensions(dimensions?: IDimensions): void;\n\n\t/**\n\t * Dispose.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * Render / mutate the DOM now.\n\t * Should be used together with the ctor option `lazyRender`.\n\t */\n\trenderNow(): void;\n\n\t/**\n\t * Update the class name of the scrollable element.\n\t */\n\tupdateClassName(newClassName: string): void;\n\n\t/**\n\t * Update configuration options for the scrollbar.\n\t * Really this is Editor.IEditorScrollbarOptions, but base shouldn't\n\t * depend on Editor.\n\t */\n\tupdateOptions(newOptions: IScrollableElementCreationOptions): void;\n\n\tgetOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo;\n\n\t/**\n\t * Delegate a mouse down event to the vertical scrollbar.\n\t * This is to help with clicking somewhere else and having the scrollbar react.\n\t */\n\tdelegateVerticalScrollbarMouseDown(browserEvent: MouseEvent): void;\n\n}\n\nexport interface IMouseWheelEvent {\n\tbrowserEvent: MouseWheelEvent;\n\tdeltaX: number;\n\tdeltaY: number;\n\tpreventDefault(): void;\n\tstopPropagation(): void;\n}\n\nexport interface IScrollbar {\n\tdomNode: FastDomNode;\n\tdispose(): void;\n\tonElementSize(size: number): boolean;\n\tonElementScrollSize(scrollSize: number): boolean;\n\tonElementScrollPosition(scrollPosition: number): boolean;\n\tbeginReveal(): void;\n\tbeginHide(): void;\n\tdelegateMouseDown(browserEvent: MouseEvent): void;\n\tvalidateScrollPosition(scrollPosition: number): number;\n\tsetDesiredScrollPosition(scrollPosition: number): boolean;\n\n\trender(): void;\n}\n\nexport interface IParent {\n\tonMouseWheel(mouseWheelEvent: IMouseWheelEvent): void;\n\tonDragStart(): void;\n\tonDragEnd(): void;\n}\n\nexport enum Visibility {\n\tAuto,\n\tHidden,\n\tVisible\n}\n\nexport function visibilityFromString(visibility: string): Visibility {\n\tswitch (visibility) {\n\t\tcase 'hidden':\n\t\t\treturn Visibility.Hidden;\n\t\tcase 'visible':\n\t\t\treturn Visibility.Visible;\n\t\tdefault:\n\t\t\treturn Visibility.Auto;\n\t}\n}\n\nexport interface IScrollableElementOptions {\n\tforbidTranslate3dUse: boolean;\n\tlazyRender: boolean;\n\tclassName: string;\n\tuseShadows: boolean;\n\thandleMouseWheel: boolean;\n\tflipAxes: boolean;\n\tmouseWheelScrollSensitivity: number;\n\tarrowSize: number;\n\tlistenOnDomNode: HTMLElement;\n\thorizontal: Visibility;\n\thorizontalScrollbarSize: number;\n\thorizontalSliderSize: number;\n\thorizontalHasArrows: boolean;\n\tvertical: Visibility;\n\tverticalScrollbarSize: number;\n\tverticalSliderSize: number;\n\tverticalHasArrows: boolean;\n\tsaveLastScrollTimeOnClassName: string;\n}\n"]}