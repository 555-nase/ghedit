{"version":3,"file":"vs/base/browser/ui/menu/menu.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/browser/ui/menu/menu.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;IAEhG,YAAY,CAAC;IAeb;QAA0B,wBAAY;QAKrC,cAAY,SAAsB,EAAE,OAAkB,EAAE,OAA0B;YAA1B,uBAA0B,GAA1B,YAA0B;YACjF,iBAAO,CAAC;YAER,WAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;YAE/C,IAAI,KAAK,GAAG,WAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAElD,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,KAAK,EAAE;gBACrC,WAAW,EAAE,8BAAkB,CAAC,QAAQ;gBACxC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;gBAC9C,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,YAAY,EAAE,OAAO,CAAC,YAAY;aAClC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEjD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3D,CAAC;QAEM,oBAAK,GAAZ;YACC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAEM,sBAAO,GAAd;YACC,gBAAK,CAAC,OAAO,WAAE,CAAC;YAEhB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACvB,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACtB,CAAC;QACF,CAAC;QACF,WAAC;IAAD,CAAC,AAzCD,CAA0B,2BAAY,GAyCrC;IAzCY,YAAI,OAyChB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./menu';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {$} from 'vs/base/browser/builder';\nimport {IActionRunner, IAction} from 'vs/base/common/actions';\nimport {ActionBar, IActionItemProvider, ActionsOrientation} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {EventEmitter} from 'vs/base/common/eventEmitter';\n\nexport interface IMenuOptions {\n\tcontext?: any;\n\tactionItemProvider?: IActionItemProvider;\n\tactionRunner?: IActionRunner;\n}\n\nexport class Menu extends EventEmitter {\n\n\tprivate actionBar: ActionBar;\n\tprivate listener: IDisposable;\n\n\tconstructor(container: HTMLElement, actions: IAction[], options: IMenuOptions = {}) {\n\t\tsuper();\n\n\t\t$(container).addClass('monaco-menu-container');\n\n\t\tlet $menu = $('.monaco-menu').appendTo(container);\n\n\t\tthis.actionBar = new ActionBar($menu, {\n\t\t\torientation: ActionsOrientation.VERTICAL,\n\t\t\tactionItemProvider: options.actionItemProvider,\n\t\t\tcontext: options.context,\n\t\t\tactionRunner: options.actionRunner\n\t\t});\n\n\t\tthis.listener = this.addEmitter2(this.actionBar);\n\n\t\tthis.actionBar.push(actions, { icon: true, label: true });\n\t}\n\n\tpublic focus() {\n\t\tthis.actionBar.focus();\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\n\t\tif (this.actionBar) {\n\t\t\tthis.actionBar.dispose();\n\t\t\tthis.actionBar = null;\n\t\t}\n\n\t\tif (this.listener) {\n\t\t\tthis.listener.dispose();\n\t\t\tthis.listener = null;\n\t\t}\n\t}\n}"]}