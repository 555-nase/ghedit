{"version":3,"file":"vs/base/worker/defaultWorkerFactory.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/worker/defaultWorkerFactory.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as flags from 'vs/base/common/flags';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {IWorker, IWorkerCallback, IWorkerFactory} from 'vs/base/common/worker/workerClient';\nimport * as dom from 'vs/base/browser/dom';\n\nfunction defaultGetWorkerUrl(workerId:string, label:string): string {\n\treturn require.toUrl('./' + workerId);\n}\nvar getWorkerUrl = flags.getCrossOriginWorkerScriptUrl || defaultGetWorkerUrl;\n\n\n/**\n * A worker that uses HTML5 web workers so that is has\n * its own global scope and its own thread.\n */\nclass WebWorker implements IWorker {\n\n\tprivate id:number;\n\tprivate worker:Worker;\n\n\tconstructor(moduleId:string, id:number, label:string, onMessageCallback:IWorkerCallback) {\n\t\tthis.id = id;\n\t\tthis.worker = new Worker(getWorkerUrl('workerMain.js', label));\n\t\tthis.postMessage(moduleId);\n\t\tthis.worker.onmessage = function (ev:any) {\n\t\t\tonMessageCallback(ev.data);\n\t\t};\n\t}\n\n\tpublic getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic postMessage(msg:string): void {\n\t\tthis.worker.postMessage(msg);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\t}\n}\n\n/**\n * A worker that runs in an iframe and therefore does have its\n * own global scope, but no own thread.\n */\nclass FrameWorker implements IWorker {\n\n\tprivate id: number;\n\tprivate iframe: HTMLIFrameElement;\n\n\tprivate onMessage: EventListener;\n\tprivate loaded: boolean;\n\tprivate beforeLoadMessages: any[];\n\n\tprivate _listeners: IDisposable[];\n\n\tconstructor(moduleId:string, id: number, onMessageCallback:IWorkerCallback) {\n\t\tthis.id = id;\n\t\tthis._listeners = [];\n\n\t\t// Collect all messages sent to the worker until the iframe is loaded\n\t\tthis.loaded = false;\n\t\tthis.beforeLoadMessages = [];\n\n\t\tthis.postMessage(moduleId);\n\n\t\tthis.iframe = <HTMLIFrameElement> document.createElement('iframe');\n\t\tthis.iframe.id = this.iframeId();\n\t\tthis.iframe.src = require.toUrl('./workerMainCompatibility.html');\n\t\t(<any> this.iframe).frameborder = this.iframe.height = this.iframe.width = '0';\n\t\tthis.iframe.style.display = 'none';\n\t\tthis._listeners.push(dom.addDisposableListener(this.iframe, 'load', () => this.onLoaded()));\n\n\t\tthis.onMessage = function(ev:any) {\n\t\t\tonMessageCallback(ev.data);\n\t\t};\n\t\tthis._listeners.push(dom.addDisposableListener(window, 'message', this.onMessage));\n\t\tdocument.body.appendChild(this.iframe);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._listeners = dispose(this._listeners);\n\t\twindow.removeEventListener('message', this.onMessage);\n\t\twindow.frames[this.iframeId()].close();\n\t}\n\n\tprivate iframeId(): string {\n\t\treturn 'worker_iframe_' + this.id;\n\t}\n\n\tprivate onLoaded(): void {\n\t\tthis.loaded = true;\n\t\twhile (this.beforeLoadMessages.length > 0) {\n\t\t\tthis.postMessage(this.beforeLoadMessages.shift());\n\t\t}\n\t}\n\n\tpublic getId(): number {\n\t\treturn this.id;\n\t}\n\n\tpublic postMessage(msg:string): void {\n\t\tif (this.loaded === true) {\n\t\t\tvar iframe = window.frames[this.iframeId()];\n\t\t\tif (iframe.postMessage) {\n\t\t\t\tiframe.postMessage(msg, '*');\n\t\t\t} else {\n\t\t\t\tiframe.contentWindow.postMessage(msg, '*');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.beforeLoadMessages.push(msg);\n\t\t}\n\t}\n}\n\nexport class DefaultWorkerFactory implements IWorkerFactory {\n\n\tprivate static LAST_WORKER_ID = 0;\n\n\tpublic create(moduleId:string, onMessageCallback:IWorkerCallback):IWorker {\n\t\tvar workerId = (++DefaultWorkerFactory.LAST_WORKER_ID);\n\t\tif (typeof WebWorker !== 'undefined') {\n\t\t\treturn new WebWorker(moduleId, workerId, 'service' + workerId, onMessageCallback);\n\t\t}\n\t\treturn new FrameWorker(moduleId, workerId, onMessageCallback);\n\t}\n}"]}