{"version":3,"file":"vs/base/test/browser/quickopen.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/browser/quickopen.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb,KAAK,CAAC,WAAW,EAAE;QAClB,IAAI,CAAC,gBAAgB,EAAE;YACtB,IAAI,KAAK,GAAG,IAAI,+BAAc,EAAE,CAAC;YAEjC,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,IAAI,oCAAmB,EAAE,CAAC;YAEvC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YAEhD,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC;YAE3C,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC;YAE3C,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE;YAC3B,IAAI,KAAK,GAAG,IAAI,+BAAc,EAAE,CAAC;YAEjC,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,IAAI,+BAAc,EAAE,CAAC;YAClC,IAAI,MAAM,GAAG,IAAI,oCAAmB,EAAE,CAAC;YAEvC,KAAK,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;YAE3C,IAAI,EAAE,GAAG,IAAI,4BAAU,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;YACrD,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,QAAe;gBAChD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport { QuickOpenModel, QuickOpenEntry, QuickOpenEntryGroup } from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport { DataSource } from 'vs/base/parts/quickopen/browser/quickOpenViewer';\n\nsuite('QuickOpen', () => {\n\ttest('QuickOpenModel', () => {\n\t\tvar model = new QuickOpenModel();\n\n\t\tvar entry1 = new QuickOpenEntry();\n\t\tvar entry2 = new QuickOpenEntry();\n\t\tvar entry3 = new QuickOpenEntryGroup();\n\n\t\tassert.notEqual(entry1.getId(), entry2.getId());\n\t\tassert.notEqual(entry2.getId(), entry3.getId());\n\n\t\tmodel.addEntries([entry1, entry2, entry3]);\n\t\tassert.equal(3, model.getEntries().length);\n\n\t\tmodel.setEntries([entry1, entry2]);\n\t\tassert.equal(2, model.getEntries().length);\n\n\t\tentry1.setHidden(true);\n\t\tassert.equal(1, model.getEntries(true).length);\n\t\tassert.equal(entry2, model.getEntries(true)[0]);\n\t});\n\n\ttest('QuickOpenDataSource', () => {\n\t\tvar model = new QuickOpenModel();\n\n\t\tvar entry1 = new QuickOpenEntry();\n\t\tvar entry2 = new QuickOpenEntry();\n\t\tvar entry3 = new QuickOpenEntryGroup();\n\n\t\tmodel.addEntries([entry1, entry2, entry3]);\n\n\t\tvar ds = new DataSource(model);\n\t\tassert.equal(entry1.getId(), ds.getId(null, entry1));\n\t\tassert.equal(true, ds.hasChildren(null, model));\n\t\tassert.equal(false, ds.hasChildren(null, entry1));\n\n\t\tds.getChildren(null, model).then((children: any[]) => {\n\t\t\tassert.equal(3, children.length);\n\t\t});\n\t});\n});"]}