{"version":3,"file":"vs/base/test/common/lifecycle.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/lifecycle.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb;QAAA;YACC,eAAU,GAAG,KAAK,CAAC;QAEpB,CAAC;QADA,4BAAO,GAAP,cAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;QACtC,iBAAC;IAAD,CAAC,AAHD,IAGC;IAED,KAAK,CAAC,WAAW,EAAE;QAElB,IAAI,CAAC,2BAA2B,EAAE;YACjC,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YAEpC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAE/B,mBAAO,CAAC,UAAU,CAAC,CAAC;YAEpB,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,EAAE;YAChC,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,IAAM,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;YAErC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC/B,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAEhC,mBAAO,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;YAEnC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,EAAE;YAC3B,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;YACpC,IAAM,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;YAErC,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC/B,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAEhC,mBAAO,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;YAEjC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YAC9B,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport { IDisposable, dispose } from 'vs/base/common/lifecycle';\n\nclass Disposable implements IDisposable {\n\tisDisposed = false;\n\tdispose() { this.isDisposed = true; }\n}\n\nsuite('Lifecycle', () => {\n\n\ttest('dispose single disposable', () => {\n\t\tconst disposable = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\n\t\tdispose(disposable);\n\n\t\tassert(disposable.isDisposed);\n\t});\n\n\ttest('dispose disposable array', () => {\n\t\tconst disposable = new Disposable();\n\t\tconst disposable2 = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\t\tassert(!disposable2.isDisposed);\n\n\t\tdispose([disposable, disposable2]);\n\n\t\tassert(disposable.isDisposed);\n\t\tassert(disposable2.isDisposed);\n\t});\n\n\ttest('dispose disposables', () => {\n\t\tconst disposable = new Disposable();\n\t\tconst disposable2 = new Disposable();\n\n\t\tassert(!disposable.isDisposed);\n\t\tassert(!disposable2.isDisposed);\n\n\t\tdispose(disposable, disposable2);\n\n\t\tassert(disposable.isDisposed);\n\t\tassert(disposable2.isDisposed);\n\t});\n});"]}