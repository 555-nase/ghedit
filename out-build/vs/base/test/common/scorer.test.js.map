{"version":3,"file":"vs/base/test/common/scorer.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/scorer.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport scorer = require('vs/base/common/scorer');\n\nsuite('Scorer', () => {\n\n\ttest('score', function () {\n\t\tconst target = 'HelLo-World';\n\n\t\tconst scores = [];\n\t\tscores.push(scorer.score(target, 'HelLo-World')); // direct case match\n\t\tscores.push(scorer.score(target, 'hello-world')); // direct mix-case match\n\t\tscores.push(scorer.score(target, 'HW')); // direct case prefix (multiple)\n\t\tscores.push(scorer.score(target, 'H')); // direct case prefix\n\t\tscores.push(scorer.score(target, 'hw')); // direct mix-case prefix (multiple)\n\t\tscores.push(scorer.score(target, 'h')); // direct mix-case prefix\n\t\tscores.push(scorer.score(target, 'W')); // direct case word prefix\n\t\tscores.push(scorer.score(target, 'w')); // direct mix-case word prefix\n\t\tscores.push(scorer.score(target, 'Ld')); // in-string case match (multiple)\n\t\tscores.push(scorer.score(target, 'L')); // in-string case match\n\t\tscores.push(scorer.score(target, 'ld')); // in-string mix-case match\n\t\tscores.push(scorer.score(target, 'l')); // in-string mix-case match\n\t\tscores.push(scorer.score(target, '4')); // no match\n\n\t\t// Assert scoring order\n\t\tlet sortedScores = scores.sort((a, b) => b - a);\n\t\tassert.deepEqual(scores, sortedScores);\n\t});\n\n\ttest('cache', function () {\n\t\tconst cache = Object.create(null);\n\n\t\tscorer.score('target', 'query', cache);\n\t\tscorer.score('target', 't', cache);\n\n\t\tassert.equal(Object.getOwnPropertyNames(cache).length, 2);\n\t});\n\n\ttest('matches', function () {\n\t\tassert.ok(scorer.matches('hello world', 'h'));\n\t\tassert.ok(!scorer.matches('hello world', 'q'));\n\t\tassert.ok(scorer.matches('hello world', 'hw'));\n\t\tassert.ok(scorer.matches('hello world', 'horl'));\n\t\tassert.ok(scorer.matches('hello world', 'd'));\n\t\tassert.ok(!scorer.matches('hello world', 'wh'));\n\t\tassert.ok(!scorer.matches('d', 'dd'));\n\t});\n});"]}