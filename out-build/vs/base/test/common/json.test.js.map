{"version":3,"file":"vs/base/test/common/json.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/json.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport { SyntaxKind, createScanner, parse } from 'vs/base/common/json';\n\nfunction assertKinds(text:string, ...kinds:SyntaxKind[]):void {\n\tvar _json = createScanner(text);\n\tvar kind: SyntaxKind;\n\twhile((kind = _json.scan()) !== SyntaxKind.EOF) {\n\t\tassert.equal(kind, kinds.shift());\n\t}\n\tassert.equal(kinds.length, 0);\n}\n\n\nfunction assertValidParse(input:string, expected:any) : void {\n\tvar errors : string[] = [];\n\tvar actual = parse(input, errors);\n\n\tif (errors.length !== 0) {\n\t\tassert(false, errors[0]);\n\t}\n\tassert.deepEqual(actual, expected);\n}\n\nfunction assertInvalidParse(input:string, expected:any) : void {\n\tvar errors : string[] = [];\n\tvar actual = parse(input, errors);\n\n\tassert(errors.length > 0);\n\tassert.deepEqual(actual, expected);\n}\n\nsuite('JSON', () => {\n\ttest('tokens', () => {\n\t\tassertKinds('{', SyntaxKind.OpenBraceToken);\n\t\tassertKinds('}', SyntaxKind.CloseBraceToken);\n\t\tassertKinds('[', SyntaxKind.OpenBracketToken);\n\t\tassertKinds(']', SyntaxKind.CloseBracketToken);\n\t\tassertKinds(':', SyntaxKind.ColonToken);\n\t\tassertKinds(',', SyntaxKind.CommaToken);\n\t});\n\n\ttest('comments', () => {\n\t\tassertKinds('// this is a comment', SyntaxKind.LineCommentTrivia);\n\t\tassertKinds('// this is a comment\\n', SyntaxKind.LineCommentTrivia, SyntaxKind.LineBreakTrivia);\n\t\tassertKinds('/* this is a comment*/', SyntaxKind.BlockCommentTrivia);\n\t\tassertKinds('/* this is a \\r\\ncomment*/', SyntaxKind.BlockCommentTrivia);\n\t\tassertKinds('/* this is a \\ncomment*/', SyntaxKind.BlockCommentTrivia);\n\n\t\t// unexpected end\n\t\tassertKinds('/* this is a', SyntaxKind.BlockCommentTrivia);\n\t\tassertKinds('/* this is a \\ncomment', SyntaxKind.BlockCommentTrivia);\n\n\t\t// broken comment\n\t\tassertKinds('/ ttt', SyntaxKind.Unknown, SyntaxKind.Trivia, SyntaxKind.Unknown);\n\t});\n\n\ttest('strings', () => {\n\t\tassertKinds('\"test\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\\"\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\/\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\b\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\f\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\n\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\r\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\t\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\\\v\"', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"\\u88ff\"', SyntaxKind.StringLiteral);\n\n\t\t// unexpected end\n\t\tassertKinds('\"test', SyntaxKind.StringLiteral);\n\t\tassertKinds('\"test\\n\"', SyntaxKind.StringLiteral, SyntaxKind.LineBreakTrivia, SyntaxKind.StringLiteral);\n\t});\n\n\ttest('numbers', () => {\n\t\tassertKinds('0', SyntaxKind.NumericLiteral);\n\t\tassertKinds('0.1', SyntaxKind.NumericLiteral);\n\t\tassertKinds('-0.1', SyntaxKind.NumericLiteral);\n\t\tassertKinds('-1', SyntaxKind.NumericLiteral);\n\t\tassertKinds('1', SyntaxKind.NumericLiteral);\n\t\tassertKinds('123456789', SyntaxKind.NumericLiteral);\n\t\tassertKinds('10', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90E+123', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90e+123', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90e-123', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90E-123', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90E123', SyntaxKind.NumericLiteral);\n\t\tassertKinds('90e123', SyntaxKind.NumericLiteral);\n\n\t\t// zero handling\n\t\tassertKinds('01', SyntaxKind.NumericLiteral, SyntaxKind.NumericLiteral);\n\t\tassertKinds('-01', SyntaxKind.NumericLiteral, SyntaxKind.NumericLiteral);\n\n\t\t// unexpected end\n\t\tassertKinds('-', SyntaxKind.Unknown);\n\t\tassertKinds('.0', SyntaxKind.Unknown);\n\t});\n\n\ttest('keywords: true, false, null', () => {\n\t\tassertKinds('true', SyntaxKind.TrueKeyword);\n\t\tassertKinds('false', SyntaxKind.FalseKeyword);\n\t\tassertKinds('null', SyntaxKind.NullKeyword);\n\n\n\t\tassertKinds('true false null',\n\t\t\tSyntaxKind.TrueKeyword,\n\t\t\tSyntaxKind.Trivia,\n\t\t\tSyntaxKind.FalseKeyword,\n\t\t\tSyntaxKind.Trivia,\n\t\t\tSyntaxKind.NullKeyword);\n\n\t\t// invalid words\n\t\tassertKinds('nulllll', SyntaxKind.Unknown);\n\t\tassertKinds('True', SyntaxKind.Unknown);\n\t\tassertKinds('foo-bar', SyntaxKind.Unknown);\n\t\tassertKinds('foo bar', SyntaxKind.Unknown, SyntaxKind.Trivia, SyntaxKind.Unknown);\n\t});\n\n\ttest('trivia', () => {\n\t\tassertKinds(' ', SyntaxKind.Trivia);\n\t\tassertKinds('  \\t  ', SyntaxKind.Trivia);\n\t\tassertKinds('  \\t  \\n  \\t  ', SyntaxKind.Trivia, SyntaxKind.LineBreakTrivia, SyntaxKind.Trivia);\n\t\tassertKinds('\\r\\n', SyntaxKind.LineBreakTrivia);\n\t\tassertKinds('\\r', SyntaxKind.LineBreakTrivia);\n\t\tassertKinds('\\n', SyntaxKind.LineBreakTrivia);\n\t\tassertKinds('\\n\\r', SyntaxKind.LineBreakTrivia, SyntaxKind.LineBreakTrivia);\n\t\tassertKinds('\\n   \\n', SyntaxKind.LineBreakTrivia, SyntaxKind.Trivia, SyntaxKind.LineBreakTrivia);\n\t});\n\n\ttest('parse: literals', () => {\n\n\t\tassertValidParse('true', true);\n\t\tassertValidParse('false', false);\n\t\tassertValidParse('null', null);\n\t\tassertValidParse('\"foo\"', 'foo');\n\t\tassertValidParse('\"\\\\\"-\\\\\\\\-\\\\/-\\\\b-\\\\f-\\\\n-\\\\r-\\\\t\"', '\"-\\\\-/-\\b-\\f-\\n-\\r-\\t');\n\t\tassertValidParse('\"\\\\u00DC\"', 'Ü');\n\t\tassertValidParse('9', 9);\n\t\tassertValidParse('-9', -9);\n\t\tassertValidParse('0.129', 0.129);\n\t\tassertValidParse('23e3', 23e3);\n\t\tassertValidParse('1.2E+3', 1.2E+3);\n\t\tassertValidParse('1.2E-3', 1.2E-3);\n\n\t});\n\n\ttest('parse: objects', () => {\n\t\tassertValidParse('{}', {});\n\t\tassertValidParse('{ \"foo\": true }', { foo: true });\n\t\tassertValidParse('{ \"bar\": 8, \"xoo\": \"foo\" }', { bar: 8, xoo: 'foo' });\n\t\tassertValidParse('{ \"hello\": [], \"world\": {} }', { hello: [], world: {} });\n\t\tassertValidParse('{ \"a\": false, \"b\": true, \"c\": [ 7.4 ] }', { a: false, b: true, c: [ 7.4 ]});\n\t\tassertValidParse('{ \"lineComment\": \"//\", \"blockComment\": [\"/*\", \"*/\"], \"brackets\": [ [\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"] ] }', { lineComment: '//', blockComment: [\"/*\", \"*/\"], brackets: [ [\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"] ] });\n\t});\n\n\ttest('parse: arrays', () => {\n\t\tassertValidParse('[]', []);\n\t\tassertValidParse('[ [],  [ [] ]]', [[], [[]]]);\n\t\tassertValidParse('[ 1, 2, 3 ]', [ 1, 2, 3 ]);\n\t\tassertValidParse('[ { \"a\": null } ]', [ { a: null } ]);\n\t});\n\n\ttest('parse: objects with errors', () => {\n\t\tassertInvalidParse('{,}', {});\n\t\tassertInvalidParse('{ \"foo\": true, }', { foo: true });\n\t\tassertInvalidParse('{ \"bar\": 8 \"xoo\": \"foo\" }', { bar: 8, xoo: 'foo' });\n\t\tassertInvalidParse('{ ,\"bar\": 8 }', { bar: 8 });\n\t\tassertInvalidParse('{ ,\"bar\": 8, \"foo\" }', { bar: 8 });\n\t\tassertInvalidParse('{ \"bar\": 8, \"foo\": }', { bar: 8 });\n\t\tassertInvalidParse('{ 8, \"foo\": 9 }', { foo: 9 });\n\t});\n\n\ttest('parse: array with errors', () => {\n\t\tassertInvalidParse('[,]', []);\n\t\tassertInvalidParse('[ 1, 2, ]', [ 1, 2]);\n\t\tassertInvalidParse('[ 1 2, 3 ]', [ 1, 2, 3 ]);\n\t\tassertInvalidParse('[ ,1, 2, 3 ]', [ 1, 2, 3 ]);\n\t\tassertInvalidParse('[ ,1, 2, 3, ]', [ 1, 2, 3 ]);\n\t});\n});\n"]}