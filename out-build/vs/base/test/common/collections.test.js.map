{"version":3,"file":"vs/base/test/common/collections.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/collections.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb,KAAK,CAAC,aAAa,EAAE;QACpB,IAAI,CAAC,UAAU,EAAE;YAChB,MAAM,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;YAE/D,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACvB,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,EAAE;YACf,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YAC7C,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,cAAM,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;YAE9D,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,WAAW,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,cAAM,OAAA,KAAK,EAAE,EAAP,CAAO,CAAC,CAAC;YACtD,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAEvB,KAAK,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACvB,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,cAAM,OAAA,KAAK,EAAE,EAAP,CAAO,CAAC,CAAC;YACzC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,EAAE;YACd,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport collections = require('vs/base/common/collections');\n\nsuite('Collections', () => {\n\ttest('contains', () => {\n\t\tassert(!collections.contains({}, 'toString'));\n\t\tassert(collections.contains({ toString: 123 }, 'toString'));\n\t\tassert(!collections.contains(Object.create(null), 'toString'));\n\n\t\tvar dict = Object.create(null);\n\t\tdict['toString'] = 123;\n\t\tassert(collections.contains(dict, 'toString'));\n\t});\n\n\ttest('forEach', () => {\n\t\tcollections.forEach({}, () => assert(false));\n\t\tcollections.forEach(Object.create(null), () => assert(false));\n\n\t\tvar count = 0;\n\t\tcollections.forEach({ toString: 123 }, () => count++);\n\t\tassert.equal(count, 1);\n\n\t\tcount = 0;\n\t\tvar dict = Object.create(null);\n\t\tdict['toString'] = 123;\n\t\tcollections.forEach(dict, () => count++);\n\t\tassert.equal(count, 1);\n\t});\n\n\ttest('remove', () => {\n\t\tassert(collections.remove({ 'far': 1 }, 'far'));\n\t\tassert(!collections.remove({ 'far': 1 }, 'boo'));\n\t});\n});\n"]}