{"version":3,"file":"vs/base/test/common/errors.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/errors.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb,KAAK,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,mBAAmB,EAAE;YACzB,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;YACzD,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAEpE,IAAI,KAAK,GAAQ,IAAI,KAAK,EAAE,CAAC;YAC7B,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YACnB,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC;YAC/B,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YAElE,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YAClB,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;YAC5B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;YAC3C,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;YAErD,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YAClB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YACxB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YAChC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,CAAC;YAC5C,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YAElE,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACpB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;YAClB,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;YAExB,IAAI,GAAG,GAAQ,EAAE,CAAC;YAClB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC7B,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC;YACjB,GAAG,CAAC,UAAU,GAAG,WAAW,CAAC;YAC7B,MAAM,CAAC,WAAW,CAAC,uBAAc,CAAC,KAAK,CAAC,EAAE,sBAAsB,CAAC,CAAC;YAElE,MAAM,CAAC,uBAAc,EAAE,CAAC,CAAC;YACzB,MAAM,CAAC,uBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,uBAAc,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport { toErrorMessage } from 'vs/base/common/errors';\n\nsuite('Errors', () => {\n\ttest('Get Error Message', function () {\n\t\tassert.strictEqual(toErrorMessage('Foo Bar'), 'Foo Bar');\n\t\tassert.strictEqual(toErrorMessage(new Error('Foo Bar')), 'Foo Bar');\n\n\t\tvar error: any = new Error();\n\t\terror.status = 404;\n\t\terror.statusText = 'Not Found';\n\t\tassert.strictEqual(toErrorMessage(error), 'Not Found (HTTP 404)');\n\n\t\terror = new Error();\n\t\terror.detail = {};\n\t\terror.detail.exception = {};\n\t\terror.detail.exception.message = 'Foo Bar';\n\t\tassert.strictEqual(toErrorMessage(error), 'Foo Bar');\n\n\t\terror = new Error();\n\t\terror.detail = {};\n\t\terror.detail.error = {};\n\t\terror.detail.error.status = 404;\n\t\terror.detail.error.statusText = 'Not Found';\n\t\tassert.strictEqual(toErrorMessage(error), 'Not Found (HTTP 404)');\n\n\t\terror = new Error();\n\t\terror.detail = {};\n\t\terror.detail.error = [];\n\n\t\tvar foo: any = {};\n\t\terror.detail.error.push(foo);\n\t\tfoo.status = 404;\n\t\tfoo.statusText = 'Not Found';\n\t\tassert.strictEqual(toErrorMessage(error), 'Not Found (HTTP 404)');\n\n\t\tassert(toErrorMessage());\n\t\tassert(toErrorMessage(null));\n\t\tassert(toErrorMessage({}));\n\t});\n});"]}