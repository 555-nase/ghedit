{"version":3,"file":"vs/base/test/node/aiAdapter/aiAdapter.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/node/aiAdapter/aiAdapter.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAWb;QAAA;YAEQ,WAAM,GAAwB,EAAE,CAAC;YACjC,uBAAkB,GAAY,KAAK,CAAC;YACpC,eAAU,GAAU,EAAE,CAAC;QAgB/B,CAAC;QAdO,oCAAU,GAAjB,UAAkB,SAAiB,EAAE,UAAiC,EAAE,YAAmC;YAC1G,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAChB,SAAS,EAAE,SAAS;gBACpB,UAAU,EAAE,UAAU;gBACtB,YAAY,EAAE,YAAY;aAC1B,CAAC,CAAC;QACJ,CAAC;QACM,uCAAa,GAApB;YACC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAChC,CAAC;QAEM,wCAAc,GAArB,UAAsB,SAAc;YACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACjC,CAAC;QACF,sBAAC;IAAD,CAAC,AApBD,IAoBC;IAED,KAAK,CAAC,WAAW,EAAE;QAClB,IAAI,eAAgC,CAAC;QACrC,IAAI,OAAkB,CAAC;QACvB,IAAI,MAAM,GAAG,QAAQ,CAAC;QAEtB,KAAK,CAAC;YACL,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;YACxC,OAAO,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC;YACR,OAAO,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAEzB,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAK,MAAM,eAAY,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,8CAA8C,EAAE;YACpD,IAAI,WAAW,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;YAEpC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE;YACvB,IAAI,sBAAsB,GAAG,4BAA4B,CAAC;YAC1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5B,sBAAsB,IAAI,4BAA4B,CAAC;YACxD,CAAC;YACD,MAAM,CAAC,sBAAsB,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;YAE5C,IAAI,uBAAuB,GAAG,oDAAoD,CAAC;YACnF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7B,uBAAuB,IAAI,oDAAoD,CAAC;YACjF,CAAC;YACD,MAAM,CAAC,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;YAE9C,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,CAAC,sBAAsB,CAAC,GAAG,MAAM,CAAC;YACtC,IAAI,CAAC,yBAAyB,CAAC,GAAG,uBAAuB,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAE/B,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAE/C,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;gBAC1B,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;YAClE,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE,CAAC,EAAE,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAElK,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAK,MAAM,eAAY,CAAC,CAAC;YACzE,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,CAAC;YAC5E,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;YACpE,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACvF,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5G,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;gBACxB,MAAM,EAAE;oBACP,KAAK,EAAE,YAAY;oBACnB,YAAY,EAAE;wBACb,KAAK,EAAE,GAAG;wBACV,MAAM,EAAE,GAAG;qBACX;iBACD;gBACD,SAAS,EAAE;oBACV,UAAU,EAAE;wBACX,UAAU,EAAE;4BACX,YAAY,EAAE,MAAM;yBACpB;qBACD;oBACD,eAAe,EAAE,CAAC;iBAClB;aACD,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,EAAK,MAAM,eAAY,CAAC,CAAC;YAEzE,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,YAAY,CAAC,CAAC;YACjF,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE,GAAG,CAAC,CAAC;YACvF,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,4BAA4B,CAAC,EAAE,GAAG,CAAC,CAAC;YAExF,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,iCAAiC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,cAAc,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;YAClI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport { AIAdapter } from 'vs/base/node/aiAdapter';\n\ninterface IAppInsightsEvent {\n\teventName: string;\n\tproperties?: { string?: string; };\n\tmeasurements?: { string?: number; };\n}\n\nclass AppInsightsMock {\n\n\tpublic events: IAppInsightsEvent[] = [];\n\tpublic IsTrackingPageView: boolean = false;\n\tpublic exceptions: any[] = [];\n\n\tpublic trackEvent(eventName: string, properties?: { string?: string; }, measurements?: { string?: number; }): void {\n\t\tthis.events.push({\n\t\t\teventName: eventName,\n\t\t\tproperties: properties,\n\t\t\tmeasurements: measurements\n\t\t});\n\t}\n\tpublic trackPageView(): void {\n\t\tthis.IsTrackingPageView = true;\n\t}\n\n\tpublic trackException(exception: any): void {\n\t\tthis.exceptions.push(exception);\n\t}\n}\n\nsuite('AIAdapter', () => {\n\tvar appInsightsMock: AppInsightsMock;\n\tvar adapter: AIAdapter;\n\tvar prefix = 'prefix';\n\n\tsetup(() => {\n\t\tappInsightsMock = new AppInsightsMock();\n\t\tadapter = new AIAdapter(null, prefix, appInsightsMock);\n\t});\n\n\tteardown(() => {\n\t\tadapter.dispose();\n\t});\n\n\ttest('Simple event', () => {\n\t\tadapter.log('testEvent');\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\t\tassert.equal(appInsightsMock.events[0].eventName, `${prefix}/testEvent`);\n\t});\n\n\ttest('Track UnhandledError as exception and events', () => {\n\t\tvar sampleError = new Error('test');\n\n\t\tadapter.logException(sampleError);\n\t\tassert.equal(appInsightsMock.exceptions.length, 1);\n\t});\n\n\ttest('property limits', () => {\n\t\tvar reallyLongPropertyName = 'abcdefghijklmnopqrstuvwxyz';\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\treallyLongPropertyName += 'abcdefghijklmnopqrstuvwxyz';\n\t\t}\n\t\tassert(reallyLongPropertyName.length > 150);\n\n\t\tvar reallyLongPropertyValue = 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\tfor (var i = 0; i < 21; i++) {\n\t\t\treallyLongPropertyValue += 'abcdefghijklmnopqrstuvwxyz012345678901234567890123';\n\t\t}\n\t\tassert(reallyLongPropertyValue.length > 1024);\n\n\t\tvar data = {};\n\t\tdata[reallyLongPropertyName] = '1234';\n\t\tdata['reallyLongPropertyValue'] = reallyLongPropertyValue;\n\t\tadapter.log('testEvent', data);\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\n\t\tfor (var prop in appInsightsMock.events[0].properties) {\n\t\t\tassert(prop.length < 150);\n\t\t\tassert(appInsightsMock.events[0].properties[prop].length < 1024);\n\t\t}\n\t});\n\n\ttest('Different data types', () => {\n\t\tvar date = new Date();\n\t\tadapter.log('testEvent', { favoriteDate: date, likeRed: false, likeBlue: true, favoriteNumber: 1, favoriteColor: 'blue', favoriteCars: ['bmw', 'audi', 'ford'] });\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\t\tassert.equal(appInsightsMock.events[0].eventName, `${prefix}/testEvent`);\n\t\tassert.equal(appInsightsMock.events[0].properties['favoriteColor'], 'blue');\n\t\tassert.equal(appInsightsMock.events[0].measurements['likeRed'], 0);\n\t\tassert.equal(appInsightsMock.events[0].measurements['likeBlue'], 1);\n\t\tassert.equal(appInsightsMock.events[0].properties['favoriteDate'], date.toISOString());\n\t\tassert.equal(appInsightsMock.events[0].properties['favoriteCars'], JSON.stringify(['bmw', 'audi', 'ford']));\n\t\tassert.equal(appInsightsMock.events[0].measurements['favoriteNumber'], 1);\n\t});\n\n\ttest('Nested data', () => {\n\t\tadapter.log('testEvent', {\n\t\t\twindow: {\n\t\t\t\ttitle: 'some title',\n\t\t\t\tmeasurements: {\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theight: 200\n\t\t\t\t}\n\t\t\t},\n\t\t\tnestedObj: {\n\t\t\t\tnestedObj2: {\n\t\t\t\t\tnestedObj3: {\n\t\t\t\t\t\ttestProperty: 'test',\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttestMeasurement: 1\n\t\t\t}\n\t\t});\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\t\tassert.equal(appInsightsMock.events[0].eventName, `${prefix}/testEvent`);\n\n\t\tassert.equal(appInsightsMock.events[0].properties['window.title'], 'some title');\n\t\tassert.equal(appInsightsMock.events[0].measurements['window.measurements.width'], 100);\n\t\tassert.equal(appInsightsMock.events[0].measurements['window.measurements.height'], 200);\n\n\t\tassert.equal(appInsightsMock.events[0].properties['nestedObj.nestedObj2.nestedObj3'], JSON.stringify({ 'testProperty': 'test' }));\n\t\tassert.equal(appInsightsMock.events[0].measurements['nestedObj.testMeasurement'], 1);\n\t});\n});"]}