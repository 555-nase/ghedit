{"version":3,"sources":["vs/base/common/http.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAwBb,mCAA0C,MAAc;QACvD,EAAE,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,CAAC;QACf,CAAC;QACD,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAiE,CAAC,CAAC;YAC/G,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAkD,CAAC,CAAC;YAChG,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAA+C,CAAC,CAAC;YAC7F,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAuD,CAAC,CAAC;YACrG,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAA+F,CAAC,CAAC;YAC7I,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAA6F,CAAC,CAAC;YAC3I,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAA0F,CAAC,CAAC;YACxI,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAgE,CAAC,CAAC;YAC9G,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAoF,CAAC,CAAC;YAClI,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAY,EAAE,IAAkD,CAAC,CAAC;YAChG,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAAuD,CAAC,CAAC;YACrG,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAA8F,CAAC,CAAC;YAC5I,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAA4G,CAAC,CAAC;YAC1J,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAA4F,CAAC,CAAC;YAC1I,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAA0G,CAAC,CAAC;YACxJ,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAAwB,CAAC,CAAC;YACtE,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAA2H,CAAC,CAAC;YACzK,KAAK,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAAgF,CAAC,CAAC;YAC9H,SAAS,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAY,EAAE,IAAsB,EAAE,MAAM,CAAC,CAAC;QAC5E,CAAC;IACF,CAAC;IAzBe,iCAAyB,4BAyBxC,CAAA","file":"vs/base/common/http.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\n\nexport interface IXHROptions {\n\ttype?:string;\n\turl?:string;\n\tuser?:string;\n\tpassword?:string;\n\tresponseType?:string;\n\theaders?:any;\n\ttimeout?: number;\n\tfollowRedirects?: number;\n\tdata?:any;\n}\n\nexport interface IXHRResponse {\n\tresponseText: string;\n\tstatus: number;\n\n\treadyState : number;\n\tgetResponseHeader: (header:string) => string;\n}\n\nexport function getErrorStatusDescription(status: number) : string {\n\tif (status < 400) {\n\t\treturn void 0;\n\t}\n\tswitch (status) {\n\t\tcase 400: return nls.localize('status.400', 'Bad request. The request cannot be fulfilled due to bad syntax.');\n\t\tcase 401: return nls.localize('status.401', 'Unauthorized. The server is refusing to respond.');\n\t\tcase 403: return nls.localize('status.403', 'Forbidden. The server is refusing to respond.');\n\t\tcase 404: return nls.localize('status.404', 'Not Found. The requested location could not be found.');\n\t\tcase 405: return nls.localize('status.405', 'Method not allowed. A request was made using a request method not supported by that location.');\n\t\tcase 406: return nls.localize('status.406', 'Not Acceptable. The server can only generate a response that is not accepted by the client.');\n\t\tcase 407: return nls.localize('status.407', 'Proxy Authentication Required. The client must first authenticate itself with the proxy.');\n\t\tcase 408: return nls.localize('status.408', 'Request Timeout. The server timed out waiting for the request.');\n\t\tcase 409: return nls.localize('status.409', 'Conflict. The request could not be completed because of a conflict in the request.');\n\t\tcase 410: return nls.localize('status.410', 'Gone. The requested page is no longer available.');\n\t\tcase 411: return nls.localize('status.411', 'Length Required. The \"Content-Length\" is not defined.');\n\t\tcase 412: return nls.localize('status.412', 'Precondition Failed. The precondition given in the request evaluated to false by the server.');\n\t\tcase 413: return nls.localize('status.413', 'Request Entity Too Large. The server will not accept the request, because the request entity is too large.');\n\t\tcase 414: return nls.localize('status.414', 'Request-URI Too Long. The server will not accept the request, because the URL is too long.');\n\t\tcase 415: return nls.localize('status.415', 'Unsupported Media Type. The server will not accept the request, because the media type is not supported.');\n\t\tcase 500: return nls.localize('status.500', 'Internal Server Error.');\n\t\tcase 501: return nls.localize('status.501', 'Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request.');\n\t\tcase 503: return nls.localize('status.503', 'Service Unavailable. The server is currently unavailable (overloaded or down).');\n\t\tdefault: return nls.localize('status.416', 'HTTP status code {0}', status);\n\t}\n}\n"]}