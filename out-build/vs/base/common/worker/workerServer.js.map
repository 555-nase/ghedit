{"version":3,"file":"vs/base/common/worker/workerServer.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/common/worker/workerServer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {setUnexpectedErrorHandler, transformErrorForSerialization} from 'vs/base/common/errors';\nimport {parse, stringify} from 'vs/base/common/marshalling';\nimport {IRemoteCom} from 'vs/base/common/remote';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as workerProtocol from 'vs/base/common/worker/workerProtocol';\n\ninterface IReplyCallbacks {\n\tc: (value:any)=>void;\n\te: (err:any)=>void;\n\tp: (progress:any)=>void;\n}\n\nexport class WorkerServer {\n\n\tprivate _postSerializedMessage:(msg:string)=>void;\n\tprivate _workerId:number;\n\tprivate _requestHandler:any;\n\tprivate _lastReq: number;\n\tprivate _awaitedReplies: { [req:string]: IReplyCallbacks; };\n\tprivate _remoteCom: workerProtocol.RemoteCom;\n\n\tconstructor(postSerializedMessage:(msg:string)=>void) {\n\t\tthis._postSerializedMessage = postSerializedMessage;\n\t\tthis._workerId = 0;\n\t\tthis._requestHandler = null;\n\t\tthis._lastReq = 0;\n\t\tthis._awaitedReplies = {};\n\t\tthis._bindConsole();\n\n\t\tthis._remoteCom = new workerProtocol.RemoteCom(this);\n\t}\n\n\tpublic getRemoteCom(): IRemoteCom {\n\t\treturn this._remoteCom;\n\t}\n\n\tprivate _bindConsole(): void {\n\t\t(<any> self).console = {\n\t\t\tlog: this._sendPrintMessage.bind(this, workerProtocol.PrintType.LOG),\n\t\t\tdebug: this._sendPrintMessage.bind(this, workerProtocol.PrintType.DEBUG),\n\t\t\tinfo: this._sendPrintMessage.bind(this, workerProtocol.PrintType.INFO),\n\t\t\twarn: this._sendPrintMessage.bind(this, workerProtocol.PrintType.WARN),\n\t\t\terror: this._sendPrintMessage.bind(this, workerProtocol.PrintType.ERROR)\n\t\t};\n\t\tsetUnexpectedErrorHandler((e) => {\n\t\t\tself.console.error(e);\n\t\t});\n\t}\n\n\tprivate _sendPrintMessage(level:string, ...objects:any[]): void {\n\t\tvar transformedObjects = objects.map((obj) => (obj instanceof Error) ? transformErrorForSerialization(obj) : obj);\n\t\tvar msg:workerProtocol.IServerPrintMessage = {\n\t\t\tmonacoWorker: true,\n\t\t\tfrom: this._workerId,\n\t\t\treq: '0',\n\t\t\ttype: workerProtocol.MessageType.PRINT,\n\t\t\tlevel: level,\n\t\t\tpayload: (transformedObjects.length === 1 ? transformedObjects[0] : transformedObjects)\n\t\t};\n\t\tthis._postMessage(msg);\n\t}\n\n\tprivate _sendReply(msgId:number, action:string, payload:any): void {\n\t\tvar msg:workerProtocol.IServerReplyMessage = {\n\t\t\tmonacoWorker: true,\n\t\t\tfrom: this._workerId,\n\t\t\treq: '0',\n\t\t\tid: msgId,\n\t\t\ttype: workerProtocol.MessageType.REPLY,\n\t\t\taction: action,\n\t\t\tpayload: (payload instanceof Error) ? transformErrorForSerialization(payload) : payload\n\t\t};\n\t\tthis._postMessage(msg);\n\t}\n\n\tpublic request(requestName:string, payload:any): TPromise<any> {\n\t\tif (requestName.charAt(0) === '$') {\n\t\t\tthrow new Error('Illegal requestName: ' + requestName);\n\t\t}\n\n\t\tvar req = String(++this._lastReq);\n\n\t\tvar msg:workerProtocol.IServerMessage = {\n\t\t\tmonacoWorker: true,\n\t\t\tfrom: this._workerId,\n\t\t\treq: req,\n\t\t\ttype: requestName,\n\t\t\tpayload: payload\n\t\t};\n\n\t\tvar reply: IReplyCallbacks = {\n\t\t\tc: null,\n\t\t\te: null,\n\t\t\tp: null\n\t\t};\n\n\t\tvar r = new TPromise<any>((c, e, p) => {\n\t\t\treply.c = c;\n\t\t\treply.e = e;\n\t\t\treply.p = p;\n\t\t});\n\n\t\tthis._awaitedReplies[req] = reply;\n\n\t\tthis._postMessage(msg);\n\n\t\treturn r;\n\t}\n\n\tpublic loadModule(moduleId:string, callback:Function, errorback:(err:any)=>void): void {\n\t\trequire([moduleId], (...result:any[]) => {\n\t\t\tcallback(result[0]);\n\t\t}, errorback);\n\t}\n\n\tpublic onmessage(msg:string): void {\n\t\tthis._onmessage(parse(msg));\n\t}\n\n\tprivate _postMessage(msg:workerProtocol.IServerMessage): void {\n\t\tthis._postSerializedMessage(stringify(msg));\n\t}\n\n\tprivate _onmessage(msg:workerProtocol.IClientMessage): void {\n\n\t\tif (msg.type === workerProtocol.MessageType.REPLY) {\n\t\t\t// this message is a reply to a request we've made to the main thread previously\n\n\t\t\tvar typedMsg = <workerProtocol.IClientReplyMessage>msg;\n\n\t\t\tif (!typedMsg.seq || !this._awaitedReplies.hasOwnProperty(typedMsg.seq)) {\n\t\t\t\tconsole.error('Worker received unexpected reply from main thread', msg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar reply = this._awaitedReplies[typedMsg.seq];\n\t\t\tdelete this._awaitedReplies[typedMsg.seq];\n\n\t\t\tif (typedMsg.err) {\n\t\t\t\treply.e(typedMsg.err);\n\t\t\t} else {\n\t\t\t\treply.c(typedMsg.payload);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar c = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.COMPLETE);\n\t\tvar e = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.ERROR);\n\t\tvar p = this._sendReply.bind(this, msg.id, workerProtocol.ReplyType.PROGRESS);\n\n\t\tswitch(msg.type) {\n\t\t\tcase workerProtocol.MessageType.INITIALIZE:\n\t\t\t\tthis._workerId = msg.payload.id;\n\n\t\t\t\tvar loaderConfig = msg.payload.loaderConfiguration;\n\t\t\t\t// TODO@Alex: share this code with simpleWorker\n\t\t\t\tif (loaderConfig) {\n\t\t\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet nlsConfig = loaderConfig['vs/nls'];\n\t\t\t\t\t// We need to have pseudo translation\n\t\t\t\t\tif (nlsConfig && nlsConfig.pseudo) {\n\t\t\t\t\t\trequire(['vs/nls'], function(nlsPlugin) {\n\t\t\t\t\t\t\tnlsPlugin.setPseudoTranslation(nlsConfig.pseudo);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\t\t\tloaderConfig.catchError = true;\n\t\t\t\t\t(<any>self).require.config(loaderConfig);\n\t\t\t\t}\n\n\t\t\t\tvar MonacoEnvironment = msg.payload.MonacoEnvironment;\n\t\t\t\tif (MonacoEnvironment) {\n\t\t\t\t\t(<any>self).MonacoEnvironment = MonacoEnvironment;\n\t\t\t\t}\n\n\t\t\t\tthis.loadModule(msg.payload.moduleId, (handlerModule:any) => {\n\t\t\t\t\tthis._requestHandler = handlerModule.value;\n\t\t\t\t\tc();\n\t\t\t\t}, e);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._handleMessage(msg, c, e, p);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate _handleMessage(msg:workerProtocol.IClientMessage, c:(value:any)=>void, e:(err:any)=>void, p:(progress:any)=>void): void {\n\n\t\tif (msg.type === '_proxyObj') {\n\t\t\tthis._remoteCom.handleMessage(msg.payload).then(c, e, p);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._requestHandler) {\n\t\t\te('Request handler not loaded');\n\t\t\treturn;\n\t\t}\n\n\t\tif ((msg.type in this._requestHandler) && (typeof this._requestHandler[msg.type] === 'function')) {\n\t\t\t// var now = (new Date()).getTime();\n\t\t\ttry {\n\t\t\t\tthis._requestHandler[msg.type].call(this._requestHandler, this, c, e, p, msg.payload);\n\t\t\t} catch (handlerError) {\n\t\t\t\te(transformErrorForSerialization(handlerError));\n\t\t\t}\n\t\t\t// var what = msg.type;\n\t\t\t// console.info(what + ' took ' + ((new Date().getTime())-now));\n\n\t\t} else {\n\t\t\tthis._requestHandler.request(this, c, e, p, msg);\n\t\t}\n\t}\n}\n\nexport function create(postMessage:(msg:string)=>void): WorkerServer {\n\treturn new WorkerServer(postMessage);\n}\n"]}