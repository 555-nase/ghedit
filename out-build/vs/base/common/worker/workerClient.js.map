{"version":3,"file":"workerClient.js","sourceRoot":"","sources":["../../../../../src/vs/base/common/worker/workerClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {onUnexpectedError, transformErrorForSerialization} from 'vs/base/common/errors';\nimport {parse, stringify} from 'vs/base/common/marshalling';\nimport {IRemoteCom} from 'vs/base/common/remote';\nimport * as timer from 'vs/base/common/timer';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport * as workerProtocol from 'vs/base/common/worker/workerProtocol';\n\nexport interface IWorker {\n\tgetId():number;\n\tpostMessage(message:string):void;\n\tdispose():void;\n}\n\nexport interface IWorkerCallback {\n\t(message:string):void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId:string, callback:IWorkerCallback, onCrashCallback?:()=>void):IWorker;\n}\n\ninterface IActiveRequest {\n\tcomplete:(value:any)=>void;\n\terror:(err:any)=>void;\n\tprogress:(progress:any)=>void;\n\ttype:string;\n\tpayload:any;\n}\n\nexport class WorkerClient {\n\n\tprivate _lastMessageId:number;\n\tprivate _promises:{[id:string]:IActiveRequest;};\n\tprivate _worker:IWorker;\n\n\tprivate _messagesQueue:workerProtocol.IClientMessage[];\n\tprivate _processQueueTimeout:number;\n\tprivate _waitingForWorkerReply:boolean;\n\tprivate _lastTimerEvent:timer.ITimerEvent;\n\n\tprivate _remoteCom: workerProtocol.RemoteCom;\n\tprivate _decodeMessageName: (msg: workerProtocol.IClientMessage) => string;\n\n\tpublic onModuleLoaded:TPromise<void>;\n\n\tconstructor(workerFactory:IWorkerFactory, moduleId:string, decodeMessageName:(msg:workerProtocol.IClientMessage)=>string) {\n\t\tthis._decodeMessageName = decodeMessageName;\n\t\tthis._lastMessageId = 0;\n\t\tthis._promises = {};\n\n\t\tthis._messagesQueue = [];\n\t\tthis._processQueueTimeout = -1;\n\t\tthis._waitingForWorkerReply = false;\n\t\tthis._lastTimerEvent = null;\n\n\t\tthis._worker = workerFactory.create('vs/base/common/worker/workerServer', (msg) => this._onSerializedMessage(msg));\n\n\t\tlet loaderConfiguration:any = null;\n\n\t\tlet globalRequire = (<any>window).require;\n\t\tif (typeof globalRequire.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = globalRequire.getConfig();\n\t\t} else if (typeof (<any>window).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (<any>window).requirejs.s.contexts._.config;\n\t\t}\n\n\t\tlet MonacoEnvironment = (<any>window).MonacoEnvironment || null;\n\n\t\tthis.onModuleLoaded = this._sendMessage(workerProtocol.MessageType.INITIALIZE, {\n\t\t\tid: this._worker.getId(),\n\t\t\tmoduleId: moduleId,\n\t\t\tloaderConfiguration: loaderConfiguration,\n\t\t\tMonacoEnvironment: MonacoEnvironment\n\t\t});\n\t\tthis.onModuleLoaded.then(null, (e) => this._onError('Worker failed to load ' + moduleId, e));\n\n\t\tthis._remoteCom = new workerProtocol.RemoteCom(this);\n\t}\n\n\tpublic getRemoteCom(): IRemoteCom {\n\t\treturn this._remoteCom;\n\t}\n\n\tpublic getQueueSize(): number {\n\t\treturn this._messagesQueue.length + (this._waitingForWorkerReply ? 1 : 0);\n\t}\n\n\tpublic request(requestName:string, payload:any, forceTimestamp?:number): TPromise<any> {\n\n\t\tif (requestName.charAt(0) === '$') {\n\t\t\tthrow new Error('Illegal requestName: ' + requestName);\n\t\t}\n\n\t\tlet shouldCancelPromise = false,\n\t\t\tmessagePromise:TPromise<any>;\n\n\t\treturn new TPromise<any>((c, e, p) => {\n\n\t\t\t// hide the initialize promise inside this\n\t\t\t// promise so that it won't be canceled by accident\n\t\t\tthis.onModuleLoaded.then(() => {\n\t\t\t\tif (!shouldCancelPromise) {\n\t\t\t\t\tmessagePromise = this._sendMessage(requestName, payload, forceTimestamp).then(c, e, p);\n\t\t\t\t}\n\t\t\t}, e, p);\n\n\t\t}, () => {\n\t\t\t// forward cancel to the proper promise\n\t\t\tif(messagePromise) {\n\t\t\t\tmessagePromise.cancel();\n\t\t\t} else {\n\t\t\t\tshouldCancelPromise = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.dispose();\n\t}\n\n\tpublic dispose(): void {\n\t\tlet promises = Object.keys(this._promises);\n\t\tif (promises.length > 0) {\n\t\t\tconsole.warn('Terminating a worker with ' + promises.length + ' pending promises:');\n\t\t\tconsole.warn(this._promises);\n\t\t\tfor (let id in this._promises) {\n\t\t\t\tif (promises.hasOwnProperty(id)) {\n\t\t\t\t\tthis._promises[id].error('Worker forcefully terminated');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._worker.dispose();\n\t}\n\n\tprivate _sendMessage(type:string, payload:any, forceTimestamp:number=(new Date()).getTime()):TPromise<any> {\n\n\t\tlet msg = {\n\t\t\tid: ++this._lastMessageId,\n\t\t\ttype: type,\n\t\t\ttimestamp: forceTimestamp,\n\t\t\tpayload: payload\n\t\t};\n\n\t\tlet pc:(value:any)=>void, pe:(err:any)=>void, pp:(progress:any)=>void;\n\t\tlet promise = new TPromise<any>((c, e, p) => {\n\t\t\t\tpc = c;\n\t\t\t\tpe = e;\n\t\t\t\tpp = p;\n\t\t\t}, () => {\n\t\t\t\tthis._removeMessage(msg.id);\n\t\t\t}\n\t\t);\n\n\t\tthis._promises[msg.id] = {\n\t\t\tcomplete: pc,\n\t\t\terror: pe,\n\t\t\tprogress: pp,\n\t\t\ttype: type,\n\t\t\tpayload: payload\n\t\t};\n\n\t\tthis._enqueueMessage(msg);\n\n\t\treturn promise;\n\t}\n\n\tprivate _enqueueMessage(msg:workerProtocol.IClientMessage): void {\n\n\t\tlet lastIndexSmallerOrEqual = -1,\n\t\t\ti:number;\n\n\t\t// Find the right index to insert at - keep the queue ordered by timestamp\n\t\tfor (i = this._messagesQueue.length - 1; i >= 0; i--) {\n\t\t\tif (this._messagesQueue[i].timestamp <= msg.timestamp) {\n\t\t\t\tlastIndexSmallerOrEqual = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._messagesQueue.splice(lastIndexSmallerOrEqual + 1, 0, msg);\n\t\tthis._processMessagesQueue();\n\t}\n\n\tprivate _removeMessage(msgId:number): void {\n\t\tfor (let i = 0, len = this._messagesQueue.length; i < len; i++) {\n\t\t\tif (this._messagesQueue[i].id === msgId) {\n\t\t\t\tif (this._promises.hasOwnProperty(String(msgId))) {\n\t\t\t\t\tdelete this._promises[String(msgId)];\n\t\t\t\t}\n\t\t\t\tthis._messagesQueue.splice(i, 1);\n\t\t\t\tthis._processMessagesQueue();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _processMessagesQueue(): void {\n\t\tif (this._processQueueTimeout !== -1) {\n\t\t\tclearTimeout(this._processQueueTimeout);\n\t\t\tthis._processQueueTimeout = -1;\n\t\t}\n\n\t\tif (this._messagesQueue.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._waitingForWorkerReply) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet delayUntilNextMessage = this._messagesQueue[0].timestamp - (new Date()).getTime();\n\t\tdelayUntilNextMessage = Math.max(0, delayUntilNextMessage);\n\n\t\tthis._processQueueTimeout = setTimeout(() => {\n\t\t\tthis._processQueueTimeout = -1;\n\t\t\tif (this._messagesQueue.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._waitingForWorkerReply = true;\n\t\t\tlet msg = this._messagesQueue.shift();\n\t\t\tthis._lastTimerEvent = timer.start(timer.Topic.WORKER, this._decodeMessageName(msg));\n\t\t\tthis._postMessage(msg);\n\t\t}, delayUntilNextMessage);\n\t}\n\n\tprivate _postMessage(msg:any): void {\n\t\tthis._worker.postMessage(stringify(msg));\n\t}\n\n\tprivate _onSerializedMessage(msg:string): void {\n\t\tlet message:workerProtocol.IServerMessage = null;\n\t\ttry {\n\t\t\tmessage = parse(msg);\n\t\t} catch (e) {\n\t\t\t// nothing\n\t\t}\n\t\tif (message) {\n\t\t\tthis._onmessage(message);\n\t\t}\n\t}\n\n\tprivate _onmessage(msg:workerProtocol.IServerMessage): void {\n\t\tif (!msg.monacoWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (msg.from && msg.from !== this._worker.getId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (msg.type) {\n\t\t\tcase workerProtocol.MessageType.REPLY:\n\t\t\t\tlet serverReplyMessage = <workerProtocol.IServerReplyMessage>msg;\n\n\t\t\t\tthis._waitingForWorkerReply = false;\n\t\t\t\tif(this._lastTimerEvent) {\n\t\t\t\t\tthis._lastTimerEvent.stop();\n\t\t\t\t}\n\n\t\t\t\tif (!this._promises.hasOwnProperty(String(serverReplyMessage.id))) {\n\t\t\t\t\tthis._onError('Received unexpected message from Worker:', msg);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (serverReplyMessage.action) {\n\t\t\t\t\tcase workerProtocol.ReplyType.COMPLETE:\n\t\t\t\t\t\tthis._promises[serverReplyMessage.id].complete(serverReplyMessage.payload);\n\t\t\t\t\t\tdelete this._promises[serverReplyMessage.id];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase workerProtocol.ReplyType.ERROR:\n\t\t\t\t\t\tthis._onError('Main Thread sent to worker the following message:', {\n\t\t\t\t\t\t\ttype: this._promises[serverReplyMessage.id].type,\n\t\t\t\t\t\t\tpayload: this._promises[serverReplyMessage.id].payload\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._onError('And the worker replied with an error:', serverReplyMessage.payload);\n\t\t\t\t\t\tonUnexpectedError(serverReplyMessage.payload);\n\t\t\t\t\t\tthis._promises[serverReplyMessage.id].error(serverReplyMessage.payload);\n\t\t\t\t\t\tdelete this._promises[serverReplyMessage.id];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase workerProtocol.ReplyType.PROGRESS:\n\t\t\t\t\t\tthis._promises[serverReplyMessage.id].progress(serverReplyMessage.payload);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase workerProtocol.MessageType.PRINT:\n\t\t\t\tlet serverPrintMessage = <workerProtocol.IServerPrintMessage>msg;\n\t\t\t\tthis._consoleLog(serverPrintMessage.level, serverPrintMessage.payload);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis._dispatchRequestFromWorker(msg);\n\t\t}\n\n\t\tthis._processMessagesQueue();\n\t}\n\n\tprivate _dispatchRequestFromWorker(msg:workerProtocol.IServerMessage): void {\n\t\tthis._handleWorkerRequest(msg).then((result) => {\n\t\t\tlet reply: workerProtocol.IClientReplyMessage = {\n\t\t\t\tid: 0,\n\t\t\t\ttype: workerProtocol.MessageType.REPLY,\n\t\t\t\ttimestamp: (new Date()).getTime(),\n\n\t\t\t\tseq: msg.req,\n\t\t\t\tpayload: (result instanceof Error ? transformErrorForSerialization(result) : result),\n\t\t\t\terr: null\n\t\t\t};\n\t\t\tthis._postMessage(reply);\n\t\t}, (err) => {\n\t\t\tlet reply: workerProtocol.IClientReplyMessage = {\n\t\t\t\tid: 0,\n\t\t\t\ttype: workerProtocol.MessageType.REPLY,\n\t\t\t\ttimestamp: (new Date()).getTime(),\n\n\t\t\t\tseq: msg.req,\n\t\t\t\tpayload: null,\n\t\t\t\terr: (err instanceof Error ? transformErrorForSerialization(err) : err)\n\t\t\t};\n\t\t\tthis._postMessage(reply);\n\t\t});\n\t}\n\n\tprivate _handleWorkerRequest(msg:workerProtocol.IServerMessage): TPromise<any> {\n\t\tif (msg.type === '_proxyObj') {\n\t\t\treturn this._remoteCom.handleMessage(msg.payload);\n\t\t}\n\n\t\tif (typeof this[msg.type] === 'function') {\n\t\t\treturn this._invokeHandler(this[msg.type], this, msg.payload);\n\t\t}\n\n\t\tthis._onError('Received unexpected message from Worker:', msg);\n\t\treturn TPromise.wrapError(new Error('No handler found'));\n\t}\n\n\tprivate _invokeHandler(handler:Function, handlerCtx:any, payload:any): TPromise<any> {\n\t\ttry {\n\t\t\treturn TPromise.as(handler.call(handlerCtx, payload));\n\t\t} catch (err) {\n\t\t\treturn TPromise.wrapError(err);\n\t\t}\n\t}\n\n\t_consoleLog(level:string, payload:any): void {\n\t\tswitch (level) {\n\t\t\tcase workerProtocol.PrintType.LOG:\n\t\t\t\tconsole.log(payload);\n\t\t\t\tbreak;\n\t\t\tcase workerProtocol.PrintType.DEBUG:\n\t\t\t\tconsole.info(payload);\n\t\t\t\tbreak;\n\t\t\tcase workerProtocol.PrintType.INFO:\n\t\t\t\tconsole.info(payload);\n\t\t\t\tbreak;\n\t\t\tcase workerProtocol.PrintType.WARN:\n\t\t\t\tconsole.warn(payload);\n\t\t\t\tbreak;\n\t\t\tcase workerProtocol.PrintType.ERROR:\n\t\t\t\tconsole.error(payload);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis._onError('Received unexpected message from Worker:', payload);\n\t\t}\n\t}\n\n\t_onError(message:string, error?:any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n"]}