{"version":3,"file":"vs/base/common/scrollable.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/common/scrollable.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {Disposable, IDisposable} from 'vs/base/common/lifecycle';\n\nexport interface IScrollable {\n\tgetScrollHeight():number;\n\tgetScrollWidth():number;\n\tgetScrollLeft():number;\n\tsetScrollLeft(scrollLeft:number);\n\tgetScrollTop():number;\n\tsetScrollTop(scrollTop:number);\n\taddScrollListener(callback:(newValues:ScrollEvent)=>void): IDisposable;\n}\n\nexport class ScrollEvent {\n\t_scrollEventTrait: void;\n\n\tscrollTop: number;\n\tscrollLeft: number;\n\tscrollWidth: number;\n\tscrollHeight: number;\n\tvertical: boolean;\n\thorizontal: boolean;\n\n\tconstructor(scrollTop:number, scrollLeft:number, scrollWidth:number, scrollHeight:number, vertical:boolean, horizontal:boolean) {\n\t\tthis.scrollTop = Math.round(scrollTop);\n\t\tthis.scrollLeft = Math.round(scrollLeft);\n\t\tthis.scrollWidth = Math.round(scrollWidth);\n\t\tthis.scrollHeight = Math.round(scrollHeight);\n\t\tthis.vertical = Boolean(vertical);\n\t\tthis.horizontal = Boolean(horizontal);\n\t}\n}\n\nexport class ScrollableValues {\n\t_scrollableValuesTrait: void;\n\n\tscrollTop: number;\n\tscrollLeft: number;\n\tscrollWidth: number;\n\tscrollHeight: number;\n\n\tconstructor(scrollTop:number, scrollLeft:number, scrollWidth:number, scrollHeight:number) {\n\t\tthis.scrollTop = Math.round(scrollTop);\n\t\tthis.scrollLeft = Math.round(scrollLeft);\n\t\tthis.scrollWidth = Math.round(scrollWidth);\n\t\tthis.scrollHeight = Math.round(scrollHeight);\n\t}\n\n\tpublic equals(other:ScrollEvent): boolean {\n\t\treturn (\n\t\t\tthis.scrollTop === other.scrollTop\n\t\t\t&& this.scrollLeft === other.scrollLeft\n\t\t\t&& this.scrollWidth === other.scrollWidth\n\t\t\t&& this.scrollHeight === other.scrollHeight\n\t\t);\n\t}\n}\n\nexport class DelegateScrollable extends Disposable {\n\n\tprivate _actual:IScrollable;\n\tprivate _onChange:()=>void;\n\n\tprivate _values: ScrollableValues;\n\n\tconstructor(actual:IScrollable, onChange:()=>void) {\n\t\tsuper();\n\t\tthis._actual = actual;\n\t\tthis._onChange = onChange;\n\n\t\tthis._values = new ScrollableValues(this._actual.getScrollTop(), this._actual.getScrollLeft(), this._actual.getScrollWidth(), this._actual.getScrollHeight());\n\t\tthis._register(this._actual.addScrollListener((newValues) => this._update(newValues)));\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _update(e:ScrollEvent): void {\n\t\tif (this._values.equals(e)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._values = new ScrollableValues(e.scrollTop, e.scrollLeft, e.scrollWidth, e.scrollHeight);\n\n\t\tthis._onChange();\n\t}\n\n\tpublic getScrollTop():number { return this._values.scrollTop; }\n\tpublic getScrollLeft():number { return this._values.scrollLeft; }\n\tpublic getScrollWidth():number { return this._values.scrollWidth; }\n\tpublic getScrollHeight():number { return this._values.scrollHeight; }\n\n\tpublic setScrollTop(scrollTop:number): void {\n\t\tthis._actual.setScrollTop(scrollTop);\n\t}\n\n\tpublic setScrollLeft(scrollLeft:number): void {\n\t\tthis._actual.setScrollLeft(scrollLeft);\n\t}\n}\n"]}