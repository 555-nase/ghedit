{"version":3,"file":"vs/base/common/events.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/common/events.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAEb;QAKC,eAAY,aAAqB;YAChC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,CAAC;QACF,YAAC;IAAD,CAAC,AAVD,IAUC;IAVY,aAAK,QAUjB,CAAA;IAED;QAAyC,uCAAK;QAK7C,6BAAY,GAAY,EAAE,QAAc,EAAE,QAAc,EAAE,aAAqB;YAC9E,kBAAM,aAAa,CAAC,CAAC;YAErB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QACF,0BAAC;IAAD,CAAC,AAZD,CAAyC,KAAK,GAY7C;IAZY,2BAAmB,sBAY/B,CAAA;IAED;QAAiC,+BAAK;QAGrC,qBAAY,OAAY,EAAE,aAAqB;YAC9C,kBAAM,aAAa,CAAC,CAAC;YAErB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACxB,CAAC;QACF,kBAAC;IAAD,CAAC,AARD,CAAiC,KAAK,GAQrC;IARY,mBAAW,cAQvB,CAAA;IAoBU,iBAAS,GAAG;QACtB,gBAAgB,EAAE,iBAAiB;QACnC,SAAS,EAAE,WAAW;QACtB,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,WAAW;QACtB,MAAM,EAAE,QAAQ;QAChB,QAAQ,EAAE,UAAU;QACpB,MAAM,EAAE,QAAQ;QAChB,gBAAgB,EAAE,iBAAiB;QACnC,UAAU,EAAE,WAAW;QACvB,GAAG,EAAE,KAAK;QACV,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,QAAQ;QAChB,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,SAAS;KAClB,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class Event {\n\tpublic time: number;\n\tpublic originalEvent: Event;\n\tpublic source: any;\n\n\tconstructor(originalEvent?: Event) {\n\t\tthis.time = (new Date()).getTime();\n\t\tthis.originalEvent = originalEvent;\n\t\tthis.source = null;\n\t}\n}\n\nexport class PropertyChangeEvent extends Event {\n\tpublic key: string;\n\tpublic oldValue: any;\n\tpublic newValue: any;\n\n\tconstructor(key?: string, oldValue?: any, newValue?: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.key = key;\n\t\tthis.oldValue = oldValue;\n\t\tthis.newValue = newValue;\n\t}\n}\n\nexport class ViewerEvent extends Event {\n\tpublic element: any;\n\n\tconstructor(element: any, originalEvent?: Event) {\n\t\tsuper(originalEvent);\n\n\t\tthis.element = element;\n\t}\n}\n\nexport interface ISelectionEvent {\n\tselection: any[];\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IFocusEvent {\n\tfocus: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport interface IHighlightEvent {\n\thighlight: any;\n\tpayload?: any;\n\tsource: any;\n}\n\nexport var EventType = {\n\tPROPERTY_CHANGED: 'propertyChanged',\n\tSELECTION: 'selection',\n\tFOCUS: 'focus',\n\tBLUR: 'blur',\n\tHIGHLIGHT: 'highlight',\n\tEXPAND: 'expand',\n\tCOLLAPSE: 'collapse',\n\tTOGGLE: 'toggle',\n\tCONTENTS_CHANGED: 'contentsChanged',\n\tBEFORE_RUN: 'beforeRun',\n\tRUN: 'run',\n\tEDIT: 'edit',\n\tSAVE: 'save',\n\tCANCEL: 'cancel',\n\tCHANGE: 'change',\n\tDISPOSE: 'dispose',\n};\n\n"]}