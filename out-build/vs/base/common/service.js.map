{"version":3,"file":"service.js","sourceRoot":"","sources":["../../../../src/vs/base/common/service.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { Promise, TPromise } from 'vs/base/common/winjs.base';\nimport { assign } from 'vs/base/common/objects';\nimport { IDisposable, toDisposable }  from 'vs/base/common/lifecycle';\nimport { Emitter } from 'vs/base/common/event';\n\nenum RequestType {\n\tCommon,\n\tCancel\n}\n\ninterface IRawRequest {\n\tid: number;\n\ttype: RequestType;\n\tserviceName?: string;\n\tname?: string;\n\targs?: any[];\n}\n\ninterface IRequest {\n\traw: IRawRequest;\n\temitter?: Emitter<any>;\n\tflush?: ()=>void;\n}\n\nenum ResponseType {\n\tInitialize,\n\tSuccess,\n\tProgress,\n\tError,\n\tErrorObj\n}\n\ninterface IRawResponse {\n\tid: number;\n\ttype: ResponseType;\n\tdata: any;\n}\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(request: any): void;\n\tonMessage(callback: (response: any) => void): void;\n}\n\nexport interface IServiceCtor<T> {\n\tnew? (): T;\n\tnew? (arg0: any): T;\n\tnew? (a0: any, a1: any): T;\n\tnew? (a0: any, a1: any, a2: any): T;\n\tnew? (a0: any, a1: any, a2: any, a3: any): T;\n\tnew? (a0: any, a1: any, a2: any, a3: any, a4: any): T;\n\tprototype: any;\n}\n\nenum ServiceState {\n\tUninitialized,\n\tIdle\n}\n\nexport interface IServiceMap {\n\t[name: string]: any;\n}\n\nexport interface IClient {\n\tgetService<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>): TService;\n}\n\nconst ServiceEventProperty = '$__SERVICE_EVENT';\n\n/**\n * Use this as a property decorator.\n */\nexport function ServiceEvent<T>(target: T, key: string): void {\n\ttarget[key] = { [ServiceEventProperty]: true };\n}\n\nexport function isServiceEvent(target: any): boolean {\n\treturn target[ServiceEventProperty];\n}\n\nexport class Server {\n\n\tprivate services: IServiceMap;\n\tprivate activeRequests: { [id: number]: IDisposable; };\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.services = Object.create(null);\n\t\tthis.activeRequests = Object.create(null);\n\t\tthis.protocol.onMessage(r => this.onMessage(r));\n\t\tthis.protocol.send(<IRawResponse> { type: ResponseType.Initialize });\n\t}\n\n\tregisterService<TService>(serviceName: string, service: TService): void {\n\t\tthis.services[serviceName] = service;\n\t}\n\n\tprivate onMessage(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Common:\n\t\t\t\tthis.onCommonRequest(request);\n\t\t\t\tbreak;\n\n\t\t\tcase RequestType.Cancel:\n\t\t\t\tthis.onCancelRequest(request);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate onCommonRequest(request: IRawRequest): void {\n\t\tconst service = this.services[request.serviceName];\n\t\tconst servicePrototype = service.constructor.prototype;\n\t\tconst prototypeMethod = servicePrototype && servicePrototype[request.name];\n\t\tconst isEvent = prototypeMethod && prototypeMethod[ServiceEventProperty];\n\t\tconst method = service[request.name];\n\t\tlet promise: Promise;\n\n\t\tif (isEvent) {\n\t\t\tlet disposable: IDisposable;\n\n\t\t\tpromise = new Promise(\n\t\t\t\t(c, e, p) => disposable = method.call(service, p),\n\t\t\t\t() => disposable.dispose()\n\t\t\t);\n\t\t} else {\n\t\t\tif (!method) {\n\t\t\t\tpromise = Promise.wrapError(new Error(`${ request.name } is not a valid method on ${ request.serviceName }`));\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tpromise = method.call(service, ...request.args);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tpromise = Promise.wrapError(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!Promise.is(promise)) {\n\t\t\t\tconst message = `'${ request.name }' did not return a promise`;\n\t\t\t\tconsole.warn(message);\n\t\t\t\tpromise = Promise.wrapError(new Error(message));\n\t\t\t}\n\t\t}\n\n\t\tthis.onPromiseRequest(promise, request);\n\t}\n\n\tprivate onPromiseRequest(promise: Promise, request: IRawRequest): void {\n\t\tconst id = request.id;\n\n\t\tconst requestPromise = promise.then(data => {\n\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.Success });\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}, data => {\n\t\t\tif (data instanceof Error) {\n\t\t\t\tthis.protocol.send(<IRawResponse> { id, data: {\n\t\t\t\t\tmessage: data.message,\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tstack: data.stack ? data.stack.split('\\n') : void 0\n\t\t\t\t}, type: ResponseType.Error });\n\t\t\t} else {\n\t\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.ErrorObj });\n\t\t\t}\n\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}, data => {\n\t\t\tthis.protocol.send(<IRawResponse> { id, data, type: ResponseType.Progress });\n\t\t});\n\n\t\tthis.activeRequests[request.id] = toDisposable(() => requestPromise.cancel());\n\t}\n\n\tprivate onCancelRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests[request.id];\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tdelete this.activeRequests[request.id];\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this.activeRequests).forEach(id => {\n\t\t\tthis.activeRequests[<any>id].dispose();\n\t\t});\n\n\t\tthis.activeRequests = null;\n\t}\n}\n\nexport class Client implements IClient {\n\n\tprivate state: ServiceState;\n\tprivate bufferedRequests: IRequest[];\n\tprivate handlers: { [id: number]: IHandler; };\n\tprivate lastRequestId: number;\n\n\tconstructor(private protocol: IMessagePassingProtocol) {\n\t\tthis.state = ServiceState.Uninitialized;\n\t\tthis.bufferedRequests = [];\n\t\tthis.handlers = Object.create(null);\n\t\tthis.lastRequestId = 0;\n\t\tthis.protocol.onMessage(r => this.onMessage(r));\n\t}\n\n\tgetService<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>): TService {\n\t\tconst props = Object.keys(serviceCtor.prototype)\n\t\t\t.filter(key => key !== 'constructor');\n\n\t\treturn <TService> props.reduce((service, key) => {\n\t\t\tif (serviceCtor.prototype[key][ServiceEventProperty]) {\n\t\t\t\tlet promise: Promise;\n\n\t\t\t\tconst emitter = new Emitter<any>({\n\t\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\t\tpromise = this.request(serviceName, key)\n\t\t\t\t\t\t\t.then(null, null, event => emitter.fire(event));\n\t\t\t\t\t},\n\t\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\t\tpromise.cancel();\n\t\t\t\t\t\tpromise = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn assign(service, { [key]: emitter.event });\n\t\t\t}\n\n\t\t\treturn assign(service, { [key]: (...args) => this.request(serviceName, key, ...args) });\n\t\t}, {});\n\t}\n\n\tprivate request(serviceName: string, name: string, ...args: any[]): Promise {\n\t\tconst request = {\n\t\t\traw: {\n\t\t\t\tid: this.lastRequestId++,\n\t\t\t\ttype: RequestType.Common,\n\t\t\t\tserviceName,\n\t\t\t\tname,\n\t\t\t\targs\n\t\t\t}\n\t\t};\n\n\t\tif (this.state === ServiceState.Uninitialized) {\n\t\t\treturn this.bufferRequest(request);\n\t\t}\n\n\t\treturn this.doRequest(request);\n\t}\n\n\tprivate doRequest(request: IRequest): Promise {\n\t\tconst id = request.raw.id;\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.handlers[id] = response => {\n\t\t\t\tswitch (response.type) {\n\t\t\t\t\tcase ResponseType.Success:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.Error:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t(<any> error).stack = response.data.stack;\n\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\te(error);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.ErrorObj:\n\t\t\t\t\t\tdelete this.handlers[id];\n\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ResponseType.Progress:\n\t\t\t\t\t\tp(response.data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.send(request.raw);\n\t\t},\n\t\t() => this.send({ id, type: RequestType.Cancel }));\n\t}\n\n\tprivate bufferRequest(request: IRequest): Promise {\n\t\tlet flushedRequest: Promise = null;\n\n\t\treturn new Promise((c, e, p) => {\n\t\t\tthis.bufferedRequests.push(request);\n\n\t\t\trequest.flush = () => {\n\t\t\t\trequest.flush = null;\n\t\t\t\tflushedRequest = this.doRequest(request).then(c, e, p);\n\t\t\t};\n\t\t}, () => {\n\t\t\trequest.flush = null;\n\n\t\t\tif (this.state !== ServiceState.Uninitialized) {\n\t\t\t\tif (flushedRequest) {\n\t\t\t\t\tflushedRequest.cancel();\n\t\t\t\t\tflushedRequest = null;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst idx = this.bufferedRequests.indexOf(request);\n\n\t\t\tif (idx === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.bufferedRequests.splice(idx, 1);\n\t\t});\n\t}\n\n\tprivate onMessage(response: IRawResponse): void {\n\t\tif (this.state === ServiceState.Uninitialized && response.type === ResponseType.Initialize) {\n\t\t\tthis.state = ServiceState.Idle;\n\t\t\tthis.bufferedRequests.forEach(r => r.flush && r.flush());\n\t\t\tthis.bufferedRequests = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers[response.id];\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate send(raw: IRawRequest) {\n\t\ttry {\n\t\t\tthis.protocol.send(raw);\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\n/**\n * Useful when the service itself is needed right away but the client\n * is wrapped within a promise.\n */\nexport function getService<TService>(clientPromise: TPromise<IClient>, serviceName: string, serviceCtor: IServiceCtor<TService>): TService {\n\tlet _servicePromise: TPromise<TService>;\n\tlet servicePromise = () => {\n\t\tif (!_servicePromise) {\n\t\t\t_servicePromise = clientPromise.then(client => client.getService(serviceName, serviceCtor));\n\t\t}\n\t\treturn _servicePromise;\n\t};\n\n\treturn Object.keys(serviceCtor.prototype)\n\t\t.filter(key => key !== 'constructor')\n\t\t.reduce((result, key) => {\n\t\t\tif (isServiceEvent(serviceCtor.prototype[key])) {\n\t\t\t\tlet promise: TPromise<void>;\n\t\t\t\tlet disposable: IDisposable;\n\n\t\t\t\tconst emitter = new Emitter<any>({\n\t\t\t\t\tonFirstListenerAdd: () => {\n\t\t\t\t\t\tpromise = servicePromise().then(service => {\n\t\t\t\t\t\t\tdisposable = service[key](e => emitter.fire(e));\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tonLastListenerRemove: () => {\n\t\t\t\t\t\tif (disposable) {\n\t\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\t\tdisposable = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpromise.cancel();\n\t\t\t\t\t\tpromise = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn assign(result, { [key]: emitter.event });\n\t\t\t}\n\n\t\t\treturn assign(result, {\n\t\t\t\t[key]: (...args) => {\n\t\t\t\t\treturn servicePromise().then(service => service[key](...args));\n\t\t\t\t}\n\t\t\t});\n\t\t}, {} as TService);\n}"]}