{"version":3,"file":"uuid.js","sourceRoot":"","sources":["../../../../src/vs/base/common/uuid.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/**\n * Represents a UUID as defined by rfc4122.\n */\nexport interface UUID {\n\n\t/**\n\t * @returns the canonical representation in sets of hexadecimal numbers separated by dashes.\n\t */\n\tasHex():string;\n\n\tequals(other:UUID):boolean;\n}\n\nclass ValueUUID implements UUID {\n\n\tconstructor(public _value:string) {\n\t\t// empty\n\t}\n\n\tpublic asHex():string {\n\t\treturn this._value;\n\t}\n\n\tpublic equals(other:UUID):boolean {\n\t\treturn this.asHex() === other.asHex();\n\t}\n}\n\nclass V4UUID extends ValueUUID {\n\n\tprivate static _chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\tprivate static _timeHighBits = ['8', '9', 'a', 'b'];\n\n\tprivate static _oneOf(array:string[]):string {\n\t\tvar idx = Math.floor(array.length * Math.random());\n\t\treturn array[idx];\n\t}\n\n\tprivate static _randomHex():string {\n\t\treturn V4UUID._oneOf(V4UUID._chars);\n\t}\n\n\tconstructor() {\n\t\tsuper([\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\t'4',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._oneOf(V4UUID._timeHighBits),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\t'-',\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t\tV4UUID._randomHex(),\n\t\t].join(''));\n\t}\n}\n\n/**\n * An empty UUID that contains only zeros.\n */\nexport var empty:UUID = new ValueUUID('00000000-0000-0000-0000-000000000000');\n\nexport function v4():UUID {\n\treturn new V4UUID();\n}\n\nvar _UUIDPattern = /^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$/;\n\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nexport function parse(value:string):UUID {\n\tif(!_UUIDPattern.test(value)) {\n\t\tthrow new Error('invalid uuid');\n\t}\n\treturn new ValueUUID(value);\n}\n\nexport function generateUuid():string {\n\treturn v4().asHex();\n}"]}