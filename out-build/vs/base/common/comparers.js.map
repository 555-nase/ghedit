{"version":3,"file":"comparers.js","sourceRoot":"","sources":["../../../../src/vs/base/common/comparers.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport strings = require('vs/base/common/strings');\n\nconst FileNameMatch = /^(.*)\\.([^.]*)|([^.]+)$/;\n\nexport function compareFileNames(one: string, other: string): number {\n\tlet oneMatch = FileNameMatch.exec(one.toLowerCase());\n\tlet otherMatch = FileNameMatch.exec(other.toLowerCase());\n\n\tlet oneName = oneMatch[1] || oneMatch[3] || '';\n\tlet oneExtension = oneMatch[2] || '';\n\n\tlet otherName = otherMatch[1] || otherMatch[3] || '';\n\tlet otherExtension = otherMatch[2] || '';\n\n\tif (oneName !== otherName) {\n\t\treturn oneName < otherName ? -1 : 1;\n\t}\n\n\treturn oneExtension < otherExtension ? -1 : 1;\n}\n\nexport function compareAnything(one: string, other: string, lookFor: string): number {\n\tlet elementAName = one.toLowerCase();\n\tlet elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tconst prefixCompare = compareByPrefix(one, other, lookFor);\n\tif (prefixCompare) {\n\t\treturn prefixCompare;\n\t}\n\n\t// Sort suffix matches over non suffix matches\n\tlet elementASuffixMatch = strings.endsWith(elementAName, lookFor);\n\tlet elementBSuffixMatch = strings.endsWith(elementBName, lookFor);\n\tif (elementASuffixMatch !== elementBSuffixMatch) {\n\t\treturn elementASuffixMatch ? -1 : 1;\n\t}\n\n\t// Understand file names\n\tlet r = compareFileNames(elementAName, elementBName);\n\tif (r !== 0) {\n\t\treturn r;\n\t}\n\n\t// Compare by name\n\treturn strings.localeCompare(elementAName, elementBName);\n}\n\nexport function compareByPrefix(one: string, other: string, lookFor: string): number {\n\tlet elementAName = one.toLowerCase();\n\tlet elementBName = other.toLowerCase();\n\n\t// Sort prefix matches over non prefix matches\n\tlet elementAPrefixMatch = elementAName.indexOf(lookFor) === 0;\n\tlet elementBPrefixMatch = elementBName.indexOf(lookFor) === 0;\n\tif (elementAPrefixMatch !== elementBPrefixMatch) {\n\t\treturn elementAPrefixMatch ? -1 : 1;\n\t}\n\n\t// Same prefix: Sort shorter matches to the top to have those on top that match more precisely\n\telse if (elementAPrefixMatch && elementBPrefixMatch) {\n\t\tif (elementAName.length < elementBName.length) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (elementAName.length > elementBName.length) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\treturn 0;\n}"]}