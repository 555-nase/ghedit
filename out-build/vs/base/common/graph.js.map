{"version":3,"file":"vs/base/common/graph.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/common/graph.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {isEmptyObject} from 'vs/base/common/types';\nimport {forEach, contains, lookup} from 'vs/base/common/collections';\n\nexport interface Node<T> {\n\tdata: T;\n\tincoming: { [key: string]: Node<T> };\n\toutgoing: { [key: string]: Node<T> };\n}\n\nfunction newNode<T>(data: T): Node<T> {\n\treturn {\n\t\tdata: data,\n\t\tincoming: Object.create(null),\n\t\toutgoing: Object.create(null)\n\t};\n}\n\nexport class Graph<T> {\n\n\tprivate _nodes: { [key: string]: Node<T> } = Object.create(null);\n\n\tconstructor(private _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tvar ret: Node<T>[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tif (isEmptyObject(entry.value.outgoing)) {\n\t\t\t\tret.push(entry.value);\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t}\n\n\ttraverse(start: T, inwards: boolean, callback: (data: T) => void): void {\n\t\tvar startNode = this.lookup(start);\n\t\tif (!startNode) {\n\t\t\treturn;\n\t\t}\n\t\tthis._traverse(startNode, inwards, Object.create(null), callback);\n\t}\n\n\tprivate _traverse(node: Node<T>, inwards: boolean, seen: { [key: string]: boolean }, callback: (data: T) => void): void {\n\t\tvar key = this._hashFn(node.data);\n\t\tif (contains(seen, key)) {\n\t\t\treturn;\n\t\t}\n\t\tseen[key] = true;\n\t\tcallback(node.data);\n\t\tvar nodes = inwards ? node.outgoing : node.incoming;\n\t\tforEach(nodes, (entry) => this._traverse(entry.value, inwards, seen, callback));\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tvar fromNode = this.lookupOrInsertNode(from),\n\t\t\ttoNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing[this._hashFn(to)] = toNode;\n\t\ttoNode.incoming[this._hashFn(from)] = fromNode;\n\t}\n\n\tremoveNode(data: T): void {\n\t\tvar key = this._hashFn(data);\n\t\tdelete this._nodes[key];\n\t\tforEach(this._nodes, (entry) => {\n\t\t\tdelete entry.value.outgoing[key];\n\t\t\tdelete entry.value.incoming[key];\n\t\t});\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tvar key = this._hashFn(data),\n\t\t\tnode = lookup(this._nodes, key);\n\n\t\tif (!node) {\n\t\t\tnode = newNode(data);\n\t\t\tthis._nodes[key] = node;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> {\n\t\treturn lookup(this._nodes, this._hashFn(data));\n\t}\n\n\tget length(): number {\n\t\treturn Object.keys(this._nodes).length;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tforEach(this._nodes, entry => {\n\t\t\tdata.push(`${entry.key}, (incoming)[${Object.keys(entry.value.incoming).join(', ')}], (outgoing)[${Object.keys(entry.value.outgoing).join(',')}]`);\n\t\t});\n\t\treturn data.join('\\n');\n\t}\n}\n"]}