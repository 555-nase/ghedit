{"version":3,"sources":["vs/base/common/severity.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb,IAAK,QAKJ;IALD,WAAK,QAAQ;QACZ,2CAAU,CAAA;QACV,uCAAQ,CAAA;QACR,6CAAW,CAAA;QACX,yCAAS,CAAA;IACV,CAAC,EALI,QAAQ,KAAR,QAAQ,QAKZ;IAED,IAAU,QAAQ,CA2CjB;IA3CD,WAAU,QAAQ,EAAC,CAAC;QAEnB,IAAI,MAAM,GAAG,OAAO,EACnB,QAAQ,GAAG,SAAS,EACpB,KAAK,GAAG,MAAM,EACd,KAAK,GAAG,MAAM,CAAC;QAEhB,IAAI,eAAe,GAAiC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxE,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAW,EAAE,IAAO,CAAC,CAAC;QACrE,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAa,EAAE,IAAS,CAAC,CAAC;QAC3E,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAU,EAAE,IAAM,CAAC,CAAC;QAElE;;;WAGG;QACH,mBAA0B,KAAa;YACtC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;YACxB,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;YACvB,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzF,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;YACzB,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5C,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YACtB,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACxB,CAAC;QAlBe,kBAAS,YAkBxB,CAAA;QAED,kBAAyB,KAAe;YACvC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC;QAChD,CAAC;QAFe,iBAAQ,WAEvB,CAAA;QAED,iBAAwB,CAAW,EAAE,CAAW;YAC/C,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACd,CAAC;QAFe,gBAAO,UAEtB,CAAA;IACF,CAAC,EA3CS,QAAQ,KAAR,QAAQ,QA2CjB;IAED;sBAAe,QAAQ,CAAC","file":"vs/base/common/severity.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport strings = require('vs/base/common/strings');\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tvar _error = 'error',\n\t\t_warning = 'warning',\n\t\t_warn = 'warn',\n\t\t_info = 'info';\n\n\tvar _displayStrings: { [value: number]: string; } = Object.create(null);\n\t_displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\n\t_displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\n\t_displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\n\t\treturn Severity.Ignore;\n\t}\n\n\texport function toString(value: Severity): string {\n\t\treturn _displayStrings[value] || strings.empty;\n\t}\n\n\texport function compare(a: Severity, b: Severity): number {\n\t\treturn b - a;\n\t}\n}\n\nexport default Severity;"]}