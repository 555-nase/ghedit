{"version":3,"file":"actionsRenderer.js","sourceRoot":"","sources":["../../../../../../src/vs/base/parts/tree/browser/actionsRenderer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport 'vs/css!./actionsRenderer';\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport WinJS = require('vs/base/common/winjs.base');\nimport Builder = require('vs/base/browser/builder');\nimport Dom = require('vs/base/browser/dom');\nimport Actions = require('vs/base/common/actions');\nimport Events = require('vs/base/common/events');\nimport ActionBar = require('vs/base/browser/ui/actionbar/actionbar');\nimport TreeDefaults = require('./treeDefaults');\nimport Tree = require('vs/base/parts/tree/browser/tree');\n\nvar $ = Builder.$;\n\nexport interface IActionProvider {\n\n\thasActions(tree:Tree.ITree, element:any):boolean;\n\t/// <summary>\n\t/// Returns whether or not the element has actions. These show up in place right\n\t/// to the element in the tree.\n\t/// </summary>\n\n\tgetActions(tree:Tree.ITree, element:any):WinJS.TPromise<Actions.IAction[]>;\n\t/// <summary>\n\t/// Returns a promise of an array with the actions of the element that should show\n\t/// up in place right to the element in the tree.\n\t/// </summary>\n\n\thasSecondaryActions(tree:Tree.ITree, element:any):boolean;\n\t/// <summary>\n\t/// Returns whether or not the element has secondary actions. These show up once the\n\t/// user has expanded the element's action bar.\n\t/// </summary>\n\n\tgetSecondaryActions(tree:Tree.ITree, element:any):WinJS.TPromise<Actions.IAction[]>;\n\t/// <summary>\n\t/// Returns a promise of an array with the secondary actions of the element that should\n\t/// show up once the user has expanded the element's action bar.\n\t/// </summary>\n\n\tgetActionItem(tree:Tree.ITree, element:any, action:Actions.IAction):ActionBar.IActionItem;\n\t/// <summary>\n\t/// Returns an action item to render an action.\n\t/// </summary>\n}\n\nexport interface IActionsRendererOptions {\n\tactionProvider: IActionProvider;\n\tactionRunner?: Actions.IActionRunner;\n}\n\nexport class ActionsRenderer extends TreeDefaults.LegacyRenderer implements Lifecycle.IDisposable {\n\n\tprivate static CONTENTS_CLEANUP_FN_KEY: string = '__$ActionsRenderer.contentCleanupFn';\n\tprivate static NO_OP = () => { /* noop */ };\n\n\tprotected actionProvider:IActionProvider;\n\tprotected actionRunner: Actions.IActionRunner;\n\n\tconstructor(opts: IActionsRendererOptions) {\n\t\tsuper();\n\t\tthis.actionProvider = opts.actionProvider;\n\t\tthis.actionRunner = opts.actionRunner;\n\t}\n\n\tpublic getHeight(tree:Tree.ITree, element:any):number {\n\t\treturn this.getContentHeight(tree, element);\n\t}\n\n\tprotected render(tree:Tree.ITree, element:any, container:HTMLElement, previousCleanupFn?: Tree.IElementCallback): Tree.IElementCallback {\n\t\ttry {\n\t\t\tDom.clearNode(container);\n\t\t} catch (e) {\n\t\t\tif (!/The node to be removed is no longer a child of this node/.test(e.message)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\tif (previousCleanupFn) {\n\t\t\tpreviousCleanupFn(tree, element);\n\t\t}\n\n\t\tvar $container = $(container).addClass('actions');\n\t\tvar $subContainer = $('.sub-content').appendTo($container);\n\t\tvar actionBar: ActionBar.ActionBar;\n\t\tvar actionBarListener: Lifecycle.IDisposable;\n\n\t\tif (this.actionProvider.hasActions(tree, element)) {\n\t\t\t$container.addClass('has-actions');\n\n\t\t\tactionBar = new ActionBar.ActionBar($('.primary-action-bar').appendTo($container), {\n\t\t\t\tcontext: this.getActionContext(tree, element),\n\t\t\t\tactionItemProvider: a => this.actionProvider.getActionItem(tree, element, a),\n\t\t\t\tactionRunner: this.actionRunner\n\t\t\t});\n\n\t\t\tthis.actionProvider.getActions(tree, element).then((actions) => {\n\t\t\t\tactionBar.push(actions, { icon: true, label: false });\n\t\t\t});\n\n\t\t\tactionBarListener = actionBar.addListener2(Events.EventType.RUN, (event: any) => {\n\t\t\t\tif (event.error) {\n\t\t\t\t\tthis.onError(event.error);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t$container.removeClass('has-actions');\n\t\t}\n\n\t\tvar previousContentsCleanupFn = (previousCleanupFn ? previousCleanupFn[ActionsRenderer.CONTENTS_CLEANUP_FN_KEY] : ActionsRenderer.NO_OP) || ActionsRenderer.NO_OP;\n\t\tpreviousContentsCleanupFn(tree, element);\n\n\t\tvar contentsCleanupFn = this.renderContents(tree, element, $subContainer.getHTMLElement(), null);\n\n\t\tvar cleanupFn = () => {\n\t\t\tif (actionBarListener) {\n\t\t\t\tactionBarListener.dispose();\n\t\t\t}\n\n\t\t\tif (actionBar) {\n\t\t\t\tactionBar.dispose();\n\t\t\t}\n\n\t\t\tif (contentsCleanupFn) {\n\t\t\t\tcontentsCleanupFn(tree, element);\n\t\t\t}\n\t\t};\n\n\t\tcleanupFn[ActionsRenderer.CONTENTS_CLEANUP_FN_KEY] = contentsCleanupFn;\n\n\t\treturn cleanupFn;\n\t}\n\n\t/* protected */ public getContentHeight(tree:Tree.ITree, element:any):number {\n\t\treturn 20;\n\t}\n\n\t/* protected */ public renderContents(tree:Tree.ITree, element:any, container:HTMLElement, previousCleanupFn:Tree.IElementCallback):Tree.IElementCallback {\n\t\treturn null;\n\t}\n\n\t/* protected */ public getActionContext(tree:Tree.ITree, element:any):any {\n\t\treturn null;\n\t}\n\n\t/* protected */ public onError(error: any): void {\n\t\treturn;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.actionProvider = null;\n\t}\n}\n"]}