{"version":3,"file":"vs/base/parts/tree/browser/treeDnd.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/parts/tree/browser/treeDnd.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb;QAIC,iCAAY,QAAe;YAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAEM,wCAAM,GAAb,UAAc,KAA2B;YACxC,QAAQ;QACT,CAAC;QAEM,yCAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QACF,8BAAC;IAAD,CAAC,AAfD,IAeC;IAfY,+BAAuB,0BAenC,CAAA;IAED;QAIC,yCAAY,QAAe;YAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAEM,gDAAM,GAAb,UAAc,KAA2B;YACxC,QAAQ;QACT,CAAC;QAEM,iDAAO,GAAd;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QACF,sCAAC;IAAD,CAAC,AAfD,IAeC;IAfY,uCAA+B,kCAe3C,CAAA;IAED;QAKC;YACC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QACjB,CAAC;QAEM,uCAAM,GAAb,UAAc,KAA2B;YACxC,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAClE,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAEjE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAhB,CAAgB,CAAC,CAAC;YACvD,CAAC;QACF,CAAC;QAEM,wCAAO,GAAd;YACC,MAAM,CAAC;gBACN,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;aACjB,CAAC;QACH,CAAC;QACF,6BAAC;IAAD,CAAC,AA9BD,IA8BC;IA9BY,8BAAsB,yBA8BlC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport _ = require('vs/base/parts/tree/browser/tree');\nimport Mouse = require('vs/base/browser/mouseEvent');\n\nexport class ElementsDragAndDropData implements _.IDragAndDropData {\n\n\tprivate elements: any[];\n\n\tconstructor(elements: any[]) {\n\t\tthis.elements = elements;\n\t}\n\n\tpublic update(event: Mouse.DragMouseEvent): void {\n\t\t// no-op\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.elements;\n\t}\n}\n\nexport class ExternalElementsDragAndDropData implements _.IDragAndDropData {\n\n\tprivate elements: any[];\n\n\tconstructor(elements: any[]) {\n\t\tthis.elements = elements;\n\t}\n\n\tpublic update(event: Mouse.DragMouseEvent): void {\n\t\t// no-op\n\t}\n\n\tpublic getData(): any {\n\t\treturn this.elements;\n\t}\n}\n\nexport class DesktopDragAndDropData implements _.IDragAndDropData {\n\n\tprivate types: any[];\n\tprivate files: any[];\n\n\tconstructor() {\n\t\tthis.types = [];\n\t\tthis.files = [];\n\t}\n\n\tpublic update(event: Mouse.DragMouseEvent): void {\n\t\tif (event.dataTransfer.types) {\n\t\t\tthis.types = [];\n\t\t\tArray.prototype.push.apply(this.types, event.dataTransfer.types);\n\t\t}\n\n\t\tif (event.dataTransfer.files) {\n\t\t\tthis.files = [];\n\t\t\tArray.prototype.push.apply(this.files, event.dataTransfer.files);\n\n\t\t\tthis.files = this.files.filter(f => f.size || f.type);\n\t\t}\n\t}\n\n\tpublic getData(): any {\n\t\treturn {\n\t\t\ttypes: this.types,\n\t\t\tfiles: this.files\n\t\t};\n\t}\n}"]}