{"version":3,"file":"quickOpenViewer.js","sourceRoot":"","sources":["../../../../../../src/vs/base/parts/quickopen/browser/quickOpenViewer.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {isFunction} from 'vs/base/common/types';\nimport {ITree, IRenderer, IFilter, IDataSource, IAccessibilityProvider} from 'vs/base/parts/tree/browser/tree';\nimport {IModel} from 'vs/base/parts/quickopen/common/quickOpen';\n\nexport interface IModelProvider {\n\tgetModel<T>(): IModel<T>;\n}\n\nexport class DataSource implements IDataSource {\n\n\tprivate modelProvider: IModelProvider;\n\n\tconstructor(model: IModel<any>);\n\tconstructor(modelProvider: IModelProvider);\n\tconstructor(arg: any) {\n\t\tthis.modelProvider = isFunction(arg.getModel) ? arg : { getModel: () => arg };\n\t}\n\n\tgetId(tree: ITree, element: any): string {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model === element ? '__root__' : model.dataSource.getId(element);\n\t}\n\n\thasChildren(tree: ITree, element: any): boolean {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model && model === element && model.entries.length > 0;\n\t}\n\n\tgetChildren(tree: ITree, element: any): TPromise<any[]> {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn TPromise.as(model === element ? model.entries : []);\n\t}\n\n\tgetParent(tree: ITree, element: any): TPromise<any> {\n\t\treturn TPromise.as(null);\n\t}\n}\n\nexport class AccessibilityProvider implements IAccessibilityProvider {\n\tconstructor(private modelProvider: IModelProvider) { }\n\n\tpublic getAriaLabel(tree: ITree, element: any): string {\n\t\tconst model = this.modelProvider.getModel();\n\n\t\treturn model.accessibilityProvider && model.accessibilityProvider.getAriaLabel(element);\n\t}\n}\n\nexport class Filter implements IFilter {\n\n\tconstructor(private modelProvider: IModelProvider) { }\n\n\tisVisible(tree: ITree, element: any): boolean {\n\t\tconst model = this.modelProvider.getModel();\n\n\t\tif (!model.filter) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn model.filter.isVisible(element);\n\t}\n}\n\nexport class Renderer implements IRenderer {\n\n\tconstructor(private modelProvider: IModelProvider) { }\n\n\tgetHeight(tree: ITree, element: any): number {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.getHeight(element);\n\t}\n\n\tgetTemplateId(tree: ITree, element: any): string {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.getTemplateId(element);\n\t}\n\n\trenderTemplate(tree: ITree, templateId: string, container: HTMLElement): any {\n\t\tconst model = this.modelProvider.getModel();\n\t\treturn model.renderer.renderTemplate(templateId, container);\n\t}\n\n\trenderElement(tree: ITree, element: any, templateId: string, templateData: any): void {\n\t\tconst model = this.modelProvider.getModel();\n\t\tmodel.renderer.renderElement(element, templateId, templateData);\n\t}\n\n\tdisposeTemplate(tree: ITree, templateId: string, templateData: any): void {\n\t\tconst model = this.modelProvider.getModel();\n\t\tmodel.renderer.disposeTemplate(templateId, templateData);\n\t}\n}"]}