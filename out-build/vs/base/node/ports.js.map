{"version":3,"file":"vs/base/node/ports.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/node/ports.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAIb;;;OAGG;IACH,sBAA6B,SAAiB,EAAE,WAAkB,EAAE,GAA2B;QAC9F,EAAE,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,CAAC;QAED,IAAI,OAAO,GAAG,SAAS,CAAC;QAExB,IAAI,MAAM,GAAG,GAAG,CAAC,YAAY,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,UAAC,GAAG;YAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;gBACpB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,GAAG;YACtB,YAAY,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACJ,CAAC;IAnBe,oBAAY,eAmB3B,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport net = require('net');\n\n/**\n * Given a start point and a max number of retries, will find a port that\n * is openable. Will return 0 in case no free port can be found.\n */\nexport function findFreePort(startPort: number, giveUpAfter:number, clb: (port: number) => void): void {\n\tif (giveUpAfter === 0) {\n\t\treturn clb(0);\n\t}\n\n\tlet tryPort = startPort;\n\n\tlet server = net.createServer();\n\tserver.listen(tryPort, (err) => {\n\t\tserver.once('close', () => {\n\t\t\treturn clb(tryPort);\n\t\t});\n\n\t\tserver.close();\n\t});\n\n\tserver.on('error', (err) => {\n\t\tfindFreePort(startPort + 1, giveUpAfter - 1, clb);\n\t});\n}"]}