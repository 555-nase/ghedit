{"version":3,"file":"vs/languages/markdown/test/common/markdown.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/markdown/test/common/markdown.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport modesUtil = require('vs/editor/test/common/modesUtil');\nimport Modes = require('vs/editor/common/modes');\nimport {htmlTokenTypes} from 'vs/languages/html/common/html';\nimport {cssTokenTypes} from 'vs/languages/css/common/css';\nimport {MockModeService} from 'vs/editor/test/common/mocks/mockModeService';\nimport {NULL_THREAD_SERVICE} from 'vs/platform/test/common/nullThreadService';\nimport {createInstantiationService} from 'vs/platform/instantiation/common/instantiationService';\nimport {MarkdownMode} from 'vs/languages/markdown/common/markdown';\nimport {MockTokenizingMode} from 'vs/editor/test/common/mocks/mockMode';\n\nclass MarkdownMockModeService extends MockModeService {\n\tisRegisteredMode(mimetypeOrModeId: string): boolean {\n\t\tif (mimetypeOrModeId === 'javascript') {\n\t\t\treturn true;\n\t\t}\n\t\tif (mimetypeOrModeId === 'css') {\n\t\t\treturn true;\n\t\t}\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tgetMode(commaSeparatedMimetypesOrCommaSeparatedIds: string): Modes.IMode {\n\t\tif (commaSeparatedMimetypesOrCommaSeparatedIds === 'javascript') {\n\t\t\treturn new MockTokenizingMode('js', 'mock-js');\n\t\t}\n\t\tif (commaSeparatedMimetypesOrCommaSeparatedIds === 'css') {\n\t\t\treturn new MockTokenizingMode('css', 'mock-css');\n\t\t}\n\t\tthrow new Error('Not implemented');\n\t}\n\n\tgetModeIdForLanguageName(alias:string): string {\n\t\tif (alias === 'text/javascript') {\n\t\t\treturn 'javascript';\n\t\t}\n\t\tif (alias === 'text/css') {\n\t\t\treturn 'css';\n\t\t}\n\t\tconsole.log(alias);\n\t\tthrow new Error('Not implemented');\n\t}\n}\n\nsuite('Markdown - tokenization', () => {\n\n\tvar tokenizationSupport: Modes.ITokenizationSupport;\n\n\t(function() {\n\t\tlet threadService = NULL_THREAD_SERVICE;\n\t\tlet modeService = new MarkdownMockModeService();\n\t\tlet inst = createInstantiationService({\n\t\t\tthreadService: threadService,\n\t\t\tmodeService: modeService\n\t\t});\n\t\tthreadService.setInstantiationService(inst);\n\n\t\tlet mode = new MarkdownMode(\n\t\t\t{ id: 'markdown' },\n\t\t\tinst,\n\t\t\tthreadService,\n\t\t\tmodeService,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\tnull\n\t\t);\n\n\t\ttokenizationSupport = mode.tokenizationSupport;\n\n\t})();\n\n\ttest('', () => {\n\t\tmodesUtil.executeTests(tokenizationSupport, [\n\t\t\t// HTML and embedded content - bug 16912\n\t\t\t[{\n\t\t\tline: '<b>foo</b>*bar*',\n\t\t\ttokens: [\n\t\t\t\t{ startIndex:0, type: htmlTokenTypes.getTag('b.md') },\n\t\t\t\t{ startIndex:3, type: '' },\n\t\t\t\t{ startIndex:6, type: htmlTokenTypes.getTag('b.md') },\n\t\t\t\t{ startIndex:10, type: 'emphasis.md' }\n\t\t\t]}],\n\n\t\t\t[{\n\t\t\tline: '</b>*bar*',\n\t\t\ttokens: [\n\t\t\t\t{ startIndex:0, type: htmlTokenTypes.getTag('b.md') },\n\t\t\t\t{ startIndex:4, type: 'emphasis.md' }\n\t\t\t]}],\n\n\t\t\t[{\n\t\t\tline: '<script>alert(\"foo\")</script>*bar*',\n\t\t\ttokens: [\n\t\t\t\t{ startIndex:0, type: htmlTokenTypes.getTag('script.md') },\n\t\t\t\t{ startIndex:8, type: 'mock-js' },\n\t\t\t\t{ startIndex:20, type: htmlTokenTypes.getTag('script.md') },\n\t\t\t\t{ startIndex:29, type: 'emphasis.md' }\n\t\t\t]}],\n\n\t\t\t[{\n\t\t\tline: '<style>div { background: red }</style>*bar*',\n\t\t\ttokens: [\n\t\t\t\t{ startIndex:0, type: htmlTokenTypes.getTag('style.md') },\n\t\t\t\t{ startIndex:7, type: 'mock-css' },\n\t\t\t\t{ startIndex:30, type: htmlTokenTypes.getTag('style.md') },\n\t\t\t\t{ startIndex:38, type: 'emphasis.md' }\n\t\t\t]}]\n\t\t]);\n\t});\n});\n"]}