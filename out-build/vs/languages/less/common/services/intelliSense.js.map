{"version":3,"sources":["vs/languages/less/common/services/intelliSense.ts"],"names":[],"mappings":"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","file":"vs/languages/less/common/services/intelliSense.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport languageFacts = require('vs/languages/css/common/services/languageFacts');\nimport Modes = require('vs/editor/common/modes');\nimport cssIntellisense = require('vs/languages/css/common/services/intelliSense');\nimport nls = require('vs/nls');\n\nexport class LESSIntellisense extends cssIntellisense.CSSIntellisense {\n\n\tprivate static builtInProposals = [\n\t\t{\n\t\t\t'name': 'escape',\n\t\t\t'example': 'escape(@string);',\n\t\t\t'description': nls.localize('less.builtin.escape', 'URL encodes a string')\n\t\t},\n\t\t{\n\t\t\t'name': 'e',\n\t\t\t'example': 'e(@string);',\n\t\t\t'description': nls.localize('less.builtin.e', 'escape string content')\n\t\t},\n\t\t{\n\t\t\t'name': 'replace',\n\t\t\t'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n\t\t\t'description': nls.localize('less.builtin.replace', 'string replace')\n\t\t},\n\t\t{\n\t\t\t'name': 'unit',\n\t\t\t'example': 'unit(@dimension, [@unit: \\'\\']);',\n\t\t\t'description': nls.localize('less.builtin.unit', 'remove or change the unit of a dimension')\n\t\t},\n\t\t{\n\t\t\t'name': 'color',\n\t\t\t'example': 'color(@string);',\n\t\t\t'description': nls.localize('less.builtin.color', 'parses a string to a color')\n\t\t},\n\t\t{\n\t\t\t'name': 'convert',\n\t\t\t'example': 'convert(@value, unit);',\n\t\t\t'description': nls.localize('less.builtin.convert', 'converts numbers from one type into another')\n\t\t},\n\t\t{\n\t\t\t'name': 'data-uri',\n\t\t\t'example': 'data-uri([mimetype,] url);',\n\t\t\t'description': nls.localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`')\n\t\t},\n\t\t{\n\t\t\t'name': 'length',\n\t\t\t'example': 'length(@list);',\n\t\t\t'description': nls.localize('less.builtin.length', 'returns the number of elements in a value list')\n\t\t},\n\t\t{\n\t\t\t'name': 'extract',\n\t\t\t'example': 'extract(@list, index);',\n\t\t\t'description': nls.localize('less.builtin.extract', 'returns a value at the specified position in the list')\n\t\t},\n\t\t{\n\t\t\t'name': 'abs',\n\t\t\t'description': nls.localize('less.builtin.abs', 'absolute value of a number'),\n\t\t\t'example': 'abs(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'acos',\n\t\t\t'description': nls.localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n\t\t\t'example': 'acos(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'asin',\n\t\t\t'description': nls.localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n\t\t\t'example': 'asin(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'ceil',\n\t\t\t'example': 'ceil(@number);',\n\t\t\t'description': nls.localize('less.builtin.ceil', 'rounds up to an integer')\n\t\t},\n\t\t{\n\t\t\t'name': 'cos',\n\t\t\t'description': nls.localize('less.builtin.cos', 'cosine function'),\n\t\t\t'example': 'cos(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'floor',\n\t\t\t'description': nls.localize('less.builtin.floor', 'rounds down to an integer'),\n\t\t\t'example': 'floor(@number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'percentage',\n\t\t\t'description': nls.localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n\t\t\t'example': 'percentage(@number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'round',\n\t\t\t'description': nls.localize('less.builtin.round', 'rounds a number to a number of places'),\n\t\t\t'example': 'round(number, [places: 0]);'\n\t\t},\n\t\t{\n\t\t\t'name': 'sqrt',\n\t\t\t'description': nls.localize('less.builtin.sqrt', 'calculates square root of a number'),\n\t\t\t'example': 'sqrt(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'sin',\n\t\t\t'description': nls.localize('less.builtin.sin', 'sine function'),\n\t\t\t'example': 'sin(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'tan',\n\t\t\t'description': nls.localize('less.builtin.tan', 'tangent function'),\n\t\t\t'example': 'tan(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'atan',\n\t\t\t'description': nls.localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n\t\t\t'example': 'atan(number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'pi',\n\t\t\t'description': nls.localize('less.builtin.pi', 'returns pi'),\n\t\t\t'example': 'pi();'\n\t\t},\n\t\t{\n\t\t\t'name': 'pow',\n\t\t\t'description': nls.localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n\t\t\t'example': 'pow(@base, @exponent);'\n\t\t},\n\t\t{\n\t\t\t'name': 'mod',\n\t\t\t'description': nls.localize('less.builtin.mod', 'first argument modulus second argument'),\n\t\t\t'example': 'mod(number, number);'\n\t\t},\n\t\t{\n\t\t\t'name': 'min',\n\t\t\t'description': nls.localize('less.builtin.min', 'returns the lowest of one or more values'),\n\t\t\t'example': 'min(@x, @y);'\n\t\t},\n\t\t{\n\t\t\t'name': 'max',\n\t\t\t'description': nls.localize('less.builtin.max', 'returns the lowest of one or more values'),\n\t\t\t'example': 'max(@x, @y);'\n\t\t}\n\t];\n\n\tprivate static colorProposals = [\n\t\t{\n\t\t\t'name': 'argb',\n\t\t\t'example': 'argb(@color);',\n\t\t\t'description': nls.localize('less.builtin.argb', 'creates a #AARRGGBB')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsl',\n\t\t\t'example': 'hsl(@hue, @saturation, @lightness);',\n\t\t\t'description': nls.localize('less.builtin.hsl', 'creates a color')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsla',\n\t\t\t'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n\t\t\t'description': nls.localize('less.builtin.hsla', 'creates a color')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsv',\n\t\t\t'example': 'hsv(@hue, @saturation, @value);',\n\t\t\t'description': nls.localize('less.builtin.hsv', 'creates a color')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsva',\n\t\t\t'example': 'hsva(@hue, @saturation, @value, @alpha);',\n\t\t\t'description': nls.localize('less.builtin.hsva', 'creates a color')\n\t\t},\n\t\t{\n\t\t\t'name': 'hue',\n\t\t\t'example': 'hue(@color);',\n\t\t\t'description': nls.localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n\t\t},\n\t\t{\n\t\t\t'name': 'saturation',\n\t\t\t'example': 'saturation(@color);',\n\t\t\t'description': nls.localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n\t\t},\n\t\t{\n\t\t\t'name': 'lightness',\n\t\t\t'example': 'lightness(@color);',\n\t\t\t'description': nls.localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsvhue',\n\t\t\t'example': 'hsvhue(@color);',\n\t\t\t'description': nls.localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsvsaturation',\n\t\t\t'example': 'hsvsaturation(@color);',\n\t\t\t'description': nls.localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n\t\t},\n\t\t{\n\t\t\t'name': 'hsvvalue',\n\t\t\t'example': 'hsvvalue(@color);',\n\t\t\t'description': nls.localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n\t\t},\n\t\t{\n\t\t\t'name': 'red',\n\t\t\t'example': 'red(@color);',\n\t\t\t'description': nls.localize('less.builtin.red', 'returns the `red` channel of `@color`')\n\t\t},\n\t\t{\n\t\t\t'name': 'green',\n\t\t\t'example': 'green(@color);',\n\t\t\t'description': nls.localize('less.builtin.green', 'returns the `green` channel of `@color`')\n\t\t},\n\t\t{\n\t\t\t'name': 'blue',\n\t\t\t'example': 'blue(@color);',\n\t\t\t'description': nls.localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n\t\t},\n\t\t{\n\t\t\t'name': 'alpha',\n\t\t\t'example': 'alpha(@color);',\n\t\t\t'description': nls.localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n\t\t},\n\t\t{\n\t\t\t'name': 'luma',\n\t\t\t'example': 'luma(@color);',\n\t\t\t'description': nls.localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n\t\t},\n\t\t{\n\t\t\t'name': 'saturate',\n\t\t\t'example': 'saturate(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n\t\t},\n\t\t{\n\t\t\t'name': 'desaturate',\n\t\t\t'example': 'desaturate(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n\t\t},\n\t\t{\n\t\t\t'name': 'lighten',\n\t\t\t'example': 'lighten(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n\t\t},\n\t\t{\n\t\t\t'name': 'darken',\n\t\t\t'example': 'darken(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.darken', 'return `@color` 10% points darker')\n\t\t},\n\t\t{\n\t\t\t'name': 'fadein',\n\t\t\t'example': 'fadein(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n\t\t},\n\t\t{\n\t\t\t'name': 'fadeout',\n\t\t\t'example': 'fadeout(@color, 10%);',\n\t\t\t'description': nls.localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n\t\t},\n\t\t{\n\t\t\t'name': 'fade',\n\t\t\t'example': 'fade(@color, 50%);',\n\t\t\t'description': nls.localize('less.builtin.fade', 'return `@color` with 50% transparency')\n\t\t},\n\t\t{\n\t\t\t'name': 'spin',\n\t\t\t'example': 'spin(@color, 10);',\n\t\t\t'description': nls.localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n\t\t},\n\t\t{\n\t\t\t'name': 'mix',\n\t\t\t'example': 'mix(@color1, @color2, [@weight: 50%]);',\n\t\t\t'description': nls.localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n\t\t},\n\t\t{\n\t\t\t'name': 'greyscale',\n\t\t\t'example': 'greyscale(@color);',\n\t\t\t'description': nls.localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color')\n\t\t},\n\t\t{\n\t\t\t'name': 'contrast',\n\t\t\t'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n\t\t\t'description': nls.localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n\t\t},\n\t\t{\n\t\t\t'name': 'multiply',\n\t\t\t'example': 'multiply(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'screen',\n\t\t\t'example': 'screen(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'overlay',\n\t\t\t'example': 'overlay(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'softlight',\n\t\t\t'example': 'softlight(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'hardlight',\n\t\t\t'example': 'hardlight(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'difference',\n\t\t\t'example': 'difference(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'exclusion',\n\t\t\t'example': 'exclusion(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'average',\n\t\t\t'example': 'average(@color1, @color2);'\n\t\t},\n\t\t{\n\t\t\t'name': 'negation',\n\t\t\t'example': 'negation(@color1, @color2);'\n\t\t}\n\t];\n\n\n\tconstructor() {\n\t\tsuper('@');\n\t}\n\n\tprivate createFunctionProposals(proposals: { name: string; example: string; description?: string; }[], result: Modes.ISuggestion[]): Modes.ISuggestion[] {\n\t\tproposals.forEach((p) => {\n\t\t\tresult.push({\n\t\t\t\tlabel: p.name,\n\t\t\t\ttypeLabel: p.example,\n\t\t\t\tdocumentationLabel: p.description,\n\t\t\t\tcodeSnippet: p.name + '({{}})',\n\t\t\t\ttype: 'function'\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\n\tpublic getTermProposals(result:Modes.ISuggestion[]):Modes.ISuggestion[] {\n\t\tthis.createFunctionProposals(LESSIntellisense.builtInProposals, result);\n\t\treturn super.getTermProposals(result);\n\t}\n\n\tprotected getColorProposals(entry: languageFacts.IEntry, result: Modes.ISuggestion[]): Modes.ISuggestion[] {\n\t\tthis.createFunctionProposals(LESSIntellisense.colorProposals, result);\n\t\treturn super.getColorProposals(entry, result);\n\t}\n\n}\n\n"]}