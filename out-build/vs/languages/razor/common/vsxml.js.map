{"version":3,"file":"vs/languages/razor/common/vsxml.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/razor/common/vsxml.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/* In order to use VSXML in your own modes, you need to have an IState\n * which implements IVSXMLWrapperState. Upon a START token such as '///',\n * the wrapper state can return a new VSXMLEmbeddedState as the nextState in\n * the tokenization result.\n*/\n\n\n'use strict';\n\nimport objects = require('vs/base/common/objects');\nimport errors = require('vs/base/common/errors');\nimport Modes = require('vs/editor/common/modes');\nimport {AbstractState} from 'vs/editor/common/modes/abstractState';\nimport vsxmlTokenTypes = require('vs/languages/razor/common/vsxmlTokenTypes');\n\nvar separators = '<>\"=/';\nvar whitespace = '\\t ';\nvar isEntity = objects.createKeywordMatcher(['summary', 'reference', 'returns', 'param', 'loc']);\nvar isAttribute = objects.createKeywordMatcher(['type', 'path', 'name', 'locid', 'filename', 'format', 'optional']);\nvar isSeparator = objects.createKeywordMatcher(separators.split(''));\n\nexport interface IVSXMLWrapperState extends Modes.IState {\n\tsetVSXMLState(newVSXMLState:VSXMLState):void;\n}\n\nexport class EmbeddedState extends AbstractState {\n\n\tprivate state:Modes.IState;\n\tprivate parentState:Modes.IState;\n\n\tconstructor(mode:Modes.IMode, state:Modes.IState, parentState:Modes.IState) {\n\t\tsuper(mode);\n\t\tthis.state = state;\n\t\tthis.parentState = parentState;\n\t}\n\n\tpublic getParentState():Modes.IState {\n\t\treturn this.parentState;\n\t}\n\n\tpublic makeClone(): EmbeddedState {\n\t\treturn new EmbeddedState(this.getMode(), AbstractState.safeClone(this.state), AbstractState.safeClone(this.parentState));\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof EmbeddedState) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other) &&\n\t\t\t\tAbstractState.safeEquals(this.state, other.state) &&\n\t\t\t\tAbstractState.safeEquals(this.parentState, other.parentState)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic setState(nextState:Modes.IState):void {\n\t\tthis.state = nextState;\n\t}\n\n\tpublic postTokenize(result:Modes.ITokenizationResult, stream:Modes.IStream) : Modes.ITokenizationResult {\n\t\treturn result;\n\t}\n\n\tpublic tokenize(stream:Modes.IStream) : Modes.ITokenizationResult {\n\t\tvar result = this.state.tokenize(stream);\n\t\tif (result.nextState !== undefined) {\n\t\t\tthis.setState(result.nextState);\n\t\t}\n\t\tresult.nextState = this;\n\t\treturn this.postTokenize(result, stream);\n\t}\n}\n\nexport class VSXMLEmbeddedState extends EmbeddedState {\n\n\tconstructor(mode:Modes.IMode, state:Modes.IState, parentState:IVSXMLWrapperState) {\n\t\tsuper(mode, state, parentState);\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof VSXMLEmbeddedState) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic setState(nextState:Modes.IState):void{\n\t\tsuper.setState(nextState);\n\t\t(<IVSXMLWrapperState> this.getParentState()).setVSXMLState(<VSXMLState>nextState);\n\t}\n\n\tpublic postTokenize(result:Modes.ITokenizationResult, stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tif (stream.eos()) {\n\t\t\tresult.nextState = this.getParentState();\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class VSXMLState extends AbstractState {\n\n\tpublic parent:Modes.IState;\n\tpublic whitespaceTokenType:string;\n\tprivate name:string;\n\n\tconstructor(mode:Modes.IMode, name:string, parent:Modes.IState, whitespaceTokenType:string='') {\n\t\tsuper(mode);\n\t\tthis.name = name;\n\t\tthis.parent = parent;\n\t\tthis.whitespaceTokenType = whitespaceTokenType;\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof VSXMLState) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other) &&\n\t\t\t\tthis.whitespaceTokenType === other.whitespaceTokenType &&\n\t\t\t\tthis.name === other.name &&\n\t\t\t\tAbstractState.safeEquals(this.parent, other.parent)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic tokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tstream.setTokenRules(separators, whitespace);\n\t\tif (stream.skipWhitespace().length > 0) {\n\t\t\treturn { type: this.whitespaceTokenType };\n\t\t}\n\t\treturn this.stateTokenize(stream);\n\t}\n\n\tpublic stateTokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tthrow errors.notImplemented();\n\t}\n}\n\nexport class VSXMLString extends VSXMLState {\n\n\tconstructor(mode:Modes.IMode, parent:Modes.IState) {\n\t\tsuper(mode, 'string', parent, vsxmlTokenTypes.TOKEN_VALUE);\n\t}\n\n\tpublic makeClone():VSXMLString {\n\t\treturn new VSXMLString(this.getMode(), this.parent ? this.parent.clone() : null);\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof VSXMLString) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic stateTokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\twhile (!stream.eos()) {\n\t\t\tvar token = stream.nextToken();\n\t\t\tif (token === '\"') {\n\t\t\t\treturn { type: vsxmlTokenTypes.TOKEN_VALUE, nextState: this.parent };\n\t\t\t}\n\t\t}\n\t\treturn { type: vsxmlTokenTypes.TOKEN_VALUE, nextState: this.parent };\n\t}\n}\n\nexport class VSXMLTag extends VSXMLState {\n\n\tconstructor(mode:Modes.IMode, parent:Modes.IState) {\n\t\tsuper(mode, 'expression', parent, 'vs');\n\t}\n\n\tpublic makeClone():VSXMLTag {\n\t\treturn new VSXMLTag(this.getMode(), this.parent ? this.parent.clone() : null);\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof VSXMLTag) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic stateTokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tvar token = stream.nextToken();\n\t\tvar tokenType = this.whitespaceTokenType;\n\t\tif (token === '>') {\n\t\t\treturn { type: 'punctuation.vs', nextState: this.parent };\n\t\t} else if (token === '\"') {\n\t\t\treturn { type: vsxmlTokenTypes.TOKEN_VALUE, nextState: new VSXMLString(this.getMode(), this) };\n\t\t} else if (isEntity(token)) {\n\t\t\ttokenType = 'tag.vs';\n\t\t} else if (isAttribute(token)) {\n\t\t\ttokenType = vsxmlTokenTypes.TOKEN_KEY;\n\t\t} else if (isSeparator(token)) {\n\t\t\ttokenType = 'punctuation.vs';\n\t\t}\n\t\treturn { type:tokenType, nextState: this };\n\t}\n}\n\nexport class VSXMLExpression extends VSXMLState {\n\n\tconstructor(mode:Modes.IMode, parent:Modes.IState) {\n\t\tsuper(mode, 'expression', parent, 'vs');\n\t}\n\n\tpublic makeClone():VSXMLExpression {\n\t\treturn new VSXMLExpression(this.getMode(), this.parent ? this.parent.clone() : null);\n\t}\n\n\tpublic equals(other:Modes.IState):boolean {\n\t\tif (other instanceof VSXMLExpression) {\n\t\t\treturn (\n\t\t\t\tsuper.equals(other)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic stateTokenize(stream:Modes.IStream):Modes.ITokenizationResult {\n\t\tvar token = stream.nextToken();\n\t\tif (token === '<') {\n\t\t\treturn { type: 'punctuation.vs', nextState: new VSXMLTag(this.getMode(), this) };\n\t\t}\n\t\treturn { type: this.whitespaceTokenType, nextState: this};\n\t}\n}\n"]}