{"version":3,"file":"vs/languages/lib/common/wireProtocol.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/lib/common/wireProtocol.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAIb,IAAI,WAAW,GAAU,IAAI,CAAC;IAC9B,IAAI,aAAa,GAAU,kBAAkB,CAAC;IAC9C,IAAI,iBAAiB,GAAU,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACxE,IAAI,KAAK,GAAU,IAAI,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,UAAU,GAAU,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,IAAI,UAAU,GAAU,IAAI,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAEpD;QAMC;YACC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC;QAEM,+BAAM,GAAb,UAAc,IAAoB;YACjC,IAAI,QAAQ,GAAU,IAAI,CAAC;YAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3B,QAAQ,GAAW,IAAI,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,QAAQ,GAAG,IAAI,MAAM,CAAS,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7C,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC5D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC;gBAC1F,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;oBAClC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC;gBACpF,CAAC;YACF,CAAC;YACD,IAAI,CAAC,KAAK,IAAG,QAAQ,CAAC,MAAM,CAAC;QAC9B,CAAC;QAEM,6CAAoB,GAA3B;YACC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;YAChB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,0BAA0B;YAC1B,OAAO,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC;gBAC/I,OAAO,EAAE,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,iBAAiB,CAAC,CAAC,CAAC;gBAC9C,MAAM,CAAC,MAAM,CAAC;YACf,CAAC;YACD,OAAO,IAAI,iBAAiB,CAAC;YAC7B,IAAI,KAAK,GAAG,OAAO,CAAC;YACpB,OAAM,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,EAAE,CAAC;gBACnE,OAAO,EAAE,CAAC;YACX,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;gBAChK,MAAM,CAAC,MAAM,CAAC;YACf,CAAC;YACD,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;YACxD,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAEM,uCAAc,GAArB,UAAsB,MAAa;YAClC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YACD,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;YACrD,IAAI,WAAW,GAAG,MAAM,CAAC;YACzB,OAAM,WAAW,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC;gBACxH,WAAW,EAAE,CAAC;YACf,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAEM,oCAAW,GAAlB;YACC,IAAI,GAAG,GAAU,CAAC,CAAC;YACnB,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE,CAAC;gBAC/F,GAAG,EAAE,CAAC;YACP,CAAC;YACD,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YACD,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;YAClD,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,UAAU,CAAC,EAAE,CAAC;gBACjG,GAAG,EAAE,CAAC;YACP,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACtC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YAC/B,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;QAED,sBAAW,yCAAa;iBAAxB;gBACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACnB,CAAC;;;WAAA;QACF,qBAAC;IAAD,CAAC,AA/FD,IA+FC;IAED,WAAY,UAAU;QACrB,+CAAU,CAAA;QACV,2CAAQ,CAAA;IACT,CAAC,EAHW,kBAAU,KAAV,kBAAU,QAGrB;IAHD,IAAY,UAAU,GAAV,kBAGX,CAAA;IAMD;QAOC,gBAAmB,QAAwB,EAAE,QAAqB,EAAE,IAAmC;YAPxG,iBAoDC;YA7CoE,oBAAmC,GAAnC,OAAkB,UAAU,CAAC,MAAM;YACtG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAW;oBACpC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAC,IAAW;oBACpC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACvB,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAEO,6BAAY,GAApB,UAAqB,IAAW;YAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,OAAM,IAAI,EAAE,CAAC;gBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;oBAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnC,MAAM,CAAC;oBACR,CAAC;gBACF,CAAC;gBACD,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC7D,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC;gBACR,CAAC;gBACD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;gBAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;QACF,CAAC;QAEO,2BAAU,GAAlB,UAAmB,IAAW;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,OAAM,IAAI,EAAE,CAAC;gBACZ,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBACpC,EAAE,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;oBAClB,MAAM,CAAC;gBACR,CAAC;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAChC,CAAC;QACF,CAAC;QACF,aAAC;IAAD,CAAC,AApDD,IAoDC;IApDY,cAAM,SAoDlB,CAAA;IAED;QAIC,gBAAmB,QAAwB;YAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAEM,sBAAK,GAAZ,UAAa,GAAK;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAE/B,IAAI,MAAM,GAAY;gBACrB,aAAa;gBACb,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,QAAQ,EAAE;gBAC1C,UAAU;gBACV,IAAI;gBACJ,MAAM;aACN,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAC9C,CAAC;QACF,aAAC;IAAD,CAAC,AApBD,IAoBC;IApBY,cAAM,SAoBlB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport stream = require('stream');\n\nvar DefaultSize:number = 8192;\nvar ContentLength:string = 'Content-Length: ';\nvar ContentLengthSize:number = Buffer.byteLength(ContentLength, 'utf8');\nvar Blank:number = new Buffer(' ', 'utf8')[0];\nvar BackslashR:number = new Buffer('\\r', 'utf8')[0];\nvar BackslashN:number = new Buffer('\\n', 'utf8')[0];\n\nclass ProtocolBuffer {\n\n\n\tprivate index:number;\n\tprivate buffer:Buffer;\n\n\tconstructor() {\n\t\tthis.index = 0;\n\t\tthis.buffer = new Buffer(DefaultSize);\n\t}\n\n\tpublic append(data:string | Buffer):void {\n\t\tvar toAppend:Buffer = null;\n\t\tif (Buffer.isBuffer(data)) {\n\t\t\ttoAppend = <Buffer>data;\n\t\t} else {\n\t\t\ttoAppend = new Buffer(<string>data, 'utf8');\n\t\t}\n\t\tif (this.buffer.length - this.index >= toAppend.length) {\n\t\t\ttoAppend.copy(this.buffer, this.index, 0, toAppend.length);\n\t\t} else {\n\t\t\tvar newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\n\t\t\tif (this.index === 0) {\n\t\t\t\tthis.buffer = new Buffer(newSize);\n\t\t\t\ttoAppend.copy(this.buffer, 0, 0, toAppend.length);\n\t\t\t} else {\n\t\t\t\tthis.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\n\t\t\t}\n\t\t}\n\t\tthis.index+= toAppend.length;\n\t}\n\n\tpublic tryReadContentLength():number {\n\t\tvar result = -1;\n\t\tvar current = 0;\n\t\t// we are utf8 encoding...\n\t\twhile (current < this.index && (this.buffer[current] === Blank || this.buffer[current] === BackslashR || this.buffer[current] === BackslashN)) {\n\t\t\tcurrent++;\n\t\t}\n\t\tif (this.index < current + ContentLengthSize) {\n\t\t\treturn result;\n\t\t}\n\t\tcurrent += ContentLengthSize;\n\t\tvar start = current;\n\t\twhile(current < this.index && this.buffer[current] !== BackslashR) {\n\t\t\tcurrent++;\n\t\t}\n\t\tif (current + 3 >= this.index || this.buffer[current + 1] !== BackslashN || this.buffer[current + 2] !== BackslashR || this.buffer[current + 3] !== BackslashN) {\n\t\t\treturn result;\n\t\t}\n\t\tvar data = this.buffer.toString('utf8', start, current);\n\t\tresult = parseInt(data);\n\t\tthis.buffer = this.buffer.slice(current + 4);\n\t\tthis.index = this.index - (current + 4);\n\t\treturn result;\n\t}\n\n\tpublic tryReadContent(length:number):string {\n\t\tif (this.index < length) {\n\t\t\treturn null;\n\t\t}\n\t\tvar result = this.buffer.toString('utf8', 0, length);\n\t\tvar sourceStart = length;\n\t\twhile(sourceStart < this.index && (this.buffer[sourceStart] === BackslashR || this.buffer[sourceStart] === BackslashN)) {\n\t\t\tsourceStart++;\n\t\t}\n\t\tthis.buffer.copy(this.buffer, 0, sourceStart);\n\t\tthis.index = this.index - sourceStart;\n\t\treturn result;\n\t}\n\n\tpublic tryReadLine():string {\n\t\tvar end:number = 0;\n\t\twhile (end < this.index && this.buffer[end] !== BackslashR && this.buffer[end] !== BackslashN) {\n\t\t\tend++;\n\t\t}\n\t\tif (end >= this.index) {\n\t\t\treturn null;\n\t\t}\n\t\tvar result = this.buffer.toString('utf8', 0, end);\n\t\twhile (end < this.index && (this.buffer[end] === BackslashR || this.buffer[end] === BackslashN)) {\n\t\t\tend++;\n\t\t}\n\t\tif (this.index === end) {\n\t\t\tthis.index = 0;\n\t\t} else {\n\t\t\tthis.buffer.copy(this.buffer, 0, end);\n\t\t\tthis.index = this.index - end;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic get numberOfBytes():number {\n\t\treturn this.index;\n\t}\n}\n\nexport enum ReaderType {\n\tLength = 0,\n\tLine = 1\n}\n\nexport interface ICallback<T> {\n\t(data:T):void;\n}\n\nexport class Reader<T> {\n\n\tprivate readable:stream.Readable;\n\tprivate callback:ICallback<T>;\n\tprivate buffer:ProtocolBuffer;\n\tprivate nextMessageLength:number;\n\n\tpublic constructor(readable:stream.Readable, callback:ICallback<T>, type:ReaderType = ReaderType.Length) {\n\t\tthis.readable = readable;\n\t\tthis.buffer = new ProtocolBuffer();\n\t\tthis.callback = callback;\n\t\tthis.nextMessageLength = -1;\n\t\tif (type === ReaderType.Length) {\n\t\t\tthis.readable.on('data', (data:Buffer) => {\n\t\t\t\tthis.onLengthData(data);\n\t\t\t});\n\t\t} else if (type === ReaderType.Line) {\n\t\t\tthis.readable.on('data', (data:Buffer) => {\n\t\t\t\tthis.onLineData(data);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate onLengthData(data:Buffer):void {\n\t\tthis.buffer.append(data);\n\t\twhile(true) {\n\t\t\tif (this.nextMessageLength === -1) {\n\t\t\t\tthis.nextMessageLength = this.buffer.tryReadContentLength();\n\t\t\t\tif (this.nextMessageLength === -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar msg = this.buffer.tryReadContent(this.nextMessageLength);\n\t\t\tif (msg === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.nextMessageLength = -1;\n\t\t\tvar json = JSON.parse(msg);\n\t\t\tthis.callback(json);\n\t\t}\n\t}\n\n\tprivate onLineData(data:Buffer):void {\n\t\tthis.buffer.append(data);\n\t\twhile(true) {\n\t\t\tvar msg = this.buffer.tryReadLine();\n\t\t\tif (msg === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.callback(JSON.parse(msg));\n\t\t}\n\t}\n}\n\nexport class Writer<T> {\n\n\tprivate writable:stream.Writable;\n\n\tpublic constructor(writable:stream.Writable) {\n\t\tthis.writable = writable;\n\t}\n\n\tpublic write(msg:T):void {\n\t\tvar json = JSON.stringify(msg);\n\n\t\tvar buffer:string[] = [\n\t\t\tContentLength,\n\t\t\tBuffer.byteLength(json, 'utf8').toString(),\n\t\t\t'\\r\\n\\r\\n',\n\t\t\tjson,\n\t\t\t'\\r\\n'\n\t\t];\n\t\tthis.writable.write(buffer.join(''), 'utf8');\n\t}\n}"]}