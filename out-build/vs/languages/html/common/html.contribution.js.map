{"version":3,"sources":["vs/languages/html/common/html.contribution.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb,6BAAa,CAAC,kBAAkB,CAAC;QAChC,EAAE,EAAE,MAAM;QACV,UAAU,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;QACnF,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;QACzC,SAAS,EAAE,CAAC,WAAW,EAAE,cAAc,EAAE,eAAe,EAAE,kBAAkB,CAAC;QAC7E,QAAQ,EAAE,+BAA+B;QACzC,QAAQ,EAAE,UAAU;KACpB,CAAC,CAAC;IAEH,IAAI,qBAAqB,GAAiD,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,qBAAqB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAE/I,qBAAqB,CAAC,qBAAqB,CAAC;QAC3C,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAoB,CAAC;QACrE,YAAY,EAAE;YACb,4BAA4B,EAAE;gBAC7B,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,GAAG;gBACd,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuB,EAAE,IAAsD,CAAC;aAC5G;YACD,yBAAyB,EAAE;gBAC1B,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAC1B,SAAS,EAAE,IAAI;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAmG,CAAC;aACtJ;YACD,6BAA6B,EAAE;gBAC9B,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,KAAK;gBAChB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAoC,CAAC;aAC3F;YACD,8BAA8B,EAAE;gBAC/B,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,IAAI;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyB,EAAE,IAA4H,CAAC;aACpL;YACD,iCAAiC,EAAE;gBAClC,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAC1B,SAAS,EAAE,IAAI;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA4B,EAAE,IAAuF,CAAC;aAClJ;YACD,8BAA8B,EAAE;gBAC/B,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,KAAK;gBAChB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyB,EAAE,IAA0C,CAAC;aAClG;YACD,4BAA4B,EAAE;gBAC7B,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,KAAK;gBAChB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAuB,EAAE,IAAqB,CAAC;aAC3E;YACD,yBAAyB,EAAE;gBAC1B,MAAM,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;gBAC1B,SAAS,EAAE,IAAI;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAyH,CAAC;aAC5K;SACD;KACD,CAAC,CAAC","file":"vs/languages/html/common/html.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\nimport nls = require('vs/nls');\nimport platform = require('vs/platform/platform');\nimport ConfigurationRegistry = require('vs/platform/configuration/common/configurationRegistry');\n\nModesRegistry.registerCompatMode({\n\tid: 'html',\n\textensions: ['.html', '.htm', '.shtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\n\taliases: ['HTML', 'htm', 'html', 'xhtml'],\n\tmimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\n\tmoduleId: 'vs/languages/html/common/html',\n\tctorName: 'HTMLMode'\n});\n\nvar configurationRegistry = <ConfigurationRegistry.IConfigurationRegistry>platform.Registry.as(ConfigurationRegistry.Extensions.Configuration);\n\nconfigurationRegistry.registerConfiguration({\n\t'id': 'html',\n\t'order': 20,\n\t'type': 'object',\n\t'title': nls.localize('htmlConfigurationTitle', \"HTML configuration\"),\n\t'properties': {\n\t\t'html.format.wrapLineLength': {\n\t\t\t'type': 'integer',\n\t\t\t'default': 120,\n\t\t\t'description': nls.localize('format.wrapLineLength', \"Maximum amount of characters per line (0 = disable).\"),\n\t\t},\n\t\t'html.format.unformatted': {\n\t\t\t'type': ['string', 'null'],\n\t\t\t'default': null,\n\t\t\t'description': nls.localize('format.unformatted', \"List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all inline tags.\"),\n\t\t},\n\t\t'html.format.indentInnerHtml': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('format.indentInnerHtml', \"Indent <head> and <body> sections.\"),\n\t\t},\n\t\t'html.format.preserveNewLines': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': true,\n\t\t\t'description': nls.localize('format.preserveNewLines', \"Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.\"),\n\t\t},\n\t\t'html.format.maxPreserveNewLines': {\n\t\t\t'type': ['number', 'null'],\n\t\t\t'default': null,\n\t\t\t'description': nls.localize('format.maxPreserveNewLines', \"Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.\"),\n\t\t},\n\t\t'html.format.indentHandlebars': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('format.indentHandlebars', \"Format and indent {{#foo}} and {{/foo}}.\"),\n\t\t},\n\t\t'html.format.endWithNewline': {\n\t\t\t'type': 'boolean',\n\t\t\t'default': false,\n\t\t\t'description': nls.localize('format.endWithNewline', \"End with a newline.\"),\n\t\t},\n\t\t'html.format.extraLiners': {\n\t\t\t'type': ['string', 'null'],\n\t\t\t'default': null,\n\t\t\t'description': nls.localize('format.extraLiners', \"List of tags, comma separated, that should have an extra newline before them. 'null' defaults to \\\"head, body, /html\\\".\"),\n\t\t},\n\t}\n});\n"]}