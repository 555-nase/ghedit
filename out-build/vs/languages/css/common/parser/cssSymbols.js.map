{"version":3,"file":"vs/languages/css/common/parser/cssSymbols.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/common/parser/cssSymbols.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nodes = require('./cssNodes');\nimport arrays = require('vs/base/common/arrays');\n\nexport class Scope {\n\n\tpublic parent:Scope;\n\tpublic children:Scope[];\n\n\tpublic offset:number;\n\tpublic length:number;\n\n\tprivate symbols:Symbol[];\n\n\tconstructor(offset:number, length:number) {\n\t\tthis.offset = offset;\n\t\tthis.length = length;\n\t\tthis.symbols = [];\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\t}\n\n\tpublic addChild(scope:Scope):void {\n\t\tthis.children.push(scope);\n\t\tscope.setParent(this);\n\t}\n\n\tpublic setParent(scope:Scope):void {\n\t\tthis.parent = scope;\n\t}\n\n\tpublic findScope(offset:number, length:number=0):Scope {\n\t\tif (this.offset <= offset && this.offset + this.length > offset + length || this.offset === offset && this.length === length) {\n\t\t\treturn this.findInScope(offset, length);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate findInScope(offset: number, length: number = 0): Scope {\n\t\t// find the first scope child that has an offset larger than offset + length\n\t\tvar end = offset + length;\n\t\tvar idx = arrays.findFirst(this.children, s => s.offset > end);\n\t\tif (idx === 0) {\n\t\t\t// all scopes have offsets larger than our end\n\t\t\treturn this;\n\t\t}\n\n\t\tvar res = this.children[idx-1];\n\t\tif (res.offset <= offset && res.offset + res.length >= offset + length) {\n\t\t\treturn res.findInScope(offset, length);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic addSymbol(symbol:Symbol):void {\n\t\tthis.symbols.push(symbol);\n\t}\n\n\tpublic getSymbol(name:string, type: nodes.ReferenceType):Symbol {\n\t\tfor (var index = 0; index < this.symbols.length; index++) {\n\t\t\tvar symbol = this.symbols[index];\n\t\t\tif (symbol.name === name && symbol.type === type) {\n\t\t\t\treturn symbol;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getSymbols():Symbol[] {\n\t\treturn this.symbols;\n\t}\n}\n\nexport class GlobalScope extends Scope {\n\n\tconstructor() {\n\t\tsuper(0, Number.MAX_VALUE);\n\t}\n}\n\n\n\nexport class Symbol {\n\n\tpublic name:string;\n\tpublic type:nodes.ReferenceType;\n\tpublic node:nodes.Node;\n\n\tconstructor(name:string, node:nodes.Node, type: nodes.ReferenceType) {\n\t\tthis.name = name;\n\t\tthis.node = node;\n\t\tthis.type = type;\n\t}\n}\n\nexport class ScopeBuilder implements nodes.IVisitor {\n\n\tpublic scope:Scope;\n\n\tconstructor(scope:Scope) {\n\t\tthis.scope = scope;\n\t}\n\n\tprivate addSymbol(node:nodes.Node, name:string, type: nodes.ReferenceType) : void {\n\t\tif (node.offset !== -1) {\n\t\t\tvar current = this.scope.findScope(node.offset, node.length);\n\t\t\tcurrent.addSymbol(new Symbol(name, node, type));\n\t\t}\n\t}\n\n\tprivate addScope(node:nodes.Node) : Scope {\n\t\tif (node.offset !== -1) {\n\t\t\tvar current = this.scope.findScope(node.offset, node.length);\n\t\t\tif (current.offset !== node.offset || current.length !== node.length) { // scope already known?\n\t\t\t\tvar newScope = new Scope(node.offset, node.length);\n\t\t\t\tcurrent.addChild(newScope);\n\t\t\t\treturn newScope;\n\t\t\t}\n\t\t\treturn current;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate addSymbolToChildScope(scopeNode:nodes.Node, node:nodes.Node, name:string, type: nodes.ReferenceType): void {\n\t\tif (scopeNode && scopeNode.offset !== -1 ) {\n\t\t\tvar current = this.addScope(scopeNode); // create the scope or gets the existing one\n\t\t\tcurrent.addSymbol(new Symbol(name, node, type));\n\t\t}\n\t}\n\n\tpublic visitNode(node:nodes.Node):boolean {\n\t\tswitch (node.type) {\n\t\t\tcase nodes.NodeType.Keyframe:\n\t\t\t\tthis.addSymbol(node, (<nodes.Keyframe> node).getName(), nodes.ReferenceType.Keyframe);\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.VariableDeclaration:\n\t\t\t\tthis.addSymbol(node, (<nodes.VariableDeclaration> node).getName(), nodes.ReferenceType.Variable);\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.Ruleset:\n\t\t\t\treturn this.visitRuleSet(<nodes.RuleSet> node);\n\t\t\tcase nodes.NodeType.MixinDeclaration:\n\t\t\t\tthis.addSymbol(node, (<nodes.MixinDeclaration> node).getName(), nodes.ReferenceType.Mixin);\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.FunctionDeclaration:\n\t\t\t\tthis.addSymbol(node, (<nodes.FunctionDeclaration> node).getName(), nodes.ReferenceType.Function);\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.FunctionParameter: {\n\t\t\t\t// parameters are part of the body scope\n\t\t\t\tlet scopeNode = (<nodes.BodyDeclaration> node.getParent()).getDeclarations();\n\t\t\t\tif (scopeNode) {\n\t\t\t\t\tthis.addSymbolToChildScope(scopeNode, node, (<nodes.FunctionParameter> node).getName(), nodes.ReferenceType.Variable);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcase nodes.NodeType.Declarations:\n\t\t\t\tthis.addScope(node);\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.For:\n\t\t\tcase nodes.NodeType.Each: {\n\t\t\t\tvar forOrEachNode = <nodes.ForStatement | nodes.EachStatement> node;\n\t\t\t\tlet scopeNode = forOrEachNode.getDeclarations();\n\t\t\t\tif (scopeNode) {\n\t\t\t\t\tthis.addSymbolToChildScope(scopeNode, forOrEachNode.variable, forOrEachNode.variable.getName(), nodes.ReferenceType.Variable);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic visitRuleSet(node:nodes.RuleSet):boolean {\n\t\tvar current = this.scope.findScope(node.offset, node.length);\n\t\tnode.getSelectors().getChildren().forEach((node) => {\n\t\t\tif (node instanceof nodes.Selector) {\n\t\t\t\tif (node.getChildren().length === 1) { // only selectors with a single element can be extended\n\t\t\t\t\tcurrent.addSymbol(new Symbol(node.getChild(0).getText(), node, nodes.ReferenceType.Rule));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t}\n}\n\n\nexport class Symbols {\n\n\tprivate global:Scope;\n\n\tconstructor(node:nodes.Node) {\n\t\tthis.global = new GlobalScope();\n\t\tnode.accept(new ScopeBuilder(this.global));\n\t}\n\n\tpublic findSymbolsAtOffset(offset:number, referenceType: nodes.ReferenceType) : Symbol[] {\n\t\tvar scope = this.global.findScope(offset, 0);\n\t\tvar result : Symbol[] = [];\n\t\tvar names : { [name:string]: boolean } = {};\n\t\twhile (scope) {\n\t\t\tvar symbols = scope.getSymbols();\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tvar symbol = symbols[i];\n\t\t\t\tif (symbol.node.offset <= offset && symbol.type === referenceType && !names[symbol.name]) {\n\t\t\t\t\tresult.push(symbol);\n\t\t\t\t\tnames[symbol.name] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tscope = scope.parent;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate internalFindSymbol(node:nodes.Node, referenceTypes:nodes.ReferenceType[]): Symbol {\n\t\tvar scopeNode = node;\n\t\tif (node.parent instanceof nodes.FunctionParameter && node.parent.getParent() instanceof nodes.BodyDeclaration) {\n\t\t\tscopeNode = (<nodes.BodyDeclaration> node.parent.getParent()).getDeclarations();\n\t\t}\n\t\tif (node.parent instanceof nodes.FunctionArgument && node.parent.getParent() instanceof nodes.Function) {\n\t\t\tvar funcId = (<nodes.Function> node.parent.getParent()).getIdentifier();\n\t\t\tif (funcId) {\n\t\t\t\tvar functionSymbol = this.internalFindSymbol(funcId, [nodes.ReferenceType.Function]);\n\t\t\t\tif (functionSymbol) {\n\t\t\t\t\tscopeNode = (<nodes.FunctionDeclaration> functionSymbol.node).getDeclarations();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!scopeNode) {\n\t\t\treturn null;\n\t\t}\n\t\tvar name = node.getText();\n\t\tvar scope = this.global.findScope(scopeNode.offset, scopeNode.length);\n\t\twhile (scope) {\n\t\t\tfor (var index = 0; index < referenceTypes.length; index++) {\n\t\t\t\tvar type = referenceTypes[index];\n\t\t\t\tvar symbol = scope.getSymbol(name, type);\n\t\t\t\tif (symbol) {\n\t\t\t\t\treturn symbol;\n\t\t\t\t}\n\t\t\t}\n\t\t\tscope = scope.parent;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate evaluateReferenceTypes(node: nodes.Node) : nodes.ReferenceType[] {\n\t\tif (node instanceof nodes.Identifier) {\n\t\t\tvar referenceTypes = (<nodes.Identifier> node).referenceTypes;\n\t\t\tif (referenceTypes) {\n\t\t\t\treturn referenceTypes;\n\t\t\t} else {\n\t\t\t\t// are a reference to a keyframe?\n\t\t\t\tvar decl = nodes.getParentDeclaration(node);\n\t\t\t\tif (decl) {\n\t\t\t\t\tvar propertyName = decl.getNonPrefixedPropertyName();\n\t\t\t\t\tif ((propertyName === 'animation' || propertyName === 'animation-name')\n\t\t\t\t\t\t&& decl.getValue() && decl.getValue().offset === node.offset) {\n\t\t\t\t\t\treturn [ nodes.ReferenceType.Keyframe ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (node instanceof nodes.Variable) {\n\t\t\treturn [ nodes.ReferenceType.Variable ];\n\t\t}\n\t\tvar selector = node.findParent(nodes.NodeType.Selector);\n\t\tif (selector) {\n\t\t\treturn [ nodes.ReferenceType.Rule ];\n\t\t}\n\t\tvar extendsRef = <nodes.ExtendsReference> node.findParent(nodes.NodeType.ExtendsReference);\n\t\tif (extendsRef) {\n\t\t\treturn [ nodes.ReferenceType.Rule ];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic findSymbolFromNode(node: nodes.Node):Symbol {\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\twhile (node.type === nodes.NodeType.Interpolation) {\n\t\t\tnode = node.getParent();\n\t\t}\n\n\t\tvar referenceTypes = this.evaluateReferenceTypes(node);\n\t\tif (referenceTypes) {\n\t\t\treturn this.internalFindSymbol(node, referenceTypes);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic matchesSymbol(node: nodes.Node, symbol: Symbol):boolean {\n\t\tif (!node) {\n\t\t\treturn null;\n\t\t}\n\t\twhile (node.type === nodes.NodeType.Interpolation) {\n\t\t\tnode = node.getParent();\n\t\t}\n\t\tif (symbol.name.length !== node.length || symbol.name !== node.getText()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar referenceTypes = this.evaluateReferenceTypes(node);\n\t\tif (!referenceTypes || referenceTypes.indexOf(symbol.type) === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar nodeSymbol = this.internalFindSymbol(node, referenceTypes);\n\t\treturn nodeSymbol === symbol;\n\t}\n\n\n\tpublic findSymbol(name:string, type: nodes.ReferenceType, offset:number):Symbol {\n\t\tvar scope = this.global.findScope(offset);\n\t\twhile(scope) {\n\t\t\tvar symbol = scope.getSymbol(name, type);\n\t\t\tif (symbol) {\n\t\t\t\treturn symbol;\n\t\t\t}\n\t\t\tscope = scope.parent;\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}