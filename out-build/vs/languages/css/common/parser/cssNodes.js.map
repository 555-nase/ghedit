{"version":3,"file":"vs/languages/css/common/parser/cssNodes.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/common/parser/cssNodes.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport types = require('vs/base/common/types');\nimport _level = require('vs/languages/css/common/level');\n\n/// <summary>\n/// Nodes for the css 2.1 specification. See for reference:\n/// http://www.w3.org/TR/CSS21/grammar.html#grammar\n/// </summary>\n\nexport enum NodeType {\n\tUndefined,\n\tIdentifier,\n\tStylesheet,\n\tRuleset,\n\tSelector,\n\tSimpleSelector,\n\tSelectorInterpolation,\n\tSelectorCombinator,\n\tSelectorCombinatorParent,\n\tSelectorCombinatorSibling,\n\tSelectorCombinatorAllSiblings,\n\tPage,\n\tPageBoxMarginBox,\n\tClassSelector,\n\tIdentifierSelector,\n\tElementNameSelector,\n\tPseudoSelector,\n\tAttributeSelector,\n\tDeclaration,\n\tDeclarations,\n\tProperty,\n\tExpression,\n\tBinaryExpression,\n\tTerm,\n\tOperator,\n\tValue,\n\tStringLiteral,\n\tURILiteral,\n\tEscapedValue,\n\tFunction,\n\tNumericValue,\n\tHexColorValue,\n\tMixinDeclaration,\n\tMixinReference,\n\tVariableName,\n\tVariableDeclaration,\n\tPrio,\n\tInterpolation,\n\tNestedProperties,\n\tExtendsReference,\n\tSelectorPlaceholder,\n\tDebug,\n\tIf,\n\tElse,\n\tFor,\n\tEach,\n\tWhile,\n\tMixinContent,\n\tMedia,\n\tKeyframe,\n\tFontFace,\n\tImport,\n\tNamespace,\n\tInvocation,\n\tFunctionDeclaration,\n\tReturnStatement,\n\tMediaQuery,\n\tFunctionParameter,\n\tFunctionArgument,\n\tKeyframeSelector,\n\tMSViewPort,\n\tDocument\n}\n\nexport enum ReferenceType {\n\tMixin,\n\tRule,\n\tVariable,\n\tFunction,\n\tKeyframe,\n\tUnknown\n}\n\n\n\nexport function getNodeAtOffset(node:Node, offset:number):Node {\n\n\tvar candidate:Node = null;\n\tif (!node || offset < node.offset || offset > node.offset + node.length ) {\n\t\treturn null;\n\t}\n\n\t// Find the shortest node at the position\n\tnode.accept((node) => {\n\t\tif (node.offset === -1 && node.length === -1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (node.offset <= offset && node.offset + node.length >= offset) {\n\t\t\tif(!candidate) {\n\t\t\t\tcandidate = node;\n\t\t\t} else if(node.length <= candidate.length) {\n\t\t\t\tcandidate = node;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\treturn candidate;\n}\n\nexport function getNodePath(node:Node, offset:number):Node[] {\n\n\tvar candidate:Node = getNodeAtOffset(node, offset),\n\t\tpath:Node[] = [];\n\n\twhile(candidate) {\n\t\tpath.unshift(candidate);\n\t\tcandidate = candidate.parent;\n\t}\n\n\treturn path;\n}\n\nexport function getParentDeclaration(node:Node) : Declaration {\n\tvar decl = <Declaration> node.findParent(NodeType.Declaration);\n\tif (decl && decl.getValue() && decl.getValue().encloses(node)) {\n\t\treturn decl;\n\t}\n\treturn null;\n}\n\nexport interface ITextProvider {\n\t(offset: number, length: number) : string;\n}\n\n\nexport class Node {\n\n\tpublic parent:Node;\n\n\tpublic offset:number;\n\tpublic length:number;\n\n\tpublic options:{[name:string]:any;};\n\n\tpublic textProvider: ITextProvider; // only set on the root node\n\n\tprivate children:Node[];\n\tprivate issues:IMarker[];\n\n\tprivate nodeType: NodeType;\n\n\tconstructor(offset:number=-1, len:number=-1, nodeType?: NodeType) {\n\t\tthis.parent = null;\n\t\tthis.offset = offset;\n\t\tthis.length = len;\n\t\tif (nodeType) {\n\t\t\tthis.nodeType = nodeType;\n\t\t}\n\t}\n\n\tpublic set type(type:NodeType) {\n\t\tthis.nodeType = type;\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn this.nodeType || NodeType.Undefined;\n\t}\n\n\tpublic getTextProvider(): ITextProvider {\n\t\tvar node: Node = this;\n\t\twhile (node && !node.textProvider) {\n\t\t\tnode = node.parent;\n\t\t}\n\t\tif (node) {\n\t\t\treturn node.textProvider;\n\t\t}\n\t\treturn () => { return 'unknown'; };\n\t}\n\n\tpublic getText():string {\n\t\treturn this.getTextProvider()(this.offset, this.length);\n\t}\n\n\tpublic matches(str:string) : boolean {\n\t\treturn this.length === str.length && this.getTextProvider()(this.offset, this.length) === str;\n\t}\n\n\tpublic startsWith(str: string) : boolean {\n\t\treturn this.length >= str.length && this.getTextProvider()(this.offset, str.length) === str;\n\t}\n\n\tpublic endsWith(str: string) : boolean {\n\t\treturn this.length >= str.length && this.getTextProvider()(this.offset + this.length - str.length, str.length) === str;\n\t}\n\n\tpublic accept(visitor: IVisitorFunction):void;\n\tpublic accept(visitor: IVisitor):void;\n\tpublic accept(visitor: any):void {\n\n\t\tif(!types.isFunction(visitor)) {\n\t\t\tvisitor = visitor.visitNode.bind(visitor);\n\t\t}\n\n\t\tif(visitor(this) && this.children) {\n\t\t\tthis.children.forEach((child) => {\n\t\t\t\tchild.accept(visitor);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic adoptChild(node:Node, index: number = -1):Node {\n\t\tif (node.parent && node.parent.children) {\n\t\t\tvar idx = node.parent.children.indexOf(node);\n\t\t\tif(idx >= 0) {\n\t\t\t\tnode.parent.children.splice(idx, 1);\n\t\t\t}\n\t\t}\n\t\tnode.parent = this;\n\t\tvar children = this.children;\n\t\tif (!children) {\n\t\t\tchildren = this.children = [];\n\t\t}\n\t\tif (index !== -1) {\n\t\t\tchildren.splice(idx, 0, node);\n\t\t} else {\n\t\t\tchildren.push(node);\n\t\t}\n\t\treturn node;\n\t}\n\n\tpublic attachTo(parent:Node, index:number=-1):Node {\n\t\tif (parent) {\n\t\t\tparent.adoptChild(this, index);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic collectIssues(results:any[]) : void {\n\t\tif (this.issues) {\n\t\t\tresults.push.apply(results, this.issues);\n\t\t}\n\t}\n\n\tpublic addIssue(issue: IMarker) : void {\n\t\tif (!this.issues) {\n\t\t\tthis.issues = [];\n\t\t}\n\t\tthis.issues.push(issue);\n\t}\n\n\tpublic hasIssue(rule: IRule) : boolean {\n\t\treturn this.issues && this.issues.some(i => i.getRule() === rule);\n\t}\n\n\tpublic isErroneous():boolean {\n\t\treturn this.issues && this.issues.length > 0;\n\t}\n\n\tpublic setNode(field:string, node:Node, index:number=-1):boolean {\n\t\tif(node) {\n\t\t\tnode.attachTo(this, index);\n\t\t\tthis[field] = node;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic addChild(node:Node):boolean {\n\t\tif(node) {\n\t\t\tif (!this.children) {\n\t\t\t\tthis.children = [];\n\t\t\t}\n\t\t\tnode.attachTo(this);\n\t\t\tthis.updateOffsetAndLength(node);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate updateOffsetAndLength(node:Node):void {\n\t\tif (node.offset < this.offset || this.offset === -1) {\n\t\t\tthis.offset = node.offset;\n\t\t}\n\t\tif ((node.offset + node.length > this.offset + this.length) || this.length === -1)  {\n\t\t\tthis.length = node.offset + node.length - this.offset;\n\t\t}\n\t}\n\n\tpublic hasChildren():boolean {\n\t\treturn this.children && this.children.length > 0;\n\t}\n\n\tpublic getChildren():Node[] {\n\t\treturn this.children ? this.children.slice(0) : [];\n\t}\n\n\tpublic getChild(index:number):Node {\n\t\tif (this.children && index < this.children.length) {\n\t\t\treturn this.children[index];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic addChildren(nodes:Node[]):void {\n\t\tnodes.forEach((node) => this.addChild(node));\n\t}\n\n\tpublic findFirstChildBeforeOffset(offset:number): Node {\n\t\tif (this.children) {\n\t\t\tvar current:Node = null;\n\t\t\tfor (var i= this.children.length - 1; i >= 0; i--) {\n\t\t\t\t// iterate until we find a child that has a start offset smaller than the input offset\n\t\t\t\tcurrent= this.children[i];\n\t\t\t\tif (current.offset <= offset) {\n\t\t\t\t\treturn current;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic findChildAtOffset(offset:number, goDeep: boolean): Node {\n\t\tvar current:Node = this.findFirstChildBeforeOffset(offset);\n\t\tif (current && current.offset + current.length >= offset) {\n\t\t\tif (goDeep) {\n\t\t\t\treturn current.findChildAtOffset(offset, true) || current;\n\t\t\t}\n\t\t\treturn current;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic encloses(candidate:Node):boolean {\n\t\treturn this.offset <= candidate.offset && this.offset + this.length >= candidate.offset + candidate.length;\n\t}\n\n\tpublic getParent():Node {\n\t\tvar result = this.parent;\n\t\twhile(result instanceof Nodelist) {\n\t\t\tresult = result.parent;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic findParent(type:NodeType):Node {\n\t\tvar result: Node = this;\n\t\twhile (result && result.type !== type) {\n\t\t\tresult = result.parent;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic setData(key:string, value:any):void {\n\t\tif(!this.options) {\n\t\t\tthis.options = {};\n\t\t}\n\t\tthis.options[key] = value;\n\t}\n\n\tpublic getData(key:string):any {\n\t\tif(!this.options || !this.options.hasOwnProperty(key)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.options[key];\n\t}\n}\n\nexport class Nodelist extends Node {\n\n\tconstructor(parent:Node, index:number = -1) {\n\t\tsuper(-1, -1);\n\t\tthis.attachTo(parent, index);\n\t\tthis.offset = -1;\n\t\tthis.length = -1;\n\t}\n}\n\n\nexport class Identifier extends Node {\n\n\tpublic referenceTypes: ReferenceType[];\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Identifier;\n\t}\n\n\tpublic containsInterpolation() : boolean {\n\t\treturn this.hasChildren();\n\t}\n}\n\nexport class Stylesheet extends Node {\n\n\tprivate name:string;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Stylesheet;\n\t}\n\n\tpublic setName(value:string):void {\n\t\tthis.name = value;\n\t}\n\n}\n\nexport class Declarations extends Node {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Declarations;\n\t}\n}\n\nexport class BodyDeclaration extends Node {\n\n\tprivate declarations: Declarations;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic getDeclarations():Declarations {\n\t\treturn this.declarations;\n\t}\n\n\tpublic setDeclarations(decls:Declarations):boolean {\n\t\treturn this.setNode('declarations', decls);\n\t}\n\n}\n\nexport class RuleSet extends BodyDeclaration {\n\n\tprivate selectors:Nodelist;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Ruleset;\n\t}\n\n\tpublic getSelectors():Nodelist {\n\t\tif (!this.selectors) {\n\t\t\tthis.selectors = new Nodelist(this);\n\t\t}\n\t\treturn this.selectors;\n\t}\n\n\tpublic isNested():boolean {\n\t\treturn this.parent && this.parent.findParent(NodeType.Ruleset) !== null;\n\t}\n}\n\nexport class Selector extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Selector;\n\t}\n\n}\n\nexport class SimpleSelector extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.SimpleSelector;\n\t}\n}\n\nexport class Declaration extends Node {\n\n\tprivate property:Property;\n\tprivate value:Expression;\n\tprivate nestedProprties:NestedProperties;\n\n\t// positions for code assist\n\tpublic colonPosition:number;\n\tpublic semicolonPosition:number; // semicolon following the declaration\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Declaration;\n\t}\n\n\tpublic setProperty(node:Property):boolean {\n\t\treturn this.setNode('property', node);\n\t}\n\n\tpublic getProperty():Property {\n\t\treturn this.property;\n\t}\n\n\tpublic getFullPropertyName(): string {\n\t\tvar propertyName = this.property ? this.property.getName() : 'unknown';\n\t\tif (this.parent instanceof Declarations && this.parent.getParent() instanceof NestedProperties) {\n\t\t\tvar parentDecl = this.parent.getParent().getParent();\n\t\t\tif (parentDecl instanceof Declaration) {\n\t\t\t\treturn (<Declaration> parentDecl).getFullPropertyName() + propertyName;\n\t\t\t}\n\t\t}\n\t\treturn propertyName;\n\t}\n\n\tpublic getNonPrefixedPropertyName() : string {\n\t\tvar propertyName = this.getFullPropertyName();\n\t\tif (propertyName && propertyName.charAt(0) === '-') {\n\t\t\tvar vendorPrefixEnd = propertyName.indexOf('-', 1);\n\t\t\tif (vendorPrefixEnd !== -1) {\n\t\t\t\treturn propertyName.substring(vendorPrefixEnd + 1);\n\t\t\t}\n\t\t}\n\t\treturn propertyName;\n\t}\n\n\tpublic setValue(value:Expression):boolean {\n\t\treturn this.setNode('value', value);\n\t}\n\n\tpublic getValue():Expression {\n\t\treturn this.value;\n\t}\n\n\tpublic setNestedProperties(value:NestedProperties):boolean {\n\t\treturn this.setNode('nestedProprties', value);\n\t}\n\n\tpublic getNestedProperties():NestedProperties {\n\t\treturn this.nestedProprties;\n\t}\n}\n\nexport class Property extends Node {\n\n\tprivate identifier: Identifier;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Property;\n\t}\n\n\tpublic setIdentifier(value: Identifier): boolean {\n\t\treturn this.setNode('identifier', value);\n\t}\n\n\tpublic getIdentifier():Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName():string {\n\t\treturn this.getText();\n\t}\n}\n\nexport class Invocation extends Node {\n\n\tprivate arguments:Nodelist;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Invocation;\n\t}\n\n\tpublic getArguments():Nodelist {\n\t\tif(!this.arguments) {\n\t\t\tthis.arguments = new Nodelist(this);\n\t\t}\n\t\treturn this.arguments;\n\t}\n}\n\nexport class Function extends Invocation {\n\n\tprivate identifier:Identifier;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Function;\n\t}\n\n\tpublic setIdentifier(node:Identifier):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n}\n\nexport class FunctionParameter extends Node {\n\n\tprivate identifier:Node;\n\tprivate defaultValue:Node;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.FunctionParameter;\n\t}\n\n\tpublic setIdentifier(node:Node):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Node {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n\tpublic setDefaultValue(node: Node):boolean {\n\t\treturn this.setNode('defaultValue', node, 0);\n\t}\n\n\tpublic getDefaultValue(): Node {\n\t\treturn this.defaultValue;\n\t}\n}\n\nexport class FunctionArgument extends Node {\n\n\tprivate identifier:Node;\n\tprivate value:Node;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.FunctionArgument;\n\t}\n\n\tpublic setIdentifier(node:Node):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Node {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n\tpublic setValue(node: Node):boolean {\n\t\treturn this.setNode('value', node, 0);\n\t}\n\n\tpublic getValue(): Node {\n\t\treturn this.value;\n\t}\n}\n\nexport class IfStatement extends BodyDeclaration {\n\tpublic expression:Expression;\n\tpublic elseClause: BodyDeclaration;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.If;\n\t}\n\n\tpublic setExpression(node:Expression):boolean {\n\t\treturn this.setNode('expression', node, 0);\n\t}\n\n\tpublic setElseClause(elseClause:BodyDeclaration):boolean {\n\t\treturn this.setNode('elseClause', elseClause);\n\t}\n}\n\nexport class ForStatement extends BodyDeclaration {\n\tpublic variable:Variable;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.For;\n\t}\n\n\tpublic setVariable(node:Variable):boolean {\n\t\treturn this.setNode('variable', node, 0);\n\t}\n}\n\nexport class EachStatement extends BodyDeclaration {\n\tpublic variable:Variable;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Each;\n\t}\n\n\tpublic setVariable(node:Variable):boolean {\n\t\treturn this.setNode('variable', node, 0);\n\t}\n}\n\nexport class WhileStatement extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.While;\n\t}\n}\n\nexport class ElseStatement extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Else;\n\t}\n}\n\nexport class FunctionDeclaration extends BodyDeclaration {\n\tprivate identifier:Identifier;\n\tprivate parameters: Nodelist;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.FunctionDeclaration;\n\t}\n\n\tpublic setIdentifier(node:Identifier):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n\tpublic getParameters():Nodelist {\n\t\tif(!this.parameters) {\n\t\t\tthis.parameters = new Nodelist(this);\n\t\t}\n\t\treturn this.parameters;\n\t}\n}\n\nexport class MSViewPort extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.MSViewPort;\n\t}\n}\n\nexport class FontFace extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.FontFace;\n\t}\n\n}\n\nexport class NestedProperties extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.NestedProperties;\n\t}\n}\n\nexport class Keyframe extends BodyDeclaration {\n\n\tprivate keyword: Node;\n\tprivate identifier:Identifier;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Keyframe;\n\t}\n\n\tpublic setKeyword(keyword:Node):boolean {\n\t\treturn this.setNode('keyword', keyword, 0);\n\t}\n\n\tpublic getKeyword(): Node {\n\t\treturn this.keyword;\n\t}\n\n\tpublic setIdentifier(node:Identifier):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n}\n\nexport class KeyframeSelector extends BodyDeclaration {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.KeyframeSelector;\n\t}\n}\n\nexport class Import extends Node {\n\n\tprivate medialist:Node;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Import;\n\t}\n\n\tpublic setMedialist(node:Node):boolean {\n\t\tif(node) {\n\t\t\tnode.attachTo(this);\n\t\t\tthis.medialist = node;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class Namespace extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Namespace;\n\t}\n\n}\n\nexport class Media extends BodyDeclaration {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Media;\n\t}\n}\n\nexport class Document extends BodyDeclaration {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Document;\n\t}\n}\n\nexport class Medialist extends Node {\n\tprivate mediums:Nodelist;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic getMediums():Nodelist {\n\t\tif (!this.mediums) {\n\t\t\tthis.mediums = new Nodelist(this);\n\t\t}\n\t\treturn this.mediums;\n\t}\n}\n\nexport class MediaQuery extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.MediaQuery;\n\t}\n}\n\nexport class Page extends BodyDeclaration {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Page;\n\t}\n\n}\n\nexport class PageBoxMarginBox extends BodyDeclaration {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.PageBoxMarginBox;\n\t}\n\n}\n\nexport class Expression extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Expression;\n\t}\n}\n\nexport class BinaryExpression extends Node {\n\n\tprivate left:Node;\n\tprivate right:Node;\n\tprivate operator:Node;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.BinaryExpression;\n\t}\n\n\tpublic setLeft(left:Node):boolean {\n\t\treturn this.setNode('left', left);\n\t}\n\n\tpublic getLeft():Node {\n\t\treturn this.left;\n\t}\n\n\tpublic setRight(right:Node):boolean {\n\t\treturn this.setNode('right', right);\n\t}\n\n\tpublic getRight():Node {\n\t\treturn this.right;\n\t}\n\n\tpublic setOperator(value:Node):boolean {\n\t\treturn this.setNode('operator', value);\n\t}\n\n\tpublic getOperator():Node {\n\t\treturn this.operator;\n\t}\n}\n\nexport class Term extends Node {\n\n\tprivate operator:Node;\n\tprivate expression:Node;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Term;\n\t}\n\n\tpublic setOperator(value:Node):boolean {\n\t\treturn this.setNode('operator', value);\n\t}\n\n\tpublic getOperator():Node {\n\t\treturn this.operator;\n\t}\n\n\tpublic setExpression(value:Node):boolean {\n\t\treturn this.setNode('expression', value);\n\t}\n\n\tpublic getExpression():Node {\n\t\treturn this.expression;\n\t}\n}\n\nexport class Operator extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Operator;\n\t}\n\n}\n\nexport class HexColorValue extends Node {\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.HexColorValue;\n\t}\n\n}\n\nexport class NumericValue extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.NumericValue;\n\t}\n\n\tpublic getValue() : { value: string; unit: string } {\n\t\tvar raw = this.getText();\n\t\tvar unitIdx = 0,\n\t\t\tcode:number,\n\t\t\t_dot = '.'.charCodeAt(0),\n\t\t\t_0 = '0'.charCodeAt(0),\n\t\t\t_9 = '9'.charCodeAt(0);\n\n\t\tfor (var i = 0, len = raw.length; i < len; i++) {\n\t\t\tcode = raw.charCodeAt(i);\n\t\t\tif(!(_0 <= code && code <= _9 || code === _dot)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tunitIdx += 1;\n\t\t}\n\t\treturn {\n\t\t\tvalue: raw.substring(0, unitIdx),\n\t\t\tunit: unitIdx < len ? raw.substring(unitIdx) : undefined\n\t\t};\n\t}\n}\n\nexport class VariableDeclaration extends Node {\n\n\tprivate variable:Variable;\n\tprivate value:Node;\n\n\tpublic colonPosition: number;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.VariableDeclaration;\n\t}\n\n\tpublic setVariable(node:Variable):boolean {\n\t\tif (node) {\n\t\t\tnode.attachTo(this);\n\t\t\tthis.variable = node;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getName():string {\n\t\treturn this.variable ? this.variable.getName() : '';\n\t}\n\n\tpublic setValue(node:Node):boolean {\n\t\tif (node) {\n\t\t\tnode.attachTo(this);\n\t\t\tthis.value = node;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\nexport class Interpolation extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.Interpolation;\n\t}\n}\n\nexport class Variable extends Node {\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.VariableName;\n\t}\n\n\tpublic getName():string {\n\t\treturn this.getText();\n\t}\n\n}\n\nexport class ExtendsReference extends Node {\n\tprivate selector:Selector;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.ExtendsReference;\n\t}\n\n\tpublic setSelector(node:Selector):boolean {\n\t\treturn this.setNode('selector', node, 0);\n\t}\n\n\tpublic getSelector(): Selector {\n\t\treturn this.selector;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.selector ? this.selector.getText() : '';\n\t}\n}\n\n\nexport class MixinReference extends Node {\n\tprivate identifier:Identifier;\n\tprivate arguments:Nodelist;\n\tprivate content: BodyDeclaration;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.MixinReference;\n\t}\n\n\tpublic setIdentifier(node:Identifier):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n\tpublic getArguments():Nodelist {\n\t\tif (!this.arguments) {\n\t\t\tthis.arguments = new Nodelist(this);\n\t\t}\n\t\treturn this.arguments;\n\t}\n\n\tpublic setContent(node:BodyDeclaration):boolean {\n\t\treturn this.setNode('content', node);\n\t}\n\n\tpublic getContent(): BodyDeclaration {\n\t\treturn this.content;\n\t}\n}\n\nexport class MixinDeclaration extends BodyDeclaration {\n\n\tprivate identifier:Identifier;\n\tprivate parameters:Nodelist;\n\tprivate guard:LessGuard;\n\n\tconstructor(offset:number, length:number) {\n\t\tsuper(offset, length);\n\t}\n\n\tpublic get type():NodeType {\n\t\treturn NodeType.MixinDeclaration;\n\t}\n\n\tpublic setIdentifier(node:Identifier):boolean {\n\t\treturn this.setNode('identifier', node, 0);\n\t}\n\n\tpublic getIdentifier(): Identifier {\n\t\treturn this.identifier;\n\t}\n\n\tpublic getName() : string {\n\t\treturn this.identifier ? this.identifier.getText() : '';\n\t}\n\n\tpublic getParameters():Nodelist {\n\t\tif (!this.parameters) {\n\t\t\tthis.parameters = new Nodelist(this);\n\t\t}\n\t\treturn this.parameters;\n\t}\n\n\tpublic setGuard(node:LessGuard):boolean {\n\t\tif(node) {\n\t\t\tnode.attachTo(this);\n\t\t\tthis.guard = node;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class LessGuard extends Node {\n\n\tpublic isNegated:boolean;\n\tprivate conditions:Nodelist;\n\n\tpublic getConditions():Nodelist {\n\t\tif(!this.conditions) {\n\t\t\tthis.conditions = new Nodelist(this);\n\t\t}\n\t\treturn this.conditions;\n\t}\n}\n\nexport class GuardCondition extends Node {\n\n\tpublic variable:Node;\n\tpublic isEquals:boolean;\n\tpublic isGreater:boolean;\n\tpublic isEqualsGreater:boolean;\n\tpublic isLess:boolean;\n\tpublic isEqualsLess:boolean;\n\n\tpublic setVariable(node:Node):boolean {\n\t\treturn this.setNode('variable', node);\n\t}\n}\n\nexport interface IRule {\n\tid: string;\n\tmessage: string;\n}\n\n\nexport interface IMarker {\n\tgetNode():Node;\n\tgetMessage():string;\n\tgetOffset(): number;\n\tgetLength(): number;\n\tgetRule():IRule;\n\tgetLevel():_level.Level;\n}\n\nexport class Marker implements IMarker {\n\n\tprivate node:Node;\n\tprivate rule:IRule;\n\tprivate level:_level.Level;\n\tprivate message:string;\n\tprivate offset:number;\n\tprivate length:number;\n\n\tconstructor(node:Node, rule:IRule, level:_level.Level, message?:string, offset:number=node.offset, length:number=node.length) {\n\t\tthis.node = node;\n\t\tthis.rule = rule;\n\t\tthis.level = level;\n\t\tthis.message = message || rule.message;\n\t\tthis.offset= offset;\n\t\tthis.length= length;\n\t}\n\n\tpublic getRule():IRule {\n\t\treturn this.rule;\n\t}\n\n\tpublic getLevel():_level.Level {\n\t\treturn this.level;\n\t}\n\n\tpublic getOffset():number {\n\t\treturn this.offset;\n\t}\n\n\tpublic getLength():number {\n\t\treturn this.length;\n\t}\n\n\tpublic getNode():Node {\n\t\treturn this.node;\n\t}\n\n\tpublic getMessage():string {\n\t\treturn this.message;\n\t}\n}\n\nexport interface IVisitor {\n\tvisitNode:(node:Node)=>boolean;\n}\n\nexport interface IVisitorFunction {\n\t(node:Node):boolean;\n}\n/*\nexport class DefaultVisitor implements IVisitor {\n\n\tpublic visitNode(node:Node):boolean {\n\t\tswitch (node.type) {\n\t\t\tcase NodeType.Stylesheet:\n\t\t\t\treturn this.visitStylesheet(<Stylesheet> node);\n\t\t\tcase NodeType.FontFace:\n\t\t\t\treturn this.visitFontFace(<FontFace> node);\n\t\t\tcase NodeType.Ruleset:\n\t\t\t\treturn this.visitRuleSet(<RuleSet> node);\n\t\t\tcase NodeType.Selector:\n\t\t\t\treturn this.visitSelector(<Selector> node);\n\t\t\tcase NodeType.SimpleSelector:\n\t\t\t\treturn this.visitSimpleSelector(<SimpleSelector> node);\n\t\t\tcase NodeType.Declaration:\n\t\t\t\treturn this.visitDeclaration(<Declaration> node);\n\t\t\tcase NodeType.Function:\n\t\t\t\treturn this.visitFunction(<Function> node);\n\t\t\tcase NodeType.FunctionDeclaration:\n\t\t\t\treturn this.visitFunctionDeclaration(<FunctionDeclaration> node);\n\t\t\tcase NodeType.FunctionParameter:\n\t\t\t\treturn this.visitFunctionParameter(<FunctionParameter> node);\n\t\t\tcase NodeType.FunctionArgument:\n\t\t\t\treturn this.visitFunctionArgument(<FunctionArgument> node);\n\t\t\tcase NodeType.Term:\n\t\t\t\treturn this.visitTerm(<Term> node);\n\t\t\tcase NodeType.Declaration:\n\t\t\t\treturn this.visitExpression(<Expression> node);\n\t\t\tcase NodeType.NumericValue:\n\t\t\t\treturn this.visitNumericValue(<NumericValue> node);\n\t\t\tcase NodeType.Page:\n\t\t\t\treturn this.visitPage(<Page> node);\n\t\t\tcase NodeType.PageBoxMarginBox:\n\t\t\t\treturn this.visitPageBoxMarginBox(<PageBoxMarginBox> node);\n\t\t\tcase NodeType.Property:\n\t\t\t\treturn this.visitProperty(<Property> node);\n\t\t\tcase NodeType.NumericValue:\n\t\t\t\treturn this.visitNodelist(<Nodelist> node);\n\t\t\tcase NodeType.Import:\n\t\t\t\treturn this.visitImport(<Import> node);\n\t\t\tcase NodeType.Namespace:\n\t\t\t\treturn this.visitNamespace(<Namespace> node);\n\t\t\tcase NodeType.Keyframe:\n\t\t\t\treturn this.visitKeyframe(<Keyframe> node);\n\t\t\tcase NodeType.KeyframeSelector:\n\t\t\t\treturn this.visitKeyframeSelector(<KeyframeSelector> node);\n\t\t\tcase NodeType.MixinDeclaration:\n\t\t\t\treturn this.visitMixinDeclaration(<MixinDeclaration> node);\n\t\t\tcase NodeType.MixinReference:\n\t\t\t\treturn this.visitMixinReference(<MixinReference> node);\n\t\t\tcase NodeType.Variable:\n\t\t\t\treturn this.visitVariable(<Variable> node);\n\t\t\tcase NodeType.VariableDeclaration:\n\t\t\t\treturn this.visitVariableDeclaration(<VariableDeclaration> node);\n\t\t}\n\t\treturn this.visitUnknownNode(node);\n\t}\n\n\tpublic visitFontFace(node:FontFace):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitKeyframe(node:Keyframe):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitKeyframeSelector(node:KeyframeSelector):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitStylesheet(node:Stylesheet):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitProperty(Node:Property):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitRuleSet(node:RuleSet):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitSelector(node:Selector):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitSimpleSelector(node:SimpleSelector):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitDeclaration(node:Declaration):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitFunction(node:Function):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitFunctionDeclaration(node:FunctionDeclaration):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitInvocation(node:Invocation):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitTerm(node:Term):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitImport(node:Import):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitNamespace(node:Namespace):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitExpression(node:Expression):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitNumericValue(node:NumericValue):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitPage(node:Page):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitPageBoxMarginBox(node:PageBoxMarginBox):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitNodelist(node:Nodelist):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitVariableDeclaration(node:VariableDeclaration):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitVariable(node:Variable):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitMixinDeclaration(node:MixinDeclaration):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitMixinReference(node:MixinReference):boolean {\n\t\treturn true;\n\t}\n\n\tpublic visitUnknownNode(node:Node):boolean {\n\t\treturn true;\n\t}\n}\n*/\nexport class ParseErrorCollector implements IVisitor {\n\n\tstatic entries(node:Node):IMarker[] {\n\t\tvar visitor = new ParseErrorCollector();\n\t\tnode.accept(visitor);\n\t\treturn visitor.entries;\n\t}\n\n\tpublic entries:IMarker[];\n\n\tconstructor() {\n\t\tthis.entries = [];\n\t}\n\n\tpublic visitNode(node:Node):boolean {\n\n\t\tif(node.isErroneous()) {\n\t\t\tnode.collectIssues(this.entries);\n\t\t}\n\t\treturn true;\n\t}\n}\n\n"]}