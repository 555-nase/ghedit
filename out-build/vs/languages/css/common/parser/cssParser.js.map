{"version":3,"file":"vs/languages/css/common/parser/cssParser.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/common/parser/cssParser.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport types = require ('vs/base/common/types');\nimport scanner = require ('./cssScanner');\nimport nodes = require ('./cssNodes');\nimport _level = require('vs/languages/css/common/level');\nimport errors = require('./cssErrors');\nimport languageFacts = require('vs/languages/css/common/services/languageFacts');\nimport EditorCommon = require('vs/editor/common/editorCommon');\n\nexport interface IMark {\n\tprev: scanner.IToken;\n\tcurr: scanner.IToken;\n\tpos: number;\n}\n\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nexport class Parser {\n\n\tpublic scanner: scanner.Scanner;\n\tpublic token: scanner.IToken;\n\tpublic prevToken: scanner.IToken;\n\n\tprivate lastErrorToken: scanner.IToken;\n\n\tconstructor(scnr: scanner.Scanner=new scanner.Scanner()) {\n\t\tthis.scanner = scnr;\n\t\tthis.token = null;\n\t\tthis.prevToken = null;\n\t}\n\n\tpublic peek(type:scanner.TokenType, text?:string, ignoreCase:boolean=true): boolean {\n\t\tif (type !== this.token.type) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof text !== 'undefined') {\n\t\t\tif(ignoreCase) {\n\t\t\t\treturn text.toLowerCase() === this.token.text.toLowerCase();\n\t\t\t} else {\n\t\t\t\treturn text === this.token.text;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic peekRegEx(type:scanner.TokenType, regEx: RegExp): boolean {\n\t\tif (type !== this.token.type) {\n\t\t\treturn false;\n\t\t}\n\t\treturn regEx.test(this.token.text);\n\t}\n\n\tpublic hasWhitespace():boolean {\n\t\treturn this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n\t}\n\n\tpublic consumeToken() : void {\n\t\tthis.prevToken = this.token;\n\t\tthis.token = this.scanner.scan();\n\t}\n\n\tpublic mark(): IMark {\n\t\treturn {\n\t\t\tprev: this.prevToken,\n\t\t\tcurr: this.token,\n\t\t\tpos: this.scanner.pos()\n\t\t};\n\t}\n\n\tpublic restoreAtMark(mark: IMark): void {\n\t\tthis.prevToken= mark.prev;\n\t\tthis.token= mark.curr;\n\t\tthis.scanner.goBackTo(mark.pos);\n\t}\n\n\tpublic acceptOne(type: scanner.TokenType, text?: string[], ignoreCase:boolean=true): boolean {\n\t\tfor (var i = 0 ; i < text.length; i++) {\n\t\t\tif(this.peek(type, text[i], ignoreCase)) {\n\t\t\t\tthis.consumeToken();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\n\tpublic accept(type: scanner.TokenType, text?: string, ignoreCase:boolean=true): boolean {\n\t\tif(this.peek(type, text, ignoreCase)) {\n\t\t\tthis.consumeToken();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic resync(resyncTokens: scanner.TokenType[], resyncStopTokens: scanner.TokenType[]): boolean {\n\t\twhile (true) {\n\t\t\tif (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n\t\t\t\tthis.consumeToken();\n\t\t\t\treturn true;\n\t\t\t} else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (this.token.type === scanner.TokenType.EOF) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.token = this.scanner.scan();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic createNode(nodeType:nodes.NodeType): nodes.Node {\n\t\treturn new nodes.Node(this.token.offset, this.token.len, nodeType);\n\t}\n\n\tpublic create(ctor: any): nodes.Node {\n\t\treturn types.create(ctor, this.token.offset, this.token.len);\n\t}\n\n\tpublic finish<T extends nodes.Node>(node:T, error?: errors.CSSIssueType, resyncTokens?: scanner.TokenType[], resyncStopTokens?: scanner.TokenType[]): T {\n\t\t// parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n\t\t// + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n\t\tif (!(node instanceof nodes.Nodelist)) {\n\t\t\tif (error) {\n\t\t\t\tthis.markError(node, error, resyncTokens, resyncStopTokens);\n\t\t\t}\n\t\t\t// set the node end position\n\t\t\tif ( this.prevToken !== null) {\n\t\t\t\t// length with more elements belonging together\n\t\t\t\tvar prevEnd = this.prevToken.offset + this.prevToken.len;\n\t\t\t\tnode.length = prevEnd > node.offset ? prevEnd - node.offset: 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\n\tpublic markError<T extends nodes.Node>(node:T, error: errors.CSSIssueType, resyncTokens?: scanner.TokenType[], resyncStopTokens?: scanner.TokenType[]): void {\n\t\tif (this.token !== this.lastErrorToken) { // do not report twice on the same token\n\t\t\tnode.addIssue(new nodes.Marker(node, error, _level.Level.Error, null, this.token.offset, this.token.len));\n\t\t\tthis.lastErrorToken = this.token;\n\t\t}\n\t\tif (resyncTokens || resyncStopTokens) {\n\t\t\tthis.resync(resyncTokens, resyncStopTokens);\n\t\t}\n\t}\n\n\tpublic parseStylesheet(model: EditorCommon.IMirrorModel): nodes.Stylesheet {\n\t\tvar versionId = model.getVersionId();\n\t\tvar textProvider = (offset:number, length:number) => {\n\t\t\t\tif (model.getVersionId() !== versionId) {\n\t\t\t\t\tthrow new Error('Underlying model has changed, AST is no longer valid');\n\t\t\t\t}\n\t\t\t\tvar range = model.getRangeFromOffsetAndLength(offset, length);\n\t\t\t\treturn model.getValueInRange(range);\n\t\t\t};\n\n\t\treturn this.internalParse(model.getValue(), this._parseStylesheet, textProvider);\n\t}\n\n\tpublic internalParse<T extends nodes.Node>(input: string, parseFunc:()=>T, textProvider?:nodes.ITextProvider): T {\n\t\tthis.scanner.setSource(input);\n\t\tthis.token = this.scanner.scan();\n\t\tvar node = parseFunc.bind(this)();\n\t\tif (node) {\n\t\t\tif (textProvider) {\n\t\t\t\tnode.textProvider = textProvider;\n\t\t\t} else {\n\t\t\t\tnode.textProvider = (offset:number, length:number) => { return input.substr(offset, length); };\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tpublic _parseStylesheet(): nodes.Stylesheet {\n\t\tvar node = <nodes.Stylesheet> this.create(nodes.Stylesheet);\n\t\tnode.addChild(this._parseCharset());\n\n\t\tvar inRecovery= false;\n\t\tdo {\n\t\t\tvar hasMatch = false;\n\t\t\tdo {\n\t\t\t\thasMatch= false;\n\t\t\t\tvar statement = this._parseStylesheetStatement();\n\t\t\t\tif (statement) {\n\t\t\t\t\tnode.addChild(statement);\n\t\t\t\t\thasMatch= true;\n\t\t\t\t\tinRecovery = false;\n\t\t\t\t\tif (!this.peek(scanner.TokenType.EOF) && this._needsSemicolonAfter(statement) && !this.accept(scanner.TokenType.SemiColon)) {\n\t\t\t\t\t\tthis.markError(node, errors.ParseError.SemiColonExpected);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.accept(scanner.TokenType.SemiColon) || this.accept(scanner.TokenType.CDO) || this.accept(scanner.TokenType.CDC)) {\n\t\t\t\t\t// accept empty statements\n\t\t\t\t\thasMatch= true;\n\t\t\t\t\tinRecovery = false;\n\t\t\t\t}\n\t\t\t} while (hasMatch);\n\n\t\t\tif (this.peek(scanner.TokenType.EOF)) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!inRecovery) {\n\t\t\t\tif (this.peek(scanner.TokenType.AtKeyword)) {\n\t\t\t\t\tthis.markError(node, errors.ParseError.UnknownAtRule);\n\t\t\t\t} else {\n\t\t\t\t\tthis.markError(node, errors.ParseError.RuleOrSelectorExpected);\n\t\t\t\t}\n\t\t\t\tinRecovery= true;\n\t\t\t}\n\t\t\tthis.consumeToken();\n\t\t} while (!this.peek(scanner.TokenType.EOF));\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseStylesheetStatement():nodes.Node {\n\t\treturn this._parseRuleset(false)\n\t\t\t|| this._parseImport()\n\t\t\t|| this._parseMedia()\n\t\t\t|| this._parsePage()\n\t\t\t|| this._parseFontFace()\n\t\t\t|| this._parseKeyframe()\n\t\t\t|| this._parseMSViewPort()\n\t\t\t|| this._parseNamespace()\n\t\t\t|| this._parseDocument();\n\t}\n\n\tpublic _tryParseRuleset(isNested: boolean): nodes.RuleSet {\n\t\tvar mark= this.mark();\n\t\tif (this._parseSelector(isNested)) {\n\t\t\twhile (this.accept(scanner.TokenType.Comma) && this._parseSelector(isNested)) {\n\t\t\t\t// loop\n\t\t\t}\n\t\t\tif (this.accept(scanner.TokenType.CurlyL)) {\n\t\t\t\tthis.restoreAtMark(mark);\n\t\t\t\treturn this._parseRuleset(isNested);\n\t\t\t}\n\t\t}\n\t\tthis.restoreAtMark(mark);\n\t\treturn null;\n\t}\n\n\tpublic _parseRuleset(isNested: boolean = false): nodes.RuleSet {\n\t\tvar node = <nodes.RuleSet> this.create(nodes.RuleSet);\n\n\t\tif(!node.getSelectors().addChild(this._parseSelector(isNested))) {\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.accept(scanner.TokenType.Comma) && node.getSelectors().addChild(this._parseSelector(isNested))) {\n\t\t\t// loop\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\tpublic _parseRuleSetDeclaration() : nodes.Node {\n\t\treturn this._parseDeclaration();\n\t}\n\n\tpublic _needsSemicolonAfter(node: nodes.Node) : boolean {\n\t\tswitch (node.type) {\n\t\t\tcase nodes.NodeType.Keyframe:\n\t\t\tcase nodes.NodeType.MSViewPort:\n\t\t\tcase nodes.NodeType.Media:\n\t\t\tcase nodes.NodeType.Ruleset:\n\t\t\tcase nodes.NodeType.Namespace:\n\t\t\tcase nodes.NodeType.If:\n\t\t\tcase nodes.NodeType.For:\n\t\t\tcase nodes.NodeType.Each:\n\t\t\tcase nodes.NodeType.While:\n\t\t\tcase nodes.NodeType.MixinDeclaration:\n\t\t\tcase nodes.NodeType.FunctionDeclaration:\n\t\t\t\treturn false;\n\t\t\tcase nodes.NodeType.VariableDeclaration:\n\t\t\tcase nodes.NodeType.ExtendsReference:\n\t\t\tcase nodes.NodeType.MixinContent:\n\t\t\tcase nodes.NodeType.ReturnStatement:\n\t\t\tcase nodes.NodeType.MediaQuery:\n\t\t\tcase nodes.NodeType.Debug:\n\t\t\tcase nodes.NodeType.Import:\n\t\t\t\treturn true;\n\t\t\tcase nodes.NodeType.MixinReference:\n\t\t\t\treturn !(<nodes.MixinReference> node).getContent();\n\t\t\tcase nodes.NodeType.Declaration:\n\t\t\t\treturn !(<nodes.Declaration> node).getNestedProperties();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic _parseDeclarations(parseDeclaration: () => nodes.Node) : nodes.Declarations {\n\t\tvar node = <nodes.Declarations> this.create(nodes.Declarations);\n\t\tif (!this.accept(scanner.TokenType.CurlyL)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar decl = parseDeclaration();\n\t\twhile (node.addChild(decl)) {\n\t\t\tif (this.peek(scanner.TokenType.CurlyR)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this._needsSemicolonAfter(decl) && !this.accept(scanner.TokenType.SemiColon)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.SemiColonExpected, [ scanner.TokenType.SemiColon, scanner.TokenType.CurlyR ]);\n\t\t\t}\n\t\t\twhile (this.accept(scanner.TokenType.SemiColon)) {\n\t\t\t\t// accept empty statements\n\t\t\t}\n\t\t\tdecl = parseDeclaration();\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.CurlyR)) {\n\t\t\treturn this.finish(node, errors.ParseError.RightCurlyExpected, [scanner.TokenType.CurlyR, scanner.TokenType.SemiColon ]);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseBody<T extends nodes.BodyDeclaration>(node: T, parseDeclaration: () => nodes.Node): T {\n\t\tif (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n\t\t\treturn this.finish(node, errors.ParseError.LeftCurlyExpected, [scanner.TokenType.CurlyR, scanner.TokenType.SemiColon ]);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseSelector(isNested: boolean): nodes.Selector {\n\t\tvar node = <nodes.Selector> this.create(nodes.Selector);\n\n\t\tvar hasContent = false;\n\t\tif (isNested) {\n\t\t\t// nested selectors can start with a combinator\n\t\t\thasContent = node.addChild(this._parseCombinator());\n\t\t}\n\t\twhile (node.addChild(this._parseSimpleSelector())) {\n\t\t\thasContent = true;\n\t\t\tnode.addChild(this._parseCombinator()); // optional\n\t\t}\n\t\treturn hasContent ? this.finish(node) : null;\n\t}\n\n\tpublic _parseDeclaration(resyncStopTokens?:scanner.TokenType[]): nodes.Declaration {\n\t\tvar node = <nodes.Declaration> this.create(nodes.Declaration);\n\t\tif (!node.setProperty(this._parseProperty())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.Colon)) {\n\t\t\treturn <nodes.Declaration> this.finish(node, errors.ParseError.ColonExpected, [ scanner.TokenType.Colon ], resyncStopTokens);\n\t\t}\n\t\tnode.colonPosition = this.prevToken.offset;\n\n\t\tif (!node.setValue(this._parseExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.PropertyValueExpected);\n\t\t}\n\t\tnode.addChild(this._parsePrio());\n\n\t\tif (this.peek(scanner.TokenType.SemiColon)) {\n\t\t\tnode.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n\t\t}\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _tryToParseDeclaration(): nodes.Declaration {\n\t\tvar mark= this.mark();\n\t\tif (this._parseProperty() && this.accept(scanner.TokenType.Colon)) {\n\t\t\t// looks like a declaration, go ahead\n\t\t\tthis.restoreAtMark(mark);\n\t\t\treturn this._parseDeclaration();\n\t\t}\n\n\t\tthis.restoreAtMark(mark);\n\t\treturn null;\n\t}\n\n\tpublic _parseProperty(): nodes.Property {\n\t\tvar node = <nodes.Property> this.create(nodes.Property);\n\n\t\tvar mark= this.mark();\n\t\tif (this.accept(scanner.TokenType.Delim, '*') || this.accept(scanner.TokenType.Delim, '_')) {\n\t\t\t// support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n\t\t\tif (this.hasWhitespace()) {\n\t\t\t\tthis.restoreAtMark(mark);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\tif (node.setIdentifier(this._parseIdent())) {\n\t\t\treturn <nodes.Property> this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseCharset():nodes.Node {\n\t\tvar node = this.create(nodes.Node);\n\t\tif(!this.accept(scanner.TokenType.Charset)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!this.accept(scanner.TokenType.String)) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t}\n\t\tif(!this.accept(scanner.TokenType.SemiColon)) {\n\t\t\treturn this.finish(node, errors.ParseError.SemiColonExpected);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\n\n\tpublic _parseImport():nodes.Node {\n\t\tvar node = <nodes.Import> this.create(nodes.Import);\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@import')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif(!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\n\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected);\n\t\t}\n\n\t\tnode.setMedialist(this._parseMediaList());\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseNamespace():nodes.Node {\n\t\t// http://www.w3.org/TR/css3-namespace/\n\t\t// namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n\n\t\tvar node = <nodes.Namespace> this.create(nodes.Namespace);\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@namespace')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tnode.addChild(this._parseIdent()); // optional prefix\n\n\t\tif( !this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\n\t\t\treturn this.finish(node, errors.ParseError.URIExpected, [ scanner.TokenType.SemiColon ]);\n\t\t}\n\n\t\tif(!this.accept(scanner.TokenType.SemiColon)) {\n\t\t\treturn this.finish(node, errors.ParseError.SemiColonExpected);\n\t\t}\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseFontFace():nodes.Node {\n\t\tif(!this.peek(scanner.TokenType.AtKeyword, '@font-face')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = <nodes.FontFace> this.create(nodes.FontFace);\n\t\tthis.consumeToken(); // @font-face\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\tpublic _parseMSViewPort():nodes.Node {\n\t\tif(!this.peek(scanner.TokenType.AtKeyword, '@-ms-viewport')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = <nodes.MSViewPort> this.create(nodes.MSViewPort);\n\t\tthis.consumeToken(); // @-ms-viewport\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\tpublic _parseKeyframe():nodes.Node {\n\t\tvar node = <nodes.Keyframe> this.create(nodes.Keyframe);\n\n\t\tvar atNode = this.create(nodes.Node);\n\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@keyframes') &&\n\t\t\t!this.accept(scanner.TokenType.AtKeyword, '@-webkit-keyframes') &&\n\t\t\t!this.accept(scanner.TokenType.AtKeyword, '@-ms-keyframes') &&\n\t\t\t!this.accept(scanner.TokenType.AtKeyword, '@-moz-keyframes') &&\n\t\t\t!this.accept(scanner.TokenType.AtKeyword, '@-o-keyframes')) {\n\n\t\t\treturn null;\n\t\t}\n\t\tnode.setKeyword(this.finish(atNode));\n\t\tif (atNode.getText() === '@-ms-keyframes') { // -ms-keyframes never existed\n\t\t\tthis.markError(atNode, errors.ParseError.UnknownKeyword);\n\t\t}\n\n\t\tif (!node.setIdentifier(this._parseIdent([ nodes.ReferenceType.Keyframe ]))) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseKeyframeSelector.bind(this));\n\t}\n\n\tpublic _parseKeyframeSelector():nodes.Node {\n\t\tvar node = <nodes.KeyframeSelector> this.create(nodes.KeyframeSelector);\n\n\t\tif (!node.addChild(this._parseIdent()) && !this.accept(scanner.TokenType.Percentage)) {\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\tif (!node.addChild(this._parseIdent()) && !this.accept(scanner.TokenType.Percentage)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.PercentageExpected);\n\t\t\t}\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\tpublic _parseMediaDeclaration(): nodes.Node {\n\t\treturn this._tryParseRuleset(false) || this._tryToParseDeclaration() || this._parseStylesheetStatement();\n\t}\n\n\tpublic _parseMedia(): nodes.Node {\n\t\t// MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n\t\t// media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n\t\tvar node = <nodes.Media> this.create(nodes.Media);\n\t\tif (!this.accept(scanner.TokenType.AtKeyword, '@media')) {\n\t\t\treturn null;\n\t\t}\n\t\tif (!node.addChild(this._parseMediaQuery([scanner.TokenType.CurlyL]))) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t}\n\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\tif (!node.addChild(this._parseMediaQuery([scanner.TokenType.CurlyL]))) {\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t}\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseMediaDeclaration.bind(this));\n\t}\n\n\tpublic _parseMediaQuery(resyncStopToken: scanner.TokenType[]): nodes.Node {\n\t\t// http://www.w3.org/TR/css3-mediaqueries/\n\t\t// media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n\t\t// expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n\n\t\tvar node = <nodes.MediaQuery> this.create(nodes.MediaQuery);\n\n\t\tvar parseExpression= true;\n\t\tvar hasContent = false;\n\t\tif (!this.peek(scanner.TokenType.ParenthesisL)) {\n\t\t\tif (this.accept(scanner.TokenType.Ident, 'only', true) || this.accept(scanner.TokenType.Ident, 'not', true)) {\n\t\t\t\t// optional\n\t\t\t}\n\t\t\tif (!node.addChild(this._parseIdent())) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\thasContent= true;\n\t\t\tparseExpression= this.accept(scanner.TokenType.Ident, 'and', true);\n\t\t}\n\t\twhile (parseExpression) {\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\t\tif (hasContent) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.LeftParenthesisExpected, [], resyncStopToken);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!node.addChild(this._parseMediaFeatureName())) {\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [], resyncStopToken);\n\t\t\t}\n\t\t\tif (this.accept(scanner.TokenType.Colon)) {\n\t\t\t\tif (!node.addChild(this._parseExpr())) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.TermExpected, [], resyncStopToken);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [], resyncStopToken);\n\t\t\t}\n\t\t\tparseExpression= this.accept(scanner.TokenType.Ident, 'and', true);\n\t\t}\n\t\treturn node;\n\t}\n\n\tpublic _parseMediaFeatureName() : nodes.Node {\n\t\treturn this._parseIdent();\n\t}\n\n\tpublic _parseMediaList(): nodes.Medialist {\n\t\tvar node = <nodes.Medialist> this.create(nodes.Medialist);\n\t\tif (node.getMediums().addChild(this._parseMedium())) {\n\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\tif (!node.getMediums().addChild(this._parseMedium())) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn <nodes.Medialist> this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseMedium(): nodes.Node {\n\t\tvar node = this.create(nodes.Node);\n\t\tif (node.addChild(this._parseIdent())) {\n\t\t\treturn this.finish(node);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic _parsePageDeclaration(): nodes.Node {\n\t\treturn this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n\t}\n\n\tpublic _parsePage(): nodes.Node {\n\t\t// http://www.w3.org/TR/css3-page/\n\t\t// page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n\t\t// page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n\n\t\tvar node = <nodes.Page> this.create(nodes.Page);\n\t\tif (!this.accept(scanner.TokenType.AtKeyword, '@Page')) {\n\t\t\treturn null;\n\t\t}\n\t\tif (node.addChild(this._parsePageSelector())) {\n\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\tif (!node.addChild(this._parsePageSelector())) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._parseBody(node, this._parsePageDeclaration.bind(this));\n\t}\n\n\tpublic _parsePageMarginBox() : nodes.Node {\n\t\t// page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n\t\tvar node = <nodes.PageBoxMarginBox> this.create(nodes.PageBoxMarginBox);\n\t\tif (!this.peek(scanner.TokenType.AtKeyword)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.acceptOne(scanner.TokenType.AtKeyword, languageFacts.getPageBoxDirectives())) {\n\t\t\tthis.markError(node, errors.ParseError.UnknownAtRule, [], [scanner.TokenType.CurlyL] );\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\n\tpublic _parsePageSelector(): nodes.Node {\n\t\t// page_selector : pseudo_page+ | IDENT pseudo_page*\n\t\t// pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n\n\t\tvar node = this.create(nodes.Node);\n\t\tif (!this.peek(scanner.TokenType.Ident) && !this.peek(scanner.TokenType.Colon)) {\n\t\t\treturn null;\n\t\t}\n\t\tnode.addChild(this._parseIdent()); // optional ident\n\n\t\tif (this.accept(scanner.TokenType.Colon)) {\n\t\t\tif (!node.addChild(this._parseIdent())) { // optional ident\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t}\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseDocument(): nodes.Node {\n\t\t// -moz-document is experimental but has been pushed to css4\n\n\t\tvar node = <nodes.Document> this.create(nodes.Document);\n\t\tif (!this.accept(scanner.TokenType.AtKeyword, '@-moz-document')) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.resync([], [ scanner.TokenType.CurlyL ]); // ignore all the rules\n\t\treturn this._parseBody(node, this._parseStylesheetStatement.bind(this));\n\t}\n\n\tpublic _parseOperator(): nodes.Node {\n\t\t// these are operators for binary expressions\n\t\tvar node = this.createNode(nodes.NodeType.Operator);\n\t\tif (this.accept(scanner.TokenType.Delim, '/') ||\n\t\t\tthis.accept(scanner.TokenType.Delim, '*') ||\n\t\t\tthis.accept(scanner.TokenType.Delim, '+') ||\n\t\t\tthis.accept(scanner.TokenType.Delim, '-') ||\n\t\t\tthis.accept(scanner.TokenType.Dashmatch) ||\n\t\t\tthis.accept(scanner.TokenType.Includes) ||\n\t\t\tthis.accept(scanner.TokenType.SubstringOperator) ||\n\t\t\tthis.accept(scanner.TokenType.PrefixOperator) ||\n\t\t\tthis.accept(scanner.TokenType.SuffixOperator) ||\n\t\t\tthis.accept(scanner.TokenType.Delim, '=')) { // doesn't stick to the standard here\n\n\t\t\treturn this.finish(node);\n\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic _parseUnaryOperator(): nodes.Node {\n\t\tvar node = this.create(nodes.Node);\n\t\tif (this.accept(scanner.TokenType.Delim, '+') || this.accept(scanner.TokenType.Delim, '-')) {\n\t\t\treturn this.finish(node);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic _parseCombinator(): nodes.Node {\n\t\tvar node = this.create(nodes.Node);\n\t\tif (this.accept(scanner.TokenType.Delim, '>')) {\n\t\t\tnode.type = nodes.NodeType.SelectorCombinatorParent;\n\t\t\treturn this.finish(node);\n\t\t} else if(this.accept(scanner.TokenType.Delim, '+')) {\n\t\t\tnode.type = nodes.NodeType.SelectorCombinatorSibling;\n\t\t\treturn this.finish(node);\n\t\t} else if(this.accept(scanner.TokenType.Delim, '~')) {\n\t\t\tnode.type = nodes.NodeType.SelectorCombinatorAllSiblings;\n\t\t\treturn this.finish(node);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic _parseSimpleSelector(): nodes.Node {\n\t\t// simple_selector\n\t\t//  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n\n\t\tvar node = <nodes.SimpleSelector> this.create(nodes.SimpleSelector);\n\t\tvar c = 0;\n\t\tif (node.addChild(this._parseElementName())) {\n\t\t\tc++;\n\t\t}\n\t\twhile ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n\t\t\tc++;\n\t\t}\n\t\treturn c > 0 ? this.finish(node) : null;\n\t}\n\n\tpublic _parseSimpleSelectorBody():nodes.Node {\n\t\treturn this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n\t}\n\n\tpublic _parseSelectorIdent() : nodes.Node {\n\t\treturn this._parseIdent();\n\t}\n\n\tpublic _parseHash(): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.Hash) && !this.peek(scanner.TokenType.Delim, '#')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.createNode(nodes.NodeType.IdentifierSelector);\n\t\tif (this.accept(scanner.TokenType.Delim, '#')) {\n\t\t\tif (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.consumeToken(); // TokenType.Hash\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseClass(): nodes.Node {\n\t\t// class: '.' IDENT ;\n\t\tif (!this.peek(scanner.TokenType.Delim, '.')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.createNode(nodes.NodeType.ClassSelector);\n\t\tthis.consumeToken(); // '.'\n\t\tif (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseElementName(): nodes.Node {\n\t\t// element_name: IDENT | '*';\n\t\tvar node = this.createNode(nodes.NodeType.ElementNameSelector);\n\t\tif (node.addChild(this._parseSelectorIdent()) || this.accept(scanner.TokenType.Delim, '*')) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseAttrib(): nodes.Node {\n\t\t// attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n\t\tif (!this.peek(scanner.TokenType.BracketL)) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.createNode(nodes.NodeType.AttributeSelector);\n\t\tthis.consumeToken(); // BracketL\n\t\tif(!node.addChild(this._parseBinaryExpr())) {\n\t\t\t// is this bad?\n\t\t}\n\t\tif (!this.accept(scanner.TokenType.BracketR)) {\n\t\t\treturn this.finish(node, errors.ParseError.RightSquareBracketExpected);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parsePseudo(): nodes.Node {\n\t\t// pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n\t\tif (!this.peek(scanner.TokenType.Colon)) {\n\t\t\treturn null;\n\t\t}\n\t\tvar pos = this.mark();\n\t\tvar node = this.createNode(nodes.NodeType.PseudoSelector);\n\t\tthis.consumeToken(); // Colon\n\t\tif (!this.hasWhitespace() && this.accept(scanner.TokenType.Colon)) {\n\t\t\t// optional, support ::\n\t\t}\n\t\tif (!this.hasWhitespace()) {\n\t\t\tif (!node.addChild(this._parseIdent())) {\n\t\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected);\n\t\t\t}\n\t\t\tif (!this.hasWhitespace() && this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\t\tnode.addChild(this._parseBinaryExpr() || this._parseSimpleSelector());\n\t\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.finish(node);\n\t\t}\n\t\tthis.restoreAtMark(pos);\n\t\treturn null;\n\t}\n\n\tpublic _parsePrio(): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.Exclamation)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = this.createNode(nodes.NodeType.Prio);\n\t\tif (this.accept(scanner.TokenType.Exclamation) && this.accept(scanner.TokenType.Ident, 'important', true)) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseExpr(stopOnComma:boolean = false): nodes.Expression {\n\t\tvar node = <nodes.Expression> this.create(nodes.Expression);\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (this.peek(scanner.TokenType.Comma)) { // optional\n\t\t\t\tif (stopOnComma) {\n\t\t\t\t\treturn this.finish(node);\n\t\t\t\t}\n\t\t\t\tthis.consumeToken();\n\t\t\t}\n\t\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseBinaryExpr(preparsedLeft?:nodes.BinaryExpression, preparsedOper?:nodes.Node): nodes.Node {\n\t\tvar node = <nodes.BinaryExpression> this.create(nodes.BinaryExpression);\n\n\t\tif(!node.setLeft((<nodes.Node> preparsedLeft || this._parseTerm()))) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif(!node.setOperator(preparsedOper || this._parseOperator())) {\n\t\t\treturn this.finish(node);\n\t\t}\n\n\t\tif(!node.setRight(this._parseTerm())) {\n\t\t\treturn this.finish(node, errors.ParseError.TermExpected);\n\t\t}\n\n\t\t// things needed for multiple binary expressions\n\t\tnode = <nodes.BinaryExpression> this.finish(node);\n\t\tvar operator = this._parseOperator();\n\t\tif(operator) {\n\t\t\tnode = <nodes.BinaryExpression> this._parseBinaryExpr(node, operator);\n\t\t}\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseTerm(): nodes.Term {\n\n\t\tvar node = <nodes.Term> this.create(nodes.Term);\n\t\tnode.setOperator(this._parseUnaryOperator()); // optional\n\n\t\tif (node.setExpression(this._parseFunction()) || // first function then ident\n\t\t\tnode.setExpression(this._parseIdent()) ||\n\t\t\tnode.setExpression(this._parseURILiteral()) ||\n\t\t\tnode.setExpression(this._parseStringLiteral()) ||\n\t\t\tnode.setExpression(this._parseNumeric()) ||\n\t\t\tnode.setExpression(this._parseHexColor()) ||\n\t\t\tnode.setExpression(this._parseOperation())\n\t\t) {\n\t\t\treturn <nodes.Term> this.finish(node);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic _parseOperation():nodes.Node {\n\t\tvar node = this.create(nodes.Node);\n\t\tif (!this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\treturn null;\n\t\t}\n\t\tnode.addChild(this._parseExpr());\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseNumeric(): nodes.NumericValue {\n\t\tvar node = <nodes.NumericValue> this.create(nodes.NumericValue);\n\t\tif(this.accept(scanner.TokenType.Num) ||\n\t\t\tthis.accept(scanner.TokenType.Percentage) ||\n\t\t\tthis.accept(scanner.TokenType.Resolution) ||\n\t\t\tthis.accept(scanner.TokenType.Length) ||\n\t\t\tthis.accept(scanner.TokenType.EMS) ||\n\t\t\tthis.accept(scanner.TokenType.EXS) ||\n\t\t\tthis.accept(scanner.TokenType.Angle) ||\n\t\t\tthis.accept(scanner.TokenType.Time) ||\n\t\t\tthis.accept(scanner.TokenType.Dimension) ||\n\t\t\tthis.accept(scanner.TokenType.Freq)) {\n\n\t\t\treturn <nodes.NumericValue> this.finish(node);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic _parseStringLiteral(): nodes.Node {\n\t\tvar node = this.createNode(nodes.NodeType.StringLiteral);\n\t\tif (this.accept(scanner.TokenType.String) || this.accept(scanner.TokenType.BadString)) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseURILiteral(): nodes.Node {\n\t\tvar node = this.createNode(nodes.NodeType.URILiteral);\n\t\tif (this.accept(scanner.TokenType.URI) || this.accept(scanner.TokenType.BadUri)) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseIdent(referenceTypes?: nodes.ReferenceType[]): nodes.Identifier {\n\t\tvar node = <nodes.Identifier> this.create(nodes.Identifier);\n\t\tif (referenceTypes) {\n\t\t\tnode.referenceTypes = referenceTypes;\n\t\t}\n\t\tif (this.accept(scanner.TokenType.Ident)) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\n\tpublic _parseFunction(): nodes.Function {\n\n\t\tvar pos = this.mark();\n\t\tvar node = <nodes.Function> this.create(nodes.Function);\n\n\t\tif (!node.setIdentifier(this._parseFunctionIdentifier())) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.hasWhitespace() || !this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\tthis.restoreAtMark(pos);\n\t\t\treturn null;\n\t\t}\n\n\t\t// arguments\n\t\tif (node.getArguments().addChild(this._parseFunctionArgument())) {\n\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\tif (!node.getArguments().addChild(this._parseFunctionArgument())) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\treturn <nodes.Function> this.finish(node, errors.ParseError.RightParenthesisExpected);\n\t\t}\n\t\treturn <nodes.Function> this.finish(node);\n\t}\n\n\tpublic _parseFunctionIdentifier(): nodes.Identifier {\n\t\tvar node = <nodes.Identifier> this.create(nodes.Identifier);\n\t\tnode.referenceTypes = [ nodes.ReferenceType.Function ];\n\t\tif (this.accept(scanner.TokenType.Ident, 'progid')) {\n\t\t\t// support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n\t\t\tif (this.accept(scanner.TokenType.Colon)) {\n\t\t\t\twhile (this.accept(scanner.TokenType.Ident) && this.accept(scanner.TokenType.Delim, '.')) {\n\t\t\t\t\t// loop\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.finish(node);\n\t\t} else if (this.accept(scanner.TokenType.Ident)) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseFunctionArgument(): nodes.Node {\n\t\tvar node = <nodes.FunctionArgument> this.create(nodes.FunctionArgument);\n\t\tif (node.setValue(this._parseExpr(true))) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseHexColor(): nodes.Node {\n\t\tvar node = this.create(nodes.HexColorValue);\n\t\tif (this.peekRegEx(scanner.TokenType.Hash, /^#[0-9A-Fa-f]{3}([0-9A-Fa-f]{3})?$/g)) {\n\t\t\tthis.consumeToken();\n\t\t\treturn this.finish(node);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n"]}