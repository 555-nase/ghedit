{"version":3,"file":"vs/languages/css/common/services/occurrences.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/common/services/occurrences.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\nimport _symbols = require('vs/languages/css/common/parser/cssSymbols');\n\nexport function findDeclaration(stylesheet:nodes.Node, offset:number):nodes.Node {\n\n\tvar symbols = new _symbols.Symbols(stylesheet);\n\tvar node = nodes.getNodeAtOffset(stylesheet, offset);\n\n\tif (!node) {\n\t\treturn null;\n\t}\n\n\tvar symbol = symbols.findSymbolFromNode(node);\n\tif(!symbol) {\n\t\treturn null;\n\t}\n\n\treturn symbol.node;\n}\n\nexport interface IOccurrence {\n\tkind:string;\n\ttype:nodes.ReferenceType;\n\tnode:nodes.Node;\n}\n\nexport function findOccurrences(stylesheet:nodes.Node, offset:number):IOccurrence[] {\n\tvar result:IOccurrence[] = [];\n\tvar node = nodes.getNodeAtOffset(stylesheet, offset);\n\tif (!node || node.type === nodes.NodeType.Stylesheet || node.type === nodes.NodeType.Declarations) {\n\t\treturn result;\n\t}\n\n\tvar symbols = new _symbols.Symbols(stylesheet);\n\tvar symbol = symbols.findSymbolFromNode(node);\n\tvar name = node.getText();\n\n\tstylesheet.accept((candidate) => {\n\t\tif (symbol) {\n\t\t\tif (symbols.matchesSymbol(candidate, symbol)) {\n\t\t\t\tresult.push({\n\t\t\t\t\tkind: getKind(candidate),\n\t\t\t\t\ttype: symbol.type,\n\t\t\t\t\tnode: candidate\n\t\t\t\t});\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t} else if (node.type === candidate.type && node.length === candidate.length && name === candidate.getText()) {\n\t\t\t// Same node type and data\n\t\t\tresult.push({\n\t\t\t\tkind: getKind(candidate),\n\t\t\t\tnode: candidate,\n\t\t\t\ttype:nodes.ReferenceType.Unknown\n\t\t\t});\n\t\t}\n\t\treturn true;\n\t});\n\n\treturn result;\n}\n\nfunction getKind(node:nodes.Node):string {\n\n\tif (node.type === nodes.NodeType.Selector) {\n\t\treturn 'write';\n\t}\n\n\tif (node.parent) {\n\t\tswitch (node.parent.type) {\n\t\t\tcase nodes.NodeType.FunctionDeclaration:\n\t\t\tcase nodes.NodeType.MixinDeclaration:\n\t\t\tcase nodes.NodeType.Keyframe:\n\t\t\tcase nodes.NodeType.VariableDeclaration:\n\t\t\tcase nodes.NodeType.FunctionParameter:\n\t\t\t\treturn 'write';\n\t\t}\n\t}\n\treturn null;\n}"]}