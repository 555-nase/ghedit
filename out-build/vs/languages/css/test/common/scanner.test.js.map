{"version":3,"file":"vs/languages/css/test/common/scanner.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/test/common/scanner.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAKb,KAAK,CAAC,eAAe,EAAE;QAEtB,2BAA2B,IAAqB,EAAE,MAAc,EAAE,GAAW,EAAE,MAAc,EAAE,IAAY,EAAE,IAAuB;YACnI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACxB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC;QAED,IAAI,CAAC,iBAAiB,EAAE;YACvB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACrE,iBAAiB,CAAC,OAAO,EAAE,8BAA8B,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAEhG,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YAChC,OAAO,CAAC,gBAAgB,GAAG,KAAK,CAAC;YACjC,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAEtF,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YAChC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;YAC9B,iBAAiB,CAAC,OAAO,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YAC7F,iBAAiB,CAAC,OAAO,EAAE,eAAe,EAAE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClF,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC5E,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC7E,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC5E,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC3E,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACnF,iBAAiB,CAAC,OAAO,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACrF,iBAAiB,CAAC,OAAO,EAAE,gBAAgB,EAAE,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxF,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE;YACtB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,0BAA0B,EAAE,EAAE,EAAE,CAAC,EAAE,0BAA0B,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjH,iBAAiB,CAAC,OAAO,EAAE,wBAAwB,EAAE,EAAE,EAAE,CAAC,EAAE,wBAAwB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC7G,iBAAiB,CAAC,OAAO,EAAE,yBAAyB,EAAE,EAAE,EAAE,CAAC,EAAE,yBAAyB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/G,iBAAiB,CAAC,OAAO,EAAE,0BAA0B,EAAE,EAAE,EAAE,CAAC,EAAE,0BAA0B,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjH,iBAAiB,CAAC,OAAO,EAAE,0BAA0B,EAAE,EAAE,EAAE,CAAC,EAAE,0BAA0B,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjH,iBAAiB,CAAC,OAAO,EAAE,0BAA0B,EAAE,EAAE,EAAE,CAAC,EAAE,0BAA0B,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjH,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9E,iBAAiB,CAAC,OAAO,EAAE,sBAAsB,EAAE,EAAE,EAAE,CAAC,EAAE,sBAAsB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACzG,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,0BAA0B,EAAE,EAAE,EAAE,CAAC,EAAE,0BAA0B,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACpH,iBAAiB,CAAC,OAAO,EAAE,uBAAuB,EAAE,EAAE,EAAE,CAAC,EAAE,uBAAuB,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC9G,iBAAiB,CAAC,OAAO,EAAE,wBAAwB,EAAE,EAAE,EAAE,CAAC,EAAE,wBAAwB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC9G,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE;YAC5B,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACpF,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC3F,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC9E,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACrE,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAClF,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAChF,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACpF,iBAAiB,CAAC,OAAO,EAAE,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE,cAAc,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC9F,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE;YACzB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACzE,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE;YACvB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE;YACvC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACtE,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC9E,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClF,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAClF,iBAAiB,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC7E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACnF,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACjF,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAClF,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACnF,iBAAiB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,EAAE;YACzB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvF,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACnF,iBAAiB,CAAC,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC7F,iBAAiB,CAAC,OAAO,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvF,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrF,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrF,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrF,iBAAiB,CAAC,OAAO,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACxF,iBAAiB,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACtF,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEF,+FAA+F;QAC/F,0CAA0C;QAC1C,gFAAgF;QAChF,6FAA6F;QAC7F,4FAA4F;QAC5F,uGAAuG;QACvG,uGAAuG;QACvG,oGAAoG;QACpG,MAAM;QAEN,IAAI,CAAC,gBAAgB,EAAE;YACtB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACxE,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE;YACtB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACtE,iBAAiB,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACxC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACzE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACzE,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAC7E,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iCAAiC,EAAE;YACvC,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACzE,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1E,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpE,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;QAEH,4BAA4B;QAC5B,IAAI,CAAC,eAAe,EAAE;YACrB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC3E,iBAAiB,CAAC,OAAO,EAAE,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC/E,iBAAiB,CAAC,OAAO,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC3E,iBAAiB,CAAC,OAAO,EAAE,iBAAiB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;QAEH,mDAAmD;QACnD,uCAAuC;QACvC,6FAA6F;QAC7F,+FAA+F;QAC/F,iGAAiG;QACjG,6FAA6F;QAC7F,KAAK;QAEL,+BAA+B;QAC/B,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,iBAAiB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjE,iBAAiB,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,CAAC,uBAAuB,EAAE;QAE9B,6BAA6B,IAAqB,EAAE,MAAc;YAAE,gBAA6B;iBAA7B,WAA6B,CAA7B,sBAA6B,CAA7B,IAA6B;gBAA7B,+BAA6B;;YAChG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,OAAM,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACzB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACpB,CAAC,EAAE,CAAC;YACL,CAAC;QACF,CAAC;QAED,+BAA+B;QAC/B,IAAI,CAAC,qBAAqB,EAAE;YAC3B,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACpC,mBAAmB,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpI,mBAAmB,CAAC,OAAO,EAAE,cAAc,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACpE,mBAAmB,CAAC,OAAO,EAAE,eAAe,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACrE,mBAAmB,CAAC,OAAO,EAAE,oBAAoB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC1E,mBAAmB,CAAC,OAAO,EAAE,gBAAgB,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACtE,mBAAmB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzF,mBAAmB,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;QAEH,2CAA2C;QAC3C,2CAA2C;QAC3C,+HAA+H;QAC/H,2FAA2F;QAC3F,gGAAgG;QAChG,4FAA4F;QAC5F,oFAAoF;QACpF,sFAAsF;QACtF,MAAM;QAGN,0DAA0D;QAC1D,EAAE;QACF,yGAAyG;QACzG,8DAA8D;QAC9D,yGAAyG;QACzG,yBAAyB;QACzB,EAAE;QACF,sCAAsC;QACtC,yDAAyD;QACzD,6BAA6B;QAC7B,KAAK;QACL,oCAAoC;QACpC,mCAAmC;QACnC,uEAAuE;QACvE,8BAA8B;QAC9B,EAAE;QACF,+DAA+D;QAC/D,mBAAmB;QACnB,KAAK;QACL,wCAAwC;QACxC,yCAAyC;QACzC,0HAA0H;QAC1H,MAAM;IACP,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport assert = require('assert');\nimport Scanner = require('vs/languages/css/common/parser/cssScanner');\n\nsuite('CSS - Scanner', () => {\n\n\tfunction assertSingleToken(scan: Scanner.Scanner, source: string, len: number, offset: number, text: string, type: Scanner.TokenType):void {\n\t\tscan.setSource(source);\n\t\tvar token = scan.scan();\n\t\tassert.equal(token.len, len);\n\t\tassert.equal(token.offset, offset);\n\t\tassert.equal(token.text, text);\n\t\tassert.equal(token.type, type);\n\t}\n\n\ttest('Test Whitespace', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, ' @', 1, 1, '@', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, ' /* comment*/ \\n/*comment*/@', 1, 26, '@', Scanner.TokenType.Delim);\n\n\t\tscanner = new Scanner.Scanner();\n\t\tscanner.ignoreWhitespace = false;\n\t\tassertSingleToken(scanner, ' @', 1, 0, ' ', Scanner.TokenType.Whitespace);\n\t\tassertSingleToken(scanner, '/*comment*/ @', 1, 11, ' ', Scanner.TokenType.Whitespace);\n\n\t\tscanner = new Scanner.Scanner();\n\t\tscanner.ignoreComment = false;\n\t\tassertSingleToken(scanner, ' /*comment*/@', 11, 1, '/*comment*/', Scanner.TokenType.Comment);\n\t\tassertSingleToken(scanner, '/*comment*/ @', 11, 0, '/*comment*/', Scanner.TokenType.Comment);\n\t});\n\n\ttest('Test Token Ident', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '\\u060frf', 3, 0, '\\u060frf', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'über', 4, 0, 'über', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '-bo', 3, 0, '-bo', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '_bo', 3, 0, '_bo', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'boo', 3, 0, 'boo', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'Boo', 3, 0, 'Boo', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'red--', 5, 0, 'red--', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'red-->', 5, 0, 'red--', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '--red', 5, 0, '--red', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'a\\\\.b', 4, 0, 'a\\.b', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '\\\\E9motion', 9, 0, 'émotion', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '\\\\E9 dition', 10, 0, 'édition', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, '\\\\0000E9dition', 13, 0, 'édition', Scanner.TokenType.Ident);\n\t\tassertSingleToken(scanner, 'S\\\\0000e9f', 9, 0, 'Séf', Scanner.TokenType.Ident);\n\t});\n\n\ttest('Test Token Url', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, 'url(\\'http://msft.com\\')', 22, 0, 'url(\\'http://msft.com\\')', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\"http://msft.com\")', 22, 0, 'url(\"http://msft.com\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url( \"http://msft.com\")', 23, 0, 'url( \"http://msft.com\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\\t\"http://msft.com\")', 23, 0, 'url(\\t\"http://msft.com\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\\n\"http://msft.com\")', 23, 0, 'url(\\n\"http://msft.com\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\"http://msft.com\"\\n)', 23, 0, 'url(\"http://msft.com\"\\n)', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\"\")', 7, 0, 'url(\"\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'uRL(\"\")', 7, 0, 'uRL(\"\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'URL(\"\")', 7, 0, 'URL(\"\")', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(http://msft.com)', 20, 0, 'url(http://msft.com)', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url()', 5, 0, 'url()', Scanner.TokenType.URI);\n\t\tassertSingleToken(scanner, 'url(\\'http://msft.com\\n)', 22, 0, 'url(\\'http://msft.com\\n)', Scanner.TokenType.BadUri);\n\t\tassertSingleToken(scanner, 'url(\"http://msft.com\"', 21, 0, 'url(\"http://msft.com\"', Scanner.TokenType.BadUri);\n\t\tassertSingleToken(scanner, 'url(http://msft.com\\')', 21, 0, 'url(http://msft.com\\')', Scanner.TokenType.URI);\n\t});\n\n\ttest('Test Token AtKeyword', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '@import', 7, 0, '@import', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@importttt', 10, 0, '@importttt', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@imp', 4, 0, '@imp', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@5', 1, 0, '@', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, '@media', 6, 0, '@media', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@page', 5, 0, '@page', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@charset', 8, 0, '@charset', Scanner.TokenType.Charset);\n\t\tassertSingleToken(scanner, '@-mport', 7, 0, '@-mport', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@\\u00f0mport', 7, 0, '@\\u00f0mport', Scanner.TokenType.AtKeyword);\n\t\tassertSingleToken(scanner, '@', 1, 0, '@', Scanner.TokenType.Delim);\n\t});\n\n\ttest('Test Token Number', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '1234', 4, 0, '1234', Scanner.TokenType.Num);\n\t\tassertSingleToken(scanner, '1.34', 4, 0, '1.34', Scanner.TokenType.Num);\n\t\tassertSingleToken(scanner, '.234', 4, 0, '.234', Scanner.TokenType.Num);\n\t\tassertSingleToken(scanner, '.234.', 4, 0, '.234', Scanner.TokenType.Num);\n\t\tassertSingleToken(scanner, '..234', 1, 0, '.', Scanner.TokenType.Delim);\n\t});\n\n\ttest('Test Token Delim', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '@', 1, 0, '@', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, '+', 1, 0, '+', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, '>', 1, 0, '>', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, '#', 1, 0, '#', Scanner.TokenType.Delim);\n\t\tassertSingleToken(scanner, '\\'', 1, 0, '\\'', Scanner.TokenType.BadString);\n\t\tassertSingleToken(scanner, '\"', 1, 0, '\"', Scanner.TokenType.BadString);\n\t});\n\n\ttest('Test Token Hash', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '#import', 7, 0, '#import', Scanner.TokenType.Hash);\n\t\tassertSingleToken(scanner, '#-mport', 7, 0, '#-mport', Scanner.TokenType.Hash);\n\t\tassertSingleToken(scanner, '#123', 4, 0, '#123', Scanner.TokenType.Hash);\n\t});\n\n\ttest('Test Token Dimension/Percentage', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '3em', 3, 0, '3em', Scanner.TokenType.EMS);\n\t\tassertSingleToken(scanner, '4.423ex', 7, 0, '4.423ex', Scanner.TokenType.EXS);\n\t\tassertSingleToken(scanner, '3423px', 6, 0, '3423px', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423cm', 7, 0, '4.423cm', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423mm', 7, 0, '4.423mm', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423in', 7, 0, '4.423in', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423pt', 7, 0, '4.423pt', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423pc', 7, 0, '4.423pc', Scanner.TokenType.Length);\n\t\tassertSingleToken(scanner, '4.423deg', 8, 0, '4.423deg', Scanner.TokenType.Angle);\n\t\tassertSingleToken(scanner, '4.423rad', 8, 0, '4.423rad', Scanner.TokenType.Angle);\n\t\tassertSingleToken(scanner, '4.423grad', 9, 0, '4.423grad', Scanner.TokenType.Angle);\n\t\tassertSingleToken(scanner, '4.423ms', 7, 0, '4.423ms', Scanner.TokenType.Time);\n\t\tassertSingleToken(scanner, '4.423s', 6, 0, '4.423s', Scanner.TokenType.Time);\n\t\tassertSingleToken(scanner, '4.423hz', 7, 0, '4.423hz', Scanner.TokenType.Freq);\n\t\tassertSingleToken(scanner, '.423khz', 7, 0, '.423khz', Scanner.TokenType.Freq);\n\t\tassertSingleToken(scanner, '3.423%', 6, 0, '3.423%', Scanner.TokenType.Percentage);\n\t\tassertSingleToken(scanner, '.423%', 5, 0, '.423%', Scanner.TokenType.Percentage);\n\t\tassertSingleToken(scanner, '.423ft', 6, 0, '.423ft', Scanner.TokenType.Dimension);\n\t\tassertSingleToken(scanner, '200dpi', 6, 0, '200dpi', Scanner.TokenType.Resolution);\n\t\tassertSingleToken(scanner, '123dpcm', 7, 0, '123dpcm', Scanner.TokenType.Resolution);\n\t});\n\n\ttest('Test Token String', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertSingleToken(scanner, '\\'farboo\\'', 8, 0, '\\'farboo\\'', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"farboo\"', 8, 0, '\"farboo\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"farbo\\u00f0\"', 8, 0, '\"farbo\\u00f0\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"far\\\\\\\"oo\"', 9, 0, '\"far\\\"oo\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"fa\\\\\\noo\"', 8, 0, '\"fa\\noo\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"fa\\\\\\roo\"', 8, 0, '\"fa\\roo\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\"fa\\\\\\foo\"', 8, 0, '\"fa\\foo\"', Scanner.TokenType.String);\n\t\tassertSingleToken(scanner, '\\'farboo\"', 8, 0, '\\'farboo\"', Scanner.TokenType.BadString);\n\t\tassertSingleToken(scanner, '\\'farboo', 7, 0, '\\'farboo', Scanner.TokenType.BadString);\n\t\tassertSingleToken(scanner, '\\'', 1, 0, '\\'', Scanner.TokenType.BadString);\n\t\tassertSingleToken(scanner, '\"', 1, 0, '\"', Scanner.TokenType.BadString);\n\t});\n\n\t\t//\t--- these are disabled because we decided to skip comments totally to keep the AST alive. dk\n\t\t//\ttest('Test Token Comment', function() {\n\t\t//\t\tassertSingleToken(scanner, '/**/', 4, 0, '/**/', Scanner.TokenType.Comment);\n\t\t//\t\tassertSingleToken(scanner, '/* asds */', 10, 0, '/* asds */', Scanner.TokenType.Comment);\n\t\t//\t\tassertSingleToken(scanner, '/*as\\nds*/', 9, 0, '/*as\\nds*/', Scanner.TokenType.Comment);\n\t\t//\t\tassertSingleToken(scanner, '/*a  s\\nd  s*/*/', 13, 0, '/*a  s\\nd  s*/', Scanner.TokenType.Comment);\n\t\t//\t\tassertSingleToken(scanner, '/*a  s\\rd  s*/*/', 13, 0, '/*a  s\\rd  s*/', Scanner.TokenType.Comment);\n\t\t//\t\tassertSingleToken(scanner, '/*a  s\\rd  s', 11, 0, '/*a  s\\rd  s', Scanner.TokenType.BadComment);\n\t\t//\t});\n\n\t\ttest('Test Token CDO', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, '<!--', 4, 0, '<!--', Scanner.TokenType.CDO);\n\t\t\tassertSingleToken(scanner, '<!-\\n-', 1, 0, '<', Scanner.TokenType.Delim);\n\t\t});\n\n\t\ttest('Test Token CDC', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, '-->', 3, 0, '-->', Scanner.TokenType.CDC);\n\t\t\tassertSingleToken(scanner, '--y>', 3, 0, '--y', Scanner.TokenType.Ident);\n\t\t\tassertSingleToken(scanner, '--<', 1, 0, '-', Scanner.TokenType.Delim);\n\t\t});\n\n\t\ttest('Test Token singletokens ;:{}[]()', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, ':  ', 1, 0, ':', Scanner.TokenType.Colon);\n\t\t\tassertSingleToken(scanner, ';  ', 1, 0, ';', Scanner.TokenType.SemiColon);\n\t\t\tassertSingleToken(scanner, '{  ', 1, 0, '{', Scanner.TokenType.CurlyL);\n\t\t\tassertSingleToken(scanner, '}  ', 1, 0, '}', Scanner.TokenType.CurlyR);\n\t\t\tassertSingleToken(scanner, '[  ', 1, 0, '[', Scanner.TokenType.BracketL);\n\t\t\tassertSingleToken(scanner, ']  ', 1, 0, ']', Scanner.TokenType.BracketR);\n\t\t\tassertSingleToken(scanner, '(  ', 1, 0, '(', Scanner.TokenType.ParenthesisL);\n\t\t\tassertSingleToken(scanner, ')  ', 1, 0, ')', Scanner.TokenType.ParenthesisR);\n\t\t});\n\n\t\ttest('Test Token dashmatch & includes', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, '~=', 2, 0, '~=', Scanner.TokenType.Includes);\n\t\t\tassertSingleToken(scanner, '~', 1, 0, '~', Scanner.TokenType.Delim);\n\t\t\tassertSingleToken(scanner, '|=', 2, 0, '|=', Scanner.TokenType.Dashmatch);\n\t\t\tassertSingleToken(scanner, '|', 1, 0, '|', Scanner.TokenType.Delim);\n\t\t\tassertSingleToken(scanner, '^=', 2, 0, '^=', Scanner.TokenType.PrefixOperator);\n\t\t\tassertSingleToken(scanner, '$=', 2, 0, '$=', Scanner.TokenType.SuffixOperator);\n\t\t\tassertSingleToken(scanner, '*=', 2, 0, '*=', Scanner.TokenType.SubstringOperator);\n\t\t});\n\n\t\t// deactivated comments test\n\t\ttest('Test Comments', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, '/*      */', 0, 10, '', Scanner.TokenType.EOF);\n\t\t\tassertSingleToken(scanner, '/*      abcd*/', 0, 14, '', Scanner.TokenType.EOF);\n\t\t\tassertSingleToken(scanner, '/*abcd  */', 0, 10, '', Scanner.TokenType.EOF);\n\t\t\tassertSingleToken(scanner, '/* ab- .-cd  */', 0, 15, '', Scanner.TokenType.EOF);\n\t\t});\n\n\t\t//test('Test Token SingleLineComment', function() {\n\t\t//\tvar scanner = new Scanner.Scanner();\n\t\t//\tassertSingleToken(scanner, '//asds', 6, 0, '//asds', Scanner.TokenType.SingleLineComment);\n\t\t//\tassertSingleToken(scanner, '// asds', 7, 0, '// asds', Scanner.TokenType.SingleLineComment);\n\t\t//\tassertSingleToken(scanner, '// as ds', 8, 0, '// as ds', Scanner.TokenType.SingleLineComment);\n\t\t//\tassertSingleToken(scanner, '// as\\n ds', 5, 0, 'ds', Scanner.TokenType.SingleLineComment);\n\t\t//});\n\n\t\t// deactivated whitespaces test\n\t\ttest('Test Whitespaces', function() {\n\t\t\tvar scanner = new Scanner.Scanner();\n\t\t\tassertSingleToken(scanner, ' ', 0, 1, '', Scanner.TokenType.EOF);\n\t\t\tassertSingleToken(scanner, '      ', 0, 6, '', Scanner.TokenType.EOF);\n\t\t});\n});\n\nsuite('CSS - Token Sequences', () => {\n\n\tfunction assertTokenSequence(scan: Scanner.Scanner, source: string, ...tokens:Scanner.TokenType[]):void {\n\t\tscan.setSource(source);\n\t\tvar token = scan.scan();\n\t\tvar i = 0;\n\t\twhile(tokens.length > i) {\n\t\t\tassert.equal(token.type, tokens[i]);\n\t\t\ttoken = scan.scan();\n\t\t\ti++;\n\t\t}\n\t}\n\n\t// tests with skipping comments\n\ttest('Test Token Sequence', function() {\n\t\tvar scanner = new Scanner.Scanner();\n\t\tassertTokenSequence(scanner, '5 5 5 5', Scanner.TokenType.Num, Scanner.TokenType.Num, Scanner.TokenType.Num, Scanner.TokenType.Num);\n\t\tassertTokenSequence(scanner, '/* 5 4 */-->', Scanner.TokenType.CDC);\n\t\tassertTokenSequence(scanner, '/* 5 4 */ -->', Scanner.TokenType.CDC);\n\t\tassertTokenSequence(scanner, '/* \"adaasd\" */ -->', Scanner.TokenType.CDC);\n\t\tassertTokenSequence(scanner, '/* <!-- */ -->', Scanner.TokenType.CDC);\n\t\tassertTokenSequence(scanner, 'red-->', Scanner.TokenType.Ident, Scanner.TokenType.Delim);\n\t\tassertTokenSequence(scanner, '@ import', Scanner.TokenType.Delim, Scanner.TokenType.Ident);\n\t});\n\n\t//\t// Sequence Test with activated comments\n\t//\ttest('Test Token Sequence', function() {\n\t//\t\tassertTokenSequence('5 5 5 5', Scanner.TokenType.Num, Scanner.TokenType.Num, Scanner.TokenType.Num, Scanner.TokenType.Num);\n\t//\t\tassertTokenSequence('/* 5 4 */ -->', Scanner.TokenType.Comment, Scanner.TokenType.CDC);\n\t//\t\tassertTokenSequence('/* \"adaasd\" */ -->', Scanner.TokenType.Comment, Scanner.TokenType.CDC);\n\t//\t\tassertTokenSequence('/* <!-- */ -->', Scanner.TokenType.Comment, Scanner.TokenType.CDC);\n\t//\t\tassertTokenSequence('red-->', Scanner.TokenType.Ident, Scanner.TokenType.Delim);\n\t//\t\tassertTokenSequence('@ import', Scanner.TokenType.Delim, Scanner.TokenType.Ident);\n\t//\t});\n\n\n\t//\ttest('[perf] Test Token l o n g Sequence', function() {\n\t//\n\t//\t\tvar tokens = [ '5', '8px', 'boo', 'far', '@import', ':', '{', '}', '<!--', '-->', 'background-color',\n\t//\t\t\t'/**/', '!important', 'url(test.png)', 'url(\"test.png\")',\n\t//\t\t\t';', '#332244', 'calc(', '\"string1\"', '\\'string2\\'', '\"badstring1\\n', '\\'badstring2\\n', '~=', '|='],\n\t//\t\t\tinput:string[] = [];\n\t//\n\t//\t\tfor (var i = 0; i < 100000; i++) {\n\t//\t\t\tvar idx = Math.floor(Math.random() * tokens.length);\n\t//\t\t\tinput.push(tokens[idx]);\n\t//\t\t}\n\t//\t\tvar inputText = input.join(' ');\n\t//\t\tvar now = new Date().getTime();\n\t//\t\tvar scan = new Scanner.Scanner(), tok:Scanner.IToken, tokCount = 0;\n\t//\t\tscan.setSource(inputText);\n\t//\n\t//\t\twhile((tok = scan.scan()).type !== Scanner.TokenType.EOF) {\n\t//\t\t\ttokCount += 1;\n\t//\t\t}\n\t//\t\tvar d = new  Date().getTime() - now;\n\t//\t\tassert.equal(tokCount, input.length);\n\t//\t\tassert.ok(d < 500, 'scanner fast? took ms' + d + ', token count ' + tokCount + ', input length: ' + inputText.length);\n\t//\t});\n});\n"]}