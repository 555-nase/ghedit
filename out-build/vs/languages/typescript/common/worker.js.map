{"version":3,"file":"vs/languages/typescript/common/worker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/typescript/common/worker.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport 'vs/text!vs/languages/typescript/common/lib/lib.d.ts';\nimport 'vs/text!vs/languages/typescript/common/lib/lib.es6.d.ts';\nimport * as ts from 'vs/languages/typescript/common/lib/typescriptServices';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {TypeScriptWorkerProtocol, IRawModelData} from './typescript';\nimport {IModelContentChangedEvent2} from 'vs/editor/common/editorCommon';\nimport {MirrorModel2} from 'vs/editor/common/model/mirrorModel2';\n\nclass TypeScriptWorker extends TypeScriptWorkerProtocol implements ts.LanguageServiceHost {\n\n\t// --- model sync -----------------------\n\n\tprivate _models: { [uri: string]: MirrorModel2 } = Object.create(null);\n\tprivate _extraLibs: { [fileName: string]: string } = Object.create(null);\n\tprivate _languageService = ts.createLanguageService(this);\n\tprivate _compilerOptions: ts.CompilerOptions;\n\n\tacceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel2(URI.parse(data.url),\n\t\t\tdata.value.lines,\n\t\t\tdata.value.EOL, data.versionId);\n\t}\n\n\tacceptModelChanged(uri: string, events: IModelContentChangedEvent2[]): void {\n\t\tconst model = this._models[uri];\n\t\tif (model) {\n\t\t\tmodel.onEvents(events);\n\t\t}\n\t}\n\n\tacceptRemovedModel(uri: string): void {\n\t\tdelete this._models[uri];\n\t}\n\n\t// --- default ---------\n\n\tacceptDefaults(options:ts.CompilerOptions, extraLibs:{ [path: string]: string }): TPromise<void> {\n\t\tthis._compilerOptions = options;\n\t\tthis._extraLibs = extraLibs;\n\t\treturn;\n\t}\n\n\t// --- language service host ---------------\n\n\tgetCompilationSettings(): ts.CompilerOptions {\n\t\treturn this._compilerOptions;\n\t}\n\n\tgetScriptFileNames(): string[] {\n\t\treturn Object.keys(this._models).concat(Object.keys(this._extraLibs));\n\t}\n\n\tgetScriptVersion(fileName: string): string {\n\t\tif (fileName in this._models) {\n\t\t\t// version changes on type\n\t\t\treturn this._models[fileName].version.toString();\n\n\t\t} else if (this.isDefaultLibFileName(fileName) || fileName in this._extraLibs) {\n\t\t\t// extra lib and default lib are static\n\t\t\treturn '1';\n\t\t}\n\t}\n\n\tgetScriptSnapshot(fileName: string): ts.IScriptSnapshot {\n\t\tlet text: string;\n\t\tif (fileName in this._models) {\n\t\t\t// a true editor model\n\t\t\ttext = this._models[fileName].getText();\n\n\t\t} else if (fileName in this._extraLibs) {\n\t\t\t// static extra lib\n\t\t\ttext = this._extraLibs[fileName];\n\n\t\t} else if (this.isDefaultLibFileName(fileName)) {\n\t\t\t// load lib(.es6)?.d.ts as module\n\t\t\ttext = require(fileName);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\treturn <ts.IScriptSnapshot>{\n\t\t\tgetText: (start, end) => text.substring(start, end),\n\t\t\tgetLength: () => text.length,\n\t\t\tgetChangeRange: () => undefined\n\t\t};\n\t}\n\n\tgetCurrentDirectory(): string {\n\t\treturn '';\n\t}\n\n\tgetDefaultLibFileName(options: ts.CompilerOptions): string {\n\t\t// TODO@joh support lib.es7.d.ts\n\t\treturn options.target > ts.ScriptTarget.ES5\n\t\t\t? 'vs/text!vs/languages/typescript/common/lib/lib.es6.d.ts'\n\t\t\t: 'vs/text!vs/languages/typescript/common/lib/lib.d.ts';\n\t}\n\n\tisDefaultLibFileName(fileName: string): boolean {\n\t\treturn fileName === this.getDefaultLibFileName(this._compilerOptions);\n\t}\n\n\t// --- language features\n\n\tgetSyntacticDiagnostics(fileName: string): TPromise<ts.Diagnostic[]> {\n\t\tconst diagnostics = this._languageService.getSyntacticDiagnostics(fileName);\n\t\tdiagnostics.forEach(diag => diag.file = undefined); // diag.file cannot be JSON'yfied\n\t\treturn TPromise.as(diagnostics);\n\t}\n\n\tgetSemanticDiagnostics(fileName: string): TPromise<ts.Diagnostic[]> {\n\t\tconst diagnostics = this._languageService.getSemanticDiagnostics(fileName);\n\t\tdiagnostics.forEach(diag => diag.file = undefined); // diag.file cannot be JSON'yfied\n\t\treturn TPromise.as(diagnostics);\n\t}\n\n\tgetCompilerOptionsDiagnostics(fileName: string): TPromise<ts.Diagnostic[]> {\n\t\tconst diagnostics = this._languageService.getCompilerOptionsDiagnostics();\n\t\tdiagnostics.forEach(diag => diag.file = undefined); // diag.file cannot be JSON'yfied\n\t\treturn TPromise.as(diagnostics);\n\t}\n\n\tgetCompletionsAtPosition(fileName: string, position:number): TPromise<ts.CompletionInfo> {\n\t\treturn TPromise.as(this._languageService.getCompletionsAtPosition(fileName, position));\n\t}\n\n\tgetCompletionEntryDetails(fileName: string, position: number, entry: string): TPromise<ts.CompletionEntryDetails> {\n\t\treturn TPromise.as(this._languageService.getCompletionEntryDetails(fileName, position, entry));\n\t}\n\n\tgetSignatureHelpItems(fileName: string, position:number): TPromise<ts.SignatureHelpItems> {\n\t\treturn TPromise.as(this._languageService.getSignatureHelpItems(fileName, position));\n\t}\n\n\tgetQuickInfoAtPosition(fileName: string, position: number): TPromise<ts.QuickInfo> {\n\t\treturn TPromise.as(this._languageService.getQuickInfoAtPosition(fileName, position));\n\t}\n\n\tgetOccurrencesAtPosition(fileName: string, position: number): TPromise<ts.ReferenceEntry[]> {\n\t\treturn TPromise.as(this._languageService.getOccurrencesAtPosition(fileName, position));\n\t}\n\n\tgetDefinitionAtPosition(fileName: string, position: number): TPromise<ts.DefinitionInfo[]> {\n\t\treturn TPromise.as(this._languageService.getDefinitionAtPosition(fileName, position));\n\t}\n\n\tgetReferencesAtPosition(fileName: string, position: number): TPromise<ts.ReferenceEntry[]> {\n\t\treturn TPromise.as(this._languageService.getReferencesAtPosition(fileName, position));\n\t}\n\n\tgetNavigationBarItems(fileName: string): TPromise<ts.NavigationBarItem[]> {\n\t\treturn TPromise.as(this._languageService.getNavigationBarItems(fileName));\n\t}\n\n\tgetFormattingEditsForDocument(fileName: string, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\treturn TPromise.as(this._languageService.getFormattingEditsForDocument(fileName, options));\n\t}\n\n\tgetFormattingEditsForRange(fileName: string, start: number, end: number, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\treturn TPromise.as(this._languageService.getFormattingEditsForRange(fileName, start, end, options));\n\t}\n\n\tgetFormattingEditsAfterKeystroke(fileName: string, postion: number, ch: string, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\treturn TPromise.as(this._languageService.getFormattingEditsAfterKeystroke(fileName, postion, ch, options));\n\t}\n\n\tgetEmitOutput(fileName: string): TPromise<ts.EmitOutput> {\n\t\treturn TPromise.as(this._languageService.getEmitOutput(fileName));\n\t}\n}\n\nexport function create(): TypeScriptWorkerProtocol {\n\treturn new TypeScriptWorker();\n}"]}