{"version":3,"file":"vs/languages/typescript/common/languageFeatures.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/typescript/common/languageFeatures.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport * as lifecycle from 'vs/base/common/lifecycle';\nimport * as editor from 'vs/editor/common/editorCommon';\nimport * as modes from 'vs/editor/common/modes';\nimport matches from 'vs/editor/common/modes/languageSelector';\nimport {IMarkerService, IMarkerData} from 'vs/platform/markers/common/markers';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {TypeScriptWorkerProtocol, LanguageServiceDefaults} from 'vs/languages/typescript/common/typescript';\nimport * as ts from 'vs/languages/typescript/common/lib/typescriptServices';\n\nexport function register(modelService: IModelService, markerService: IMarkerService,\n\tselector: string, defaults:LanguageServiceDefaults, worker: (first: URI, ...more: URI[]) => TPromise<TypeScriptWorkerProtocol>): lifecycle.IDisposable {\n\n\tconst disposables: lifecycle.IDisposable[] = [];\n\tdisposables.push(modes.SuggestRegistry.register(selector, new SuggestAdapter(modelService, worker)));\n\tdisposables.push(modes.ParameterHintsRegistry.register(selector, new ParameterHintsAdapter(modelService, worker)));\n\tdisposables.push(modes.ExtraInfoRegistry.register(selector, new QuickInfoAdapter(modelService, worker)));\n\tdisposables.push(modes.OccurrencesRegistry.register(selector, new OccurrencesAdapter(modelService, worker)));\n\tdisposables.push(modes.DeclarationRegistry.register(selector, new DeclarationAdapter(modelService, worker)));\n\tdisposables.push(modes.ReferenceSearchRegistry.register(selector, new ReferenceAdapter(modelService, worker)));\n\tdisposables.push(modes.OutlineRegistry.register(selector, new OutlineAdapter(modelService, worker)));\n\tdisposables.push(modes.FormatRegistry.register(selector, new FormatAdapter(modelService, worker)));\n\tdisposables.push(modes.FormatOnTypeRegistry.register(selector, new FormatAdapter(modelService, worker)));\n\tdisposables.push(new DiagnostcsAdapter(defaults, selector, markerService, modelService, worker));\n\n\treturn lifecycle.combinedDisposable(disposables);\n}\n\nabstract class Adapter {\n\n\tconstructor(protected _modelService: IModelService, protected _worker: (first:URI, ...more:URI[]) => TPromise<TypeScriptWorkerProtocol>) {\n\n\t}\n\n\tprotected _positionToOffset(resource: URI, position: editor.IPosition): number {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tlet result = position.column - 1;\n\t\tfor (let i = 1; i < position.lineNumber; i++) {\n\t\t\tresult += model.getLineContent(i).length + model.getEOL().length;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprotected _offsetToPosition(resource: URI, offset: number): editor.IPosition {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tlet lineNumber = 1;\n\t\twhile (true) {\n\t\t\tlet len = model.getLineContent(lineNumber).length + model.getEOL().length;\n\t\t\tif (offset < len) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\toffset -= len;\n\t\t\tlineNumber++;\n\t\t}\n\t\treturn { lineNumber, column: 1 + offset };\n\t}\n\n\tprotected _textSpanToRange(resource: URI, span: ts.TextSpan): editor.IRange {\n\t\tlet p1 = this._offsetToPosition(resource, span.start);\n\t\tlet p2 = this._offsetToPosition(resource, span.start + span.length);\n\t\tlet {lineNumber: startLineNumber, column: startColumn} = p1;\n\t\tlet {lineNumber: endLineNumber, column: endColumn} = p2;\n\t\treturn { startLineNumber, startColumn, endLineNumber, endColumn };\n\t}\n}\n\n// --- diagnostics --- ---\n\nclass DiagnostcsAdapter extends Adapter {\n\n\tprivate _disposables: lifecycle.IDisposable[] = [];\n\tprivate _listener: { [uri: string]: lifecycle.IDisposable } = Object.create(null);\n\n\tconstructor(private _defaults: LanguageServiceDefaults, private _selector: string,\n\t\tprivate _markerService: IMarkerService, modelService: IModelService,\n\t\tworker: (first: URI, ...more: URI[]) => TPromise<TypeScriptWorkerProtocol>\n\t) {\n\t\tsuper(modelService, worker);\n\n\t\tconst onModelAdd = (model: editor.IModel): void => {\n\t\t\tif (!matches(_selector, model.getAssociatedResource(), model.getModeId())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet handle: number;\n\t\t\tthis._listener[model.getAssociatedResource().toString()] = model.addListener2(editor.EventType.ModelContentChanged2, () => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = setTimeout(() => this._doValidate(model.getAssociatedResource()), 500);\n\t\t\t});\n\n\t\t\tthis._doValidate(model.getAssociatedResource());\n\t\t};\n\n\t\tconst onModelRemoved = (model: editor.IModel): void => {\n\t\t\tdelete this._listener[model.getAssociatedResource().toString()];\n\t\t};\n\n\t\tthis._disposables.push(modelService.onModelAdded(onModelAdd));\n\t\tthis._disposables.push(modelService.onModelRemoved(onModelRemoved));\n\t\tthis._disposables.push(modelService.onModelModeChanged(event => {\n\t\t\tonModelRemoved(event.model);\n\t\t\tonModelAdd(event.model);\n\t\t}));\n\n\t\tthis._disposables.push({\n\t\t\tdispose: () => {\n\t\t\t\tfor (let key in this._listener) {\n\t\t\t\t\tthis._listener[key].dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tmodelService.getModels().forEach(onModelAdd);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._disposables = lifecycle.dispose(this._disposables);\n\t}\n\n\tprivate _doValidate(resource: URI): void {\n\t\tthis._worker(resource).then(worker => {\n\t\t\tlet promises: TPromise<ts.Diagnostic[]>[] = [];\n\t\t\tif (!this._defaults.diagnosticsOptions.noSyntaxValidation) {\n\t\t\t\tpromises.push(worker.getSyntacticDiagnostics(resource.toString()));\n\t\t\t}\n\t\t\tif (!this._defaults.diagnosticsOptions.noSemanticValidation) {\n\t\t\t\tpromises.push(worker.getSemanticDiagnostics(resource.toString()));\n\t\t\t}\n\t\t\treturn TPromise.join(promises);\n\t\t}).then(diagnostics => {\n\t\t\tconst markers = diagnostics\n\t\t\t\t.reduce((p, c) => c.concat(p), [])\n\t\t\t\t.map(d => this._convertDiagnostics(resource, d));\n\t\t\tthis._markerService.changeOne(this._selector, resource, markers);\n\t\t}).done(undefined, err => {\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tprivate _convertDiagnostics(resource: URI, diag: ts.Diagnostic): IMarkerData {\n\t\tconst {lineNumber: startLineNumber, column: startColumn} = this._offsetToPosition(resource, diag.start);\n\t\tconst {lineNumber: endLineNumber, column: endColumn} = this._offsetToPosition(resource, diag.start + diag.length);\n\n\t\treturn {\n\t\t\tseverity: Severity.Error,\n\t\t\tstartLineNumber,\n\t\t\tstartColumn,\n\t\t\tendLineNumber,\n\t\t\tendColumn,\n\t\t\tmessage: ts.flattenDiagnosticMessageText(diag.messageText, '\\n')\n\t\t};\n\t}\n}\n\n// --- suggest ------\n\nclass SuggestAdapter extends Adapter implements modes.ISuggestSupport {\n\n\tsuggest(resource: URI, position: editor.IPosition, triggerCharacter?: string) {\n\n\t\tconst model = this._modelService.getModel(resource);\n\t\tconst wordInfo = model.getWordUntilPosition(position);\n\t\tconst offset = this._positionToOffset(resource, position);\n\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getCompletionsAtPosition(resource.toString(), offset);\n\t\t}).then(info => {\n\t\t\tif (!info) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet suggestions = info.entries.map(entry => {\n\t\t\t\treturn <modes.ISuggestion>{\n\t\t\t\t\tlabel: entry.name,\n\t\t\t\t\tcodeSnippet: entry.name,\n\t\t\t\t\ttype: SuggestAdapter.asType(entry.kind)\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn [{\n\t\t\t\tcurrentWord: wordInfo && wordInfo.word,\n\t\t\t\tsuggestions\n\t\t\t}];\n\t\t});\n\t}\n\n\tgetSuggestionDetails(resource: URI, position: editor.IPosition, suggestion: modes.ISuggestion) {\n\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getCompletionEntryDetails(resource.toString(),\n\t\t\t\tthis._positionToOffset(resource, position),\n\t\t\t\tsuggestion.label);\n\n\t\t}).then(details => {\n\t\t\tif (!details) {\n\t\t\t\treturn suggestion;\n\t\t\t}\n\t\t\treturn <modes.ISuggestion>{\n\t\t\t\tlabel: details.name,\n\t\t\t\tcodeSnippet: details.name,\n\t\t\t\ttype: SuggestAdapter.asType(details.kind),\n\t\t\t\ttypeLabel: ts.displayPartsToString(details.displayParts),\n\t\t\t\tdocumentationLabel: ts.displayPartsToString(details.documentation)\n\t\t\t};\n\t\t});\n\t}\n\n\tstatic asType(kind: string): modes.SuggestionType{\n\t\tswitch (kind) {\n\t\t\tcase 'getter':\n\t\t\tcase 'setting':\n\t\t\tcase 'constructor':\n\t\t\tcase 'method':\n\t\t\tcase 'property':\n\t\t\t\treturn 'property';\n\t\t\tcase 'function':\n\t\t\tcase 'local function':\n\t\t\t\treturn 'function';\n\t\t\tcase 'class':\n\t\t\t\treturn 'class';\n\t\t\tcase 'interface':\n\t\t\t\treturn 'interface';\n\t\t}\n\n\t\treturn 'variable';\n\t}\n\n\tgetTriggerCharacters(): string[] {\n\t\treturn ['.'];\n\t}\n\n\tshouldShowEmptySuggestionList(): boolean {\n\t\treturn true;\n\t}\n\n\tshouldAutotriggerSuggest(context: modes.ILineContext, offset: number, triggeredByCharacter: string): boolean {\n\t\treturn true;\n\t}\n}\n\nclass ParameterHintsAdapter extends Adapter implements modes.IParameterHintsSupport {\n\n\tgetParameterHintsTriggerCharacters(): string[] {\n\t\treturn ['(', ','];\n\t}\n\n\tshouldTriggerParameterHints(context: modes.ILineContext, offset: number): boolean {\n\t\treturn true;\n\t}\n\n\tgetParameterHints(resource: URI, position: editor.IPosition, triggerCharacter?: string): TPromise<modes.IParameterHints> {\n\t\treturn this._worker(resource).then(worker => worker.getSignatureHelpItems(resource.toString(), this._positionToOffset(resource, position))).then(info => {\n\n\t\t\tif (!info) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet ret = <modes.IParameterHints>{\n\t\t\t\tcurrentSignature: info.selectedItemIndex,\n\t\t\t\tcurrentParameter: info.argumentIndex,\n\t\t\t\tsignatures: []\n\t\t\t};\n\n\t\t\tinfo.items.forEach(item => {\n\n\t\t\t\tlet signature = <modes.ISignature>{\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdocumentation: null,\n\t\t\t\t\tparameters: []\n\t\t\t\t};\n\n\t\t\t\tsignature.label += ts.displayPartsToString(item.prefixDisplayParts);\n\t\t\t\titem.parameters.forEach((p, i, a) => {\n\t\t\t\t\tlet label = ts.displayPartsToString(p.displayParts);\n\t\t\t\t\tlet parameter = <modes.IParameter>{\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tdocumentation: ts.displayPartsToString(p.documentation),\n\t\t\t\t\t\tsignatureLabelOffset: signature.label.length,\n\t\t\t\t\t\tsignatureLabelEnd: signature.label.length + label.length\n\t\t\t\t\t};\n\t\t\t\t\tsignature.label += label;\n\t\t\t\t\tsignature.parameters.push(parameter);\n\t\t\t\t\tif (i < a.length - 1) {\n\t\t\t\t\t\tsignature.label += ts.displayPartsToString(item.separatorDisplayParts);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsignature.label += ts.displayPartsToString(item.suffixDisplayParts);\n\t\t\t\tret.signatures.push(signature);\n\t\t\t});\n\n\t\t\treturn ret;\n\n\t\t});\n\t}\n}\n\n// --- hover ------\n\nclass QuickInfoAdapter extends Adapter implements modes.IExtraInfoSupport {\n\n\tcomputeInfo(resource: URI, position: editor.IPosition): TPromise<modes.IComputeExtraInfoResult> {\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getQuickInfoAtPosition(resource.toString(), this._positionToOffset(resource, position));\n\t\t}).then(info => {\n\t\t\tif (!info) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn <modes.IComputeExtraInfoResult>{\n\t\t\t\trange: this._textSpanToRange(resource, info.textSpan),\n\t\t\t\tvalue: ts.displayPartsToString(info.displayParts)\n\t\t\t};\n\t\t});\n\t}\n}\n\n// --- occurrences ------\n\nclass OccurrencesAdapter extends Adapter implements modes.IOccurrencesSupport {\n\n\tfindOccurrences(resource: URI, position: editor.IPosition, strict?: boolean): TPromise<modes.IOccurence[]> {\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getOccurrencesAtPosition(resource.toString(), this._positionToOffset(resource, position));\n\t\t}).then(entries => {\n\t\t\tif (!entries) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn entries.map(entry => {\n\t\t\t\treturn <modes.IOccurence>{\n\t\t\t\t\trange: this._textSpanToRange(resource, entry.textSpan),\n\t\t\t\t\tkind: entry.isWriteAccess ? 'write' : 'text'\n\t\t\t\t};\n\t\t\t});\n\t\t});\n\t}\n}\n\n// --- definition ------\n\nclass DeclarationAdapter extends Adapter implements modes.IDeclarationSupport {\n\n\tcanFindDeclaration(context: modes.ILineContext, offset: number): boolean {\n\t\treturn true;\n\t}\n\n\tfindDeclaration(resource: URI, position: editor.IPosition): TPromise<modes.IReference[]> {\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getDefinitionAtPosition(resource.toString(), this._positionToOffset(resource, position));\n\t\t}).then(entries => {\n\t\t\tif (!entries) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst result: modes.IReference[] = [];\n\t\t\tfor (let entry of entries) {\n\t\t\t\tconst uri = URI.parse(entry.fileName);\n\t\t\t\tif (this._modelService.getModel(uri)) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\trange: this._textSpanToRange(uri, entry.textSpan)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n}\n\n// --- references ------\n\nclass ReferenceAdapter extends Adapter implements modes.IReferenceSupport {\n\n\tcanFindReferences(context: modes.ILineContext, offset: number): boolean {\n\t\treturn true;\n\t}\n\n\tfindReferences(resource: URI, position: editor.IPosition, includeDeclaration: boolean): TPromise<modes.IReference[]> {\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getReferencesAtPosition(resource.toString(), this._positionToOffset(resource, position));\n\t\t}).then(entries => {\n\t\t\tif (!entries) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst result: modes.IReference[] = [];\n\t\t\tfor (let entry of entries) {\n\t\t\t\tconst uri = URI.parse(entry.fileName);\n\t\t\t\tif (this._modelService.getModel(uri)) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tresource: uri,\n\t\t\t\t\t\trange: this._textSpanToRange(uri, entry.textSpan)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n}\n\n// --- outline ------\n\nclass OutlineAdapter extends Adapter implements modes.IOutlineSupport {\n\n\tgetOutline(resource: URI): TPromise<modes.IOutlineEntry[]> {\n\t\treturn this._worker(resource).then(worker => worker.getNavigationBarItems(resource.toString())).then(items => {\n\t\t\tif (!items) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst convert = (item: ts.NavigationBarItem): modes.IOutlineEntry => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: item.text,\n\t\t\t\t\ttype: item.kind,\n\t\t\t\t\trange: this._textSpanToRange(resource, item.spans[0]),\n\t\t\t\t\tchildren: item.childItems && item.childItems.map(convert)\n\t\t\t\t};\n\t\t\t};\n\n\t\t\treturn items.map(convert);\n\t\t});\n\t}\n}\n\n// --- formatting ----\n\nclass FormatAdapter extends Adapter implements modes.IFormattingSupport {\n\n\tformatRange(resource: URI, range: editor.IRange, options: modes.IFormattingOptions): TPromise<editor.ISingleEditOperation[]>{\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getFormattingEditsForRange(resource.toString(),\n\t\t\t\tthis._positionToOffset(resource, { lineNumber: range.startLineNumber, column: range.startColumn }),\n\t\t\t\tthis._positionToOffset(resource, { lineNumber: range.endLineNumber, column: range.endColumn }),\n\t\t\t\tFormatAdapter._convertOptions(options));\n\t\t}).then(edits => {\n\t\t\tif (edits) {\n\t\t\t\treturn edits.map(edit => this._convertTextChanges(resource, edit));\n\t\t\t}\n\t\t});\n\t}\n\n\tget autoFormatTriggerCharacters() {\n\t\treturn [';', '}', '\\n'];\n\t}\n\n\tformatAfterKeystroke(resource: URI, position: editor.IPosition, ch: string, options: modes.IFormattingOptions): TPromise<editor.ISingleEditOperation[]> {\n\t\treturn this._worker(resource).then(worker => {\n\t\t\treturn worker.getFormattingEditsAfterKeystroke(resource.toString(),\n\t\t\t\tthis._positionToOffset(resource, position),\n\t\t\t\tch, FormatAdapter._convertOptions(options));\n\t\t}).then(edits => {\n\t\t\tif (edits) {\n\t\t\t\treturn edits.map(edit => this._convertTextChanges(resource, edit));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _convertTextChanges(resource: URI, change: ts.TextChange): editor.ISingleEditOperation {\n\t\treturn <editor.ISingleEditOperation>{\n\t\t\ttext: change.newText,\n\t\t\trange: this._textSpanToRange(resource, change.span)\n\t\t};\n\t}\n\n\tprivate static _convertOptions(options: modes.IFormattingOptions): ts.FormatCodeOptions {\n\t\treturn {\n\t\t\tConvertTabsToSpaces: options.insertSpaces,\n\t\t\tTabSize: options.tabSize,\n\t\t\tIndentSize: options.tabSize,\n\t\t\tIndentStyle: ts.IndentStyle.Smart,\n\t\t\tNewLineCharacter: '\\n',\n\t\t\tInsertSpaceAfterCommaDelimiter: true,\n\t\t\tInsertSpaceAfterFunctionKeywordForAnonymousFunctions: false,\n\t\t\tInsertSpaceAfterKeywordsInControlFlowStatements: false,\n\t\t\tInsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: true,\n\t\t\tInsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: true,\n\t\t\tInsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: true,\n\t\t\tInsertSpaceAfterSemicolonInForStatements: false,\n\t\t\tInsertSpaceBeforeAndAfterBinaryOperators: true,\n\t\t\tPlaceOpenBraceOnNewLineForControlBlocks: false,\n\t\t\tPlaceOpenBraceOnNewLineForFunctions: false\n\t\t};\n\t}\n}\n"]}