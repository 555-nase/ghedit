{"version":3,"file":"vs/languages/typescript/common/typescript.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/typescript/common/typescript.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport URI from 'vs/base/common/uri';\nimport {notImplemented} from 'vs/base/common/errors';\nimport {IRequestHandler} from 'vs/base/common/worker/simpleWorker';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport * as ts from 'vs/languages/typescript/common/lib/typescriptServices';\n\n// --- TypeScript configuration and defaults ---------\n\nexport interface DiagnosticsOptions {\n\tnoSemanticValidation?: boolean;\n\tnoSyntaxValidation?: boolean;\n}\n\nexport class LanguageServiceDefaults {\n\n\tprivate _onDidChange = new Emitter<LanguageServiceDefaults>();\n\tprivate _extraLibs: { [path: string]: string };\n\tprivate _compilerOptions: ts.CompilerOptions;\n\tprivate _diagnosticsOptions: DiagnosticsOptions;\n\n\tconstructor(compilerOptions: ts.CompilerOptions, diagnosticsOptions: DiagnosticsOptions) {\n\t\tthis._extraLibs = Object.create(null);\n\t\tthis.setCompilerOptions(compilerOptions);\n\t\tthis.setDiagnosticsOptions(diagnosticsOptions);\n\t}\n\n\tget onDidChange(): Event<LanguageServiceDefaults>{\n\t\treturn this._onDidChange.event;\n\t}\n\n\tget extraLibs(): { [path: string]: string } {\n\t\treturn Object.freeze(this._extraLibs);\n\t}\n\n\taddExtraLib(content: string, filePath?: string): IDisposable {\n\t\tif (typeof filePath === 'undefined') {\n\t\t\tfilePath = `ts:extralib-${Date.now()}`;\n\t\t}\n\n\t\tif (this._extraLibs[filePath]) {\n\t\t\tthrow new Error(`${filePath} already a extra lib`);\n\t\t}\n\n\t\tthis._extraLibs[filePath] = content;\n\t\tthis._onDidChange.fire(this);\n\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tif (delete this._extraLibs[filePath]) {\n\t\t\t\t\tthis._onDidChange.fire(this);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tget compilerOptions(): ts.CompilerOptions {\n\t\treturn this._compilerOptions;\n\t}\n\n\tsetCompilerOptions(options: ts.CompilerOptions): void {\n\t\tthis._compilerOptions = options || Object.create(null);\n\t\tthis._onDidChange.fire(this);\n\t}\n\n\tget diagnosticsOptions(): DiagnosticsOptions {\n\t\treturn this._diagnosticsOptions;\n\t}\n\n\tsetDiagnosticsOptions(options: DiagnosticsOptions): void {\n\t\tthis._diagnosticsOptions = options || Object.create(null);\n\t\tthis._onDidChange.fire(this);\n\t}\n}\n\nexport const typeScriptDefaults = new LanguageServiceDefaults(\n\t{ allowNonTsExtensions: true, target: ts.ScriptTarget.Latest },\n\t{ noSemanticValidation: false, noSyntaxValidation: false });\n\nexport const javaScriptDefaults = new LanguageServiceDefaults(\n\t{ allowNonTsExtensions: true, allowJs: true, target: ts.ScriptTarget.Latest },\n\t{ noSemanticValidation: true, noSyntaxValidation: false });\n\n\n// --- TypeScript worker protocol ---------\n\nexport interface LanguageServiceMode {\n\tgetLanguageServiceWorker(...resources: URI[]): TPromise<TypeScriptWorkerProtocol>;\n}\n\nexport interface IRawModelData {\n\turl:string;\n\tversionId:number;\n\tvalue:editorCommon.IRawText;\n}\n\nexport abstract class TypeScriptWorkerProtocol implements IRequestHandler {\n\n\t_requestHandlerTrait: any;\n\n\t// --- model sync\n\n\tacceptNewModel(data: IRawModelData): void {\n\t\tthrow notImplemented();\n\t}\n\n\tacceptModelChanged(uri: string, events: editorCommon.IModelContentChangedEvent2[]): void {\n\t\tthrow notImplemented();\n\t}\n\n\tacceptRemovedModel(uri: string): void {\n\t\tthrow notImplemented();\n\t}\n\n\tacceptDefaults(options: ts.CompilerOptions, extraLibs: { [path: string]: string }): TPromise<void> {\n\t\tthrow notImplemented();\n\t}\n\n\t// --- language features\n\n\tgetSyntacticDiagnostics(fileName: string): TPromise<ts.Diagnostic[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetSemanticDiagnostics(fileName: string): TPromise<ts.Diagnostic[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetCompletionsAtPosition(uri: string, offset: number): TPromise<ts.CompletionInfo> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetCompletionEntryDetails(fileName: string, position: number, entry: string): TPromise<ts.CompletionEntryDetails> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetSignatureHelpItems(fileName: string, position:number): TPromise<ts.SignatureHelpItems> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetQuickInfoAtPosition(fileName: string, position: number): TPromise<ts.QuickInfo> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetOccurrencesAtPosition(fileName: string, position: number): TPromise<ts.ReferenceEntry[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetDefinitionAtPosition(fileName: string, position: number): TPromise<ts.DefinitionInfo[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetReferencesAtPosition(fileName: string, position: number): TPromise<ts.ReferenceEntry[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetNavigationBarItems(fileName: string): TPromise<ts.NavigationBarItem[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetFormattingEditsForDocument(fileName: string, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetFormattingEditsForRange(fileName: string, start: number, end: number, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetFormattingEditsAfterKeystroke(fileName: string, postion: number, ch: string, options: ts.FormatCodeOptions): TPromise<ts.TextChange[]> {\n\t\tthrow notImplemented();\n\t}\n\n\tgetEmitOutput(fileName: string): TPromise<ts.EmitOutput> {\n\t\tthrow notImplemented();\n\t}\n}\n"]}