{"version":3,"file":"vs/languages/sass/test/common/selectorPrinting.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/sass/test/common/selectorPrinting.test.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAKb,KAAK,CAAC,0BAA0B,EAAE;QAEjC,IAAI,CAAC,iBAAiB,EAAE;YACvB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;YAChC,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;YAC3E,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,wBAAwB,CAAC,CAAC;YAC1F,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,CAAC,CAAC;YACrF,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,mBAAmB,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;YAC/E,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,0BAA0B,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;YACtF,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,4BAA4B,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YACjF,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,4BAA4B,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,EAAE;YAC5B,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;YAChC,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,mBAAmB,EAAE,GAAG,EAAE,eAAe,CAAC,CAAC;YAChF,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,qBAAqB,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE;YACpB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;YAChC,mBAAmB,CAAC,aAAa,CAAC,CAAC,EAAE,gBAAgB,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;QAC9E,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport parser = require('vs/languages/sass/common/parser/sassParser');\nimport selectorPrinterTest = require('vs/languages/css/test/common/selectorPrinting.test');\n\nsuite('Sass - selector printing', () => {\n\n\ttest('nested selector', function() {\n\t\tvar p = new parser.SassParser();\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { e1 { } }', 'e1', '{o1{…{e1}}}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { e1.div { } }', 'e1', '{o1{…{e1[class=div]}}}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 o2 { e1 { } }', 'e1', '{o1{…{o2{…{e1}}}}}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1, o2 { e1 { } }', 'e1', '{o1{…{e1}}}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { @if $a { e1 { } } }', 'e1', '{o1{…{e1}}}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { @mixin a { e1 { } } }', 'e1', '{e1}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { @mixin a { e1 { } } }', 'e1', '{e1}');\n\t});\n\n\ttest('referencing selector', function() {\n\t\tvar p = new parser.SassParser();\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { &:hover { }}', '&', '{o1[:hover=]}');\n\t\tselectorPrinterTest.parseSelector(p, 'o1 { &:hover & { }}', '&', '{o1[:hover=]{…{o1}}}');\n\t});\n\n\ttest('placeholders', function() {\n\t\tvar p = new parser.SassParser();\n\t\tselectorPrinterTest.parseSelector(p, '%o1 { e1 { } }', 'e1', '{%o1{…{e1}}}');\n\t});\n});"]}