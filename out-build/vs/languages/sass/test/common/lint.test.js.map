{"version":3,"file":"vs/languages/sass/test/common/lint.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/sass/test/common/lint.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb,wBAAwB,KAAY;QAAE,eAAyB;aAAzB,WAAyB,CAAzB,sBAAyB,CAAzB,IAAyB;YAAzB,8BAAyB;;QAC9D,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC;QAEpD,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,uBAAuB,KAAY;QAAE,eAAyB;aAAzB,WAAyB,CAAzB,sBAAyB,CAAzB,IAAyB;YAAzB,8BAAyB;;QAC7D,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;QAChC,IAAI,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;QACnD,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,aAAa,EAAE;QAEpB,IAAI,CAAC,eAAe,EAAE;YACrB,aAAa,CAAC,oCAAoC,EAAE,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,EAAE;YACrC,cAAc,CAAC,iBAAiB,EAAE,SAAS,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACjF,cAAc,CAAC,mCAAmC,EAAE,SAAS,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACnG,cAAc,CAAC,sCAAsC,EAAE,SAAS,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;YACtG,cAAc,CAAC,oCAAoC,CAAC,CAAC,CAAC,0CAA0C;YAChG,cAAc,CAAC,qCAAqC,CAAC,CAAC,CAAC,yCAAyC;YAChG,cAAc,CAAC,6BAA6B,CAAC,CAAC,CAAC,yCAAyC;QACzF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,EAAE;YAC1B,aAAa,CAAC,8CAA8C,EAAE,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC/F,aAAa,CAAC,iDAAiD,EAAE,SAAS,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChK,aAAa,CAAC,+BAA+B,CAAC,CAAC,CAAC,WAAW;YAC3D,aAAa,CAAC,uCAAuC,CAAC,CAAC,CAAC,sCAAsC;YAC9F,aAAa,CAAC,qCAAqC,CAAC,CAAC,CAAC,sBAAsB;QAC7E,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,0BAA0B,EAAE;YAChC,aAAa,CAAC,mCAAmC,EAAE,SAAS,CAAC,KAAK,CAAC,iBAAiB,EAAE,SAAS,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;YACpJ,aAAa,CAAC,oDAAoD,EAAE,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACvG,aAAa,CAAC,uHAAuH,CAAC,CAAC;QACxI,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport lintRules = require('vs/languages/css/common/services/lintRules');\nimport cssLintTest = require('vs/languages/css/test/common/lint.test');\nimport parser = require('vs/languages/sass/common/parser/sassParser');\n\nfunction assertFontFace(input:string, ...rules:lintRules.Rule[]) : void {\n\tvar p = new parser.SassParser();\n\tvar node = p.internalParse(input, p._parseFontFace);\n\n\tcssLintTest.assertEntries(node, rules);\n}\n\nfunction assertRuleSet(input:string, ...rules:lintRules.Rule[]) : void {\n\tvar p = new parser.SassParser();\n\tvar node = p.internalParse(input, p._parseRuleset);\n\tcssLintTest.assertEntries(node, rules);\n}\n\nsuite('Sass - Lint', () => {\n\n\ttest('empty ruleset', function() {\n\t\tassertRuleSet('selector { color: red; nested {} }', lintRules.Rules.EmptyRuleSet);\n\t});\n\n\ttest('font-face required properties', function() {\n\t\tassertFontFace('@font-face {  }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { src: url(test.tff) }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { font-family: \\'name\\' }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { font-#{family}: foo }'); // no error, ignore all unknown properties\n\t\tassertFontFace('@font-face { font: {family: foo } }'); // no error, ignore all nested properties\n\t\tassertFontFace('@font-face { @if true { } }'); // no error, ignore all nested properties\n\t});\n\n\ttest('unknown properties', function() {\n\t\tassertRuleSet('selector { -ms-property: \"rest is missing\" }', lintRules.Rules.UnknownProperty);\n\t\tassertRuleSet('selector { -moz-box-shadow: \"rest is missing\" }', lintRules.Rules.UnknownProperty, lintRules.Rules.IncludeStandardPropertyWhenUsingVendorPrefix);\n\t\tassertRuleSet('selector { box-shadow: none }'); // no error\n\t\tassertRuleSet('selector { -moz-#{box}-shadow: none }'); // no error if theres an interpolation\n\t\tassertRuleSet('selector { outer: { nested : blue }'); // no error for nested\n\t});\n\n\ttest('vendor specific prefixes', function() {\n\t\tassertRuleSet('selector { -moz-animation: none }', lintRules.Rules.AllVendorPrefixes, lintRules.Rules.IncludeStandardPropertyWhenUsingVendorPrefix);\n\t\tassertRuleSet('selector { -moz-transform: none; transform: none }', lintRules.Rules.AllVendorPrefixes);\n\t\tassertRuleSet('selector { -moz-transform: none; transform: none; -o-transform: none; -webkit-transform: none; -ms-transform: none; }');\n\t});\n});\n"]}