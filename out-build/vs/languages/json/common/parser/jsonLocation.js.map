{"version":3,"file":"vs/languages/json/common/parser/jsonLocation.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/json/common/parser/jsonLocation.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAEb;QAGC,sBAAY,QAAkB;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAEM,6BAAM,GAAb,UAAc,OAAe;YAC5B,MAAM,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;QACxD,CAAC;QAEM,kCAAW,GAAlB;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAEM,8BAAO,GAAd,UAAe,QAAkB;YAChC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,CAAC,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACrE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC7D,CAAC,EAAE,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAE,KAAK,CAAC;gBACf,CAAC;YACF,CAAC;YACD,MAAM,CAAC,CAAC,KAAK,QAAQ,CAAC,MAAM,CAAC;QAC9B,CAAC;QAEM,+BAAQ,GAAf;YACC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAC7C,CAAC;QACF,mBAAC;IAAD,CAAC,AA9BD,IA8BC;IA9BY,oBAAY,eA8BxB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class JSONLocation {\n\tprivate segments: string[];\n\n\tconstructor(segments: string[]) {\n\t\tthis.segments = segments;\n\t}\n\n\tpublic append(segment: string) : JSONLocation {\n\t\treturn new JSONLocation(this.segments.concat(segment));\n\t}\n\n\tpublic getSegments() {\n\t\treturn this.segments;\n\t}\n\n\tpublic matches(segments: string[]) {\n\t\tvar k = 0;\n\t\tfor (var i= 0; k < segments.length && i < this.segments.length; i++) {\n\t\t\tif (segments[k] === this.segments[i] || segments[k] === '*') {\n\t\t\t\tk++;\n\t\t\t} else if (segments[k] !== '**') {\n\t\t\t\treturn  false;\n\t\t\t}\n\t\t}\n\t\treturn k === segments.length;\n\t}\n\n\tpublic toString() : string {\n\t\treturn '[' + this.segments.join('][') + ']';\n\t}\n}"]}