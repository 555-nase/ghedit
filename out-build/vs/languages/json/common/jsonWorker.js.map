{"version":3,"file":"vs/languages/json/common/jsonWorker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/json/common/jsonWorker.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Parser = require('./parser/jsonParser');\nimport JSONFormatter = require('vs/languages/json/common/features/jsonFormatter');\nimport SchemaService = require('./jsonSchemaService');\nimport JSONSchema = require('vs/base/common/jsonSchema');\nimport JSONIntellisense = require('./jsonIntellisense');\nimport WinJS = require('vs/base/common/winjs.base');\nimport Strings = require('vs/base/common/strings');\nimport ProjectJSONContribution = require('./contributions/projectJSONContribution');\nimport PackageJSONContribution = require('./contributions/packageJSONContribution');\nimport BowerJSONContribution = require('./contributions/bowerJSONContribution');\nimport GlobPatternContribution = require('./contributions/globPatternContribution');\nimport errors = require('vs/base/common/errors');\nimport {IMarkerService, IMarkerData} from 'vs/platform/markers/common/markers';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {JSONLocation} from './parser/jsonLocation';\nimport {filterSuggestions} from 'vs/editor/common/modes/supports/suggestSupport';\nimport {ValidationHelper} from 'vs/editor/common/worker/validationHelper';\n\nexport interface IOptionsSchema {\n\t/**\n\t * HTTP schema URL or a relative path to schema file in workspace\n\t */\n\turl: string;\n\t/**\n\t * The patterns (e.g. *.pack.json) to map files to this schema\n\t */\n\tfileMatch: string[];\n\t/**\n\t * A unresolved schema definition. Optional, to avoid fetching from a URL.\n\t */\n\tschema?: JSONSchema.IJSONSchema;\n\n\t/* deprecated */\n\tschemaPath: string;\n\t/* deprecated */\n\tfilePattern: string;\n}\n\nexport interface IOptions {\n\tschemas: IOptionsSchema[];\n}\n\nexport interface ISuggestionsCollector {\n\tadd(suggestion: Modes.ISuggestion): void;\n\tsetAsIncomplete() : void;\n\terror(message:string): void;\n}\n\nexport interface IJSONWorkerContribution {\n\tgetInfoContribution(resource: URI, location: JSONLocation) : WinJS.TPromise<HtmlContent.IHTMLContentElement[]>;\n\tcollectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: ISuggestionsCollector) : WinJS.Promise;\n\tcollectValueSuggestions(resource: URI, location: JSONLocation, propertyKey: string, result: ISuggestionsCollector): WinJS.Promise;\n\tcollectDefaultSuggestions(resource: URI, result: ISuggestionsCollector): WinJS.Promise;\n}\n\nexport class JSONWorker implements Modes.IExtraInfoSupport {\n\n\tprivate schemaService: SchemaService.IJSONSchemaService;\n\tprivate requestService: IRequestService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate jsonIntellisense : JSONIntellisense.JSONIntellisense;\n\tprivate contributions: IJSONWorkerContribution[];\n\tprivate _validationHelper: ValidationHelper;\n\tprivate resourceService:IResourceService;\n\tprivate markerService: IMarkerService;\n\tprivate _modeId: string;\n\n\tconstructor(\n\t\tmodeId: string,\n\t\t@IResourceService resourceService: IResourceService,\n\t\t@IMarkerService markerService: IMarkerService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\n\t\tthis._modeId = modeId;\n\t\tthis.resourceService = resourceService;\n\t\tthis.markerService = markerService;\n\n\t\tthis._validationHelper = new ValidationHelper(\n\t\t\tthis.resourceService,\n\t\t\tthis._modeId,\n\t\t\t(toValidate) => this.doValidate(toValidate)\n\t\t);\n\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.schemaService = instantiationService.createInstance(SchemaService.JSONSchemaService);\n\n\t\tthis.contributions = [\n\t\t\tinstantiationService.createInstance(ProjectJSONContribution.ProjectJSONContribution),\n\t\t\tinstantiationService.createInstance(PackageJSONContribution.PackageJSONContribution),\n\t\t\tinstantiationService.createInstance(BowerJSONContribution.BowerJSONContribution),\n\t\t\tinstantiationService.createInstance(GlobPatternContribution.GlobPatternContribution)\n\t\t];\n\n\t\tthis.jsonIntellisense = new JSONIntellisense.JSONIntellisense(this.schemaService, this.requestService, this.contributions);\n\t}\n\n\tpublic navigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean):WinJS.TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar offset = modelMirror.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar config = new Parser.JSONDocumentConfig();\n\t\tconfig.ignoreDanglingComma = true;\n\t\tvar doc = parser.parse(modelMirror.getValue(), config);\n\t\tvar node = doc.getNodeFromOffsetEndInclusive(offset);\n\n\t\tif (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\t\tif (schema) {\n\t\t\t\t\tvar proposals : Modes.ISuggestion[] = [];\n\t\t\t\t\tvar proposed: any = {};\n\t\t\t\t\tvar collector = {\n\t\t\t\t\t\tadd: (suggestion: Modes.ISuggestion) => {\n\t\t\t\t\t\t\tif (!proposed[suggestion.label]) {\n\t\t\t\t\t\t\t\tproposed[suggestion.label] = true;\n\t\t\t\t\t\t\t\tproposals.push(suggestion);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetAsIncomplete: () => { /* ignore */ },\n\t\t\t\t\t\terror: (message: string) => {\n\t\t\t\t\t\t\terrors.onUnexpectedError(message);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.jsonIntellisense.getValueSuggestions(resource, schema, doc, node.parent, node.start, collector);\n\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\t\tvar text = modelMirror.getValueInRange(range);\n\t\t\t\t\tfor (var i = 0, len = proposals.length; i < len; i++) {\n\t\t\t\t\t\tif (Strings.equalsIgnoreCase(proposals[i].label, text)) {\n\t\t\t\t\t\t\tvar nextIdx = i;\n\t\t\t\t\t\t\tif (up) {\n\t\t\t\t\t\t\t\tnextIdx = (i + 1) % len;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextIdx =  i - 1;\n\t\t\t\t\t\t\t\tif (nextIdx < 0) {\n\t\t\t\t\t\t\t\t\tnextIdx = len - 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: proposals[nextIdx].label,\n\t\t\t\t\t\t\t\trange: range\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @return true if you want to revalidate your models\n\t */\n\t_doConfigure(options:IOptions): WinJS.TPromise<void> {\n\t\tif (options && options.schemas) {\n\t\t\tthis.schemaService.clearExternalSchemas();\n\t\t\toptions.schemas.forEach((schema) => {\n\t\t\t\tif (schema.url && (schema.fileMatch || schema.schema)) {\n\t\t\t\t\tvar url = schema.url;\n\t\t\t\t\tif (!Strings.startsWith(url, 'http://') && !Strings.startsWith(url, 'https://') && !Strings.startsWith(url, 'file://')) {\n\t\t\t\t\t\tvar resourceURL = this.contextService.toResource(url);\n\t\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\t\turl = resourceURL.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tthis.schemaService.registerExternalSchema(url, schema.fileMatch, schema.schema);\n\t\t\t\t\t}\n\t\t\t\t} else if (schema.filePattern && schema.schemaPath) {\n\t\t\t\t\tvar url = this.contextService.toResource(schema.schemaPath).toString();\n\t\t\t\t\tvar patterns = schema.filePattern ? [ schema.filePattern ] : [];\n\t\t\t\t\tthis.schemaService.registerExternalSchema(url, patterns);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._validationHelper.triggerDueToConfigurationChange();\n\n\t\treturn WinJS.TPromise.as(void 0);\n\t}\n\n\tpublic setSchemaContributions(contributions:ISchemaContributions): WinJS.TPromise<boolean> {\n\t\tthis.schemaService.setSchemaContributions(contributions);\n\t\treturn WinJS.TPromise.as(true);\n\t}\n\n\tpublic enableValidator(): WinJS.TPromise<void> {\n\t\tthis._validationHelper.enable();\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic doValidate(resources: URI[]):void {\n\t\tfor (var i = 0; i < resources.length; i++) {\n\t\t\tthis.doValidate1(resources[i]);\n\t\t}\n\t}\n\n\tprivate doValidate1(resource: URI):void {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar content = modelMirror.getValue();\n\n\t\tif (content.length === 0) {\n\t\t\t// ignore empty content, no marker can be set anyway\n\t\t\treturn;\n\t\t}\n\t\tvar result = parser.parse(content);\n\t\tthis.schemaService.getSchemaForResource(resource.toString(), result).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tif (schema.errors.length && result.root) {\n\t\t\t\t\tvar property = result.root.type === 'object' ? (<Parser.ObjectASTNode> result.root).getFirstProperty('$schema') : null;\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tvar node = property.value || property;\n\t\t\t\t\t\tresult.warnings.push({ location: { start: node.start, end: node.end }, message: schema.errors[0] });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.warnings.push({ location: { start: result.root.start, end: result.root.start + 1 }, message: schema.errors[0] });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.validate(schema.schema);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar added : { [signature:string]: boolean} = {};\n\t\t\tvar markerData: IMarkerData[] = [];\n\n\t\t\tresult.errors.concat(result.warnings).forEach((error, idx) => {\n\t\t\t\t// remove duplicated messages\n\t\t\t\tvar signature = error.location.start + ' ' + error.location.end + ' ' + error.message;\n\t\t\t\tif (!added[signature]) {\n\t\t\t\t\tadded[signature] = true;\n\t\t\t\t\tvar startPosition = modelMirror.getPositionFromOffset(error.location.start);\n\t\t\t\t\tvar endPosition = modelMirror.getPositionFromOffset(error.location.end);\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\tseverity: idx >= result.errors.length ? Severity.Warning : Severity.Error,\n\t\t\t\t\t\tstartLineNumber: startPosition.lineNumber,\n\t\t\t\t\t\tstartColumn: startPosition.column,\n\t\t\t\t\t\tendLineNumber: endPosition.lineNumber,\n\t\t\t\t\t\tendColumn: endPosition.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.markerService.changeOne(this._modeId, resource, markerData);\n\t\t});\n\n\t}\n\n\tpublic suggest(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult[]> {\n\t\treturn this.doSuggest(resource, position).then(value => filterSuggestions(value));\n\t}\n\n\tprivate doSuggest(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\treturn this.jsonIntellisense.doSuggest(resource, modelMirror, position);\n\t}\n\n\tpublic computeInfo(resource:URI, position:EditorCommon.IPosition): WinJS.TPromise<Modes.IComputeExtraInfoResult> {\n\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\n\t\tvar offset = modelMirror.getOffsetFromPosition(position);\n\t\tvar node = doc.getNodeFromOffset(offset);\n\t\tvar originalNode = node;\n\n\t\t// use the property description when hovering over an object key\n\t\tif (node && node.type === 'string') {\n\t\t\tvar stringNode = <Parser.StringASTNode>node;\n\t\t\tif (stringNode.isKey) {\n\t\t\t\tvar propertyNode = <Parser.PropertyASTNode>node.parent;\n\t\t\t\tnode = propertyNode.value;\n\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tvar matchingSchemas : Parser.IApplicableSchema[] = [];\n\t\t\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\t\t\tvar description: string = null;\n\t\t\t\tvar contributonId: string = null;\n\t\t\t\tmatchingSchemas.every((s) => {\n\t\t\t\t\tif (s.node === node && !s.inverted && s.schema) {\n\t\t\t\t\t\tdescription = description || s.schema.description;\n\t\t\t\t\t\tcontributonId = contributonId || s.schema.id;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tvar location = node.getNodeLocation();\n\t\t\t\tfor (var i= this.contributions.length -1; i >= 0; i--) {\n\t\t\t\t\tvar contribution = this.contributions[i];\n\t\t\t\t\tvar promise = contribution.getInfoContribution(resource, location);\n\t\t\t\t\tif (promise) {\n\t\t\t\t\t\treturn promise.then((htmlContent) => { return this.createInfoResult(htmlContent, originalNode, modelMirror); } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (description) {\n\t\t\t\t\tvar htmlContent = [ {className: 'documentation', text: description } ];\n\t\t\t\t\treturn this.createInfoResult(htmlContent, originalNode, modelMirror);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tprivate createInfoResult(htmlContent : HtmlContent.IHTMLContentElement[], node: Parser.ASTNode, modelMirror: EditorCommon.IMirrorModel) : Modes.IComputeExtraInfoResult {\n\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\n\t\tvar result:Modes.IComputeExtraInfoResult = {\n\t\t\tvalue: '',\n\t\t\thtmlContent: htmlContent,\n\t\t\tclassName: 'typeInfo json',\n\t\t\trange: range\n\t\t};\n\t\treturn result;\n\t}\n\n\n\tpublic getOutline(resource:URI):WinJS.TPromise<Modes.IOutlineEntry[]> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\t\tvar root = doc.root;\n\t\tif (!root) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\t// special handling for key bindings\n\t\tvar resourceString = resource.toString();\n\t\tif ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n\t\t\tif (root.type === 'array') {\n\t\t\t\tvar result : Modes.IOutlineEntry[] = [];\n\t\t\t\t(<Parser.ArrayASTNode> root).items.forEach((item) => {\n\t\t\t\t\tif (item.type === 'object') {\n\t\t\t\t\t\tvar property = (<Parser.ObjectASTNode> item).getFirstProperty('key');\n\t\t\t\t\t\tif (property && property.value) {\n\t\t\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(item.start, item.end - item.start);\n\t\t\t\t\t\t\tresult.push({ label: property.value.getValue(), icon: 'function', type: 'string', range: range, children: []});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn WinJS.TPromise.as(result);\n\t\t\t}\n\t\t}\n\n\t\tfunction collectOutlineEntries(result: Modes.IOutlineEntry[], node: Parser.ASTNode): Modes.IOutlineEntry[] {\n\t\t\tif (node.type === 'array') {\n\t\t\t\t(<Parser.ArrayASTNode>node).items.forEach((node:Parser.ASTNode) => {\n\t\t\t\t\tcollectOutlineEntries(result, node);\n\t\t\t\t});\n\t\t\t} else if (node.type === 'object') {\n\t\t\t\tvar objectNode = <Parser.ObjectASTNode>node;\n\n\t\t\t\tobjectNode.properties.forEach((property:Parser.PropertyASTNode) => {\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(property.start, property.end - property.start);\n\t\t\t\t\tvar valueNode = property.value;\n\t\t\t\t\tif (valueNode) {\n\t\t\t\t\t\tvar children = collectOutlineEntries([], valueNode);\n\t\t\t\t\t\tvar icon = valueNode.type === 'object' ? 'module' : valueNode.type;\n\t\t\t\t\t\tresult.push({ label: property.key.getValue(), icon: icon, type: valueNode.type, range: range, children: children});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tvar result = collectOutlineEntries([], root);\n\t\treturn WinJS.TPromise.as(result);\n\t}\n\n\tpublic format(resource: URI, range: EditorCommon.IRange, options: Modes.IFormattingOptions): WinJS.TPromise<EditorCommon.ISingleEditOperation[]> {\n\t\tvar model = this.resourceService.get(resource);\n\t\treturn WinJS.TPromise.as(JSONFormatter.format(model, range, options));\n\t}\n}\n"]}