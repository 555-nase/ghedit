{"version":3,"sources":["vs/languages/json/common/json.ts"],"names":[],"mappings":"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","file":"vs/languages/json/common/json.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport URI from 'vs/base/common/uri';\nimport WinJS = require('vs/base/common/winjs.base');\nimport Platform = require('vs/platform/platform');\nimport nls = require('vs/nls');\nimport jsonWorker = require('vs/languages/json/common/jsonWorker');\nimport tokenization = require('vs/languages/json/common/features/tokenization');\nimport {AbstractMode, createWordRegExp, ModeWorkerManager} from 'vs/editor/common/modes/abstractMode';\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {IJSONContributionRegistry, Extensions, ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {SuggestSupport} from 'vs/editor/common/modes/supports/suggestSupport';\n\nexport class JSONMode extends AbstractMode implements Modes.IExtraInfoSupport, Modes.IOutlineSupport {\n\n\tpublic tokenizationSupport: Modes.ITokenizationSupport;\n\tpublic richEditSupport: Modes.IRichEditSupport;\n\tpublic configSupport:Modes.IConfigurationSupport;\n\tpublic inplaceReplaceSupport:Modes.IInplaceReplaceSupport;\n\tpublic extraInfoSupport: Modes.IExtraInfoSupport;\n\tpublic outlineSupport: Modes.IOutlineSupport;\n\tpublic formattingSupport: Modes.IFormattingSupport;\n\tpublic suggestSupport: Modes.ISuggestSupport;\n\n\tpublic outlineGroupLabel : { [name: string]: string; };\n\n\tprivate _modeWorkerManager: ModeWorkerManager<jsonWorker.JSONWorker>;\n\tprivate _threadService:IThreadService;\n\n\tconstructor(\n\t\tdescriptor:Modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThreadService threadService: IThreadService\n\t) {\n\t\tsuper(descriptor.id);\n\t\tthis._modeWorkerManager = new ModeWorkerManager<jsonWorker.JSONWorker>(descriptor, 'vs/languages/json/common/jsonWorker', 'JSONWorker', null, instantiationService);\n\t\tthis._threadService = threadService;\n\n\t\tthis.tokenizationSupport = tokenization.createTokenizationSupport(this, true);\n\n\t\tthis.richEditSupport = new RichEditSupport(this.getId(), null, {\n\n\t\t\twordPattern: createWordRegExp('.-'),\n\n\t\t\tcomments: {\n\t\t\t\tlineComment: '//',\n\t\t\t\tblockComment: ['/*', '*/']\n\t\t\t},\n\n\t\t\tbrackets: [\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']']\n\t\t\t],\n\n\t\t\t__characterPairSupport: {\n\t\t\t\tautoClosingPairs: [\n\t\t\t\t\t{ open: '{', close: '}', notIn: ['string'] },\n\t\t\t\t\t{ open: '[', close: ']', notIn: ['string'] },\n\t\t\t\t\t{ open: '\"', close: '\"', notIn: ['string'] }\n\t\t\t\t]\n\t\t\t}\n\t\t});\n\n\t\tthis.extraInfoSupport = this;\n\t\tthis.inplaceReplaceSupport = this;\n\t\tthis.configSupport = this;\n\n\t\t// Initialize Outline support\n\t\tthis.outlineSupport = this;\n\t\tthis.outlineGroupLabel = Object.create(null);\n\t\tthis.outlineGroupLabel['object'] = nls.localize('object', \"objects\");\n\t\tthis.outlineGroupLabel['array'] = nls.localize('array', \"arrays\");\n\t\tthis.outlineGroupLabel['string'] = nls.localize('string', \"strings\");\n\t\tthis.outlineGroupLabel['number'] = nls.localize('number', \"numbers\");\n\t\tthis.outlineGroupLabel['boolean'] = nls.localize('boolean', \"booleans\");\n\t\tthis.outlineGroupLabel['null'] = nls.localize('undefined', \"undefined\");\n\n\t\tthis.formattingSupport = this;\n\n\t\tthis.suggestSupport = new SuggestSupport(this.getId(), {\n\t\t\ttriggerCharacters: [],\n\t\t\texcludeTokens: ['comment.line.json', 'comment.block.json'],\n\t\t\tsuggest: (resource, position) => this.suggest(resource, position)});\n\t}\n\n\tpublic creationDone(): void {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\t// Pick a worker to do validation\n\t\t\tthis._pickAWorkerToValidate();\n\n\t\t\t// Configure all workers\n\t\t\tthis._configureWorkerSchemas(this.getSchemaConfiguration());\n\t\t\tvar contributionRegistry = <IJSONContributionRegistry> Platform.Registry.as(Extensions.JSONContribution);\n\t\t\tcontributionRegistry.addRegistryChangedListener(e => {\n\t\t\t\tthis._configureWorkerSchemas(this.getSchemaConfiguration());\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _worker<T>(runner:(worker:jsonWorker.JSONWorker)=>WinJS.TPromise<T>): WinJS.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\tprivate getSchemaConfiguration() : ISchemaContributions {\n\t\tvar contributionRegistry = <IJSONContributionRegistry> Platform.Registry.as(Extensions.JSONContribution);\n\t\treturn contributionRegistry.getSchemaContributions();\n\t}\n\n\tpublic configure(options:any): WinJS.TPromise<void> {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w._doConfigure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(JSONMode, JSONMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): WinJS.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tstatic $_configureWorkerSchemas = AllWorkersAttr(JSONMode, JSONMode.prototype._configureWorkerSchemas);\n\tprivate _configureWorkerSchemas(data:ISchemaContributions): WinJS.TPromise<boolean> {\n\t\treturn this._worker((w) => w.setSchemaContributions(data));\n\t}\n\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(JSONMode, JSONMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\n\tprivate _pickAWorkerToValidate(): WinJS.TPromise<void> {\n\t\treturn this._worker((w) => w.enableValidator());\n\t}\n\n\tstatic $navigateValueSet = OneWorkerAttr(JSONMode, JSONMode.prototype.navigateValueSet);\n\tpublic navigateValueSet(resource:URI, position:EditorCommon.IRange, up:boolean):WinJS.TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\treturn this._worker((w) => w.navigateValueSet(resource, position, up));\n\t}\n\n\tstatic $suggest = OneWorkerAttr(JSONMode, JSONMode.prototype.suggest);\n\tpublic suggest(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.suggest(resource, position));\n\t}\n\n\tstatic $computeInfo = OneWorkerAttr(JSONMode, JSONMode.prototype.computeInfo);\n\tpublic computeInfo(resource:URI, position:EditorCommon.IPosition): WinJS.TPromise<Modes.IComputeExtraInfoResult> {\n\t\treturn this._worker((w) => w.computeInfo(resource, position));\n\t}\n\n\tstatic $getOutline = OneWorkerAttr(JSONMode, JSONMode.prototype.getOutline);\n\tpublic getOutline(resource:URI):WinJS.TPromise<Modes.IOutlineEntry[]> {\n\t\treturn this._worker((w) => w.getOutline(resource));\n\t}\n\n\tstatic $formatDocument = OneWorkerAttr(JSONMode, JSONMode.prototype.formatDocument);\n\tpublic formatDocument(resource:URI, options:Modes.IFormattingOptions):WinJS.TPromise<EditorCommon.ISingleEditOperation[]> {\n\t\treturn this._worker((w) => w.format(resource, null, options));\n\t}\n\n\tstatic $formatRange = OneWorkerAttr(JSONMode, JSONMode.prototype.formatRange);\n\tpublic formatRange(resource:URI, range:EditorCommon.IRange, options:Modes.IFormattingOptions):WinJS.TPromise<EditorCommon.ISingleEditOperation[]> {\n\t\treturn this._worker((w) => w.format(resource, range, options));\n\t}\n}"]}