{"version":3,"sources":["vs/languages/json/common/json.contribution.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAOb,6BAAa,CAAC,kBAAkB,CAAC;QAChC,EAAE,EAAE,MAAM;QACV,UAAU,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;QACtE,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACzB,SAAS,EAAE,CAAC,kBAAkB,CAAC;QAC/B,QAAQ,EAAE,+BAA+B;QACzC,QAAQ,EAAE,UAAU;KACpB,CAAC,CAAC;IAEH,IAAI,qBAAqB,GAAiD,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,qBAAqB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC/I,qBAAqB,CAAC,qBAAqB,CAAC;QAC3C,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;QACX,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAoB,CAAC;QACrE,YAAY,EAAG;YACd,cAAc,EAAG;gBAChB,MAAM,EAAE,OAAO;gBACf,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA2B,EAAE,IAAwD,CAAC;gBAClH,OAAO,EAAE;oBACR,MAAM,EAAE,QAAQ;oBAChB,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,SAAS,EAAE,CAAE,aAAa,CAAE,EAAE,GAAG,EAAE,eAAe,EAAE,EAAE,CAAC;oBACrF,YAAY,EAAE;wBACb,KAAK,EAAE;4BACN,MAAM,EAAE,QAAQ;4BAChB,SAAS,EAAE,mBAAmB;4BAC9B,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA8B,EAAE,IAA2E,CAAC;yBACxI;wBACD,WAAW,EAAE;4BACZ,MAAM,EAAE,OAAO;4BACf,OAAO,EAAE;gCACR,MAAM,EAAE,QAAQ;gCAChB,SAAS,EAAE,aAAa;gCACxB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA6B,EAAE,IAA4F,CAAC;6BACxJ;4BACD,UAAU,EAAE,CAAC;4BACb,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAAkF,CAAC;yBAChJ;wBACD,QAAQ,EAAE;4BACT,MAAM,EAAE,QAAQ;4BAChB,aAAa,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA0B,EAAE,IAAoH,CAAC;yBAC7K;qBACD;iBACD;aACD;SACD;KACD,CAAC,CAAC","file":"vs/languages/json/common/json.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport ConfigurationRegistry = require('vs/platform/configuration/common/configurationRegistry');\nimport Platform = require('vs/platform/platform');\nimport {ModesRegistry} from 'vs/editor/common/modes/modesRegistry';\n\nModesRegistry.registerCompatMode({\n\tid: 'json',\n\textensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc'],\n\taliases: ['JSON', 'json'],\n\tmimetypes: ['application/json'],\n\tmoduleId: 'vs/languages/json/common/json',\n\tctorName: 'JSONMode'\n});\n\nvar configurationRegistry = <ConfigurationRegistry.IConfigurationRegistry>Platform.Registry.as(ConfigurationRegistry.Extensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t'id': 'json',\n\t'order': 20,\n\t'type': 'object',\n\t'title': nls.localize('jsonConfigurationTitle', \"JSON configuration\"),\n\t'properties' : {\n\t\t'json.schemas' : {\n\t\t\t'type': 'array',\n\t\t\t'description': nls.localize('jsonConfiguration.schemas', \"Associate schemas to JSON files in the current project\"),\n\t\t\t'items': {\n\t\t\t\t'type': 'object',\n\t\t\t\t'defaultSnippets': [{ body: { fileMatch: [ '{{/myfile}}' ], url: '{{schemaURL}}' } }],\n\t\t\t\t'properties': {\n\t\t\t\t\t'url': {\n\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t'default': '/user.schema.json',\n\t\t\t\t\t\t'description': nls.localize('jsonConfiguration.schemaPath', \"A URL to a schema or a relative path to a schema in the current directory\"),\n\t\t\t\t\t},\n\t\t\t\t\t'fileMatch': {\n\t\t\t\t\t\t'type': 'array',\n\t\t\t\t\t\t'items': {\n\t\t\t\t\t\t\t'type': 'string',\n\t\t\t\t\t\t\t'default': 'MyFile.json',\n\t\t\t\t\t\t\t'description': nls.localize('jsonConfiguration.fileMatch', \"A file pattern that can contain '*' to match against when resolving JSON files to schemas.\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'minItems': 1,\n\t\t\t\t\t\t'description': nls.localize('jsonConfiguration.fileMatches', \"An array of file patterns to match against when resolving JSON files to schemas.\"),\n\t\t\t\t\t},\n\t\t\t\t\t'schema': {\n\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t'description': nls.localize('jsonConfiguration.schema', \"The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL.\"),\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});"]}