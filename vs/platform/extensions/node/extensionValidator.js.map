{"version":3,"sources":["vs/platform/extensions/node/extensionValidator.ts"],"names":[],"mappings":"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","file":"vs/platform/extensions/node/extensionValidator.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {IExtensionDescription} from 'vs/platform/extensions/common/extensions';\nimport {isValidExtensionDescription as baseIsValidExtensionDescription} from 'vs/platform/extensions/common/extensionsRegistry';\nimport {valid} from 'semver';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\treturn {\n\t\thasCaret: !!m[1],\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion): INormalizedVersion {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\tlet desiredVersion = normalizeVersion(parseVersion(extensionDesc.engines.vscode));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^0.10.0, ^1.2.3, ^0.11.0, ^0.10.x, etc.\", extensionDesc.engines.vscode));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", extensionDesc.engines.vscode));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", extensionDesc.engines.vscode));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(version, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", version, extensionDesc.engines.vscode));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\tif (!baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\treturn false;\n\t}\n\n\tif (!valid(extensionDescription.version)) {\n\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\treturn false;\n\t}\n\n\treturn isValidExtensionVersion(version, extensionDescription, notices);\n}"]}