var __extends=this&&this.__extends||function(e,t){function s(){this.constructor=e}for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i]);e.prototype=null===t?Object.create(t):(s.prototype=t.prototype,new s)};define(["require","exports","vs/base/common/async","vs/base/common/event","vs/base/common/lifecycle","vs/base/browser/dom"],function(e,t,s,i,n,o){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";!function(e){e[e.Idle=0]="Idle",e[e.Active=1]="Active"}(t.UserStatus||(t.UserStatus={}));var r=t.UserStatus,c=function(e){function t(t){var n=this;e.call(this),this._status=null,this._idleCheckTimeout=this._register(new s.TimeoutTimer),this._lastActiveTime=-1,this._idleTime=t,this._onStatusChange=new i.Emitter,this._register(o.addDisposableListener(document,"mousemove",function(){return n._onUserActive()})),this._register(o.addDisposableListener(document,"keydown",function(){return n._onUserActive()})),this._onUserActive()}return __extends(t,e),Object.defineProperty(t.prototype,"onStatusChange",{get:function(){return this._onStatusChange.event},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"status",{get:function(){return this._status},enumerable:!0,configurable:!0}),t.prototype._onUserActive=function(){this._lastActiveTime=(new Date).getTime(),this._status!==r.Active&&(this._status=r.Active,this._scheduleIdleCheck(),this._onStatusChange.fire(this._status))},t.prototype._onUserIdle=function(){this._status!==r.Idle&&(this._status=r.Idle,this._onStatusChange.fire(this._status))},t.prototype._scheduleIdleCheck=function(){var e=this,t=this._lastActiveTime+this._idleTime,s=t-(new Date).getTime();this._idleCheckTimeout.setIfNotSet(function(){return e._checkIfUserIsIdle()},s)},t.prototype._checkIfUserIsIdle=function(){var e=(new Date).getTime()-this._lastActiveTime;e>=this._idleTime?this._onUserIdle():this._scheduleIdleCheck()},t}(n.Disposable);t.IdleMonitor=c});