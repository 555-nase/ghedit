define(["require","exports","vs/base/common/winjs.base","vs/base/common/types","vs/platform/instantiation/common/instantiation"],function(n,t,e,o,r){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";function i(n){return"object"==typeof n&&"function"==typeof n.handler&&(!n.description||"object"==typeof n.description)}t.ICommandService=r.createDecorator("commandService"),t.CommandsRegistry=new(function(){function n(){this._commands=Object.create(null)}return n.prototype.registerCommand=function(n,t){if(!t)throw new Error("invalid command");if(i(t)){var e=t.handler,r=t.description;if(r){for(var a=[],s=0,c=r.args;s<c.length;s++){var m=c[s];a.push(m.constraint)}this._commands[n]={description:r,handler:function(n){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return o.validateConstraints(t,a),e.apply(void 0,[n].concat(t))}}}else this._commands[n]={handler:e}}else this._commands[n]={handler:t}},n.prototype.getCommand=function(n){return this._commands[n]},n.prototype.getCommands=function(){return this._commands},n}()),t.NullCommandService={_serviceBrand:void 0,executeCommand:function(){return e.TPromise.as(void 0)}}});