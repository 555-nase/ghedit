define(["require","exports","vs/base/common/keyCodes","vs/base/common/platform","vs/platform/commands/common/commands","vs/platform/platform"],function(n,i,e,t,r,o){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";var s=function(){function n(){this.WEIGHT={editorCore:function(n){return void 0===n&&(n=0),0+n},editorContrib:function(n){return void 0===n&&(n=0),100+n},workbenchContrib:function(n){return void 0===n&&(n=0),200+n},builtinExtension:function(n){return void 0===n&&(n=0),300+n},externalExtension:function(n){return void 0===n&&(n=0),400+n}},this._keybindings=[]}return n.bindToCurrentPlatform=function(n){if(t.isWindows){if(n&&n.win)return n.win}else if(t.isMacintosh){if(n&&n.mac)return n.mac}else if(n&&n.linux)return n.linux;return n},n.prototype.registerCommandRule=function(i){var e=this,t=n.bindToCurrentPlatform(i);t&&t.primary&&this.registerDefaultKeybinding(t.primary,i.id,i.weight,0,i.when),t&&Array.isArray(t.secondary)&&t.secondary.forEach(function(n,t){return e.registerDefaultKeybinding(n,i.id,i.weight,-t-1,i.when)})},n.prototype.registerCommandDesc=function(n){this.registerCommandRule(n),r.CommandsRegistry.registerCommand(n.id,n)},n.prototype.registerDefaultKeybinding=function(n,i,r,o,s){t.isWindows&&e.BinaryKeybindings.hasCtrlCmd(n)&&!e.BinaryKeybindings.hasShift(n)&&e.BinaryKeybindings.hasAlt(n)&&!e.BinaryKeybindings.hasWinCtrl(n)&&/^[A-Z0-9\[\]\|\;\'\,\.\/\`]$/.test(e.KeyCode.toString(e.BinaryKeybindings.extractKeyCode(n)))&&console.warn("Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ",n," for ",i),this._keybindings.push({keybinding:n,command:i,when:s,weight1:r,weight2:o})},n.prototype.getDefaultKeybindings=function(){return this._keybindings},n}();i.KeybindingsRegistry=new s,i.Extensions={EditorModes:"platform.keybindingsRegistry"},o.Registry.add(i.Extensions.EditorModes,i.KeybindingsRegistry)});