{"version":3,"file":"vs/languages/sass/common/parser/sassParser.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/sass/common/parser/sassParser.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport sassScanner = require ('./sassScanner');\nimport sassErrors = require('./sassErrors');\nimport scanner = require('vs/languages/css/common/parser/cssScanner');\nimport cssParser = require('vs/languages/css/common/parser/cssParser');\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\nimport errors = require('vs/languages/css/common/parser/cssErrors');\n\n/// <summary>\n/// A parser for Sass\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nexport class SassParser extends cssParser.Parser {\n\n\tpublic constructor() {\n\t\tsuper(new sassScanner.SassScanner());\n\t}\n\n\tpublic _parseStylesheetStatement():nodes.Node {\n\t\treturn super._parseStylesheetStatement()\n\t\t\t|| this._parseVariableDeclaration()\n\t\t\t|| this._parseWarnAndDebug()\n\t\t\t|| this._parseControlStatement()\n\t\t\t|| this._parseMixinDeclaration()\n\t\t\t|| this._parseMixinContent()\n\t\t\t|| this._parseMixinReference() // @include\n\t\t\t|| this._parseFunctionDeclaration();\n\t}\n\n\tpublic _parseImport():nodes.Node {\n\t\tvar node = <nodes.Import> this.create(nodes.Import);\n\t\tif(!this.accept(scanner.TokenType.AtKeyword, '@import')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\n\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected);\n\t\t}\n\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\tif (!this.accept(scanner.TokenType.URI) && !this.accept(scanner.TokenType.String)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.URIOrStringExpected);\n\t\t\t}\n\t\t}\n\n\t\tnode.setMedialist(this._parseMediaList());\n\n\t\treturn this.finish(node);\n\t}\n\n\t// Sass variables: $font-size: 12px;\n\tpublic _parseVariableDeclaration(panic:scanner.TokenType[]=[]): nodes.VariableDeclaration {\n\t\tvar node = <nodes.VariableDeclaration> this.create(nodes.VariableDeclaration);\n\n\t\tif (!node.setVariable(this._parseVariable())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.Colon, ':')) {\n\t\t\treturn this.finish(node, errors.ParseError.ColonExpected);\n\t\t}\n\t\tnode.colonPosition = this.prevToken.offset;\n\n\t\tif (!node.setValue(this._parseExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.VariableValueExpected, [], panic);\n\t\t}\n\n\t\tif (this.accept(scanner.TokenType.Exclamation)) {\n\t\t\tif (!this.accept(scanner.TokenType.Ident, 'default', true)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.UnknownKeyword);\n\t\t\t}\n\t\t}\n\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseMediaFeatureName() : nodes.Node {\n\t\treturn this._parseFunction() || this._parseIdent() || this._parseVariable(); // first function, the indent\n\t}\n\n\tpublic _parseKeyframeSelector():nodes.Node {\n\t\treturn super._parseKeyframeSelector() || this._parseMixinContent();\n\t}\n\n\tpublic _parseVariable(): nodes.Variable {\n\t\tvar node = <nodes.Variable> this.create(nodes.Variable);\n\t\tif (!this.accept(sassScanner.VariableName)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn <nodes.Variable> node;\n\t}\n\n\tpublic _parseIdent(referenceTypes?: nodes.ReferenceType[]): nodes.Identifier {\n\t\tvar node = <nodes.Identifier> this.create(nodes.Identifier);\n\t\tnode.referenceTypes = referenceTypes;\n\t\tvar hasContent = false;\n\t\twhile (this.accept(scanner.TokenType.Ident) || node.addChild(this._parseInterpolation())) {\n\t\t\thasContent = true;\n\t\t\tif (!this.hasWhitespace() && this.accept(scanner.TokenType.Delim, '-')) {\n\t\t\t\t// '-' is a valid char inside a ident (special treatment here to support #{foo}-#{bar})\n\t\t\t}\n\t\t\tif (this.hasWhitespace()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn hasContent ? this.finish(node) : null;\n\t}\n\n\tpublic _parseTerm(): nodes.Term {\n\t\tvar term = super._parseTerm();\n\t\tif (term) { return term; }\n\n\t\tterm = <nodes.Term> this.create(nodes.Term);\n\t\tif (term.setExpression(this._parseVariable())) {\n\t\t\treturn <nodes.Term> this.finish(term);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic _parseInterpolation():nodes.Node {\n\t\tvar node = this.create(nodes.Interpolation);\n\t\tif (this.accept(sassScanner.InterpolationFunction)) {\n\t\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\n\t\t\t}\n\t\t\tif (!this.accept(scanner.TokenType.CurlyR)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.RightCurlyExpected);\n\t\t\t}\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseOperator(): nodes.Node {\n\t\tvar node = this.createNode(nodes.NodeType.Operator);\n\t\tif (this.peek(sassScanner.EqualsOperator) || this.peek(sassScanner.NotEqualsOperator)\n\t\t\t|| this.peek(sassScanner.GreaterEqualsOperator) || this.peek(sassScanner.SmallerEqualsOperator)\n\t\t\t|| this.peek(scanner.TokenType.Delim, '>') || this.peek(scanner.TokenType.Delim, '<')\n\t\t\t|| this.peek(scanner.TokenType.Ident, 'and') || this.peek(scanner.TokenType.Ident, 'or')\n\t\t\t|| this.peek(scanner.TokenType.Delim, '%')\n\t\t\t) {\n\t\t\tvar node = this.createNode(nodes.NodeType.Operator);\n\t\t\tthis.consumeToken();\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn super._parseOperator();\n\t}\n\n\tpublic _parseUnaryOperator(): nodes.Node {\n\t\tif (this.peek(scanner.TokenType.Ident, 'not')) {\n\t\t\tvar node = this.create(nodes.Node);\n\t\t\tthis.consumeToken();\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn super._parseUnaryOperator();\n\t}\n\n\tpublic _parseRuleSetDeclaration() : nodes.Node {\n\t\tif (this.peek(scanner.TokenType.AtKeyword)) {\n\t\t\treturn this._parseKeyframe() // nested @keyframe\n\t\t\t\t|| this._parseImport() // nested @import\n\t\t\t\t|| this._parseMedia() // nested @media\n\t\t\t\t|| this._parseFontFace() // nested @font-face\n\t\t\t\t|| this._parseWarnAndDebug() // @warn and @debug statements\n\t\t\t\t|| this._parseControlStatement() // @if, @while, @for, @each\n\t\t\t\t|| this._parseFunctionDeclaration() // @function\n\t\t\t\t|| this._parseExtends() // @extends\n\t\t\t\t|| this._parseMixinReference() // @include\n\t\t\t\t|| this._parseMixinContent() // @content\n\t\t\t\t|| this._parseMixinDeclaration(); // nested @mixin\n\t\t}\n\t\treturn this._parseVariableDeclaration() // variable declaration\n\t\t\t|| this._tryParseRuleset(true) // nested ruleset\n\t\t\t|| this._parseDeclaration(); // try declaration as last so in the error case, the ast will contain a declaration\n\t}\n\n\tpublic _parseDeclaration(resyncStopTokens?:scanner.TokenType[]): nodes.Declaration {\n\t\tvar node = <nodes.Declaration> this.create(nodes.Declaration);\n\t\tif (!node.setProperty(this._parseProperty())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.Colon, ':')) {\n\t\t\treturn this.finish(node, errors.ParseError.ColonExpected, [ scanner.TokenType.Colon ], resyncStopTokens);\n\t\t}\n\t\tnode.colonPosition = this.prevToken.offset;\n\n\t\tvar hasContent = false;\n\t\tif (node.setValue(this._parseExpr())) {\n\t\t\thasContent = true;\n\t\t\tnode.addChild(this._parsePrio());\n\t\t}\n\t\tif (this.peek(scanner.TokenType.CurlyL)) {\n\t\t\tnode.setNestedProperties(this._parseNestedProperties());\n\t\t} else {\n\t\t\tif (!hasContent) {\n\t\t\t\treturn this.finish(node, errors.ParseError.PropertyValueExpected);\n\t\t\t}\n\t\t}\n\t\tif (this.peek(scanner.TokenType.SemiColon)) {\n\t\t\tnode.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseNestedProperties(): nodes.NestedProperties {\n\t\tvar node = <nodes.NestedProperties> this.create(nodes.NestedProperties);\n\t\treturn this._parseBody(node, this._parseDeclaration.bind(this));\n\t}\n\n\tpublic _parseExtends(): nodes.Node {\n\t\tvar node = <nodes.ExtendsReference> this.create(nodes.ExtendsReference);\n\t\tif (this.accept(scanner.TokenType.AtKeyword, '@extend')) {\n\t\t\tif (!node.setSelector(this._parseSimpleSelector())) {\n\t\t\t\treturn this.finish(node, errors.ParseError.SelectorExpected);\n\t\t\t}\n\t\t\tif (this.accept(scanner.TokenType.Exclamation)) {\n\t\t\t\tif (!this.accept(scanner.TokenType.Ident, 'optional', true)) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.UnknownKeyword);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseSimpleSelectorBody(): nodes.Node {\n\t\treturn this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || super._parseSimpleSelectorBody();\n\t}\n\n\tpublic _parseSelectorCombinator():nodes.Node {\n\t\tvar node = this.createNode(nodes.NodeType.SelectorCombinator);\n\t\tif (this.accept(scanner.TokenType.Delim, '&')) {\n\t\t\twhile (!this.hasWhitespace() && (this.accept(scanner.TokenType.Delim, '-') || node.addChild(this._parseIdent()) || this.accept(scanner.TokenType.Delim, '&'))) {\n\t\t\t\t//  support &-foo\n\t\t\t}\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseSelectorPlaceholder():nodes.Node {\n\t\tvar node = this.createNode(nodes.NodeType.SelectorPlaceholder);\n\t\tif (this.accept(scanner.TokenType.Delim, '%')) {\n\t\t\tthis._parseIdent();\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic _parseWarnAndDebug(): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@debug') && !this.peek(scanner.TokenType.AtKeyword, '@warn')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.createNode(nodes.NodeType.Debug);\n\t\tthis.consumeToken(); // @debug or @warn\n\t\tnode.addChild(this._parseExpr()); // optional\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseControlStatement(parseStatement: () => nodes.Node = this._parseRuleSetDeclaration.bind(this)): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n\t\t\t|| this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n\t}\n\n\tpublic _parseIfStatement(parseStatement: () => nodes.Node): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@if')) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._internalParseIfStatement(parseStatement);\n\t}\n\n\tprivate _internalParseIfStatement(parseStatement: () => nodes.Node): nodes.IfStatement {\n\t\tvar node = <nodes.IfStatement> this.create(nodes.IfStatement);\n\t\tthis.consumeToken(); // @if or if\n\t\tif (!node.setExpression(this._parseBinaryExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\n\t\t}\n\t\tthis._parseBody(node, parseStatement);\n\t\tif (this.accept(scanner.TokenType.AtKeyword, '@else')) {\n\t\t\tif (this.peek(scanner.TokenType.Ident, 'if')) {\n\t\t\t\tnode.setElseClause(this._internalParseIfStatement(parseStatement));\n\t\t\t} else if (this.peek(scanner.TokenType.CurlyL)) {\n\t\t\t\tvar elseNode = <nodes.BodyDeclaration> this.create(nodes.ElseStatement);\n\t\t\t\tthis._parseBody(elseNode, parseStatement);\n\t\t\t\tnode.setElseClause(elseNode);\n\t\t\t}\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseForStatement(parseStatement: () => nodes.Node): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@for')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.ForStatement> this.create(nodes.ForStatement);\n\t\tthis.consumeToken(); // @for\n\t\tif (!node.setVariable(this._parseVariable())) {\n\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!this.accept(scanner.TokenType.Ident, 'from')) {\n\t\t\treturn this.finish(node, sassErrors.ParseError.FromExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!this.accept(scanner.TokenType.Ident, 'to') && !this.accept(scanner.TokenType.Ident, 'through')) {\n\t\t\treturn this.finish(node, sassErrors.ParseError.ThroughOrToExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\treturn this._parseBody(node, parseStatement);\n\t}\n\n\tpublic _parseEachStatement(parseStatement: () => nodes.Node): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@each')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.EachStatement> this.create(nodes.EachStatement);\n\t\tthis.consumeToken(); // @each\n\t\tif (!node.setVariable(this._parseVariable())) {\n\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!this.accept(scanner.TokenType.Ident, 'in')) {\n\t\t\treturn this.finish(node, sassErrors.ParseError.InExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\t\tif (!node.addChild(this._parseExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\treturn this._parseBody(node, parseStatement);\n\t}\n\n\tpublic _parseWhileStatement(parseStatement: () => nodes.Node): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@while')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.WhileStatement> this.create(nodes.WhileStatement);\n\t\tthis.consumeToken(); // @while\n\t\tif (!node.addChild(this._parseBinaryExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\treturn this._parseBody(node, parseStatement);\n\t}\n\n\tpublic _parseFunctionBodyDeclaration(): nodes.Node {\n\t\treturn this._parseVariableDeclaration() || this._parseReturnStatement()\n\t\t\t|| this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n\t}\n\n\tpublic _parseFunctionDeclaration(): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@function')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.FunctionDeclaration> this.create(nodes.FunctionDeclaration);\n\t\tthis.consumeToken(); // @function\n\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Function ]))) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\treturn this.finish(node, errors.ParseError.LeftParenthesisExpected, [ scanner.TokenType.CurlyR ] );\n\t\t}\n\n\t\tif (node.getParameters().addChild(this._parseParameterDeclaration())) {\n\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\tif (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n\t\t\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [ scanner.TokenType.CurlyR ] );\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n\t}\n\n\tpublic _parseReturnStatement(): nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@return')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = this.createNode(nodes.NodeType.ReturnStatement);\n\t\tthis.consumeToken(); // @function\n\n\t\tif (!node.addChild(this._parseExpr())) {\n\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseMixinDeclaration():nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@mixin')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.MixinDeclaration> this.create(nodes.MixinDeclaration);\n\t\tthis.consumeToken();\n\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\tif (this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\tif (node.getParameters().addChild(this._parseParameterDeclaration())) {\n\t\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\t\tif (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n\t\t\t\t\t\treturn this.finish(node, errors.ParseError.VariableNameExpected);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected, [ scanner.TokenType.CurlyR ] );\n\t\t\t}\n\t\t}\n\n\t\treturn this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n\t}\n\n\tpublic _parseParameterDeclaration():nodes.Node {\n\n\t\tvar node = <nodes.FunctionParameter> this.create(nodes.FunctionParameter);\n\n\t\tif (!node.setIdentifier(this._parseVariable())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.accept(sassScanner.Ellipsis)) {\n\t\t\t// ok\n\t\t}\n\n\t\tif (this.accept(scanner.TokenType.Colon)) {\n\t\t\tif (!node.setDefaultValue(this._parseExpr(true))) {\n\t\t\t\treturn this.finish(node, errors.ParseError.VariableValueExpected, [], [scanner.TokenType.Comma, scanner.TokenType.ParenthesisR]);\n\t\t\t}\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseMixinContent():nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@content')) {\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this.createNode(nodes.NodeType.MixinContent);\n\t\tthis.consumeToken();\n\t\treturn this.finish(node);\n\t}\n\n\n\tpublic _parseMixinReference():nodes.Node {\n\t\tif (!this.peek(scanner.TokenType.AtKeyword, '@include')) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar node = <nodes.MixinReference> this.create(nodes.MixinReference);\n\t\tthis.consumeToken();\n\n\t\tif (!node.setIdentifier(this._parseIdent([nodes.ReferenceType.Mixin]))) {\n\t\t\treturn this.finish(node, errors.ParseError.IdentifierExpected, [ scanner.TokenType.CurlyR ]);\n\t\t}\n\n\t\tif (this.accept(scanner.TokenType.ParenthesisL)) {\n\t\t\tif (node.getArguments().addChild(this._parseFunctionArgument())) {\n\t\t\t\twhile (this.accept(scanner.TokenType.Comma)) {\n\t\t\t\t\tif (!node.getArguments().addChild(this._parseFunctionArgument())) {\n\t\t\t\t\t\treturn this.finish(node, errors.ParseError.ExpressionExpected);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.accept(scanner.TokenType.ParenthesisR)) {\n\t\t\t\treturn this.finish(node, errors.ParseError.RightParenthesisExpected);\n\t\t\t}\n\t\t}\n\n\t\tif (this.peek(scanner.TokenType.CurlyL)) {\n\t\t\tvar content = <nodes.BodyDeclaration> this.create(nodes.BodyDeclaration);\n\t\t\tthis._parseBody(content, this._parseMixinReferenceBodyStatement.bind(this));\n\t\t\tnode.setContent(content);\n\t\t}\n\t\treturn this.finish(node);\n\t}\n\n\tpublic _parseMixinReferenceBodyStatement(): nodes.Node {\n\t\treturn this._parseRuleSetDeclaration() || this._parseKeyframeSelector();\n\t}\n\n\tpublic _parseFunctionArgument():nodes.Node {\n\t\t// [variableName ':'] expression | variableName '...'\n\t\tvar node = <nodes.FunctionArgument> this.create(nodes.FunctionArgument);\n\n\t\tvar pos = this.mark();\n\t\tvar argument = this._parseVariable();\n\t\tif (argument) {\n\t\t\tif (!this.accept(scanner.TokenType.Colon)) {\n\t\t\t\tif (this.accept(sassScanner.Ellipsis)) { // optional\n\t\t\t\t\tnode.setValue(argument);\n\t\t\t\t\treturn this.finish(node);\n\t\t\t\t} else {\n\t\t\t\t\tthis.restoreAtMark(pos);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.setIdentifier(argument);\n\t\t\t}\n\t\t}\n\t\tif (node.setValue(this._parseExpr(true))) {\n\t\t\treturn this.finish(node);\n\t\t}\n\t\treturn null;\n\t}\n}"]}