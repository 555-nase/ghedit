{"version":3,"file":"vs/languages/css/test/common/lint.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/css/test/common/lint.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport assert = require('assert');\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\nimport parser = require('vs/languages/css/common/parser/cssParser');\nimport lint = require('vs/languages/css/common/services/lint');\nimport lintRules = require('vs/languages/css/common/services/lintRules');\nimport _level = require('vs/languages/css/common/level');\nimport workerTests = require('./css-worker.test');\n\nexport function assertEntries(node:nodes.Node, rules:nodes.IRule[]) : void {\n\n\tvar visitor = new lint.LintVisitor();\n\tnode.accept(visitor);\n\n\tvar entries = visitor.getEntries(_level.Level.Error | _level.Level.Warning | _level.Level.Ignore);\n\tassert.equal(entries.length, rules.length);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\tvar entry = entries[i],\n\t\t\tidx:number = rules.indexOf(entry.getRule());\n\n\t\trules.splice(idx, 1);\n\t}\n\tassert.equal(rules.length, 0);\n}\n\nfunction assertStyleSheet(input:string, ...rules:lintRules.Rule[]) : void {\n\tvar p = new parser.Parser();\n\tvar node = p.parseStylesheet(workerTests.mockMirrorModel(input));\n\n\tassertEntries(node, rules);\n}\n\nfunction assertRuleSet(input:string, ...rules:lintRules.Rule[]) : void {\n\tvar p = new parser.Parser();\n\tvar node = p.internalParse(input, p._parseRuleset);\n\tassertEntries(node, rules);\n}\n\n\nfunction assertFontFace(input:string, ...rules:lintRules.Rule[]) : void {\n\tvar p = new parser.Parser();\n\tvar node = p.internalParse(input, p._parseFontFace);\n\tassertEntries(node, rules);\n}\n\nsuite('CSS - Lint', () => {\n\n\ttest('universal selector, empty rule', function() {\n\t\tassertRuleSet('* { color: perty }', lintRules.Rules.UniversalSelector);\n\t\tassertRuleSet('*, div { color: perty }', lintRules.Rules.UniversalSelector);\n\t\tassertRuleSet('div, * { color: perty }', lintRules.Rules.UniversalSelector);\n\t\tassertRuleSet('div > * { color: perty }', lintRules.Rules.UniversalSelector);\n\t\tassertRuleSet('div + * { color: perty }', lintRules.Rules.UniversalSelector);\n\t});\n\n\ttest('empty ruleset', function() {\n\t\tassertRuleSet('selector {}', lintRules.Rules.EmptyRuleSet);\n\t});\n\n\ttest('properies ignored due to inline ', function() {\n\t\tassertRuleSet('selector { display: inline; height: 100px; }', lintRules.Rules.PropertyIgnoredDueToDisplay);\n\t\tassertRuleSet('selector { display: inline; width: 100px; }', lintRules.Rules.PropertyIgnoredDueToDisplay);\n\t\tassertRuleSet('selector { display: inline; margin-top: 1em; }', lintRules.Rules.PropertyIgnoredDueToDisplay);\n\t\tassertRuleSet('selector { display: inline; margin-bottom: 1em; }', lintRules.Rules.PropertyIgnoredDueToDisplay);\n\t\tassertRuleSet('selector { display: inline; float: right; }', lintRules.Rules.PropertyIgnoredDueToDisplay, lintRules.Rules.AvoidFloat);\n\t\tassertRuleSet('selector { display: inline-block; float: right; }', lintRules.Rules.PropertyIgnoredDueToDisplay, lintRules.Rules.AvoidFloat);\n\t\tassertRuleSet('selector { display: block; vertical-align: center; }', lintRules.Rules.PropertyIgnoredDueToDisplay);\n\t});\n\n\ttest('avoid !important', function() {\n\t\tassertRuleSet('selector { display: inline !important; }', lintRules.Rules.AvoidImportant);\n\t});\n\n\ttest('avoid float', function() {\n\t\tassertRuleSet('selector { float: right; }', lintRules.Rules.AvoidFloat);\n\t});\n\n\ttest('avoid id selectors', function() {\n\t\tassertRuleSet('#selector {  display: inline; }', lintRules.Rules.AvoidIdSelector);\n\t});\n\n\ttest('zero with unit', function() {\n\t//\tassertRuleSet('selector { width: 0px }', lint.Rules.ZeroWithUnit);\n\t\tassertRuleSet('selector { width: 0% }');\n\t});\n\n\ttest('duplicate declarations', function() {\n\t\tassertRuleSet('selector { color: perty; color: perty }', lintRules.Rules.DuplicateDeclarations, lintRules.Rules.DuplicateDeclarations);\n\t\tassertRuleSet('selector { color: -o-perty; color: perty }');\n\t});\n\n\ttest('unknown properties', function() {\n\t\tassertRuleSet('selector { -ms-property: \"rest is missing\" }', lintRules.Rules.UnknownVendorSpecificProperty);\n\t\tassertRuleSet('selector { -moz-box-shadow: \"rest is missing\" }', lintRules.Rules.UnknownVendorSpecificProperty, lintRules.Rules.IncludeStandardPropertyWhenUsingVendorPrefix);\n\t\tassertRuleSet('selector { box-shadow: none }'); // no error\n\t\tassertRuleSet('selector { box-property: \"rest is missing\" }', lintRules.Rules.UnknownProperty);\n\n\t});\n\n\ttest('IE hacks', function() {\n\t\tassertRuleSet('selector { display: inline-block; *display: inline; }', lintRules.Rules.IEStarHack);\n\t\tassertRuleSet('selector { background: #00f; /* all browsers including Mac IE */ *background: #f00; /* IE 7 and below */ _background: #f60; /* IE 6 and below */  }', lintRules.Rules.IEStarHack, lintRules.Rules.IEStarHack);\n\t});\n\n\ttest('vendor specific prefixes', function() {\n\t\tassertRuleSet('selector { -moz-animation: none }', lintRules.Rules.AllVendorPrefixes, lintRules.Rules.IncludeStandardPropertyWhenUsingVendorPrefix);\n\t\tassertRuleSet('selector { -moz-transform: none; transform: none }', lintRules.Rules.AllVendorPrefixes);\n\t\tassertRuleSet('selector { transform: none; }');\n\t\tassertRuleSet('selector { -moz-transform: none; transform: none; -o-transform: none; -webkit-transform: none; -ms-transform: none; }');\n\t\tassertRuleSet('selector { --transform: none; }');\n\t});\n\n\ttest('font-face required properties', function() {\n\t\tassertFontFace('@font-face {  }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { src: url(test.tff) }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { font-family: \\'name\\' }', lintRules.Rules.RequiredPropertiesForFontFace);\n\t\tassertFontFace('@font-face { src: url(test.tff); font-family: \\'name\\' }'); // no error\n\t});\n\n\ttest('keyframes', function() {\n\t\tassertStyleSheet('@keyframes foo { }');\n\t\tassertStyleSheet('@keyframes foo { } @-moz-keyframes foo { }', lintRules.Rules.AllVendorPrefixes);\n\t\tassertStyleSheet('@-moz-keyframes foo { }', lintRules.Rules.AllVendorPrefixes, lintRules.Rules.IncludeStandardPropertyWhenUsingVendorPrefix);\n\t});\n});\n"]}