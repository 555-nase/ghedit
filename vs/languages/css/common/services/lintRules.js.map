{"version":3,"sources":["vs/languages/css/common/services/lintRules.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAQb,IAAI,OAAO,GAAG,SAAS,CAAC;IACxB,IAAI,KAAK,GAAG,OAAO,CAAC;IACpB,IAAI,MAAM,GAAG,QAAQ,CAAC;IAEtB;QAEC,cAA0B,EAAU,EAAS,OAAe,EAAS,YAAoB;YAA/D,OAAE,GAAF,EAAE,CAAQ;YAAS,YAAO,GAAP,OAAO,CAAQ;YAAS,iBAAY,GAAZ,YAAY,CAAQ;YACxF,gBAAgB;QACjB,CAAC;QAEM,+BAAgB,GAAvB;YACC,MAAM,CAAC;gBACN,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC;gBAC9B,OAAO,EAAE,IAAI,CAAC,YAAY;gBAC1B,WAAW,EAAE,IAAI,CAAC,OAAO;aACzB,CAAC;QACH,CAAC;QAEF,WAAC;IAAD,CAfA,AAeC,IAAA;IAfY,YAAI,OAehB,CAAA;IACU,aAAK,GAAG;QAClB,iBAAiB,EAAE,IAAI,IAAI,CAAC,0BAA0B,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyB,EAAE,IAAoG,CAAC,EAAE,MAAM,CAAC;QAC9M,4CAA4C,EAAE,IAAI,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA+B,EAAE,IAAwE,CAAC,EAAE,OAAO,CAAC;QACxM,qBAAqB,EAAE,IAAI,IAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAA4B,EAAE,IAAwC,CAAC,EAAE,MAAM,CAAC;QACpJ,YAAY,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAA2B,CAAC,EAAE,OAAO,CAAC;QAC9G,iBAAiB,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAA2C,CAAC,EAAE,MAAM,CAAC;QACzI,kCAAkC,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAiC,EAAE,IAAyD,CAAC,EAAE,MAAM,CAAC;QAC5K,iBAAiB,EAAE,IAAI,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAwB,EAAE,IAAgD,CAAC,EAAE,MAAM,CAAC;QAClJ,YAAY,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAyB,CAAC,EAAE,MAAM,CAAC;QAC1G,6BAA6B,EAAE,IAAI,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAyB,EAAE,IAAgE,CAAC,EAAE,OAAO,CAAC;QACjL,cAAc,EAAE,IAAI,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAe,EAAE,IAAqD,CAAC,EAAE,KAAK,CAAC;QACvI,mBAAmB,EAAE,IAAI,IAAI,CAAC,0BAA0B,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAoB,EAAE,IAA8B,CAAC,EAAE,KAAK,CAAC;QACpI,eAAe,EAAE,IAAI,IAAI,CAAC,mBAAmB,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAsB,EAAE,IAAmB,CAAC,EAAE,OAAO,CAAC;QAClH,UAAU,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAa,EAAE,IAA2D,CAAC,EAAE,MAAM,CAAC;QAChI,6BAA6B,EAAE,IAAI,IAAI,CAAC,iCAAiC,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAoC,EAAE,IAAmC,CAAC,EAAE,MAAM,CAAC;QAC3K,2BAA2B,EAAE,IAAI,IAAI,CAAC,6BAA6B,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkC,EAAE,IAAwJ,CAAC,EAAE,OAAO,CAAC;QACzR,cAAc,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAqB,EAAE,IAA0I,CAAC,EAAE,MAAM,CAAC;QAC9N,UAAU,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAiB,EAAE,IAA4G,CAAC,EAAE,MAAM,CAAC;QACpL,eAAe,EAAE,IAAI,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAsB,EAAE,IAA6F,CAAC,EAAE,MAAM,CAAC;KACpL,CAAC;IAEF,oCAA2C,SAAiB;QAC3D,IAAI,UAAU,GAAgE,EAAE,CAAC;QAEjF,UAAU,CAAC,SAAS,GAAG,WAAW,CAAC,GAAG;YACrC,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAkB,EAAE,IAAqC,CAAC;SACpF,CAAC;QACF,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,aAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,IAAI,GAAG,aAAK,CAAC,QAAQ,CAAC,CAAC;YAC3B,UAAU,CAAC,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACtE,CAAC;QACD,MAAM,CAAC,UAAU,CAAC;IACnB,CAAC;IAbe,kCAA0B,6BAazC,CAAA;IAMD,kBAAyB,IAAQ;QAChC,IAAI,QAAQ,GAA2B,EAAE,CAAC;QAC1C,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,aAAK,CAAC,CAAC,CAAC;YAC5B,IAAI,IAAI,GAAG,aAAK,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;YAC3B,CAAC;QACF,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAVe,gBAAQ,WAUvB,CAAA;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA8DI","file":"vs/languages/css/common/services/lintRules.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\nimport nls = require('vs/nls');\nimport configurationRegistry = require('vs/platform/configuration/common/configurationRegistry');\nimport _level = require('vs/languages/css/common/level');\n\nvar Warning = 'warning';\nvar Error = 'error';\nvar Ignore = 'ignore';\n\nexport class Rule implements nodes.IRule {\n\n\tpublic constructor(public id: string, public message: string, public defaultValue: string) {\n\t\t// nothing to do\n\t}\n\n\tpublic getConfiguration(): IJSONSchema {\n\t\treturn {\n\t\t\ttype: 'string',\n\t\t\tenum: [Ignore, Warning, Error],\n\t\t\tdefault: this.defaultValue,\n\t\t\tdescription: this.message\n\t\t};\n\t}\n\n}\nexport var Rules = {\n\tAllVendorPrefixes: new Rule('compatibleVendorPrefixes', nls.localize('rule.vendorprefixes.all', \"When using a vendor-specific prefix make sure to also include all other vendor-specific properties\"), Ignore),\n\tIncludeStandardPropertyWhenUsingVendorPrefix: new Rule('vendorPrefix', nls.localize('rule.standardvendorprefix.all', \"When using a vendor-specific prefix also include the standard property\"), Warning),\n\tDuplicateDeclarations: new Rule('duplicateProperties', nls.localize('rule.duplicateDeclarations', \"Do not use duplicate style definitions\"), Ignore),\n\tEmptyRuleSet: new Rule('emptyRules', nls.localize('rule.emptyRuleSets', \"Do not use empty rulesets\"), Warning),\n\tImportStatemement: new Rule('importStatement', nls.localize('rule.importDirective', \"Import statements do not load in parallel\"), Ignore),\n\tNoWidthOrHeightWhenPaddingOrBorder: new Rule('boxModel', nls.localize('rule.withHeightAndBorderPadding', \"Do not use width or height when using padding or border\"), Ignore),\n\tUniversalSelector: new Rule('universalSelector', nls.localize('rule.universalSelector', \"The universal selector (*) is known to be slow\"), Ignore),\n\tZeroWithUnit: new Rule('zeroUnits', nls.localize('rule.zeroWidthUnit', \"No unit for zero needed\"), Ignore),\n\tRequiredPropertiesForFontFace: new Rule('fontFaceProperties', nls.localize('rule.fontFaceProperties', \"@font-face rule must define 'src' and 'font-family' properties\"), Warning),\n\tHexColorLength: new Rule('hexColorLength', nls.localize('rule.hexColor', \"Hex colors must consist of three or six hex numbers\"), Error),\n\tArgsInColorFunction: new Rule('argumentsInColorFunction', nls.localize('rule.colorFunction', \"Invalid number of parameters\"), Error),\n\tUnknownProperty: new Rule('unknownProperties', nls.localize('rule.unknownProperty', \"Unknown property.\"), Warning),\n\tIEStarHack: new Rule('ieHack', nls.localize('rule.ieHack', \"IE hacks are only necessary when supporting IE7 and older\"), Ignore),\n\tUnknownVendorSpecificProperty: new Rule('unknownVendorSpecificProperties', nls.localize('rule.unknownVendorSpecificProperty', \"Unknown vendor specific property.\"), Ignore),\n\tPropertyIgnoredDueToDisplay: new Rule('propertyIgnoredDueToDisplay', nls.localize('rule.propertyIgnoredDueToDisplay', \"Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\"), Warning),\n\tAvoidImportant: new Rule('important', nls.localize('rule.avoidImportant', \"Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.\"), Ignore),\n\tAvoidFloat: new Rule('float', nls.localize('rule.avoidFloat', \"Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.\"), Ignore),\n\tAvoidIdSelector: new Rule('idSelector', nls.localize('rule.avoidIdSelector', \"Selectors should not contain IDs because these rules are too tightly coupled with the HTML.\"), Ignore),\n};\n\nexport function getConfigurationProperties(keyPrefix: string): { [path:string]:configurationRegistry.IConfigurationNode } {\n\tvar properties: { [path:string]:configurationRegistry.IConfigurationNode; } = {};\n\n\tproperties[keyPrefix + '.validate'] = {\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t\tdescription: nls.localize('enableValidation', 'Enables or disables all validations')\n\t};\n\tfor (var ruleName in Rules) {\n\t\tvar rule = Rules[ruleName];\n\t\tproperties[keyPrefix + '.lint.' + rule.id] = rule.getConfiguration();\n\t}\n\treturn properties;\n}\n\nexport interface IConfigurationSettings {\n\t[ruleId:string] : _level.Level;\n}\n\nexport function sanitize(conf:any): IConfigurationSettings {\n\tvar settings: IConfigurationSettings = {};\n\tfor (var ruleName in Rules) {\n\t\tvar rule = Rules[ruleName];\n\t\tvar level = _level.toLevel(conf[rule.id]);\n\t\tif (level) {\n\t\t\tsettings[rule.id] = level;\n\t\t}\n\t}\n\treturn settings;\n}\n\n/* old rules\n\t\t'duplicate-background-images' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('duplicateBackgroundImages', \"Every background-image should be unique. Use a common class for e.g. sprites.\")\n\t\t},\n\t\t'gradients' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'warning',\n\t\t\t'description': nls.localize('gradients', \"When using a vendor-prefixed gradient, make sure to use them all.\")\n\t\t},\n\t\t'outline-none' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'warning',\n\t\t\t'description': nls.localize('outlineNone', \"Use of outline: none or outline: 0 should be limited to :focus rules.\")\n\t\t},\n\t\t'overqualified-elements' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('overqualifiedElements', \"Don't use classes or IDs with elements (a.foo or a#foo).\")\n\t\t},\n\t\t'qualified-headings' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('qualifiedHeadings', \"Headings should not be qualified (namespaced).\")\n\t\t},\n\t\t'regex-selectors' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('regexSelectors', \"Selectors that look like regular expressions are slow and should be avoided.\")\n\t\t},\n\t\t'shorthand' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('shorthand', \"Use shorthand properties where possible.\")\n\t\t},\n\t\t'text-indent' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('textIndent', \"Checks for text indent less than -99px.\")\n\t\t},\n\t\t'unique-headings' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('uniqueHeadings', \"Headings should be defined only once.\")\n\t\t},\n\n\t\t'unqualified-attributes' : {\n\t\t\t'type': 'string',\n\t\t\t'enum': ['ignore', 'warning', 'error'],\n\t\t\t'default': 'ignore',\n\t\t\t'description': nls.localize('unqualifiedAttributes', \"Unqualified attribute selectors are known to be slow.\")\n\t\t},\n\t\t*/\n\n"]}