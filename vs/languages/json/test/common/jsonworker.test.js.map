{"version":3,"file":"vs/languages/json/test/common/jsonworker.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/json/test/common/jsonworker.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport assert = require('assert');\nimport jsonworker = require('vs/languages/json/common/jsonWorker');\nimport jsonSchema = require('vs/base/common/jsonSchema');\nimport resourceService = require('vs/editor/common/services/resourceServiceImpl');\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport instantiationService = require('vs/platform/instantiation/common/instantiationService');\nimport mirrorModel = require('vs/editor/common/model/mirrorModel');\nimport URI from 'vs/base/common/uri';\nimport SchemaService = require('vs/languages/json/common/jsonSchemaService');\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport WinJS = require('vs/base/common/winjs.base');\nimport modesUtil = require('vs/editor/test/common/modesTestUtils');\nimport strings = require('vs/base/common/strings');\n\nsuite('JSON - Worker', () => {\n\n\tvar assertOutline:any = function(actual: Modes.IOutlineEntry[], expected: any[], message: string) {\n\t\tassert.equal(actual.length, expected.length, message);\n\t\tfor (var i = 0; i < expected.length; i++) {\n\t\t\tassert.equal(actual[i].label, expected[i].label, message);\n\t\t\tassert.equal(actual[i].type, expected[i].type, message);\n\t\t\tvar childrenExpected = expected[i].children || [];\n\t\t\tvar childrenActual = actual[i].children || [];\n\t\t\tassertOutline(childrenExpected, childrenActual, message);\n\t\t}\n\t};\n\n\tfunction mockWorkerEnv(url: URI, content: string): { worker: jsonworker.JSONWorker; model: EditorCommon.IMirrorModel; } {\n\t\tvar mm = mirrorModel.createTestMirrorModelFromString(content, null, url);\n\n\t\tvar resourceModelMock: IResourceService = new resourceService.ResourceService();\n\t\tresourceModelMock.insert(url, mm);\n\n\t\tvar _instantiationService = instantiationService.createInstantiationService({\n\t\t\tresourceService: resourceModelMock\n\t\t});\n\t\tvar worker = _instantiationService.createInstance(jsonworker.JSONWorker, mm.getMode().getId());\n\n\t\treturn { worker: worker, model: mm };\n\t};\n\n\tvar prepareSchemaServer = function(schema:jsonSchema.IJSONSchema, worker: jsonworker.JSONWorker) : void {\n\t\tif (schema) {\n\t\t\tvar id = \"http://myschemastore/test1\";\n\t\t\tvar schemaService = <SchemaService.JSONSchemaService> (<any>worker).schemaService;\n\t\t\tschemaService.registerExternalSchema(id, [ \"*.json\" ], schema);\n\t\t}\n\t}\n\n\tvar testSuggestionsFor = function(value:string, stringAfter:string, schema?:jsonSchema.IJSONSchema):WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar url = URI.parse('test://test.json');\n\t\tvar env = mockWorkerEnv(url, value);\n\t\tprepareSchemaServer(schema, env.worker);\n\n\t\tvar idx = stringAfter ? value.indexOf(stringAfter) : 0;\n\t\tvar position = env.model.getPositionFromOffset(idx);\n\t\treturn env.worker.suggest(url, position).then(result => result[0]);\n\t};\n\n\tfunction testComputeInfo(content:string, schema:jsonSchema.IJSONSchema, position:EditorCommon.IPosition):WinJS.TPromise<Modes.IComputeExtraInfoResult> {\n\t\tvar url = URI.parse('test://test.json');\n\t\tvar env = mockWorkerEnv(url, content);\n\t\tprepareSchemaServer(schema, env.worker);\n\t\treturn env.worker.computeInfo(url, position);\n\t}\n\n\tvar testValueSetFor = function(value:string, schema:jsonSchema.IJSONSchema, selection:string, selectionLength: number, up: boolean):WinJS.TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\tvar url = URI.parse('test://test.json');\n\t\tvar env = mockWorkerEnv(url, value);\n\t\tprepareSchemaServer(schema, env.worker);\n\n\t\tvar pos = env.model.getPositionFromOffset(value.indexOf(selection));\n\t\tvar range = { startLineNumber: pos.lineNumber, startColumn: pos.column, endLineNumber: pos.lineNumber, endColumn: pos.column + selectionLength };\n\n\t\treturn env.worker.navigateValueSet(url, range, up);\n\t};\n\n\tfunction getOutline(content: string):WinJS.TPromise<Modes.IOutlineEntry[]> {\n\t\tvar url = URI.parse('test');\n\t\tvar workerEnv = mockWorkerEnv(url, content);\n\t\treturn workerEnv.worker.getOutline(url);\n\t};\n\n\tvar assertSuggestion= function(completion:Modes.ISuggestResult, label:string, documentationLabel?: string) {\n\t\tvar matches = completion.suggestions.filter(function(suggestion: Modes.ISuggestion) {\n\t\t\treturn suggestion.label === label && (!documentationLabel || suggestion.documentationLabel === documentationLabel);\n\t\t}).length;\n\t\tassert.equal(matches, 1, label + \" should only existing once\");\n\t};\n\n\ttest('JSON outline - base types', function(testDone) {\n\t\tvar content= '{ \"key1\": 1, \"key2\": \"foo\", \"key3\" : true }';\n\n\t\tvar expected= [\n\t\t\t{ label: 'key1', type: 'number'},\n\t\t\t{ label: 'key2', type: 'string'},\n\t\t\t{ label: 'key3', type: 'boolean'},\n\t\t];\n\n\t\tgetOutline(content).then((entries: Modes.IOutlineEntry[]) => {\n\t\t\tassertOutline(entries, expected);\n\t\t}).done(() => testDone(), (error) => {\n\t\t\ttestDone(error);\n\t\t});\n\t});\n\n\ttest('JSON outline - arrays', function(testDone) {\n\t\tvar content= '{ \"key1\": 1, \"key2\": [ 1, 2, 3 ], \"key3\" : [ { \"k1\": 1 }, {\"k2\": 2 } ] }';\n\n\t\tvar expected= [\n\t\t\t{ label: 'key1', type: 'number'},\n\t\t\t{ label: 'key2', type: 'array'},\n\t\t\t{ label: 'key3', type: 'array', children : [ { label: 'k1', type: 'number'}, { label: 'k2', type: 'number'} ]},\n\t\t];\n\n\t\tgetOutline(content).then((entries: Modes.IOutlineEntry[]) => {\n\t\t\tassertOutline(entries, expected);\n\t\t}).done(() => testDone(), (error) => {\n\t\t\ttestDone(error);\n\t\t});\n\t});\n\n\ttest('JSON outline - objects', function(testDone) {\n\t\tvar content= '{ \"key1\": { \"key2\": true }, \"key3\" : { \"k1\":  { } }';\n\n\t\tvar expected= [\n\t\t\t{ label: 'key1', type: 'object', children : [ { label: 'key2', type: 'boolean'} ] },\n\t\t\t{ label: 'key3', type: 'object', children : [ { label: 'k1', type: 'object'} ] }\n\t\t];\n\n\t\tgetOutline(content).then((entries: Modes.IOutlineEntry[]) => {\n\t\t\tassertOutline(entries, expected);\n\t\t}).done(() => testDone(), (error) => {\n\t\t\ttestDone(error);\n\t\t});\n\t});\n\n\ttest('JSON outline - object with syntax error', function(testDone) {\n\t\tvar content= '{ \"key1\": { \"key2\": true, \"key3\":, \"key4\": false } }';\n\n\t\tvar expected= [\n\t\t\t{ label: 'key1', type: 'object', children : [ { label: 'key2', type: 'boolean'}, { label: 'key4', type: 'boolean'} ] },\n\t\t];\n\n\t\tgetOutline(content).then((entries: Modes.IOutlineEntry[]) => {\n\t\t\tassertOutline(entries, expected);\n\t\t}).done(() => testDone(), (error) => {\n\t\t\ttestDone(error);\n\t\t});\n\t});\n\n\n\ttest('JSON suggest for keys no schema', function(testDone) {\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"age\": 44 }, { /**/ }', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'name');\n\t\t\t\tassertSuggestion(result, 'age');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"age\": 44 }, { \"/**/ }', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'name');\n\t\t\t\tassertSuggestion(result, 'age');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"age\": 44 }, { \"n/**/ }', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'name');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"age\": 44 }, { \"name/**/\" }', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'name');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"address\": { \"street\" : \"MH Road\", \"number\" : 5 } }, { \"name\": \"Jack\", \"address\": { \"street\" : \"100 Feet Road\", /**/ }', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'number');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest for values no schema', function(testDone) {\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('[ { \"name\": \"John\", \"age\": 44 }, { \"name\": /**/', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, '\"John\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"data\": { \"key\": 1, \"data\": true } }, { \"data\": /**/', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '{}');\n\t\t\t\tassertSuggestion(result, 'true');\n\t\t\t\tassertSuggestion(result, 'false');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"data\": \"foo\" }, { \"data\": \"bar\" }, { \"data\": \"/**/\" } ]', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '\"foo\"');\n\t\t\t\tassertSuggestion(result, '\"bar\"');\n\t\t\t\tassertSuggestion(result, '\"/**/\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"data\": \"foo\" }, { \"data\": \"bar\" }, { \"data\": \"f/**/\" } ]', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, '\"foo\"');\n\t\t\t\tassertSuggestion(result, '\"f/**/\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"data\": \"foo\" }, { \"data\": \"bar\" }, { \"data\": \"xoo\"/**/ } ]', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '\"xoo\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('[ { \"data\": \"foo\" }, { \"data\": \"bar\" }, { \"data\": \"xoo\"  /**/ } ]', '/**/').then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 0);\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest for keys with schema', function(testDone) {\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t'a' : {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdescription: 'A'\n\t\t\t\t},\n\t\t\t\t'b' : {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: 'B'\n\t\t\t\t},\n\t\t\t\t'c' : {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: 'C'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t\tassertSuggestion(result, 'c', 'C');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t\tassertSuggestion(result, 'c', 'C');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"a/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"a\" = 1;/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t\tassertSuggestion(result, 'c', 'C');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\n\t});\n\n\ttest('JSON suggest for value with schema', function(testDone) {\n\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t'a' : {\n\t\t\t\t\tenum: [ 'John', 'Jeff', 'George' ]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{ \"a\": /**/ }', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '\"John\"');\n\t\t\t\tassertSuggestion(result, '\"Jeff\"');\n\t\t\t\tassertSuggestion(result, '\"George\"');\n\t\t\t}),\n\n\t\t\ttestSuggestionsFor('{ \"a\": \"J/**/ }', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, '\"John\"');\n\t\t\t\tassertSuggestion(result, '\"Jeff\"');\n\t\t\t}),\n\n\t\t\ttestSuggestionsFor('{ \"a\": \"John\"/**/ }', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '\"John\"');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest with nested schema', function(testDone) {\n\n\t\tvar content = '{/**/}';\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\toneOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'a' : {\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdescription: 'A'\n\t\t\t\t\t},\n\t\t\t\t\t'b' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'B'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttype: 'array'\n\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor(content, '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest with required anyOf', function(testDone) {\n\n\t\tvar schema: jsonSchema.IJSONSchema = {\n\t\t\tanyOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\trequired: ['a', 'b'],\n\t\t\t\tproperties: {\n\t\t\t\t\t'a': {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'A'\n\t\t\t\t\t},\n\t\t\t\t\t'b': {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'B'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\ttype: 'object',\n\t\t\t\t\trequired: ['c', 'd'],\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t'c': {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: 'C'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'd': {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: 'D'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 4);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t\tassertSuggestion(result, 'c', 'C');\n\t\t\t\tassertSuggestion(result, 'd', 'D');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"a\": \"\", /**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'b', 'B');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest with anyOf', function(testDone) {\n\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\tanyOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'type' : {\n\t\t\t\t\t\tenum: [ 'house' ]\n\t\t\t\t\t},\n\t\t\t\t\t'b' : {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'type' : {\n\t\t\t\t\t\tenum: [ 'appartment' ]\n\t\t\t\t\t},\n\t\t\t\t\t'c' : {\n\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, 'type');\n\t\t\t\tassertSuggestion(result, 'b');\n\t\t\t\tassertSuggestion(result, 'c');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"type\": \"appartment\", /**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 1);\n\t\t\t\tassertSuggestion(result, 'c');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest with oneOf', function(testDone) {\n\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\toneOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\tallOf: [{\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\t'a' : {\n\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\tdescription: 'A'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tanyOf: [{\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'b1' : {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: 'B1'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}, {\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'b2' : {\n\t\t\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\t\t\tdescription: 'B2'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t}, {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'c' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'C'\n\t\t\t\t\t},\n\t\t\t\t\t'd' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'D'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 5);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b1', 'B1');\n\t\t\t\tassertSuggestion(result, 'b2', 'B2');\n\t\t\t\tassertSuggestion(result, 'c', 'C');\n\t\t\t\tassertSuggestion(result, 'd', 'D');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"b1\": \"\", /**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'a', 'A');\n\t\t\t\tassertSuggestion(result, 'b2', 'B2');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON suggest with oneOf and enums', function(testDone) {\n\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\toneOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'type' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: [ '1', '2' ]\n\t\t\t\t\t},\n\t\t\t\t\t'a' : {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'x': {\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'y': {\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\" : [ 'x', 'y']\n\t\t\t\t\t},\n\t\t\t\t\t'b': {}\n\t\t\t\t},\n\t\t\t}, {\n\t\t\t\ttype: 'object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'type' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tenum: [ '3' ]\n\t\t\t\t\t},\n\t\t\t\t\t'a' : {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\t'x': {\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'z': {\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\" : [ 'x', 'z']\n\t\t\t\t\t},\n\t\t\t\t\t'c': {}\n\t\t\t\t},\n\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestSuggestionsFor('{/**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 4);\n\t\t\t\tassertSuggestion(result, 'type');\n\t\t\t\tassertSuggestion(result, 'a');\n\t\t\t\tassertSuggestion(result, 'b');\n\t\t\t\tassertSuggestion(result, 'c');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"type\": /**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 3);\n\t\t\t\tassertSuggestion(result, '\"1\"');\n\t\t\t\tassertSuggestion(result, '\"2\"');\n\t\t\t\tassertSuggestion(result, '\"3\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"a\": { \"x\": \"\", \"y\": \"\" }, \"type\": /**/}', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, '\"1\"');\n\t\t\t\tassertSuggestion(result, '\"2\"');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"type\": \"1\", \"a\" : { /**/ }', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'x');\n\t\t\t\tassertSuggestion(result, 'y');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"type\": \"1\", \"a\" : { \"x\": \"\", \"z\":\"\" }, /**/', '/**/', schema).then((result) => {\n\t\t\t\t// both alternatives have errors: intellisense proposes all options\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'b');\n\t\t\t\tassertSuggestion(result, 'c');\n\t\t\t}),\n\t\t\ttestSuggestionsFor('{ \"a\" : { \"x\": \"\", \"z\":\"\" }, /**/', '/**/', schema).then((result) => {\n\t\t\t\tassert.strictEqual(result.suggestions.length, 2);\n\t\t\t\tassertSuggestion(result, 'type');\n\t\t\t\tassertSuggestion(result, 'c');\n\t\t\t}),\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON Compute Info', function(testDone) {\n\n\t\tvar content = '{\"a\": 42, \"b\": \"hello\", \"c\": false}';\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tdescription: 'a very special object',\n\t\t\tproperties: {\n\t\t\t\t'a' : {\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tdescription: 'A'\n\t\t\t\t},\n\t\t\t\t'b' : {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: 'B'\n\t\t\t\t},\n\t\t\t\t'c' : {\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tdescription: 'C'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestComputeInfo(content, schema, {lineNumber:1, column:1}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'a very special object'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}),\n\t\t\ttestComputeInfo(content, schema, {lineNumber: 1, column: 2}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'A'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}),\n\t\t\ttestComputeInfo(content, schema, {lineNumber:1, column:33}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'C'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}),\n\t\t\ttestComputeInfo(content, schema, {lineNumber:1, column:8}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'A'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\ttest('JSON ComputeInfo with nested schema', function(testDone) {\n\n\t\tvar content = '{\"a\": 42, \"b\": \"hello\"}';\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\toneOf: [{\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: 'a very special object',\n\t\t\t\tproperties: {\n\t\t\t\t\t'a' : {\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdescription: 'A'\n\t\t\t\t\t},\n\t\t\t\t\t'b' : {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: 'B'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\ttype: 'array'\n\t\t\t}]\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestComputeInfo(content, schema, {lineNumber:1, column:10}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'a very special object'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}),\n\t\t\ttestComputeInfo(content, schema, {lineNumber:1, column:2}).then((result) => {\n\t\t\t\tassert.deepEqual(result.htmlContent, [\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: 'documentation',\n\t\t\t\t\t\ttext: 'A'\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\tvar assertReplaceResult= function(result:Modes.IInplaceReplaceSupportResult, expected:string) {\n\t\tassert.ok(!!result);\n\t\tassert.equal(result.value, expected);\n\t};\n\n\ttest('JSON value replace', function(testDone) {\n\n\t\tvar content = '{ \"a\" : \"error\", \"b\": true }';\n\t\tvar schema:jsonSchema.IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\t'a' : {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tenum : [ 'error', 'warning', 'ignore' ]\n\t\t\t\t},\n\t\t\t\t'b' : {\n\t\t\t\t\ttype: 'boolean'\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tWinJS.Promise.join([\n\t\t\ttestValueSetFor(content, schema, 'error', 0, true).then((result) => {\n\t\t\t\tassertReplaceResult(result, '\"warning\"');\n\t\t\t}),\n\n\t\t\ttestValueSetFor(content, schema, 'error', 0, false).then((result) => {\n\t\t\t\tassertReplaceResult(result, '\"ignore\"');\n\t\t\t}),\n\n\t\t\ttestValueSetFor(content, schema, 'true', 0, false).then((result) => {\n\t\t\t\tassertReplaceResult(result, 'false');\n\t\t\t})\n\t\t]).done(() => testDone(), (errors:any[]) => {\n\t\t\ttestDone(errors.reduce((e1, e2) => e1 || e2));\n\t\t});\n\t});\n\n\n});\n"]}