{"version":3,"sources":["vs/languages/json/common/jsonSchemaService.ts"],"names":[],"mappings":"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","file":"vs/languages/json/common/jsonSchemaService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport Objects = require('vs/base/common/objects');\nimport Json = require('vs/base/common/json');\nimport http = require('vs/base/common/http');\nimport {IJSONSchema} from 'vs/base/common/jsonSchema';\nimport Strings = require('vs/base/common/strings');\nimport URI from 'vs/base/common/uri';\nimport Types = require('vs/base/common/types');\nimport Parser = require('vs/languages/json/common/parser/jsonParser');\nimport WinJS = require('vs/base/common/winjs.base');\nimport {IResourceService, ResourceEvents, IResourceChangedEvent} from 'vs/editor/common/services/resourceService';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\n\nexport interface IJSONSchemaService {\n\n\t/**\n\t * Registers a schema file in the current workspace to be applicable to files that match the pattern\n\t */\n\tregisterExternalSchema(uri:string, filePatterns?: string[], unresolvedSchema?: IJSONSchema):ISchemaHandle;\n\n\t/**\n\t * Clears all cached schema files\n\t */\n\tclearExternalSchemas():void;\n\n\t/**\n\t * Registers contributed schemas\n\t */\n\tsetSchemaContributions(schemaContributions:ISchemaContributions):void;\n\n\t/**\n\t * Looks up the appropriate schema for the given URI\n\t */\n\tgetSchemaForResource(resource:string, document: Parser.JSONDocument):WinJS.TPromise<ResolvedSchema>;\n}\n\nexport interface ISchemaHandle {\n\t/**\n\t * The schema id\n\t */\n\turl: string;\n\n\t/**\n\t * The schema from the file, with potential $ref references\n\t */\n\tgetUnresolvedSchema():WinJS.TPromise<UnresolvedSchema>;\n\n\t/**\n\t * The schema from the file, with references resolved\n\t */\n\tgetResolvedSchema():WinJS.TPromise<ResolvedSchema>;\n}\n\n\ninterface InlineReferencePointer {\n\tparent: any;\n\tkey: any;\n\tvalue: any;\n}\n\nclass FilePatternAssociation {\n\n\tprivate schemas: string[];\n\tprivate combinedSchemaId: string;\n\tprivate patternRegExp: RegExp;\n\tprivate combinedSchema: ISchemaHandle;\n\n\tconstructor(pattern: string) {\n\t\tthis.combinedSchemaId = 'local://combinedSchema/' + encodeURIComponent(pattern);\n\t\ttry {\n\t\t\tthis.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n\t\t} catch (e) {\n\t\t\t// invalid pattern\n\t\t\tthis.patternRegExp = null;\n\t\t}\n\t\tthis.schemas = [];\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic addSchema(id: string) {\n\t\tthis.schemas.push(id);\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic matchesPattern(fileName: string) : boolean {\n\t\treturn this.patternRegExp && this.patternRegExp.test(fileName);\n\t}\n\n\tpublic getCombinedSchema(service: JSONSchemaService) : ISchemaHandle {\n\t\tif (!this.combinedSchema) {\n\t\t\tthis.combinedSchema = service.createCombinedSchema(this.combinedSchemaId, this.schemas);\n\t\t}\n\t\treturn this.combinedSchema;\n\t}\n}\n\nclass SchemaHandle implements ISchemaHandle {\n\n\tpublic url: string;\n\n\tprivate resolvedSchema: WinJS.TPromise<ResolvedSchema>;\n\tprivate unresolvedSchema: WinJS.TPromise<UnresolvedSchema>;\n\tprivate service: JSONSchemaService;\n\n\tconstructor(service: JSONSchemaService, url:string, unresolvedSchemaContent?: IJSONSchema) {\n\t\tthis.service = service;\n\t\tthis.url = url;\n\t\tif (unresolvedSchemaContent) {\n\t\t\tthis.unresolvedSchema = WinJS.TPromise.as(new UnresolvedSchema(unresolvedSchemaContent));\n\t\t}\n\t}\n\n\tpublic getUnresolvedSchema():WinJS.TPromise<UnresolvedSchema> {\n\t\tif (!this.unresolvedSchema) {\n\t\t\tthis.unresolvedSchema = this.service.loadSchema(this.url);\n\t\t}\n\t\treturn this.unresolvedSchema;\n\t}\n\n\tpublic getResolvedSchema():WinJS.TPromise<ResolvedSchema> {\n\t\tif (!this.resolvedSchema) {\n\t\t\tthis.resolvedSchema = this.getUnresolvedSchema().then(unresolved => {\n\t\t\t\treturn this.service.resolveSchemaContent(unresolved);\n\t\t\t});\n\t\t}\n\t\treturn this.resolvedSchema;\n\t}\n\n\tpublic clearSchema() : void {\n\t\tthis.resolvedSchema = null;\n\t\tthis.unresolvedSchema = null;\n\t}\n}\n\nexport class UnresolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n}\n\nexport class ResolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n\n\tpublic getSection(path: string[]): IJSONSchema {\n\t\treturn this.getSectionRecursive(path, this.schema);\n\t}\n\n\tprivate getSectionRecursive(path: string[], schema: IJSONSchema): IJSONSchema {\n\t\tif (!schema || path.length === 0) {\n\t\t\treturn schema;\n\t\t}\n\t\tvar next = path.shift();\n\n\t\tif (schema.properties && schema.properties[next]) {\n\t\t\treturn this.getSectionRecursive(path, schema.properties[next]);\n\t\t} else if (Types.isObject(schema.patternProperties)) {\n\t\t\tObject.keys(schema.patternProperties).forEach((pattern) => {\n\t\t\t\tvar regex = new RegExp(pattern);\n\t\t\t\tif (regex.test(next)) {\n\t\t\t\t\treturn this.getSectionRecursive(path, schema.patternProperties[pattern]);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Types.isObject(schema.additionalProperties)) {\n\t\t\treturn this.getSectionRecursive(path, schema.additionalProperties);\n\t\t} else if (next.match('[0-9]+')) {\n\t\t\tif (Types.isObject(schema.items)) {\n\t\t\t\treturn this.getSectionRecursive(path, schema.items);\n\t\t\t} else if (Array.isArray(schema.items)) {\n\t\t\t\ttry {\n\t\t\t\t\tvar index = parseInt(next, 10);\n\t\t\t\t\tif (schema.items[index]) {\n\t\t\t\t\t\treturn this.getSectionRecursive(path, schema.items[index]);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class JSONSchemaService implements IJSONSchemaService {\n\n\tprivate contributionSchemas:{ [id:string]:SchemaHandle };\n\tprivate contributionAssociations:{ [id:string]:string[] };\n\n\tprivate schemasById: { [id:string]:SchemaHandle };\n\tprivate filePatternAssociations: FilePatternAssociation[];\n\tprivate filePatternAssociationById: { [id:string]: FilePatternAssociation };\n\n\tprivate requestService: IRequestService;\n\tprivate contextService : IWorkspaceContextService;\n\tprivate callOnDispose:Function[];\n\tprivate telemetryService: ITelemetryService;\n\n\tconstructor(@IRequestService requestService: IRequestService,\n\t\t@ITelemetryService telemetryService?: ITelemetryService,\n\t\t@IWorkspaceContextService contextService?: IWorkspaceContextService,\n\t\t@IResourceService resourceService?: IResourceService) {\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.telemetryService = telemetryService;\n\t\tthis.callOnDispose = [];\n\n\t\tif (resourceService) {\n\t\t\tthis.callOnDispose.push(resourceService.addListener_(ResourceEvents.CHANGED, (e: IResourceChangedEvent) => this.onResourceChange(e)));\n\t\t}\n\n\t\tthis.contributionSchemas = {};\n\t\tthis.contributionAssociations = {};\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\t}\n\n\tpublic dispose(): void {\n\t\twhile(this.callOnDispose.length > 0) {\n\t\t\tthis.callOnDispose.pop()();\n\t\t}\n\t}\n\n\tprivate onResourceChange(e: IResourceChangedEvent): void {\n\t\tvar url = e.url.toString();\n\t\tvar schemaFile = this.schemasById[url];\n\t\tif (schemaFile) {\n\t\t\tschemaFile.clearSchema();\n\t\t}\n\t}\n\n\tprivate normalizeId(id: string) {\n\t\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\t\treturn id.substring(0, id.length - 1);\n\t\t}\n\t\treturn id;\n\t}\n\n\tpublic setSchemaContributions(schemaContributions: ISchemaContributions): void {\n\t\tif (schemaContributions.schemas) {\n\t\t\tvar schemas = schemaContributions.schemas;\n\t\t\tfor (let id in schemas) {\n\t\t\t\tid = this.normalizeId(id);\n\t\t\t\tthis.contributionSchemas[id] = this.addSchemaHandle(id, schemas[id]);\n\t\t\t}\n\t\t}\n\t\tif (schemaContributions.schemaAssociations) {\n\t\t\tvar schemaAssociations = schemaContributions.schemaAssociations;\n\t\t\tfor (let pattern in schemaAssociations) {\n\t\t\t\tvar associations = schemaAssociations[pattern];\n\t\t\t\tif (this.contextService) {\n\t\t\t\t\tlet env = this.contextService.getConfiguration().env;\n\t\t\t\t\tif (env) {\n\t\t\t\t\t\tpattern = pattern.replace(/%APP_SETTINGS_HOME%/, URI.file(env.appSettingsHome).toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.contributionAssociations[pattern] = associations;\n\n\t\t\t\tvar fpa = this.getOrAddFilePatternAssociation(pattern);\n\t\t\t\tassociations.forEach(schemaId => {\n\t\t\t\t\tvar id = this.normalizeId(schemaId);\n\t\t\t\t\tfpa.addSchema(id);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : SchemaHandle {\n\t\tvar schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n\t\tthis.schemasById[id] = schemaHandle;\n\t\treturn schemaHandle;\n\t}\n\n\tprivate getOrAddSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\treturn this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n\t}\n\n\tprivate getOrAddFilePatternAssociation(pattern: string) {\n\t\tvar fpa = this.filePatternAssociationById[pattern];\n\t\tif (!fpa) {\n\t\t\tfpa = new FilePatternAssociation(pattern);\n\t\t\tthis.filePatternAssociationById[pattern] = fpa;\n\t\t\tthis.filePatternAssociations.push(fpa);\n\t\t}\n\t\treturn fpa;\n\t}\n\n\tpublic registerExternalSchema(uri:string, filePatterns: string[] = null, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\tvar id = this.normalizeId(uri);\n\n\t\tif (filePatterns) {\n\t\t\tfilePatterns.forEach(pattern => {\n\t\t\t\tthis.getOrAddFilePatternAssociation(pattern).addSchema(uri);\n\t\t\t});\n\t\t}\n\t\treturn unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n\t}\n\n\tpublic clearExternalSchemas():void {\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\n\t\tfor (var id in this.contributionSchemas) {\n\t\t\tthis.schemasById[id] = this.contributionSchemas[id];\n\t\t}\n\t\tfor (var pattern in this.contributionAssociations) {\n\t\t\tvar fpa = this.getOrAddFilePatternAssociation(pattern);\n\n\t\t\tthis.contributionAssociations[pattern].forEach(schemaId => {\n\t\t\t\tvar id = this.normalizeId(schemaId);\n\t\t\t\tfpa.addSchema(id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getResolvedSchema(schemaId:string): WinJS.TPromise<ResolvedSchema> {\n\t\tvar id = this.normalizeId(schemaId);\n\t\tvar schemaHandle = this.schemasById[id];\n\t\tif (schemaHandle) {\n\t\t\treturn schemaHandle.getResolvedSchema();\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic loadSchema(url:string) : WinJS.TPromise<UnresolvedSchema> {\n\t\tif (this.telemetryService && Strings.startsWith(url, 'https://schema.management.azure.com')) {\n\t\t\tthis.telemetryService.publicLog('json.schema', {\n\t\t\t\tschemaURL: url\n\t\t\t});\n\t\t}\n\n\t\treturn this.requestService.makeRequest({ url: url }).then(\n\t\t\trequest => {\n\t\t\t\tvar content = request.responseText;\n\t\t\t\tif (!content) {\n\t\t\t\t\tvar errorMessage = nls.localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n\t\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t\t}\n\n\t\t\t\tvar schemaContent: IJSONSchema = {};\n\t\t\t\tvar jsonErrors = [];\n\t\t\t\tschemaContent = Json.parse(content, errors);\n\t\t\t\tvar errors = jsonErrors.length ? [ nls.localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': {1}.', toDisplayString(url), jsonErrors[0])] : [];\n\t\t\t\treturn new UnresolvedSchema(schemaContent, errors);\n\t\t\t},\n\t\t\t(error : http.IXHRResponse) => {\n\t\t\t\tvar errorMessage = nls.localize('json.schema.unabletoload', 'Unable to load schema from \\'{0}\\': {1}', toDisplayString(url), error.responseText || http.getErrorStatusDescription(error.status) || error.toString());\n\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic resolveSchemaContent(schemaToResolve: UnresolvedSchema): WinJS.TPromise<ResolvedSchema> {\n\n\t\tvar resolveErrors : string[] = schemaToResolve.errors.slice(0);\n\t\tvar schema = schemaToResolve.schema;\n\n\t\tvar findSection = (schema: IJSONSchema, path: string): any => {\n\t\t\tif (!path) {\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t\tvar current: any = schema;\n\t\t\tpath.substr(1).split('/').some((part) => {\n\t\t\t\tcurrent = current[part];\n\t\t\t\treturn !current;\n\t\t\t});\n\t\t\treturn current;\n\t\t};\n\n\t\tvar resolveLink = (node: any, linkedSchema: IJSONSchema, linkPath: string): void => {\n\t\t\tvar section = findSection(linkedSchema, linkPath);\n\t\t\tif (typeof section === 'object') {\n\t\t\t\tObjects.mixin(node, section, false);\n\t\t\t} else {\n\t\t\t\tresolveErrors.push(nls.localize('json.schema.invalidref', '$ref \\'{0}\\' in {1} can not be resolved.', linkPath, linkedSchema.id));\n\t\t\t}\n\t\t\tdelete node.$ref;\n\t\t};\n\n\t\tvar resolveExternalLink = (node: any, uri: string, linkPath: string): WinJS.Promise => {\n\t\t\treturn this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(unresolvedSchema => {\n\t\t\t\tif (unresolvedSchema.errors.length) {\n\t\t\t\t\tvar loc = linkPath ? uri + '#' + linkPath : uri;\n\t\t\t\t\tresolveErrors.push(nls.localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n\t\t\t\t}\n\t\t\t\tresolveLink(node, unresolvedSchema.schema, linkPath);\n\t\t\t\treturn resolveRefs(node, unresolvedSchema.schema);\n\t\t\t});\n\t\t};\n\n\t\tvar resolveRefs = (node:any, parentSchema: any) : WinJS.Promise => {\n\t\t\tvar toWalk = [ node ];\n\t\t\tvar seen: any[] = [];\n\n\t\t\tvar openPromises: WinJS.Promise[] = [];\n\n\t\t\twhile (toWalk.length) {\n\t\t\t\tvar next = toWalk.pop();\n\t\t\t\tif (seen.indexOf(next) >= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.push(next);\n\t\t\t\tif (Array.isArray(next)) {\n\t\t\t\t\tnext.forEach(item => {\n\t\t\t\t\t\ttoWalk.push(item);\n\t\t\t\t\t});\n\t\t\t\t} else if (Types.isObject(next)) {\n\t\t\t\t\tif (next.$ref) {\n\t\t\t\t\t\tvar segments = next.$ref.split('#', 2);\n\t\t\t\t\t\tif (segments[0].length > 0) {\n\t\t\t\t\t\t\topenPromises.push(resolveExternalLink(next, segments[0], segments[1]));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolveLink(next, parentSchema, segments[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (var key in next) {\n\t\t\t\t\t\ttoWalk.push(next[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn WinJS.Promise.join(openPromises);\n\t\t};\n\n\t\treturn resolveRefs(schema, schema).then(_ => new ResolvedSchema(schema, resolveErrors));\n\t}\n\n\tpublic getSchemaForResource(resource: string, document: Parser.JSONDocument): WinJS.TPromise<ResolvedSchema> {\n\n\t\t// first use $schema if present\n\t\tif (document && document.root && document.root.type === 'object') {\n\t\t\tvar schemaProperties = (<Parser.ObjectASTNode> document.root).properties.filter((p) => (p.key.value === '$schema') && !!p.value);\n\t\t\tif (schemaProperties.length > 0) {\n\t\t\t\tvar schemeId = <string> schemaProperties[0].value.getValue();\n\t\t\t\tif (!Strings.startsWith(schemeId, 'http://') && !Strings.startsWith(schemeId, 'https://') && !Strings.startsWith(schemeId, 'file://')) {\n\t\t\t\t\tvar resourceURL = this.contextService.toResource(schemeId);\n\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\tschemeId = resourceURL.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (schemeId) {\n\t\t\t\t\tvar id = this.normalizeId(schemeId);\n\t\t\t\t\treturn this.getOrAddSchemaHandle(id).getResolvedSchema();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// then check for matching file names, last to first\n\t\tfor (var i= this.filePatternAssociations.length - 1; i >= 0 ; i--) {\n\t\t\tvar entry = this.filePatternAssociations[i];\n\t\t\tif (entry.matchesPattern(resource)) {\n\t\t\t\treturn entry.getCombinedSchema(this).getResolvedSchema();\n\t\t\t}\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic createCombinedSchema(combinedSchemaId: string, schemaIds: string[]) : ISchemaHandle {\n\t\tif (schemaIds.length === 1) {\n\t\t\treturn this.getOrAddSchemaHandle(schemaIds[0]);\n\t\t} else {\n\t\t\tvar combinedSchema: IJSONSchema = {\n\t\t\t\tallOf: schemaIds.map(schemaId => ({ $ref: schemaId }))\n\t\t\t};\n\t\t\treturn this.addSchemaHandle(combinedSchemaId, combinedSchema);\n\t\t}\n\t}\n}\n\nfunction toDisplayString(url:string) {\n\ttry {\n\t\tvar uri = URI.parse(url);\n\t\tif (uri.scheme === 'file') {\n\t\t\treturn uri.fsPath;\n\t\t}\n\t} catch (e) {\n\t\t// ignore\n\t}\n\treturn url;\n}"]}