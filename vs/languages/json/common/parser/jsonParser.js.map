{"version":3,"sources":["vs/languages/json/common/parser/jsonParser.ts"],"names":[],"mappings":"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","file":"vs/languages/json/common/parser/jsonParser.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Arrays = require('vs/base/common/arrays');\nimport Types = require('vs/base/common/types');\nimport Json = require('vs/base/common/json');\nimport JsonSchema = require('vs/base/common/jsonSchema');\nimport {JSONLocation} from './jsonLocation';\n\nexport interface IRange {\n\tstart:number;\n\tend:number;\n}\n\nexport interface IError {\n\tlocation:IRange;\n\tmessage:string;\n}\n\nexport class ASTNode {\n\tpublic start:number;\n\tpublic end:number;\n\tpublic type:string;\n\tpublic parent:ASTNode;\n\tpublic name:string;\n\n\tconstructor(parent:ASTNode, type:string, name:string, start:number, end?:number) {\n\t\tthis.type = type;\n\t\tthis.name = name;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getNodeLocation(): JSONLocation {\n\t\tvar path = this.parent ? this.parent.getNodeLocation() : new JSONLocation([]);\n\t\tif (this.name) {\n\t\t\tpath = path.append(this.name);\n\t\t}\n\t\treturn path;\n\t}\n\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn [];\n\t}\n\n\tpublic getValue():any {\n\t\t// override in children\n\t\treturn;\n\t}\n\n\tpublic contains(offset:number, includeRightBound: boolean = false) : boolean {\n\t\treturn offset >= this.start && offset < this.end || includeRightBound && offset === this.end;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this);\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset < node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset <= node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1) : void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(schema.type)) {\n\t\t\tif (Arrays.contains(<string[]> schema.type, this.type) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}', (<string[]> schema.type).join())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (schema.type) {\n\t\t\tif (this.type !== schema.type) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\"', schema.type)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((subSchema) => {\n\t\t\t\tthis.validate(subSchema, validationResult, matchingSchemas, offset);\n\t\t\t});\n\t\t}\n\t\tif (schema.not) {\n\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\tthis.validate(schema.not, subValidationResult, subMatchingSchemas, offset);\n\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (matchingSchemas) {\n\t\t\t\tsubMatchingSchemas.forEach((ms) => {\n\t\t\t\t\tms.inverted = !ms.inverted;\n\t\t\t\t\tmatchingSchemas.push(ms);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar testAlternatives = (alternatives: JsonSchema.IJSONSchema[], maxOneMatch: boolean) => {\n\t\t\tvar matches = [];\n\n\t\t\t// remember the best match that is used for error messages\n\t\t\tvar bestMatch : { schema:JsonSchema.IJSONSchema; validationResult:ValidationResult; matchingSchemas:IApplicableSchema[]; } = null;\n\t\t\talternatives.forEach((subSchema) => {\n\t\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\t\tthis.validate(subSchema, subValidationResult, subMatchingSchemas);\n\t\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\t\tmatches.push(subSchema);\n\t\t\t\t}\n\t\t\t\tif (!bestMatch) {\n\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n\t\t\t\t} else {\n\t\t\t\t\tif (!maxOneMatch && !subValidationResult.hasErrors() && !bestMatch.validationResult.hasErrors()) {\n\t\t\t\t\t\t// no errors, both are equally good matches\n\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\tbestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n\t\t\t\t\t\tbestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar compareResult = subValidationResult.compare(bestMatch.validationResult);\n\t\t\t\t\t\tif (compareResult > 0) {\n\t\t\t\t\t\t\t// our node is the best matching so far\n\t\t\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult,  matchingSchemas: subMatchingSchemas };\n\t\t\t\t\t\t} else if (compareResult === 0) {\n\t\t\t\t\t\t\t// there's already a best matching but we are as good\n\t\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (matches.length > 1 && maxOneMatch) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.start + 1 },\n\t\t\t\t\tmessage: nls.localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (bestMatch !== null) {\n\t\t\t\tvalidationResult.merge(bestMatch.validationResult);\n\t\t\t\tvalidationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n\t\t\t\tvalidationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n\t\t\t\tif (matchingSchemas) {\n\t\t\t\t\tmatchingSchemas.push.apply(matchingSchemas, bestMatch.matchingSchemas);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matches.length;\n\t\t};\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\ttestAlternatives(schema.anyOf, false);\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\ttestAlternatives(schema.oneOf, true);\n\t\t}\n\n\t\tif (Array.isArray(schema.enum)) {\n\t\t\tif (Arrays.contains(schema.enum, this.getValue()) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('enumWarning', 'Value is not an accepted value. Valid values: {0}', JSON.stringify(schema.enum))\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidationResult.enumValueMatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (matchingSchemas !== null) {\n\t\t\tmatchingSchemas.push({node:this, schema: schema });\n\t\t}\n\t}\n}\n\nexport class NullASTNode extends ASTNode {\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'null', name, start, end);\n\t}\n\n\tpublic getValue():any {\n\t\treturn null;\n\t}\n}\n\nexport class BooleanASTNode extends ASTNode {\n\n\tprivate value:boolean;\n\n\tconstructor(parent:ASTNode, name:string, value:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'boolean', name, start, end);\n\t\tthis.value = value;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n}\n\nexport class ArrayASTNode extends ASTNode {\n\n\tpublic items:ASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'array', name, start, end);\n\t\tthis.items = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.items;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.items.map((v) => v.getValue());\n\t}\n\n\tpublic addItem(item: ASTNode) : boolean {\n\t\tif (item) {\n\t\t\tthis.items.push(item);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.items.length && ctn; i++) {\n\t\t\tctn = this.items[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (Array.isArray(schema.items)) {\n\t\t\tvar subSchemas = <JsonSchema.IJSONSchema[]> schema.items;\n\t\t\tsubSchemas.forEach((subSchema, index) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\tvar item = this.items[index];\n\t\t\t\tif (item) {\n\t\t\t\t\titem.validate(subSchema, itemValidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (schema.additionalItems === false && this.items.length > subSchemas.length) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer', subSchemas.length)\n\t\t\t\t});\n\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\tvalidationResult.propertiesValueMatches += (this.items.length - subSchemas.length);\n\t\t\t}\n\t\t}\n\t\telse if (schema.items) {\n\t\t\tthis.items.forEach((item) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\titem.validate(schema.items, itemValidationResult, matchingSchemas, offset);\n\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t});\n\t\t}\n\n\t\tif (schema.minItems && this.items.length < schema.minItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minItemsWarning', 'Array has too few items. Expected {0} or more', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxItems && this.items.length > schema.maxItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.uniqueItems === true) {\n\t\t\tvar values = this.items.map((node) => {\n\t\t\t\treturn node.getValue();\n\t\t\t});\n\t\t\tvar duplicates = values.some((value, index) => {\n\t\t\t\treturn index !== values.lastIndexOf(value);\n\t\t\t});\n\t\t\tif (duplicates) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('uniqueItemsWarning', 'Array has duplicate items')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class NumberASTNode extends ASTNode {\n\n\tpublic isInteger:boolean;\n\tpublic value:number;\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'number', name, start, end);\n\t\tthis.isInteger = true;\n\t\tthis.value = Number.NaN;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// work around type validation in the base class\n\t\tvar typeIsInteger = false;\n\t\tif (schema.type === 'integer' || (Array.isArray(schema.type) && Arrays.contains(<string[]> schema.type, 'integer'))) {\n\t\t\ttypeIsInteger = true;\n\t\t}\n\t\tif (typeIsInteger && this.isInteger === true) {\n\t\t\tthis.type = 'integer';\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tthis.type = 'number';\n\n\t\tvar val = this.getValue();\n\n\t\tif (Types.isNumber(schema.multipleOf)) {\n\t\t\tif (val % schema.multipleOf !== 0) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('multipleOfWarning', 'Value is not divisible by {0}', schema.multipleOf)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.minimum)) {\n\t\t\tif (schema.exclusiveMinimum && val <= schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMinimum && val < schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('minimumWarning', 'Value is below the minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.maximum)) {\n\t\t\tif (schema.exclusiveMaximum && val >= schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMaximum && val > schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('maximumWarning', 'Value is above the maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class StringASTNode extends ASTNode {\n\tpublic isKey:boolean;\n\tpublic value:string;\n\n\tconstructor(parent:ASTNode, name:string, isKey:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'string', name, start, end);\n\t\tthis.isKey = isKey;\n\t\tthis.value = '';\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (schema.minLength && this.value.length < schema.minLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minLengthWarning', 'String is shorter than the minimum length of ', schema.minLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxLength && this.value.length > schema.maxLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxLengthWarning', 'String is shorter than the maximum length of ', schema.maxLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.pattern) {\n\t\t\tvar regex = new RegExp(schema.pattern);\n\t\t\tif (!regex.test(this.value)) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('patternWarning', 'String does not match the pattern of \"{0}\"', schema.pattern)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class PropertyASTNode extends ASTNode {\n\tpublic key: StringASTNode;\n\tpublic value: ASTNode;\n\tpublic colonOffset: number;\n\n\tconstructor(parent:ASTNode, key: StringASTNode) {\n\t\tsuper(parent, 'property', null, key.start);\n\t\tthis.key = key;\n\t\tkey.parent = this;\n\t\tkey.name = key.value;\n\t\tthis.colonOffset = -1;\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.value ? [this.key, this.value] : [ this.key];\n\t}\n\n\tpublic setValue(value: ASTNode): boolean {\n\t\tthis.value = value;\n\t\treturn value !== null;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this) && this.key.visit(visitor) && this.value && this.value.visit(visitor);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.value) {\n\t\t\tthis.value.validate(schema, validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class ObjectASTNode extends ASTNode {\n\tpublic properties:PropertyASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'object', name, start, end);\n\n\t\tthis.properties = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.properties;\n\t}\n\n\tpublic addProperty(node:PropertyASTNode):boolean {\n\t\tif (!node) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.properties.push(node);\n\t\treturn true;\n\t}\n\n\tpublic getFirstProperty(key:string) : PropertyASTNode {\n\t\tfor (var i = 0; i < this.properties.length; i++) {\n\t\t\tif (this.properties[i].key.value === key) {\n\t\t\t\treturn this.properties[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getKeyList():string[] {\n\t\treturn this.properties.map((p)=>p.key.getValue());\n\t}\n\n\tpublic getValue():any {\n\t\tvar value : any= {};\n\t\tthis.properties.forEach((p) => {\n\t\t\tvar v = p.value && p.value.getValue();\n\t\t\tif (v) {\n\t\t\t\tvalue[p.key.getValue()] = v;\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.properties.length && ctn; i++) {\n\t\t\tctn = this.properties[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tvar seenKeys: { [key: string]:ASTNode } = {};\n\t\tvar unprocessedProperties: string[] = [];\n\t\tthis.properties.forEach((node) => {\n\t\t\tvar key = node.key.value;\n\t\t\tseenKeys[key] = node.value;\n\t\t\tunprocessedProperties.push(key);\n\t\t});\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\tschema.required.forEach((propertyName: string) => {\n\t\t\t\tif (!seenKeys[propertyName]) {\n\t\t\t\t\tvar key = this.parent && this.parent && (<PropertyASTNode> this.parent).key;\n\t\t\t\t\tvar location = key ? { start: key.start, end: key.end } : { start: this.start, end: this.start + 1 };\n\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\tlocation: location,\n\t\t\t\t\t\tmessage: nls.localize('MissingRequiredPropWarning', 'Missing property \"{0}\"', propertyName)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tvar propertyProcessed = (prop:string) => {\n\t\t\tvar index = unprocessedProperties.indexOf(prop);\n\t\t\twhile(index >= 0) {\n\t\t\t\tunprocessedProperties.splice(index, 1);\n\t\t\t\tindex = unprocessedProperties.indexOf(prop);\n\t\t\t}\n\t\t};\n\n\t\tif (schema.properties) {\n\t\t\tObject.keys(schema.properties).forEach((propertyName: string) => {\n\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\tvar prop = schema.properties[propertyName];\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(prop, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\n\t\tif (schema.patternProperties) {\n\t\t\tObject.keys(schema.patternProperties).forEach((propertyPattern: string) => {\n\t\t\t\tvar regex = new RegExp(propertyPattern);\n\t\t\t\tunprocessedProperties.slice(0).forEach((propertyName: string) => {\n\t\t\t\t\tif (regex.test(propertyName)) {\n\t\t\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\t\tchild.validate(schema.patternProperties[propertyPattern], propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (Types.isObject(schema.additionalProperties)) {\n\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(schema.additionalProperties, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (schema.additionalProperties === false) {\n\t\t\tif (unprocessedProperties.length > 0) {\n\t\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tvar propertyNode = <PropertyASTNode> child.parent;\n\n\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\tlocation: { start: propertyNode.key.start, end: propertyNode.key.end },\n\t\t\t\t\t\t\tmessage: nls.localize('DisallowedExtraPropWarning', 'Property {0} is not allowed', propertyName)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.maxProperties) {\n\t\t\tif (this.properties.length > schema.maxProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MaxPropWarning', 'Object has more properties than limit of {0}', schema.maxProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.minProperties) {\n\t\t\tif (this.properties.length < schema.minProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (Types.isObject(schema.dependencies)) {\n\t\t\tObject.keys(schema.dependencies).forEach((key: string) => {\n\t\t\t\tvar prop = seenKeys[key];\n\t\t\t\tif (prop) {\n\t\t\t\t\tif (Array.isArray(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsArray:string[] = schema.dependencies[key];\n\t\t\t\t\t\tvalueAsArray.forEach((requiredProp: string) => {\n\t\t\t\t\t\t\tif (!seenKeys[requiredProp]) {\n\t\t\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\t\t\t\t\tmessage: nls.localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}', requiredProp, key)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Types.isObject(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsSchema:JsonSchema.IJSONSchema = schema.dependencies[key];\n\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\tthis.validate(valueAsSchema, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class JSONDocumentConfig {\n\tpublic ignoreDanglingComma:boolean;\n\n\tconstructor() {\n\t\tthis.ignoreDanglingComma = false;\n\t}\n}\n\nexport interface IApplicableSchema {\n\tnode:ASTNode;\n\tinverted?:boolean;\n\tschema: JsonSchema.IJSONSchema;\n}\n\nexport class ValidationResult {\n\tpublic errors:IError[];\n\tpublic warnings:IError[];\n\n\tpublic propertiesMatches: number;\n\tpublic propertiesValueMatches: number;\n\tpublic enumValueMatch: boolean;\n\n\tconstructor() {\n\t\tthis.errors = [];\n\t\tthis.warnings = [];\n\t\tthis.propertiesMatches = 0;\n\t\tthis.propertiesValueMatches = 0;\n\t\tthis.enumValueMatch = false;\n\t}\n\n\tpublic hasErrors():boolean {\n\t\treturn !!this.errors.length || !!this.warnings.length;\n\t}\n\n\tpublic mergeAll(validationResults:ValidationResult[]):void {\n\t\tvalidationResults.forEach((validationResult) => {\n\t\t\tthis.merge(validationResult);\n\t\t});\n\t}\n\n\tpublic merge(validationResult:ValidationResult):void {\n\t\tthis.errors = this.errors.concat(validationResult.errors);\n\t\tthis.warnings = this.warnings.concat(validationResult.warnings);\n\t}\n\n\tpublic mergePropertyMatch(propertyValidationResult: ValidationResult) : void {\n\t\tthis.merge(propertyValidationResult);\n\t\tthis.propertiesMatches++;\n\t\tif (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasErrors() && propertyValidationResult.propertiesMatches) {\n\t\t\tthis.propertiesValueMatches++;\n\t\t}\n\t}\n\n\tpublic compare(other: ValidationResult) : number {\n\t\tvar hasErrors = this.hasErrors();\n\t\tif (hasErrors !== other.hasErrors()) {\n\t\t\treturn hasErrors ? -1 : 1;\n\t\t}\n\t\tif (this.enumValueMatch !== other.enumValueMatch) {\n\t\t\treturn other.enumValueMatch ? -1 : 1;\n\t\t}\n\t\tif (this.propertiesValueMatches !== other.propertiesValueMatches) {\n\t\t\treturn this.propertiesValueMatches - other.propertiesValueMatches;\n\t\t}\n\t\treturn this.propertiesMatches - other.propertiesMatches;\n\t}\n\n}\n\nexport class JSONDocument {\n\tpublic config:JSONDocumentConfig;\n\tpublic root:ASTNode;\n\n\tprivate validationResult:ValidationResult;\n\n\tconstructor(config:JSONDocumentConfig) {\n\t\tthis.config = config;\n\t\tthis.validationResult = new ValidationResult();\n\t}\n\n\tpublic get errors():IError[] {\n\t\treturn this.validationResult.errors;\n\t}\n\n\tpublic get warnings():IError[] {\n\t\treturn this.validationResult.warnings;\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffset(offset);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffsetEndInclusive(offset);\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):void {\n\t\tif (this.root) {\n\t\t\tthis.root.visit(visitor);\n\t\t}\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, matchingSchemas:IApplicableSchema[]= null, offset:number = -1):void {\n\t\tif (this.root) {\n\t\t\tthis.root.validate(schema, this.validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class JSONParser {\n\tpublic parse(text:string, config = new JSONDocumentConfig()):JSONDocument {\n\n\t\tvar _doc = new JSONDocument(config);\n\t\tvar _scanner = Json.createScanner(text, true);\n\n\t\tfunction _accept(token : Json.SyntaxKind) : boolean {\n\t\t\tif (_scanner.getToken() === token) {\n\t\t\t\t_scanner.scan();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _error<T extends ASTNode>(message:string, node:T = null, skipUntilAfter: Json.SyntaxKind[] = [], skipUntil: Json.SyntaxKind[] = []) : T {\n\t\t\tif (_doc.errors.length === 0 || _doc.errors[0].location.start !== _scanner.getTokenOffset()) {\n\t\t\t\t// ignore multiple errors on the same offset\n\t\t\t\tvar error = { message: message, location: { start: _scanner.getTokenOffset(), end: _scanner.getTokenOffset() + _scanner.getTokenLength()}};\n\t\t\t\t_doc.errors.push(error);\n\t\t\t}\n\n\t\t\tif (node) {\n\t\t\t\t_finalize(node, false);\n\t\t\t}\n\t\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\t\tvar token = _scanner.getToken();\n\t\t\t\twhile (token !== Json.SyntaxKind.EOF) {\n\t\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\t\t_scanner.scan();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = _scanner.scan();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _checkScanError() : boolean {\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase Json.ScanError.InvalidUnicode:\n\t\t\t\t\t_error(nls.localize('InvalidUnicode', 'Invalid unicode sequence in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.InvalidEscapeCharacter:\n\t\t\t\t\t_error(nls.localize('InvalidEscapeCharacter', 'Invalid escape character in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfNumber', 'Unexpected end of number'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfComment:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfComment', 'Unexpected end of comment'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfString:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfString', 'Unexpected end of string'));\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _finalize<T extends ASTNode>(node:T, scanNext:boolean) : T {\n\t\t\tnode.end = _scanner.getTokenOffset() + _scanner.getTokenLength();\n\n\t\t\tif (scanNext) {\n\t\t\t\t_scanner.scan();\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseArray(parent:ASTNode, name:string):ArrayASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBracketToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ArrayASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBracketToken\n\n\t\t\tvar count = 0;\n\t\t\tif (node.addItem(_parseValue(node, '' + count++))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addItem(_parseValue(node, '' + count++)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('ValueExpected', 'Value expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBracketToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), node);\n\t\t\t}\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseProperty(parent:ObjectASTNode, keysSeen:any):PropertyASTNode {\n\n\t\t\tvar key = _parseString(null, null, true);\n\t\t\tif (!key) {\n\t\t\t\tif (_scanner.getToken() === Json.SyntaxKind.Unknown) {\n\t\t\t\t\t// give a more helpful error message\n\t\t\t\t\tvar value = _scanner.getTokenValue();\n\t\t\t\t\tif (value.length > 0 && (value.charAt(0) === '\\'' || Json.isLetter(value.charAt(0).charCodeAt(0)))) {\n\t\t\t\t\t\t_error(nls.localize('DoubleQuotesExpected', 'Property keys must be doublequoted'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new PropertyASTNode(parent, key);\n\n\t\t\tif (keysSeen[key.value]) {\n\t\t\t\t_doc.warnings.push( { location: { start: node.key.start, end: node.key.end }, message:nls.localize('DuplicateKeyWarning', \"Duplicate object key\")});\n\t\t\t}\n\t\t\tkeysSeen[key.value] = true;\n\n\t\t\tif (_scanner.getToken() === Json.SyntaxKind.ColonToken) {\n\t\t\t\tnode.colonOffset = _scanner.getTokenOffset();\n\t\t\t} else {\n\t\t\t\treturn _error(nls.localize('ColonExpected', 'Colon expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken] );\n\t\t\t}\n\n\t\t\t_scanner.scan(); // consume ColonToken\n\n\t\t\tif (!node.setValue(_parseValue(node, key.value))) {\n\t\t\t\treturn _error(nls.localize('ValueExpected', 'Value expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tnode.end = node.value.end;\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseObject(parent:ASTNode, name:string):ObjectASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBraceToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ObjectASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBraceToken\n\n\t\t\tvar keysSeen : any = {};\n\t\t\tif (node.addProperty(_parseProperty(node, keysSeen))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addProperty(_parseProperty(node, keysSeen)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('PropertyExpected', 'Property expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBraceToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBrace', 'Expected comma or closing brace'), node);\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseString(parent:ASTNode, name: string, isKey:boolean):StringASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.StringLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new StringASTNode(parent, name, isKey, _scanner.getTokenOffset());\n\t\t\tnode.value = _scanner.getTokenValue();\n\n\t\t\t_checkScanError();\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseNumber(parent:ASTNode, name: string):NumberASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.NumericLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new NumberASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\tif (!_checkScanError()) {\n\t\t\t\tvar tokenValue = _scanner.getTokenValue();\n\t\t\t\ttry {\n\t\t\t\t\tvar numberValue = JSON.parse(tokenValue);\n\t\t\t\t\tif (typeof numberValue !== 'number') {\n\t\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t\t}\n\t\t\t\t\tnode.value = numberValue;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t}\n\t\t\t\tnode.isInteger = tokenValue.indexOf('.') === -1;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseLiteral(parent:ASTNode, name: string):ASTNode {\n\t\t\tvar node: ASTNode;\n\t\t\tswitch (_scanner.getToken()) {\n\t\t\t\tcase Json.SyntaxKind.NullKeyword:\n\t\t\t\t\tnode = new NullASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.TrueKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, true, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.FalseKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, false, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseValue(parent:ASTNode, name:string):ASTNode {\n\t\t\treturn _parseArray(parent, name) || _parseObject(parent, name) || _parseString(parent, name, false) || _parseNumber(parent, name) || _parseLiteral(parent, name);\n\t\t}\n\n\t\t_scanner.scan();\n\n\t\t_doc.root = _parseValue(null, null);\n\t\tif (!_doc.root) {\n\t\t\t_error(nls.localize('Invalid symbol', 'Expected a JSON object, array or literal'));\n\t\t} else if (_scanner.getToken() !== Json.SyntaxKind.EOF) {\n\t\t\t_error(nls.localize('End of file expected', 'End of file expected'));\n\t\t}\n\t\treturn _doc;\n\t}\n}"]}