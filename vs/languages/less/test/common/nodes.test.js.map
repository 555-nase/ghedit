{"version":3,"file":"vs/languages/less/test/common/nodes.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/languages/less/test/common/nodes.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAMb,qBAA4B,EAA6B,EAAE,KAAY,EAAE,QAAe;QACvF,SAAS,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAFe,mBAAW,cAE1B,CAAA;IAED,KAAK,CAAC,cAAc,EAAE;QAErB,iBAAiB,KAAY;YAC5B,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,UAAU,EAAE,CAAC;YACzC,IAAI,IAAI,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAED,IAAI,CAAC,iBAAiB,EAAE;YACvB,WAAW,CAAC,OAAO,EAAE,0BAA0B,EAAE,kEAAkE,CAAC,CAAC;YACrH,WAAW,CAAC,OAAO,EAAE,oBAAoB,EAAE,mCAAmC,CAAC,CAAC;YAChF,WAAW,CAAC,OAAO,EAAE,sBAAsB,EAAE,qBAAqB,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nodes = require('vs/languages/css/common/parser/cssNodes');\nimport lessParser = require('vs/languages/less/common/parser/lessParser');\nimport nodesTest = require('vs/languages/css/test/common/nodes.test');\n\nexport function assertNodes(fn:(input:string)=>nodes.Node, input:string, expected:string):void {\n\tnodesTest.assertNodes(fn, input, expected);\n}\n\nsuite('LESS - Nodes', () => {\n\n\tfunction ruleset(input:string):nodes.RuleSet{\n\t\tvar parser = new lessParser.LessParser();\n\t\tvar node = parser.internalParse(input, parser._parseRuleset);\n\t\treturn node;\n\t}\n\n\ttest('nodes - RuleSet', function() {\n\t\tassertNodes(ruleset, 'selector { prop: value }', 'ruleset,...,selector,...,declaration,...,property,...,expression');\n\t\tassertNodes(ruleset, 'selector { prop; }', 'ruleset,...,selector,...,selector');\n\t\tassertNodes(ruleset, 'selector { prop {} }', 'ruleset,...,ruleset');\n\t});\n});\n"]}