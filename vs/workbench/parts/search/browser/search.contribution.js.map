{"version":3,"sources":["vs/workbench/parts/search/browser/search.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/search/browser/search.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/search.contribution';\nimport {Registry} from 'vs/platform/platform';\nimport {ViewletRegistry, Extensions as ViewletExtensions, ViewletDescriptor, ToggleViewletAction} from 'vs/workbench/browser/viewlet';\nimport {IConfigurationRegistry, Extensions as ConfigurationExtensions} from 'vs/platform/configuration/common/configurationRegistry';\nimport nls = require('vs/nls');\nimport {IAction} from 'vs/base/common/actions';\nimport {asFileResource} from 'vs/workbench/parts/files/common/files';\nimport {SyncActionDescriptor, DeferredAction} from 'vs/platform/actions/common/actions';\nimport {Separator} from 'vs/base/browser/ui/actionbar/actionbar';\nimport {Scope, IActionBarRegistry, Extensions as ActionBarExtensions, ActionBarContributor} from 'vs/workbench/browser/actionBarRegistry';\nimport {IWorkbenchActionRegistry, Extensions as ActionExtensions} from 'vs/workbench/common/actionRegistry';\nimport {QuickOpenHandlerDescriptor, IQuickOpenRegistry, Extensions as QuickOpenExtensions} from 'vs/workbench/browser/quickopen';\nimport {QuickOpenAction} from 'vs/workbench/browser/actions/quickOpenAction';\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {AsyncDescriptor} from 'vs/platform/instantiation/common/descriptors';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {KbExpr, IKeybindings} from 'vs/platform/keybinding/common/keybindingService';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\nimport {IViewletService} from 'vs/workbench/services/viewlet/common/viewletService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\n\nexport const VIEWLET_ID = 'workbench.view.search';\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: 'workbench.action.search.toggleQueryDetails',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(),\n\tcontext: KbExpr.has('searchViewletVisible'),\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_J,\n\thandler: accessor => {\n\t\tlet viewletService = accessor.get(IViewletService);\n\t\tviewletService.openViewlet(VIEWLET_ID, true)\n\t\t\t.then(viewlet => (<any>viewlet).toggleFileTypes());\n\t}\n});\n\nclass OpenSearchViewletAction extends ToggleViewletAction {\n\tpublic static ID = VIEWLET_ID;\n\tpublic static LABEL = nls.localize('showSearchViewlet', \"Show Search\");\n\n\tconstructor(id: string, label: string, @IViewletService viewletService: IViewletService, @IWorkbenchEditorService editorService: IWorkbenchEditorService) {\n\t\tsuper(id, label, VIEWLET_ID, viewletService, editorService);\n\t}\n}\n\nclass ExplorerViewerActionContributor extends ActionBarContributor {\n\tprivate _instantiationService: IInstantiationService;\n\tprivate _contextService: IWorkspaceContextService;\n\n\tconstructor( @IInstantiationService instantiationService: IInstantiationService, @IWorkspaceContextService contextService: IWorkspaceContextService) {\n\t\tsuper();\n\n\t\tthis._instantiationService = instantiationService;\n\t\tthis._contextService = contextService;\n\t}\n\n\tpublic hasSecondaryActions(context: any): boolean {\n\t\tlet element = context.element;\n\n\t\t// Contribute only on file resources\n\t\tlet fileResource = asFileResource(element);\n\t\tif (!fileResource) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn fileResource.isDirectory;\n\t}\n\n\tpublic getSecondaryActions(context: any): IAction[] {\n\t\tlet actions: IAction[] = [];\n\n\t\tif (this.hasSecondaryActions(context)) {\n\t\t\tlet fileResource = asFileResource(context.element);\n\n\t\t\tlet action = new DeferredAction(\n\t\t\t\tthis._instantiationService,\n\t\t\t\tnew AsyncDescriptor('vs/workbench/parts/search/browser/searchViewlet', 'FindInFolderAction', fileResource.resource),\n\t\t\t\t'workbench.search.action.findInFolder',\n\t\t\t\tnls.localize('findInFolder', \"Find in Folder\")\n\t\t\t);\n\t\t\taction.order = 55;\n\t\t\tactions.push(action);\n\n\t\t\tactions.push(new Separator('', 56));\n\t\t}\n\n\t\treturn actions;\n\t}\n}\n\nconst ACTION_ID = 'workbench.action.showAllSymbols';\nconst ACTION_LABEL = nls.localize('showTriggerActions', \"Show All Symbols\");\nconst ALL_SYMBOLS_PREFIX = '#';\n\nclass ShowAllSymbolsAction extends QuickOpenAction {\n\n\tconstructor(actionId: string, actionLabel: string, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tsuper(actionId, actionLabel, ALL_SYMBOLS_PREFIX, quickOpenService);\n\t}\n}\n\n// Register Viewlet\n(<ViewletRegistry>Registry.as(ViewletExtensions.Viewlets)).registerViewlet(new ViewletDescriptor(\n\t'vs/workbench/parts/search/browser/searchViewlet',\n\t'SearchViewlet',\n\tVIEWLET_ID,\n\tnls.localize('name', \"Search\"),\n\t'search',\n\t10\n));\n\n// Register Action to Open Viewlet\nconst openSearchViewletKb: IKeybindings = {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F\n};\n\n(<IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions)).registerWorkbenchAction(\n\tnew SyncActionDescriptor(OpenSearchViewletAction, OpenSearchViewletAction.ID, OpenSearchViewletAction.LABEL, openSearchViewletKb),\n\tnls.localize('view', \"View\")\n);\n\n// Contribute to Explorer Viewer\nconst actionBarRegistry = <IActionBarRegistry>Registry.as(ActionBarExtensions.Actionbar);\nactionBarRegistry.registerActionBarContributor(Scope.VIEWER, ExplorerViewerActionContributor);\n\n// Register Quick Open Handler\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerDefaultQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/search/browser/openAnythingHandler',\n\t\t'OpenAnythingHandler',\n\t\t'',\n\t\tnls.localize('openAnythingHandlerDescription', \"Open Files and Symbols by Name\")\n\t)\n);\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/search/browser/openAnythingHandler',\n\t\t'OpenSymbolHandler',\n\t\tALL_SYMBOLS_PREFIX,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: ALL_SYMBOLS_PREFIX,\n\t\t\t\tneedsEditor: false,\n\t\t\t\tdescription: nls.localize('openSymbolDescriptionNormal', \"Open Symbol By Name\")\n\t\t\t}\n\t\t]\n\t)\n);\n\n// Actions\nconst registry = <IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ShowAllSymbolsAction, ACTION_ID, ACTION_LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_T\n}));\n\n// Configuration\nconst configurationRegistry = <IConfigurationRegistry>Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\t'id': 'search',\n\t'order': 10,\n\t'title': nls.localize('searchConfigurationTitle', \"Search configuration\"),\n\t'type': 'object',\n\t'properties': {\n\t\t'search.exclude': {\n\t\t\t'type': 'object',\n\t\t\t'description': nls.localize('exclude', \"Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.\"),\n\t\t\t'default': { '**/node_modules': true, '**/bower_components': true },\n\t\t\t'additionalProperties': {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'boolean',\n\t\t\t\t\t\t'description': nls.localize('exclude.boolean', \"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'object',\n\t\t\t\t\t\t'properties': {\n\t\t\t\t\t\t\t'when': {\n\t\t\t\t\t\t\t\t'type': 'string', // expression ({ \"**/*.js\": { \"when\": \"$(basename).js\" } })\n\t\t\t\t\t\t\t\t'pattern': '\\\\w*\\\\$\\\\(basename\\\\)\\\\w*',\n\t\t\t\t\t\t\t\t'default': '$(basename).ext',\n\t\t\t\t\t\t\t\t'description': nls.localize('exclude.when', 'Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name.')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n});\n"]}