{"version":3,"sources":["vs/workbench/parts/git/browser/gitServices.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/git/browser/gitServices.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport platform = require('vs/base/common/platform');\nimport winjs = require('vs/base/common/winjs.base');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport types = require('vs/base/common/types');\nimport actions = require('vs/base/common/actions');\nimport errors = require('vs/base/common/errors');\nimport mime = require('vs/base/common/mime');\nimport paths = require('vs/base/common/paths');\nimport ee = require('vs/base/common/eventEmitter');\nimport wbevents = require('vs/workbench/common/events');\nimport WorkbenchEditorCommon = require('vs/workbench/common/editor');\nimport git = require('vs/workbench/parts/git/common/git');\nimport model = require('vs/workbench/parts/git/common/gitModel');\nimport giteditorinputs = require('vs/workbench/parts/git/browser/gitEditorInputs');\nimport operations = require('vs/workbench/parts/git/browser/gitOperations');\nimport filesCommon = require('vs/workbench/parts/files/common/files');\nimport { IFileService, EventType as FileEventType, FileChangesEvent, FileChangeType } from 'vs/platform/files/common/files';\nimport async = require('vs/base/common/async');\nimport severity from 'vs/base/common/severity';\nimport {IOutputService} from 'vs/workbench/parts/output/common/output';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IConfigurationService, ConfigurationServiceEventTypes} from 'vs/platform/configuration/common/configuration';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService, CloseAction} from 'vs/platform/message/common/message';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ILifecycleService} from 'vs/platform/lifecycle/common/lifecycle';\nimport URI from 'vs/base/common/uri';\nimport * as semver from 'semver';\nimport { shell } from 'electron';\nimport {IStorageService, StorageScope} from 'vs/platform/storage/common/storage';\n\nfunction toReadablePath(path: string): string {\n\tif (!platform.isWindows) {\n\t\treturn path;\n\t}\n\n\treturn path.replace(/\\//g, '\\\\');\n}\n\nclass EditorInputCache\n{\n\tprivate gitService: git.IGitService;\n\tprivate fileService: IFileService;\n\tprivate eventService: IEventService;\n\tprivate instantiationService: IInstantiationService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate cache: { [key: string]: winjs.TPromise<WorkbenchEditorCommon.EditorInput> };\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(gitService: git.IGitService, // gitService passed as argument, not by injection\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.fileService = fileService;\n\t\tthis.eventService = eventService;\n\t\tthis.editorService = editorService;\n\t\tthis.contextService = contextService;\n\n\t\tthis.gitService = gitService;\n\n\t\tthis.cache = {};\n\t\tthis.toDispose = [];\n\n\t\tthis.toDispose.push(this.gitService.getModel().addListener2('fileStatus:dispose', (fileStatus: git.IFileStatus) => this.onFileStatusDispose(fileStatus)));\n\t}\n\n\tpublic getInput(status: git.IFileStatus): winjs.TPromise<WorkbenchEditorCommon.EditorInput> {\n\t\tvar result = this.cache[status.getId()];\n\n\t\tif (result) {\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this.createInput(status);\n\t\tthis.cache[status.getId()] = result;\n\t\treturn result;\n\t}\n\n\tprivate createInput(status: git.IFileStatus): winjs.TPromise<WorkbenchEditorCommon.EditorInput> {\n\t\treturn winjs.TPromise.join<WorkbenchEditorCommon.EditorInput>([this.createLeftInput(status), this.createRightInput(status)]).then((result) => {\n\t\t\tvar leftInput = result[0];\n\t\t\tvar rightInput = result[1];\n\n\t\t\tvar fileSegment: string;\n\t\t\tvar folderSegment: string;\n\n\t\t\tif (status.getStatus() === git.Status.INDEX_RENAMED) {\n\t\t\t\tlet pathComponents = status.getRename().split('/');\n\t\t\t\tfileSegment = pathComponents[pathComponents.length - 1];\n\t\t\t\tfolderSegment = toReadablePath(pathComponents.slice(0, pathComponents.length - 1).join('/'));\n\t\t\t} else {\n\t\t\t\tlet pathComponents = status.getPathComponents();\n\t\t\t\tfileSegment = pathComponents[pathComponents.length - 1];\n\t\t\t\tfolderSegment = toReadablePath(pathComponents.slice(0, pathComponents.length - 1).join('/'));\n\t\t\t}\n\n\t\t\tif (!leftInput) {\n\t\t\t\tif (!rightInput) {\n\t\t\t\t\tvar error = new Error(nls.localize('cantOpen', \"Can't open this git resource.\"));\n\t\t\t\t\t(<git.IGitServiceError> error).gitErrorCode = git.GitErrorCodes.CantOpenResource;\n\t\t\t\t\treturn winjs.Promise.wrapError(error);\n\t\t\t\t}\n\n\t\t\t\treturn winjs.TPromise.as(rightInput);\n\t\t\t}\n\n\t\t\tswitch (status.getStatus()) {\n\t\t\t\tcase git.Status.INDEX_MODIFIED:\n\t\t\t\t\treturn winjs.TPromise.as(new giteditorinputs.GitIndexDiffEditorInput(fileSegment, nls.localize('gitIndexChanges', \"{0} - Changes on index\", folderSegment), leftInput, rightInput, status));\n\t\t\t\tcase git.Status.INDEX_RENAMED:\n\t\t\t\t\treturn winjs.TPromise.as(new giteditorinputs.GitIndexDiffEditorInput(fileSegment, nls.localize('gitIndexChangesRenamed', \"{0} - Renamed - Changes on index\", folderSegment), leftInput, rightInput, status));\n\t\t\t\tcase git.Status.MODIFIED:\n\t\t\t\t\treturn winjs.TPromise.as(new giteditorinputs.GitWorkingTreeDiffEditorInput(fileSegment, nls.localize('workingTreeChanges', \"{0} - Changes on working tree\", folderSegment), leftInput, rightInput, status));\n\t\t\t\tdefault:\n\t\t\t\t\treturn winjs.TPromise.as(new giteditorinputs.GitDiffEditorInput(fileSegment, nls.localize('gitMergeChanges', \"{0} - Merge changes\", folderSegment), leftInput, rightInput, status));\n\t\t\t}\n\t\t}).then((editorInput) => {\n\t\t\treturn editorInput;\n\t\t}, (errs) => {\n\t\t\treturn winjs.Promise.wrapError(types.isArray(errs) ? errs[0] || errs[1] : errs);\n\t\t});\n\t}\n\n\tprivate createLeftInput(status: git.IFileStatus): winjs.Promise {\n\t\tvar path = status.getPath();\n\t\tvar model = this.gitService.getModel();\n\n\t\tswitch (status.getStatus()) {\n\t\t\tcase git.Status.INDEX_MODIFIED:\n\t\t\tcase git.Status.INDEX_RENAMED:\n\t\t\t\treturn this.gitService.show(path, status, 'HEAD', status.getMimetype());\n\n\t\t\tcase git.Status.MODIFIED:\n\t\t\t\tvar indexStatus = model.getStatus().find(path, git.StatusType.INDEX);\n\n\t\t\t\tif (indexStatus && indexStatus.getStatus() === git.Status.INDEX_RENAMED) {\n\t\t\t\t\treturn this.gitService.show(indexStatus.getRename(), status, '~', status.getMimetype());\n\t\t\t\t}\n\n\t\t\t\tif (indexStatus) {\n\t\t\t\t\treturn this.gitService.show(path, status, '~', status.getMimetype());\n\t\t\t\t}\n\n\t\t\t\treturn this.gitService.show(path, status, 'HEAD', status.getMimetype());\n\n\t\t\tdefault:\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t}\n\t}\n\n\tprivate createRightInput(status: git.IFileStatus): winjs.Promise {\n\t\tconst model = this.gitService.getModel();\n\t\tconst path = status.getPath();\n\t\tlet resource = URI.file(paths.join(model.getRepositoryRoot(), path));\n\n\t\tswitch (status.getStatus()) {\n\t\t\tcase git.Status.INDEX_MODIFIED:\n\t\t\tcase git.Status.INDEX_ADDED:\n\t\t\tcase git.Status.INDEX_COPIED:\n\t\t\t\treturn this.gitService.show(path, status, '~', status.getMimetype());\n\n\t\t\tcase git.Status.INDEX_RENAMED:\n\t\t\t\treturn this.gitService.show(status.getRename(), status, '~', status.getMimetype());\n\n\t\t\tcase git.Status.INDEX_DELETED:\n\t\t\tcase git.Status.DELETED:\n\t\t\t\treturn this.gitService.show(path, status, 'HEAD', status.getMimetype());\n\n\t\t\tcase git.Status.MODIFIED:\n\t\t\tcase git.Status.UNTRACKED:\n\t\t\tcase git.Status.IGNORED:\n\t\t\t\tvar indexStatus = model.getStatus().find(path, git.StatusType.INDEX);\n\n\t\t\t\tif (indexStatus && indexStatus.getStatus() === git.Status.INDEX_RENAMED) {\n\t\t\t\t\tresource = URI.file(paths.join(model.getRepositoryRoot(), indexStatus.getRename()));\n\t\t\t\t}\n\n\t\t\t\treturn this.editorService.inputToType({ resource });\n\n\t\t\tcase git.Status.BOTH_MODIFIED:\n\t\t\t\treturn this.editorService.inputToType({ resource });\n\n\t\t\tdefault:\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t}\n\t}\n\n\tprivate onFileStatusDispose(fileStatus: git.IFileStatus): void {\n\t\tvar id = fileStatus.getId();\n\t\tvar editorInputPromise = this.cache[id];\n\n\t\tif (editorInputPromise) {\n\t\t\teditorInputPromise.done((editorInput) => { this.eventuallyDispose(editorInput); });\n\t\t\tdelete this.cache[id];\n\t\t}\n\t}\n\n\t/**\n\t * If the disposed status is the same as this input's status, we must try to dispose the input.\n\t * But we should not do it while the input is still open. This method will eventually call dispose\n\t * when the editor input goes out of the visible editors.\n\t */\n\tprivate eventuallyDispose(editorInput: WorkbenchEditorCommon.EditorInput): void {\n\t\tif (!this.maybeDispose(editorInput)) {\n\t\t\tvar listener = this.eventService.addListener2(wbevents.EventType.EDITOR_INPUT_CHANGED, () => {\n\t\t\t\tif (this.maybeDispose(editorInput)) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate maybeDispose(editorInput: WorkbenchEditorCommon.EditorInput): boolean {\n\t\tif (!this.editorService.getVisibleEditors().some((editor) => editor.input && editor.input.matches(editorInput))) {\n\t\t\teditorInput.dispose();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic dispose(): void {\n\t\tObject.keys(this.cache).forEach(key => {\n\t\t\tthis.cache[key].done((editorInput) => { editorInput.dispose(); });\n\t\t\tdelete this.cache[key];\n\t\t});\n\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nexport class AutoFetcher implements git.IAutoFetcher, lifecycle.IDisposable\n{\n\tprivate static MIN_TIMEOUT = 2 * 60 * 1000; // every two minutes\n\tprivate static MAX_TIMEOUT = 5 * 60 * 1000; // every five minutes\n\n\tprivate _state: git.AutoFetcherState;\n\tprivate gitService: git.IGitService;\n\tprivate eventService: IEventService;\n\tprivate messageService: IMessageService;\n\tprivate configurationService: IConfigurationService;\n\tprivate instantiationService: IInstantiationService;\n\tprivate currentRequest: winjs.Promise;\n\tprivate timeout: number;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate gitServiceStateDisposable: lifecycle.IDisposable;\n\n\tconstructor(gitService: git.IGitService, // gitService passed as argument, not by injection\n\t\t@IEventService eventService: IEventService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tthis._state = git.AutoFetcherState.Disabled;\n\t\tthis.gitService = gitService;\n\t\tthis.eventService = eventService;\n\t\tthis.messageService = messageService;\n\t\tthis.configurationService = configurationService;\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.currentRequest = null;\n\t\tthis.timeout = AutoFetcher.MIN_TIMEOUT;\n\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.configurationService.addListener2(ConfigurationServiceEventTypes.UPDATED, e => this.onConfiguration(e.config.git)));\n\t\tthis.onConfiguration(configurationService.getConfiguration<git.IGitConfiguration>('git'));\n\t}\n\n\tpublic get state(): git.AutoFetcherState {\n\t\treturn this._state;\n\t}\n\n\tprivate onConfiguration(config: git.IGitConfiguration): void {\n\t\tif (config.autofetch === false) {\n\t\t\tthis.disable();\n\t\t} else {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\tpublic enable(): void {\n\t\tif (this._state !== git.AutoFetcherState.Disabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.gitServiceStateDisposable = this.gitService.addListener2(git.ServiceEvents.STATE_CHANGED, (e) => this.onGitServiceStateChange(e));\n\t\tthis._state = git.AutoFetcherState.Active;\n\t\tthis.onGitServiceStateChange(this.gitService.getState());\n\t}\n\n\tpublic disable(): void {\n\t\tif (this.gitServiceStateDisposable) {\n\t\t\tthis.gitServiceStateDisposable.dispose();\n\t\t\tthis.gitServiceStateDisposable = null;\n\t\t}\n\n\t\tthis.deactivate();\n\t\tthis._state = git.AutoFetcherState.Disabled;\n\t}\n\n\tprivate onGitServiceStateChange(state: git.ServiceState): void {\n\t\tif (state === git.ServiceState.OK) {\n\t\t\tthis.activate();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\t}\n\n\tpublic activate(): void {\n\t\tif (this.currentRequest) {\n\t\t\tthis.currentRequest.cancel();\n\t\t}\n\n\t\tthis._state = git.AutoFetcherState.Active;\n\t\tthis.loop();\n\t}\n\n\tpublic deactivate(): void {\n\t\tif (!this.currentRequest) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._state = git.AutoFetcherState.Inactive;\n\t\tthis.currentRequest.cancel();\n\t\tthis.currentRequest = null;\n\t}\n\n\tprivate loop(): void {\n\t\tthis._state = git.AutoFetcherState.Fetching;\n\t\tthis.currentRequest = this.gitService.fetch().then(() => {\n\t\t\tthis.timeout = AutoFetcher.MIN_TIMEOUT;\n\t\t}, (err) => {\n\t\t\tif (errors.isPromiseCanceledError(err)) {\n\t\t\t\treturn winjs.Promise.wrapError(err);\n\t\t\t} else if (err.gitErrorCode === git.GitErrorCodes.AuthenticationFailed) {\n\t\t\t\treturn winjs.Promise.wrapError(err);\n\t\t\t} else {\n\t\t\t\tthis.timeout = Math.min(Math.round(this.timeout * 1.2), AutoFetcher.MAX_TIMEOUT); // backoff\n\t\t\t}\n\t\t});\n\n\t\tthis.currentRequest.then(() => {\n\t\t\tthis._state = git.AutoFetcherState.Active;\n\t\t\tthis.currentRequest = winjs.TPromise.timeout(this.timeout);\n\t\t\treturn this.currentRequest;\n\t\t}).then(() => this.loop(), (err) => this.deactivate());\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.disable();\n\t}\n}\n\ninterface IGitCredentialRequest {\n\tguid: string;\n\tscope: git.IGitCredentialScope;\n}\n\nconst IgnoreOldGitStorageKey = 'settings.workspace.git.ignoreOld';\n\nexport class GitService extends ee.EventEmitter\n\timplements\n\t\tgit.IGitService {\n\n\tstatic ID = 'Monaco.IDE.UI.Services.GitService';\n\n\tpublic serviceId = git.IGitService;\n\tprivate eventService: IEventService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate messageService: IMessageService;\n\tprivate instantiationService:IInstantiationService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate lifecycleService: ILifecycleService;\n\tprivate outputService: IOutputService;\n\tprivate raw: git.IRawGitService;\n\n\tprivate state: git.ServiceState;\n\tprivate operations: git.IGitOperation[];\n\tprivate model: git.IModel;\n\tprivate inputCache: EditorInputCache;\n\tprivate remoteListenerUnbind:ee.ListenerUnbind;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate needsRefresh: boolean;\n\tprivate refreshDelayer: async.ThrottledDelayer<void>;\n\tprivate autoFetcher: AutoFetcher;\n\n\tconstructor(\n\t\traw: git.IRawGitService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IEventService eventService: IEventService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IOutputService outputService: IOutputService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IStorageService storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tthis.instantiationService = instantiationService;\n\t\tthis.eventService = eventService;\n\t\tthis.messageService = messageService;\n\t\tthis.editorService = editorService;\n\t\tthis.outputService = outputService;\n\t\tthis.contextService = contextService;\n\t\tthis.lifecycleService = lifecycleService;\n\n\t\tthis.raw = raw;\n\t\tthis.state = git.ServiceState.NotInitialized;\n\t\tthis.operations = [];\n\t\tthis.model = new model.Model();\n\t\tthis.toDispose = [];\n\n\t\tthis.needsRefresh = false;\n\t\tthis.refreshDelayer = new async.PeriodThrottledDelayer<void>(500, 10000);\n\t\tthis.autoFetcher = this.instantiationService.createInstance(AutoFetcher, this);\n\n\t\tthis.registerListeners();\n\n\t\tthis.inputCache = this.instantiationService.createInstance(EditorInputCache, this);\n\n\t\tthis.triggerStatus(true); // trigger initial status\n\n\t\tif (!storageService.getBoolean(IgnoreOldGitStorageKey, StorageScope.GLOBAL, false)) {\n\t\t\tthis.raw.getVersion().done(version => {\n\t\t\t\tversion = version || '';\n\t\t\t\tversion = version.replace(/^(\\d+\\.\\d+\\.\\d+).*$/, '$1');\n\t\t\t\tversion = semver.valid(version);\n\n\t\t\t\tif (version && semver.satisfies(version, '<2.0.0')) {\n\t\t\t\t\tmessageService.show(severity.Warning, {\n\t\t\t\t\t\tmessage: nls.localize('updateGit', \"You seem to have git {0} installed. Code works best with git >=2.0.0.\", version),\n\t\t\t\t\t\tactions: [\n\t\t\t\t\t\t\tCloseAction,\n\t\t\t\t\t\t\tnew actions.Action('neverShowAgain', nls.localize('neverShowAgain', \"Don't show again\"), null, true, () => {\n\t\t\t\t\t\t\t\tstorageService.store(IgnoreOldGitStorageKey, true, StorageScope.GLOBAL);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew actions.Action('downloadLatest', nls.localize('download', \"Download\"), '', true, () => {\n\t\t\t\t\t\t\t\tshell.openExternal('https://git-scm.com/');\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate registerListeners():void {\n\t\tthis.toDispose.push(this.eventService.addListener2(FileEventType.FILE_CHANGES,(e) => this.onFileChanges(e)));\n\t\tthis.toDispose.push(this.eventService.addListener2(filesCommon.EventType.FILE_SAVED, (e) => this.onLocalFileChange(e)));\n\t\tthis.toDispose.push(this.eventService.addListener2(filesCommon.EventType.FILE_REVERTED, (e) => this.onLocalFileChange(e)));\n\t\tthis.lifecycleService.onShutdown(this.dispose, this);\n\t}\n\n\tprivate triggerStatus(force: boolean = false): void {\n\t\tif (this.isInitialized() && !this.isIdle() && !force) {\n\t\t\tthis.refreshDelayer.cancel();\n\t\t\treturn;\n\t\t}\n\n\t\tvar onError = async.once<any, void>(e => {\n\t\t\tif (!errors.isPromiseCanceledError(e)) {\n\t\t\t\tthis.messageService.show(severity.Error, e);\n\t\t\t}\n\t\t});\n\n\t\tthis.refreshDelayer.trigger(() => this.status()).done(null, onError);\n\t}\n\n\tprivate onLocalFileChange(e:filesCommon.LocalFileChangeEvent): void {\n\t\tvar shouldTriggerStatus = e.gotUpdated() && paths.basename(e.getAfter().resource.fsPath) === '.gitignore';\n\n\t\tif (!shouldTriggerStatus) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.triggerStatus();\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\t\tvar isIdle = this.isIdle();\n\n\t\tvar shouldTriggerStatus = e.changes.some(c => {\n\t\t\tvar workspacePath = this.contextService.toWorkspaceRelativePath(c.resource);\n\t\t\tif (!workspacePath) {\n\t\t\t\treturn false; // ignore out of workspace files\n\t\t\t}\n\n\t\t\t// for .gitindex, the service must be idle\n\t\t\tif ('.git/index' === workspacePath) {\n\t\t\t\treturn isIdle;\n\t\t\t}\n\n\t\t\t// for anything other that .git*\n\t\t\tif (!/^\\.git/.test(workspacePath)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// added or deleted .git folder\n\t\t\tif (workspacePath === '.git') {\n\t\t\t\treturn c.type === FileChangeType.ADDED || c.type === FileChangeType.DELETED;\n\t\t\t}\n\n\t\t\treturn ['.git/index.lock', '.git/FETCH_HEAD', '.gitignore', '.gitmodules'].indexOf(workspacePath) === -1;\n\t\t});\n\n\t\tif (!shouldTriggerStatus) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.triggerStatus();\n\t}\n\n\tprivate onGitServiceOperationEnd(e: { operation: git.IGitOperation; }): void {\n\t\tif (e.operation.id === git.ServiceOperations.COMMAND) {\n\t\t\tthis.triggerStatus();\n\t\t}\n\t}\n\n\tpublic getState(): git.ServiceState {\n\t\treturn this.state;\n\t}\n\n\tpublic getModel(): git.IModel {\n\t\treturn this.model;\n\t}\n\n\tpublic status(): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.STATUS, () => this.raw.status());\n\t}\n\n\tpublic init(): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.INIT, () => this.raw.init());\n\t}\n\n\tpublic add(files?: git.IFileStatus[]): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.ADD, () => this.raw.add(GitService.toPaths(files)));\n\t}\n\n\tpublic stage(filePath: string, content: string): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.STAGE, () => this.raw.stage(filePath, content));\n\t}\n\n\tpublic branch(name: string, checkout: boolean = false): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.BRANCH, () => this.raw.branch(name, checkout));\n\t}\n\n\tpublic checkout(treeish: string = '', files: git.IFileStatus[] = null): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.CHECKOUT, () => this.raw.checkout(treeish, GitService.toPaths(files)));\n\t}\n\n\tpublic clean(files: git.IFileStatus[]): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.CLEAN, () => this.raw.clean(files.map((s) => s.getPath())));\n\t}\n\n\tpublic undo(): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.UNDO, () => this.raw.undo());\n\t}\n\n\tpublic reset(treeish: string, hard?: boolean): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.RESET, () => this.raw.reset(treeish, hard));\n\t}\n\n\tpublic revertFiles(treeish: string, files?: git.IFileStatus[]): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.RESET, () => this.raw.revertFiles(treeish, (files || []).map((s) => s.getPath())));\n\t}\n\n\tpublic fetch(): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.BACKGROUND_FETCH, () => this.raw.fetch());\n\t}\n\n\tpublic pull(rebase?: boolean): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.PULL, () => this.raw.pull(rebase));\n\t}\n\n\tpublic push(remote?: string, name?: string, options?:git.IPushOptions): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.PUSH, () => this.raw.push(remote, name, options));\n\t}\n\n\tpublic sync(rebase?: boolean): winjs.Promise {\n\t\tconst head = this.model.getHEAD();\n\t\tconst isAhead = head && head.upstream && !!head.ahead;\n\n\t\tif (!isAhead) {\n\t\t\treturn this.run(git.ServiceOperations.SYNC, () => this.raw.pull(rebase));\n\t\t} else {\n\t\t\treturn this.run(git.ServiceOperations.SYNC, () => this.raw.sync());\n\t\t}\n\t}\n\n\tpublic commit(message:string, amend: boolean = false, stage: boolean = false): winjs.Promise {\n\t\treturn this.run(git.ServiceOperations.COMMIT, () => this.raw.commit(message, amend, stage));\n\t}\n\n\tpublic detectMimetypes(path: string, treeish: string = '~'): winjs.Promise {\n\t\treturn this.raw.detectMimetypes(path, treeish);\n\t}\n\n\tprivate run(operationId: string, fn: () => winjs.Promise): winjs.Promise {\n\t\treturn this.raw.serviceState().then(state => {\n\t\t\tif (state === git.RawServiceState.GitNotFound) {\n\t\t\t\tthis.transition(git.ServiceState.NoGit);\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t} else if (state === git.RawServiceState.Disabled) {\n\t\t\t\tthis.transition(git.ServiceState.Disabled);\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t} else {\n\t\t\t\treturn this._run(operationId, fn);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _run(operationId: string, fn: () => winjs.Promise): winjs.Promise {\n\t\tvar operation = new operations.GitOperation(operationId, fn);\n\n\t\tthis.operations.push(operation);\n\t\tthis.emit(git.ServiceEvents.OPERATION_START, operation);\n\t\tthis.emit(git.ServiceEvents.OPERATION, operation);\n\n\t\tvar onDone = (error: any = null) => {\n\t\t\tvar index = this.operations.indexOf(operation);\n\n\t\t\tif (index > -1) {\n\t\t\t\tthis.operations.splice(index, 1);\n\t\t\t}\n\n\t\t\tvar e = { operation: operation, error: error };\n\t\t\tthis.emit(git.ServiceEvents.OPERATION_END, e);\n\t\t\tthis.onGitServiceOperationEnd(e);\n\t\t\tthis.emit(git.ServiceEvents.OPERATION, operation);\n\t\t};\n\n\t\treturn operation.run().then((status: git.IRawStatus) => {\n\t\t\tthis.model.update(status);\n\n\t\t\tonDone();\n\n\t\t\tif (status) {\n\t\t\t\tthis.transition(types.isUndefinedOrNull(status.state) ? git.ServiceState.OK : status.state);\n\t\t\t} else {\n\t\t\t\tthis.transition(git.ServiceState.NotARepo);\n\t\t\t}\n\n\t\t\treturn this.model;\n\t\t}, (e) => {\n\t\t\tonDone(e);\n\n\t\t\tif (errors.isPromiseCanceledError(e)) {\n\t\t\t\treturn winjs.Promise.wrapError(e);\n\t\t\t}\n\n\t\t\tvar gitErrorCode: string = e.gitErrorCode || null;\n\n\t\t\tif (gitErrorCode === git.GitErrorCodes.NotAtRepositoryRoot) {\n\t\t\t\tthis.transition(git.ServiceState.NotAtRepoRoot);\n\t\t\t\treturn winjs.TPromise.as(this.model);\n\t\t\t}\n\n\t\t\tthis.emit(git.ServiceEvents.ERROR, e);\n\t\t\tthis.transition(git.ServiceState.OK);\n\n\t\t\tif (gitErrorCode === git.GitErrorCodes.NoUserNameConfigured || gitErrorCode === git.GitErrorCodes.NoUserEmailConfigured) {\n\t\t\t\tthis.messageService.show(severity.Warning, nls.localize('configureUsernameEmail', \"Please configure your git user name and e-mail.\"));\n\n\t\t\t\treturn winjs.TPromise.as(null);\n\n\t\t\t} else if (gitErrorCode === git.GitErrorCodes.BadConfigFile) {\n\t\t\t\tthis.messageService.show(severity.Error, nls.localize('badConfigFile', \"Git {0}\", e.message));\n\t\t\t\treturn winjs.TPromise.as(null);\n\n\t\t\t} else if (gitErrorCode === git.GitErrorCodes.UnmergedChanges) {\n\t\t\t\tthis.messageService.show(severity.Warning, nls.localize('unmergedChanges', \"You should first resolve the unmerged changes before committing your changes.\"));\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t}\n\n\t\t\tvar error: Error;\n\t\t\tvar showOutputAction = new actions.Action('show.gitOutput', nls.localize('showOutput', \"Show Output\"), null, true, () => this.outputService.getChannel('Git').show());\n\t\t\tvar cancelAction = new actions.Action('close.message', nls.localize('cancel', \"Cancel\"), null, true, ()=>winjs.TPromise.as(true));\n\n\t\t\terror = errors.create(\n\t\t\t\tnls.localize('checkNativeConsole', \"There was an issue running a git operation. Please review the output or use a console to check the state of your repository.\"),\n\t\t\t\t{ actions: [showOutputAction, cancelAction] }\n\t\t\t);\n\n\t\t\t(<any>error).gitErrorCode = gitErrorCode;\n\t\t\treturn winjs.Promise.wrapError(error);\n\t\t});\n\t}\n\n\tprivate transition(state: git.ServiceState): void {\n\t\tvar oldState = this.state;\n\n\t\tthis.state = state;\n\n\t\tif (state !== oldState) {\n\t\t\tthis.emit(git.ServiceEvents.STATE_CHANGED, state);\n\t\t}\n\t}\n\n\tpublic buffer(path: string, treeish: string = '~'): winjs.TPromise<string> {\n\t\treturn this.raw.show(path, treeish);\n\t}\n\n\tpublic show(path: string, status: git.IFileStatus, treeish: string = '~', mimetype: string = 'text/plain'): winjs.Promise {\n\t\treturn this.detectMimetypes(path, treeish).then((mimetypes:string[]) => {\n\t\t\tvar pathComponents = status.getPathComponents();\n\t\t\tvar fileSegment = pathComponents[pathComponents.length - 1];\n\t\t\tvar folderSegment = toReadablePath(pathComponents.slice(0, pathComponents.length - 1).join('/'));\n\n\t\t\tvar description:string;\n\n\t\t\tif (treeish === '~') {\n\t\t\t\tdescription = nls.localize('changesFromIndex', \"{0} - Changes on index\", folderSegment);\n\t\t\t} else {\n\t\t\t\tdescription = nls.localize('changesFromTree', \"{0} - Changes on {1}\", folderSegment, treeish);\n\t\t\t}\n\n\t\t\tif (mime.isUnspecific(mimetypes)) {\n\t\t\t\tmimetypes = mime.guessMimeTypes(path); // guess from path if our detection did not yield results\n\t\t\t}\n\n\t\t\t// Binary: our story is weak here for binary files on the index. Since we run natively, we do not have a way currently\n\t\t\t// to e.g. show images as binary inside the renderer because images need to be served through a URL to show. We could revisit this by\n\t\t\t// allowing to use data URLs for resource inputs to render them. However, this would mean potentially loading a large file into memory\n\t\t\t//\n\t\t\t// Our solution now is to detect binary files and immediately return an input that is flagged as binary unknown mime type.\n\t\t\tif (mime.isBinaryMime(mime.guessMimeTypes(path)) || mimetypes.indexOf(mime.MIME_BINARY) >= 0) {\n\t\t\t\treturn winjs.Promise.wrapError(new Error('The resource seems to be binary and cannot be displayed'));\n\t\t\t}\n\n\t\t\t// Text\n\t\t\treturn winjs.TPromise.as(this.instantiationService.createInstance(giteditorinputs.NativeGitIndexStringEditorInput, fileSegment, description, mimetypes.join(', '), status, path, treeish));\n\t\t});\n\t}\n\n\tpublic getInput(status: git.IFileStatus): winjs.TPromise<WorkbenchEditorCommon.EditorInput> {\n\t\treturn this.inputCache.getInput(status).then(null, (err) => {\n\t\t\tif (err.gitErrorCode = git.GitErrorCodes.CantOpenResource) {\n\t\t\t\tthis.messageService.show(severity.Warning, nls.localize('cantOpenResource', \"Can't open this git resource.\"));\n\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t}\n\n\t\t\treturn winjs.Promise.wrapError(err);\n\t\t});\n\t}\n\n\tpublic isInitialized(): boolean {\n\t\treturn this.state === git.ServiceState.OK;\n\t}\n\n\tpublic isIdle(): boolean {\n\t\treturn this.isInitialized() && !this.operations.some(op => op.id !== git.ServiceOperations.BACKGROUND_FETCH);\n\t}\n\n\tpublic getRunningOperations(): git.IGitOperation[] {\n\t\treturn this.operations;\n\t}\n\n\tpublic onOutput(): winjs.Promise {\n\t\treturn this.raw.onOutput();\n\t}\n\n\tpublic getAutoFetcher(): git.IAutoFetcher {\n\t\treturn this.autoFetcher;\n\t}\n\n\tprivate static toPaths(files: git.IFileStatus[]): string[] {\n\t\tif (!files) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn files.map((status) => {\n\t\t\t/*\tIn the case that a file was renamed in the index and (changed || deleted) in the\n\t\t\t\tworking tree, we must use its new name, running the checkout command.\n\t\t\t*/\n\n\t\t\tswitch (status.getStatus()) {\n\t\t\t\tcase git.Status.MODIFIED:\n\t\t\t\tcase git.Status.DELETED:\n\t\t\t\t\tif (status.getRename()) {\n\t\t\t\t\t\treturn status.getRename();\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn status.getPath();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.emit(git.ServiceEvents.DISPOSE);\n\n\t\tif (this.model) {\n\t\t\tthis.model.dispose();\n\t\t\tthis.model = null;\n\t\t}\n\n\t\tif (this.remoteListenerUnbind) {\n\t\t\tthis.remoteListenerUnbind();\n\t\t\tthis.remoteListenerUnbind = null;\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}"]}