{"version":3,"file":"vs/workbench/parts/git/browser/views/view.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/browser/views/view.ts"],"names":[],"mappings":"","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Lifecycle = require('vs/base/common/lifecycle');\nimport WinJS = require('vs/base/common/winjs.base');\nimport EventEmitter = require('vs/base/common/eventEmitter');\nimport Builder = require('vs/base/browser/builder');\nimport Actions = require('vs/base/common/actions');\nimport {ISelection} from 'vs/platform/selection/common/selection';\n\nexport interface IView extends Lifecycle.IDisposable {\n\tID: string;\n\telement: HTMLElement;\n\tfocus(): void;\n\tlayout(dimension:Builder.Dimension): void;\n\tsetVisible(visible:boolean): WinJS.Promise;\n\tgetSelection(): ISelection;\n\tgetControl(): EventEmitter.IEventEmitter;\n\tgetActions(): Actions.IAction[];\n\tgetSecondaryActions(): Actions.IAction[];\n}\n\nexport interface IController {\n\tsetView(id: string): WinJS.Promise;\n}\n"]}