/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends=this&&this.__extends||function(e,t){function i(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)},__decorate=this&&this.__decorate||function(e,t,i,r){var s,n=arguments.length,o=n<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,r);else for(var c=e.length-1;c>=0;c--)(s=e[c])&&(o=(n<3?s(o):n>3?s(t,i,o):s(t,i))||o);return n>3&&o&&Object.defineProperty(t,i,o),o},__param=this&&this.__param||function(e,t){return function(i,r){t(i,r,e)}};define(["require","exports","vs/base/common/winjs.base","vs/base/common/lifecycle","vs/workbench/browser/viewlet","vs/workbench/parts/git/common/git","vs/workbench/parts/git/browser/gitWorkbenchContributions","vs/workbench/parts/git/browser/views/changes/changesView","vs/workbench/parts/git/browser/views/empty/emptyView","vs/workbench/parts/git/browser/views/gitless/gitlessView","vs/workbench/parts/git/browser/views/notroot/notrootView","vs/workbench/parts/git/browser/views/noworkspace/noworkspaceView","./views/disabled/disabledView","./views/huge/hugeView","vs/platform/instantiation/common/instantiation","vs/platform/progress/common/progress","vs/platform/telemetry/common/telemetry","vs/css!./media/gitViewlet"],function(e,t,i,r,s,n,o,c,a,h,u,l,p,w,v,g,V){"use strict";var f=n.IGitService,S=function(e){function t(t,i,r,s){var n=this;e.call(this,o.VIEWLET_ID,t),this.progressService=i,this.instantiationService=r,this.gitService=s,this.progressRunner=null,this.views={},this.toDispose=[];var v=[this.instantiationService.createInstance(c.ChangesView,this.getActionRunner()),this.instantiationService.createInstance(a.EmptyView,this,this.getActionRunner()),this.instantiationService.createInstance(h.GitlessView),new u.NotRootView,new l.NoWorkspaceView,new p.DisabledView,this.instantiationService.createInstance(w.HugeView)];v.forEach(function(e){n.views[e.ID]=e,n.toDispose.push(e)}),this.toUnbind.push(this.gitService.addBulkListener2(function(){return n.onGitServiceChanges()}))}return __extends(t,e),t.prototype.setView=function(e){if(!this.$el)return i.TPromise.as(null);var t=this.views[e];if(!t)return i.Promise.wrapError(new Error("Could not find view."));if(this.currentView===t)return i.TPromise.as(null);var r=i.TPromise.as(null);this.currentView&&(r=this.currentView.setVisible(!1));var s=t.element;this.currentView=t,this.updateTitleArea();for(var n=this.$el.getHTMLElement();n.firstChild;)n.removeChild(n.firstChild);return n.appendChild(s),t.layout(this.currentDimension),r.then(function(){return t.setVisible(!0)})},t.prototype.create=function(t){return e.prototype.create.call(this,t),this.$el=t.div().addClass("git-viewlet"),i.TPromise.as(null)},t.prototype.setVisible=function(t){var r=this;return t?(this.onGitServiceChanges(),this.gitService.status().done(),e.prototype.setVisible.call(this,t).then(function(){if(r.currentView)return r.currentView.setVisible(t)})):(this.currentView?this.currentView.setVisible(t):i.TPromise.as(null)).then(function(){e.prototype.setVisible.call(r,t)})},t.prototype.focus=function(){e.prototype.focus.call(this),this.currentView&&this.currentView.focus()},t.prototype.layout=function(e){void 0===e&&(e=this.currentDimension),this.currentDimension=e,this.currentView&&this.currentView.layout(e)},t.prototype.getActions=function(){return this.currentView?this.currentView.getActions():[]},t.prototype.getSecondaryActions=function(){return this.currentView?this.currentView.getSecondaryActions():[]},t.prototype.getControl=function(){return this.currentView?this.currentView.getControl():null},t.prototype.onGitServiceChanges=function(){this.progressRunner&&this.progressRunner.done(),this.gitService.getState()===n.ServiceState.NoGit?(this.setView("gitless"),this.progressRunner=null):this.gitService.getState()===n.ServiceState.Disabled?(this.setView("disabled"),this.progressRunner=null):this.gitService.getState()===n.ServiceState.NotARepo?(this.setView("empty"),this.progressRunner=null):this.gitService.getState()===n.ServiceState.NotAWorkspace?(this.setView("noworkspace"),this.progressRunner=null):this.gitService.getState()===n.ServiceState.NotAtRepoRoot?(this.setView("notroot"),this.progressRunner=null):this.gitService.getState()===n.ServiceState.Huge?(this.setView("huge"),this.progressRunner=null):this.gitService.isIdle()?(this.setView("changes"),this.progressRunner=null):this.progressRunner=this.progressService.show(!0)},t.prototype.dispose=function(){this.toDispose=r.dispose(this.toDispose),this.views=null,e.prototype.dispose.call(this)},t=__decorate([__param(0,V.ITelemetryService),__param(1,g.IProgressService),__param(2,v.IInstantiationService),__param(3,f)],t)}(s.Viewlet);t.GitViewlet=S});