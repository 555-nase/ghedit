{"version":3,"file":"vs/workbench/parts/git/browser/gitEditorInputs.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/browser/gitEditorInputs.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport async = require('vs/base/common/async');\nimport WorkbenchEditorCommon = require('vs/workbench/common/editor');\nimport stringei = require('vs/workbench/common/editor/stringEditorInput');\nimport diffei = require('vs/workbench/common/editor/diffEditorInput');\nimport git = require('vs/workbench/parts/git/common/git');\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IEditorInput} from 'vs/platform/editor/common/editor';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\n\nimport IGitService = git.IGitService;\n\nexport interface IEditorInputWithStatus {\n\tgetFileStatus():git.IFileStatus;\n}\n\nexport function isGitEditorInput(input: IEditorInput): boolean {\n\treturn input instanceof GitDiffEditorInput || input instanceof NativeGitIndexStringEditorInput;\n}\n\nexport class GitDiffEditorInput\n\textends diffei.DiffEditorInput\n\timplements IEditorInputWithStatus\n{\n\tprivate status: git.IFileStatus;\n\n\tconstructor(name:string, description:string, originalInput:WorkbenchEditorCommon.EditorInput, modifiedInput:WorkbenchEditorCommon.EditorInput, status:git.IFileStatus) {\n\t\tsuper(name, description, originalInput, modifiedInput);\n\n\t\tthis.status = status;\n\t}\n\n\tpublic getId(): string {\n\t\tthrow new Error('To implement.');\n\t}\n\n\tpublic getFileStatus():git.IFileStatus {\n\t\treturn this.status;\n\t}\n\n\tpublic contains(otherInput: any): boolean {\n\t\tif (this.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar originalInput = this.getOriginalInput();\n\t\tif (originalInput && originalInput.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar modifiedInput = this.getModifiedInput();\n\t\tif (modifiedInput && modifiedInput.matches(otherInput)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class GitWorkingTreeDiffEditorInput extends GitDiffEditorInput {\n\n\tstatic ID = 'Monaco.IDE.UI.Viewlets.GitViewlet.GitWorkingTreeDiffEditorInput';\n\n\tconstructor(name:string, description:string, originalInput:WorkbenchEditorCommon.EditorInput, modifiedInput:WorkbenchEditorCommon.EditorInput, status:git.IFileStatus) {\n\t\tsuper(name, description, originalInput, modifiedInput, status);\n\t}\n\n\tpublic getId(): string {\n\t\treturn GitWorkingTreeDiffEditorInput.ID;\n\t}\n}\n\nexport class GitIndexDiffEditorInput extends GitDiffEditorInput {\n\n\tstatic ID:string = 'Monaco.IDE.UI.Viewlets.GitViewlet.GitIndexDiffEditorInput';\n\n\tconstructor(name:string, description:string, originalInput:WorkbenchEditorCommon.EditorInput, modifiedInput:WorkbenchEditorCommon.EditorInput, status:git.IFileStatus) {\n\t\tsuper(name, description, originalInput, modifiedInput, status);\n\t}\n\n\tpublic getId(): string {\n\t\treturn GitIndexDiffEditorInput.ID;\n\t}\n}\n\nexport class NativeGitIndexStringEditorInput\n\textends stringei.StringEditorInput\n\timplements IEditorInputWithStatus\n{\n\tpublic static ID = 'Monaco.IDE.UI.Viewlets.GitViewlet.NativeGitIndexStringEditorInput';\n\n\tprivate gitService: IGitService;\n\tprivate editorService: IWorkbenchEditorService;\n\tprivate status: git.IFileStatus;\n\tprivate path: string;\n\tprivate treeish: string;\n\tprivate delayer: async.ThrottledDelayer<WorkbenchEditorCommon.EditorModel>;\n\tprivate toDispose: lifecycle.IDisposable[];\n\n\tconstructor(name: any, description: string, mime: string, status: git.IFileStatus, path: string, treeish: string,\n\t\t@IGitService gitService: IGitService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\t\tsuper(name, description, null, mime, false, instantiationService);\n\n\t\tthis.gitService = gitService;\n\t\tthis.editorService = editorService;\n\t\tthis.status = status;\n\t\tthis.path = path;\n\t\tthis.treeish = treeish;\n\t\tthis.delayer = new async.ThrottledDelayer<WorkbenchEditorCommon.EditorModel>(1000);\n\n\t\tthis.toDispose = [];\n\t\tthis.toDispose.push(this.gitService.addListener2(git.ServiceEvents.STATE_CHANGED, () => this.onGitServiceStateChange()));\n\t\tthis.toDispose.push(this.gitService.addListener2(git.ServiceEvents.OPERATION_END, () => this.onGitServiceStateChange()));\n\t}\n\n\tpublic getId(): string {\n\t\treturn NativeGitIndexStringEditorInput.ID;\n\t}\n\n\tpublic getFileStatus(): git.IFileStatus {\n\t\treturn this.status;\n\t}\n\n\tpublic resolve(refresh?:boolean):winjs.TPromise<WorkbenchEditorCommon.EditorModel> {\n\t\tif (refresh || !this.getValue()) {\n\t\t\treturn this.gitService.buffer(this.path, this.treeish).then(contents => {\n\t\t\t\tif (this.getValue() !== contents) {\n\t\t\t\t\tthis.setValue(contents);\n\t\t\t\t}\n\n\t\t\t\treturn super.resolve(refresh);\n\t\t\t});\n\t\t} else {\n\t\t\treturn super.resolve(refresh);\n\t\t}\n\t}\n\n\tprivate onGitServiceStateChange(): void {\n\t\tvar isVisible = this.editorService.isVisible(this, true);\n\t\tif (!isVisible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.delayer.trigger(() => this.resolve(true));\n\t}\n\n\tpublic dispose():void {\n\t\tif (this.delayer) {\n\t\t\tthis.delayer.cancel();\n\t\t\tthis.delayer = null;\n\t\t}\n\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t\tsuper.dispose();\n\t}\n}\n"]}