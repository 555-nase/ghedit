var __extends=this&&this.__extends||function(t,e){function i(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)},__decorate=this&&this.__decorate||function(t,e,i,r){var n,o=arguments.length,a=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,i,r);else for(var c=t.length-1;c>=0;c--)(n=t[c])&&(a=(o<3?n(a):o>3?n(e,i,a):n(e,i))||a);return o>3&&a&&Object.defineProperty(e,i,a),a},__param=this&&this.__param||function(t,e){return function(i,r){e(i,r,t)}};define(["require","exports","vs/base/common/winjs.base","vs/nls","vs/base/common/lifecycle","vs/base/common/types","vs/base/common/actions","vs/workbench/parts/git/common/gitModel","vs/workbench/parts/git/browser/gitEditorInputs","vs/workbench/common/editor","vs/base/common/errors","vs/base/common/platform","vs/workbench/services/editor/common/editorService","vs/workbench/services/workspace/common/contextService","vs/platform/event/common/event","vs/platform/files/common/files","vs/platform/message/common/message","vs/base/common/severity","vs/platform/configuration/common/configuration","vs/workbench/parts/git/common/git","vs/workbench/services/quickopen/common/quickOpenService","vs/base/common/paths","vs/base/common/uri"],function(t,e,i,r,n,o,a,c,s,u,l,h,p,g,m,v,d,f,S,_,E,b,y){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";function I(t,e){if(void 0===e&&(e=!1),t){if(Array.isArray(t)){if(t.some(function(t){return!(t instanceof c.FileStatus)}))throw new Error("Invalid context.");return t}if(t instanceof c.FileStatus)return[t];if(t instanceof c.StatusGroup)return t.all();if(t.tree){var i=t.tree.getSelection();return i.indexOf(t.fileStatus)>-1?i:[t.fileStatus]}if(t.selection)return!e&&t.selection.indexOf(t.focus)>-1?t.selection:[t.focus];throw new Error("Invalid context.")}return t}var A=function(t){function e(e,i,r,n){var o=this;t.call(this,e,i,r,!1),this.gitService=n,this.toDispose=[this.gitService.addBulkListener2(function(){return o.onGitServiceChange()})],this.onGitServiceChange()}return __extends(e,t),e.prototype.onGitServiceChange=function(){this.updateEnablement()},e.prototype.updateEnablement=function(){this.enabled=this.isEnabled()},e.prototype.isEnabled=function(){return!!this.gitService},e.prototype.dispose=function(){this.gitService=null,this.toDispose=n.dispose(this.toDispose),t.prototype.dispose.call(this)},e}(a.Action);e.GitAction=A;var D=function(t){function e(i,n){t.call(this,e.ID,r.localize("openChange","Open Change"),"git-action open-change",n),this.editorService=i,this.onGitServiceChange()}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&!!this.editorService},e.prototype.run=function(t){var e=this,i=I(t,!0);return this.gitService.getInput(i[0]).then(function(t){var i=new u.TextDiffEditorOptions;return i.forceOpen=!0,e.editorService.openEditor(t,i)})},e.ID="workbench.action.git.openChange",e=__decorate([__param(0,p.IWorkbenchEditorService),__param(1,_.IGitService)],e)}(A);e.OpenChangeAction=D;var k=function(t){function e(i,n,o,a){t.call(this,e.ID,r.localize("openFile","Open File"),"git-action open-file",o),this.fileService=n,this.editorService=i,this.contextService=a,this.onGitServiceChange()}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&!!this.editorService||!!this.fileService},e.prototype.getPath=function(t){if(t.getStatus()===_.Status.INDEX_RENAMED)return t.getRename();var e=this.gitService.getModel().getStatus().find(t.getPath(),_.StatusType.INDEX);return e&&e.getStatus()===_.Status.INDEX_RENAMED?t.getRename():t.getPath()},e.prototype.run=function(t){var r=this,n=I(t,!0),o=n[0];if(!(o instanceof c.FileStatus))return i.Promise.wrapError(new Error("Can't open file."));if(e.DELETED_STATES.indexOf(o.getStatus())>-1)return i.Promise.wrapError(new Error("Can't open file which is has been deleted."));var a=y["default"].file(b.join(this.gitService.getModel().getRepositoryRoot(),this.getPath(o)));return this.fileService.resolveFile(a).then(function(t){return r.editorService.openEditor({resource:t.resource,mime:t.mime,options:{forceOpen:!0}})})},e.DELETED_STATES=[_.Status.BOTH_DELETED,_.Status.DELETED,_.Status.DELETED_BY_US,_.Status.INDEX_DELETED],e.ID="workbench.action.git.openFile",e=__decorate([__param(0,p.IWorkbenchEditorService),__param(1,v.IFileService),__param(2,_.IGitService),__param(3,g.IWorkspaceContextService)],e)}(A);e.OpenFileAction=k;var C=function(t){function e(i){t.call(this,e.ID,r.localize("init","Init"),"git-action init",i)}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&this.gitService.getState()===_.ServiceState.NotARepo},e.prototype.run=function(){return this.gitService.init()},e.ID="workbench.action.git.init",e=__decorate([__param(0,_.IGitService)],e)}(A);e.InitAction=C;var w=function(t){function e(i){t.call(this,e.ID,r.localize("refresh","Refresh"),"git-action refresh",i)}return __extends(e,t),e.prototype.run=function(){return this.gitService.status()},e.ID="workbench.action.git.refresh",e=__decorate([__param(0,_.IGitService)],e)}(A);e.RefreshAction=w;var P=function(t){function e(e,i,r,n,o){t.call(this,e,i,r,n),this.editorService=o}return __extends(e,t),e.prototype.run=function(t){var e=this,r=I(t);return this.gitService.add(r).then(function(t){var n=e.findGitWorkingTreeEditor();if(!n)return i.TPromise.as(t);var o=n.input,a=o.getFileStatus();if(r&&r.every(function(t){return t!==a}))return i.TPromise.as(t);var c=o.getFileStatus().getPath(),s=t.getStatus().find(c,_.StatusType.INDEX);if(!s)return i.TPromise.as(t);var l=n.getControl(),h=l?l.saveViewState():null;return e.gitService.getInput(s).then(function(i){var r=new u.TextDiffEditorOptions;return r.forceOpen=!0,e.editorService.openEditor(i,r,n.position).then(function(e){return h&&l.restoreViewState(h),t})})})},e.prototype.findGitWorkingTreeEditor=function(){for(var t=this.editorService.getVisibleEditors(),e=0;e<t.length;e++){var i=t[e];if(s.isGitEditorInput(i.input))return i}return null},e.prototype.dispose=function(){this.editorService=null,t.prototype.dispose.call(this)},e}(A);e.BaseStageAction=P;var G=function(t){function e(i,r){t.call(this,e.ID,e.LABEL,"git-action stage",i,r)}return __extends(e,t),e.ID="workbench.action.git.stage",e.LABEL=r.localize("stageChanges","Stage"),e=__decorate([__param(0,_.IGitService),__param(1,p.IWorkbenchEditorService)],e)}(P);e.StageAction=G;var L=function(t){function e(i,n){t.call(this,e.ID,r.localize("stageAllChanges","Stage All"),"git-action stage",i,n)}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&this.gitService.getModel().getStatus().getWorkingTreeStatus().all().length>0},e.prototype.run=function(e){return t.prototype.run.call(this)},e.ID="workbench.action.git.stageAll",e=__decorate([__param(0,_.IGitService),__param(1,p.IWorkbenchEditorService)],e)}(P);e.GlobalStageAction=L;var T=function(t){function e(e,i,r,n,o,a,c,s,u){t.call(this,e,i,r,n),this.eventService=o,this.editorService=s,this.messageService=a,this.fileService=c,this.contextService=u,this.onGitServiceChange()}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&!!this.eventService&&!!this.editorService&&!!this.fileService},e.prototype.run=function(t){var e=this;if(!this.messageService.confirm(this.getConfirm(t)))return i.TPromise.as(null);var r=[];if(t instanceof c.StatusGroup)r=[this.gitService.undo()];else{for(var n=I(t),o=[],a=[],s=0;s<n.length;s++){var u=n[s].clone();switch(u.getStatus()){case _.Status.UNTRACKED:case _.Status.IGNORED:o.push(u);break;default:a.push(u)}}o.length>0&&r.push(this.gitService.clean(o)),a.length>0&&r.push(this.gitService.checkout("",a))}return i.Promise.join(r).then(function(t){if(0===t.length)return i.TPromise.as(null);var r=t[t.length-1],o=e.findWorkingTreeDiffEditor();if(!o)return i.TPromise.as(r);var a=o.input,c=a.getFileStatus();if(n&&n.every(function(t){return t!==c}))return i.TPromise.as(r);var s=a.getFileStatus().getPath(),u=o.getControl(),l=u?u.getModifiedEditor():null,h=l?l.saveViewState():null;return e.fileService.resolveFile(e.contextService.toResource(s)).then(function(t){return e.editorService.openEditor({resource:t.resource,mime:t.mime,options:{forceOpen:!0}},o.position).then(function(t){if(h){var e=o.getControl();e&&e.restoreViewState(h)}})})}).then(null,function(t){return console.error("One or more errors occurred",t),i.Promise.wrapError(t[0])})},e.prototype.findWorkingTreeDiffEditor=function(){for(var t=this.editorService.getVisibleEditors(),e=0;e<t.length;e++){var i=t[e];if(i.input instanceof s.GitWorkingTreeDiffEditorInput)return i}return null},e.prototype.getConfirm=function(t){var e=I(t);if(e.length>1){var i=e.length;return{message:r.localize("confirmUndoMessage","Are you sure you want to clean all changes?"),detail:1===i?r.localize("confirmUndoAllOne","There are unstaged changes in {0} file.\n\nThis action is irreversible!",i):r.localize("confirmUndoAllMultiple","There are unstaged changes in {0} files.\n\nThis action is irreversible!",i),primaryButton:r.localize({key:"cleanChangesLabel",comment:["&& denotes a mnemonic"]},"&&Clean Changes")}}var n=e[0].getPathComponents().reverse()[0];return{message:r.localize("confirmUndo","Are you sure you want to clean changes in '{0}'?",n),detail:r.localize("irreversible","This action is irreversible!"),primaryButton:r.localize({key:"cleanChangesLabel",comment:["&& denotes a mnemonic"]},"&&Clean Changes")}},e.prototype.dispose=function(){this.eventService=null,this.editorService=null,this.fileService=null,t.prototype.dispose.call(this)},e}(A);e.BaseUndoAction=T;var x=function(t){function e(i,n,o,a,c,s){t.call(this,e.ID,r.localize("undoChanges","Clean"),"git-action undo",i,n,o,a,c,s)}return __extends(e,t),e.ID="workbench.action.git.undo",e=__decorate([__param(0,_.IGitService),__param(1,m.IEventService),__param(2,d.IMessageService),__param(3,v.IFileService),__param(4,p.IWorkbenchEditorService),__param(5,g.IWorkspaceContextService)],e)}(T);e.UndoAction=x;var M=function(t){function e(i,n,o,a,c,s){t.call(this,e.ID,r.localize("undoAllChanges","Clean All"),"git-action undo",i,n,o,a,c,s)}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&this.gitService.getModel().getStatus().getWorkingTreeStatus().all().length>0},e.prototype.run=function(e){return t.prototype.run.call(this,this.gitService.getModel().getStatus().getWorkingTreeStatus())},e.ID="workbench.action.git.undoAll",e=__decorate([__param(0,_.IGitService),__param(1,m.IEventService),__param(2,d.IMessageService),__param(3,v.IFileService),__param(4,p.IWorkbenchEditorService),__param(5,g.IWorkspaceContextService)],e)}(T);e.GlobalUndoAction=M;var O=function(t){function e(e,i,r,n,o){t.call(this,e,i,r,n),this.editorService=o,this.onGitServiceChange()}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&!!this.editorService},e.prototype.run=function(t){var e=this,r=I(t);return this.gitService.revertFiles("HEAD",r).then(function(t){var n=e.findGitIndexEditor();if(!n)return i.TPromise.as(t);var o=n.input,a=o.getFileStatus();if(r&&r.every(function(t){return t!==a}))return i.TPromise.as(t);var c=o.getFileStatus().getPath(),s=t.getStatus().find(c,_.StatusType.WORKING_TREE);if(!s)return i.TPromise.as(t);var l=n.getControl(),h=l?l.saveViewState():null;return e.gitService.getInput(s).then(function(i){var r=new u.TextDiffEditorOptions;return r.forceOpen=!0,e.editorService.openEditor(i,r,n.position).then(function(e){return h&&l.restoreViewState(h),t})})})},e.prototype.findGitIndexEditor=function(){for(var t=this.editorService.getVisibleEditors(),e=0;e<t.length;e++){var i=t[e];if(s.isGitEditorInput(i.input))return i}return null},e.prototype.dispose=function(){this.editorService=null,t.prototype.dispose.call(this)},e}(A);e.BaseUnstageAction=O;var B=function(t){function e(i,r){t.call(this,e.ID,e.LABEL,"git-action unstage",i,r)}return __extends(e,t),e.ID="workbench.action.git.unstage",e.LABEL=r.localize("unstage","Unstage"),e=__decorate([__param(0,_.IGitService),__param(1,p.IWorkbenchEditorService)],e)}(O);e.UnstageAction=B;var z=function(t){function e(i,n){t.call(this,e.ID,r.localize("unstageAllChanges","Unstage All"),"git-action unstage",i,n)}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&this.gitService.getModel().getStatus().getIndexStatus().all().length>0},e.prototype.run=function(e){return t.prototype.run.call(this)},e.ID="workbench.action.git.unstageAll",e=__decorate([__param(0,_.IGitService),__param(1,p.IWorkbenchEditorService)],e)}(O);e.GlobalUnstageAction=z;var W;!function(t){t[t.Alive=0]="Alive",t[t.Disposing=1]="Disposing",t[t.Disposed=2]="Disposed"}(W||(W={}));var F=function(t){function e(i,r,n){t.call(this,e.ID,i.name,"git-action checkout",r),this.editorService=n,this.branch=i,this.HEAD=null,this.state=W.Alive,this.runPromises=[],this.onGitServiceChange()}return __extends(e,t),e.prototype.onGitServiceChange=function(){this.gitService.getState()===_.ServiceState.OK&&(this.HEAD=this.gitService.getModel().getHEAD(),this.HEAD&&this.HEAD.name===this.branch.name?this["class"]="git-action checkout HEAD":this["class"]="git-action checkout"),t.prototype.onGitServiceChange.call(this)},e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&!!this.HEAD},e.prototype.run=function(t){var e=this;if(this.state!==W.Alive)return i.Promise.wrapError("action disposed");if(this.HEAD&&this.HEAD.name===this.branch.name)return i.TPromise.as(null);var n=this.gitService.checkout(this.branch.name).then(null,function(t){return t.gitErrorCode===_.GitErrorCodes.DirtyWorkTree?i.Promise.wrapError(new Error(r.localize("dirtyTreeCheckout","Can't checkout. Please commit or stage your work first."))):i.Promise.wrapError(t)});return this.runPromises.push(n),n.done(function(){return e.runPromises.splice(e.runPromises.indexOf(n),1)}),n},e.prototype.dispose=function(){var t=this;this.state===W.Alive&&(this.state=W.Disposing,i.Promise.join(this.runPromises).done(function(){return t.actuallyDispose()}))},e.prototype.actuallyDispose=function(){this.editorService=null,this.branch=null,this.HEAD=null,t.prototype.dispose.call(this),this.state=W.Disposed},e.ID="workbench.action.git.checkout",e=__decorate([__param(1,_.IGitService),__param(2,p.IWorkbenchEditorService)],e)}(A);e.CheckoutAction=F;var R=function(t){function e(i,r){t.call(this,e.ID,"Branch","git-action checkout",r),this.checkout=i}return __extends(e,t),e.prototype.run=function(t){return o.isString(t)?this.gitService.branch(t,this.checkout):i.TPromise.as(!1)},e.ID="workbench.action.git.branch",e=__decorate([__param(1,_.IGitService)],e)}(A);e.BranchAction=R;var H=function(t){function e(e,i,r,n,o){var a=this;t.call(this,i,r,n,o),this.commitState=e,this.toDispose.push(e.addListener2("change/commitInputBox",function(){a.updateEnablement()})),this.onGitServiceChange()}return __extends(e,t),e.prototype.isEnabled=function(){return t.prototype.isEnabled.call(this)&&this.gitService.getModel().getStatus().getIndexStatus().all().length>0},e.prototype.run=function(t){return this.commitState.getCommitMessage()?this.gitService.commit(this.commitState.getCommitMessage()):(this.commitState.onEmptyCommitMessage(),i.TPromise.as(null))},e}(A);e.BaseCommitAction=H;var U=function(t){function e(i,n){t.call(this,i,e.ID,r.localize("commitStaged","Commit Staged"),"git-action commit",n)}return __extends(e,t),e.ID="workbench.action.git.commit",e=__decorate([__param(1,_.IGitService)],e)}(H);e.CommitAction=U;var q=function(t){function e(i,r,n,o){void 0===i&&(i=e.ID),void 0===r&&(r=e.LABEL),t.call(this,i,r,"",n),this.quickOpenService=o}return __extends(e,t),e.prototype.isEnabled=function(){if(!this.gitService)return!1;if(!this.gitService.isIdle())return!1;var t=this.gitService.getModel().getStatus();return t.getIndexStatus().all().length>0||t.getWorkingTreeStatus().all().length>0},e.prototype.run=function(){var t=this;if(!this.enabled)return i.TPromise.as(null);var e=this.gitService.getModel().getStatus();return this.quickOpenService.input({prompt:r.localize("commitMessage","Commit Message")}).then(function(i){return i&&t.gitService.commit(i,!1,0===e.getIndexStatus().all().length)})},e.ID="workbench.action.git.input-commit",e.LABEL=r.localize("commit","Commit"),e=__decorate([__param(2,_.IGitService),__param(3,E.IQuickOpenService)],e)}(A);e.InputCommitAction=q;var N=function(t){function e(i,n){t.call(this,i,e.ID,r.localize("commitAll","Commit All"),"git-action stage-and-commit",n)}return __extends(e,t),e.prototype.isEnabled=function(){if(!this.gitService)return!1;if(!this.gitService.isIdle())return!1;var t=this.gitService.getModel().getStatus();return t.getIndexStatus().all().length>0||t.getWorkingTreeStatus().all().length>0},e.prototype.run=function(t){return this.commitState.getCommitMessage()?this.gitService.commit(this.commitState.getCommitMessage(),!1,!0):(this.commitState.onEmptyCommitMessage(),i.TPromise.as(null))},e.ID="workbench.action.git.stageAndCommit",e=__decorate([__param(1,_.IGitService)],e)}(H);e.StageAndCommitAction=N;var V=function(t){function e(i,r,n){t.call(this,i,e.ID,e.ALL,"git-action smart-commit",r),this.messageService=n,this.onGitServiceChange()}return __extends(e,t),e.prototype.onGitServiceChange=function(){if(t.prototype.onGitServiceChange.call(this),!this.enabled)return void(this.label=e.ALL);var i=this.gitService.getModel().getStatus();i.getIndexStatus().all().length>0?this.label=e.STAGED:this.label=e.ALL,this.label+=" ("+(h.isMacintosh?"Cmd+Enter":"Ctrl+Enter")+")"},e.prototype.isEnabled=function(){if(!this.gitService)return!1;if(!this.gitService.isIdle())return!1;var t=this.gitService.getModel().getStatus();return t.getIndexStatus().all().length>0||t.getWorkingTreeStatus().all().length>0},e.prototype.run=function(t){if(!this.commitState.getCommitMessage())return this.commitState.onEmptyCommitMessage(),i.TPromise.as(null);var e=this.gitService.getModel().getStatus();return this.gitService.commit(this.commitState.getCommitMessage(),!1,0===e.getIndexStatus().all().length)},e.ID="workbench.action.git.commitAll",e.ALL=r.localize("commitAll2","Commit All"),e.STAGED=r.localize("commitStaged2","Commit Staged"),e=__decorate([__param(1,_.IGitService),__param(2,d.IMessageService)],e)}(H);e.SmartCommitAction=V;var j=function(t){function e(i,r,n){void 0===i&&(i=e.ID),void 0===r&&(r=e.LABEL),t.call(this,i,r,"git-action pull",n)}return __extends(e,t),e.prototype.isEnabled=function(){if(!t.prototype.isEnabled.call(this))return!1;if(!this.gitService.isIdle())return!1;var e=this.gitService.getModel(),i=e.getHEAD();return!!(i&&i.name&&i.upstream)},e.prototype.run=function(t){return this.pull()},e.prototype.pull=function(t){return void 0===t&&(t=!1),this.gitService.pull(t).then(null,function(t){return t.gitErrorCode===_.GitErrorCodes.DirtyWorkTree?i.Promise.wrapError(l.create(r.localize("dirtyTreePull","Can't pull. Please commit or stage your work first."),{severity:f["default"].Warning})):t.gitErrorCode===_.GitErrorCodes.AuthenticationFailed?i.Promise.wrapError(l.create(r.localize("authFailed","Authentication failed on the git remote."))):i.Promise.wrapError(t)})},e.ID="workbench.action.git.pull",e.LABEL="Pull",e=__decorate([__param(2,_.IGitService)],e)}(A);e.PullAction=j;var X=function(t){function e(i){t.call(this,e.ID,e.LABEL,i)}return __extends(e,t),e.prototype.run=function(t){return this.pull(!0)},e.ID="workbench.action.git.pull.rebase",e.LABEL="Pull (Rebase)",e=__decorate([__param(0,_.IGitService)],e)}(j);e.PullWithRebaseAction=X;var Q=function(t){function e(i,r,n){void 0===i&&(i=e.ID),void 0===r&&(r=e.LABEL),t.call(this,i,r,"git-action push",n)}return __extends(e,t),e.prototype.isEnabled=function(){if(!t.prototype.isEnabled.call(this))return!1;if(!this.gitService.isIdle())return!1;var e=this.gitService.getModel(),i=e.getHEAD();return!!(i&&i.name&&i.upstream)&&!!i.ahead},e.prototype.run=function(t){return this.gitService.push().then(null,function(t){return t.gitErrorCode===_.GitErrorCodes.AuthenticationFailed?i.Promise.wrapError(l.create(r.localize("authFailed","Authentication failed on the git remote."))):i.Promise.wrapError(t)})},e.ID="workbench.action.git.push",e.LABEL="Push",e=__decorate([__param(2,_.IGitService)],e)}(A);e.PushAction=Q;var K=function(t){function e(i,r,n,o,a){void 0===i&&(i=e.ID),void 0===r&&(r=e.LABEL),t.call(this,i,r,"git-action publish",n),this.quickOpenService=o,this.messageService=a}return __extends(e,t),e.prototype.isEnabled=function(){if(!t.prototype.isEnabled.call(this))return!1;if(!this.gitService.isIdle())return!1;var e=this.gitService.getModel();if(0===e.getRemotes().length)return!1;var i=e.getHEAD();return!(!i||!i.name||i.upstream)},e.prototype.run=function(t){var e,n=this,o=this.gitService.getModel(),a=o.getRemotes(),c=o.getHEAD().name;if(1===a.length){var s=a[0].name,u=this.messageService.confirm({message:r.localize("confirmPublishMessage","Are you sure you want to publish '{0}' to '{1}'?",c,s),primaryButton:r.localize({key:"confirmPublishMessageButton",comment:["&& denotes a mnemonic"]},"&&Publish")});e=i.TPromise.as(u?s:null)}else{var h=a.map(function(t){var e=t.name,i=t.url;return{label:e,description:i}}),p=r.localize("publishPickMessage","Pick a remote to publish the branch '{0}' to:",c);e=this.quickOpenService.pick(h,{placeHolder:p}).then(function(t){return t&&t.label})}return e.then(function(t){return t&&n.gitService.push(t,c,{setUpstream:!0})}).then(null,function(t){return t.gitErrorCode===_.GitErrorCodes.AuthenticationFailed?i.Promise.wrapError(l.create(r.localize("authFailed","Authentication failed on the git remote."))):i.Promise.wrapError(t)})},e.ID="workbench.action.git.publish",e.LABEL=r.localize("publish","Publish"),e=__decorate([__param(2,_.IGitService),__param(3,E.IQuickOpenService),__param(4,d.IMessageService)],e)}(A);e.PublishAction=K;var Y=function(t){function e(e,i,r,n){t.call(this,e,i,"git-action sync",r),this.configurationService=n}return __extends(e,t),e.prototype.isEnabled=function(){if(!t.prototype.isEnabled.call(this))return!1;if(!this.gitService.isIdle())return!1;var e=this.gitService.getModel(),i=e.getHEAD();return!!(i&&i.name&&i.upstream)},e.prototype.run=function(t){if(!this.enabled)return i.TPromise.as(null);var e=this.configurationService.getConfiguration("git");return e.confirmSync&&!window.confirm(r.localize("sureSync","Are you sure you want to synchronize your git repository?"))?i.TPromise.as(null):this.gitService.sync().then(null,function(t){return t.gitErrorCode===_.GitErrorCodes.AuthenticationFailed?i.Promise.wrapError(l.create(r.localize("authFailed","Authentication failed on the git remote."))):i.Promise.wrapError(t)})},e.ID="workbench.action.git.sync",e.LABEL="Sync",e=__decorate([__param(2,_.IGitService),__param(3,S.IConfigurationService)],e)}(A);e.SyncAction=Y;var J=function(t){function e(i,r,n){void 0===i&&(i=e.ID),void 0===r&&(r=e.LABEL),t.call(this,e.ID,e.LABEL,"git-action undo-last-commit",n)}return __extends(e,t),e.prototype.run=function(){return this.gitService.reset("HEAD~")},e.ID="workbench.action.git.undoLastCommit",e.LABEL=r.localize("undoLastCommit","Undo Last Commit"),e=__decorate([__param(2,_.IGitService)],e)}(A);e.UndoLastCommitAction=J;var Z=function(t){function e(e,i,r){t.call(this,e,i),this.quickOpenService=r}return __extends(e,t),e.prototype.run=function(t){return this.quickOpenService.show("git checkout "),i.TPromise.as(null)},e.ID="workbench.action.git.startGitCheckout",e.LABEL="Checkout",e=__decorate([__param(2,E.IQuickOpenService)],e)}(a.Action);e.StartGitCheckoutAction=Z;var $=function(t){function e(e,i,r){t.call(this,e,i),this.quickOpenService=r}return __extends(e,t),e.prototype.run=function(t){return this.quickOpenService.show("git branch "),i.TPromise.as(null)},e.ID="workbench.action.git.startGitBranch",e.LABEL="Branch",e=__decorate([__param(2,E.IQuickOpenService)],e)}(a.Action);e.StartGitBranchAction=$});