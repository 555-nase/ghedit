{"version":3,"file":"vs/workbench/parts/git/electron-main/index.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/git/electron-main/index.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAGhG,YAAY,CAAC;IA6Bb,mBAA0B,GAAwB;QACjD,IAAI,KAAK,GAA+B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE5D,kBAAG,CAAC,EAAE,CAAC,aAAa,EAAE,UAAC,KAAK,EAAE,MAA0B;YACvD,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,UAAC,OAA4B;YAC3D,IAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAErC,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;gBACzC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,EAAE,EAAE,YAAY,CAAC,WAAW,CAAC,CAAC;gBAChE,MAAM,CAAC;YACR,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC;gBACjC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAC,CAAC,CAAC;gBACtG,MAAM,CAAC;YACR,CAAC;YAED,IAAI,GAAG,GAAG,IAAI,wBAAa,CAAC;gBAC3B,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,QAAQ,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG;gBACtC,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ;aAC3B,CAAC,CAAC;YAEH,GAAG,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;YAEhC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG;gBACnB,MAAM,EAAE,GAAG;gBACX,WAAW,EAAE,IAAI;aACjB,CAAC;YAEF,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC,CAAC;YAC9E,GAAG,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;YAE3E,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC;gBAErE,UAAU,CAAC;oBACV,OAAO,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAC1B,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAhDe,iBAAS,YAgDxB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n'use strict';\n\nimport env = require('vs/workbench/electron-main/env');\nimport events = require('vs/base/common/eventEmitter');\nimport platform = require('vs/base/common/platform');\n\nimport { ipcMain as ipc, BrowserWindow } from 'electron';\n\ninterface ICredentialsContext {\n\tid: number;\n\thost: string;\n\tcommand: string;\n}\n\ninterface ICredentials {\n\tusername: string;\n\tpassword: string;\n}\n\ninterface ICredentialsResult {\n\tid: number;\n\tcredentials: ICredentials;\n}\n\ninterface IContext {\n\tcredentials: ICredentials;\n\twindow: Electron.BrowserWindow;\n}\n\nexport function configure(bus: events.EventEmitter): void {\n\tvar cache: { [id: string]: IContext } = Object.create(null);\n\n\tipc.on('git:askpass', (event, result: ICredentialsResult) => {\n\t\tcache[result.id].credentials = result.credentials;\n\t});\n\n\tbus.addListener('git:askpass', (context: ICredentialsContext) => {\n\t\tvar cachedResult = cache[context.id];\n\n\t\tif (typeof cachedResult !== 'undefined') {\n\t\t\tbus.emit('git:askpass:' + context.id, cachedResult.credentials);\n\t\t\treturn;\n\t\t}\n\n\t\tif (context.command === 'fetch') {\n\t\t\tbus.emit('git:askpass:' + context.id, { id: context.id, credentials: { username: '', password: '' }});\n\t\t\treturn;\n\t\t}\n\n\t\tvar win = new BrowserWindow({\n\t\t\talwaysOnTop: true,\n\t\t\tskipTaskbar: true,\n\t\t\tresizable: false,\n\t\t\twidth: 450,\n\t\t\theight: platform.isWindows ? 280 : 260,\n\t\t\tshow: true,\n\t\t\ttitle: env.product.nameLong\n\t\t});\n\n\t\twin.setMenuBarVisibility(false);\n\n\t\tcache[context.id] = {\n\t\t\twindow: win,\n\t\t\tcredentials: null\n\t\t};\n\n\t\twin.loadURL(require.toUrl('vs/workbench/parts/git/electron-main/index.html'));\n\t\twin.webContents.executeJavaScript('init(' + JSON.stringify(context) + ')');\n\n\t\twin.once('closed', () => {\n\t\t\tbus.emit('git:askpass:' + context.id, cache[context.id].credentials);\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tdelete cache[context.id];\n\t\t\t}, 1000 * 10);\n\t\t});\n\t});\n}\n"]}