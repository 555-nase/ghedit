/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require","exports","vs/base/common/winjs.base","vs/base/parts/ipc/common/ipc","./git"],function(t,e,n,r,o){"use strict";var c={to:function(t){return[t.x,t.y,t.path,t.mimetype,t.rename]},from:function(t){return{x:t[0],y:t[1],path:t[2],mimetype:t[3],rename:t[4]}}},i={to:function(t){return[t.name,t.commit,t.type,t.remote,t.upstream,t.ahead,t.behind]},from:function(t){return{name:t[0],commit:t[1],type:t[2],remote:t[3],upstream:t[4],ahead:t[5],behind:t[6]}}},u={to:function(t){return[t.name,t.commit,t.type,t.remote]},from:function(t){return{name:t[0],commit:t[1],type:t[2],remote:t[3]}}},s={to:function(t){return[t.name,t.url]},from:function(t){return{name:t[0],url:t[1]}}},a={to:function(t){return t?[t.repositoryRoot,t.state,t.status.map(c.to),i.to(t.HEAD),t.refs.map(u.to),t.remotes.map(s.to)]:null},from:function(t){return t?{repositoryRoot:t[0],state:t[1],status:t[2].map(c.from),HEAD:i.from(t[3]),refs:t[4].map(u.from),remotes:t[5].map(s.from)}:null}},h=function(){function t(t){this.service=t}return t.prototype.call=function(t,e){switch(t){case"getVersion":return this.service.then(function(t){return t.getVersion()});case"serviceState":return this.service.then(function(t){return t.serviceState()});case"statusCount":return this.service.then(function(t){return t.statusCount()});case"status":return this.service.then(function(t){return t.status()}).then(a.to);case"init":return this.service.then(function(t){return t.init()}).then(a.to);case"add":return this.service.then(function(t){return t.add(e)}).then(a.to);case"stage":return this.service.then(function(t){return t.stage(e[0],e[1])}).then(a.to);case"branch":return this.service.then(function(t){return t.branch(e[0],e[1])}).then(a.to);case"checkout":return this.service.then(function(t){return t.checkout(e[0],e[1])}).then(a.to);case"clean":return this.service.then(function(t){return t.clean(e)}).then(a.to);case"undo":return this.service.then(function(t){return t.undo()}).then(a.to);case"reset":return this.service.then(function(t){return t.reset(e[0],e[1])}).then(a.to);case"revertFiles":return this.service.then(function(t){return t.revertFiles(e[0],e[1])}).then(a.to);case"fetch":return this.service.then(function(t){return t.fetch()}).then(a.to);case"pull":return this.service.then(function(t){return t.pull(e)}).then(a.to);case"push":return this.service.then(function(t){return t.push(e[0],e[1],e[2])}).then(a.to);case"sync":return this.service.then(function(t){return t.sync()}).then(a.to);case"commit":return this.service.then(function(t){return t.commit(e[0],e[1],e[2])}).then(a.to);case"detectMimetypes":return this.service.then(function(t){return t.detectMimetypes(e[0],e[1])});case"show":return this.service.then(function(t){return t.show(e[0],e[1])});case"onOutput":return this.service.then(function(t){return r.eventToCall(t.onOutput)});case"getCommitTemplate":return this.service.then(function(t){return t.getCommitTemplate()})}},t}();e.GitChannel=h;var l=function(){function t(){}return t.prototype.call=function(t){switch(t){case"serviceState":return n.TPromise.as(o.RawServiceState.GitNotFound);default:return n.TPromise.as(null)}},t}();e.UnavailableGitChannel=l;var f=function(){function t(t){this.channel=t,this._onOutput=r.eventFromCall(this.channel,"onOutput")}return Object.defineProperty(t.prototype,"onOutput",{get:function(){return this._onOutput},enumerable:!0,configurable:!0}),t.prototype.getVersion=function(){return this.channel.call("getVersion")},t.prototype.serviceState=function(){return this.channel.call("serviceState")},t.prototype.statusCount=function(){return this.channel.call("statusCount")},t.prototype.status=function(){return this.channel.call("status").then(a.from)},t.prototype.init=function(){return this.channel.call("init").then(a.from)},t.prototype.add=function(t){return this.channel.call("add",t).then(a.from)},t.prototype.stage=function(t,e){return this.channel.call("stage",[t,e]).then(a.from)},t.prototype.branch=function(t,e){return this.channel.call("branch",[t,e]).then(a.from)},t.prototype.checkout=function(t,e){return this.channel.call("checkout",[t,e]).then(a.from)},t.prototype.clean=function(t){return this.channel.call("clean",t).then(a.from)},t.prototype.undo=function(){return this.channel.call("undo").then(a.from)},t.prototype.reset=function(t,e){return this.channel.call("reset",[t,e]).then(a.from)},t.prototype.revertFiles=function(t,e){return this.channel.call("revertFiles",[t,e]).then(a.from)},t.prototype.fetch=function(){return this.channel.call("fetch").then(a.from)},t.prototype.pull=function(t){return this.channel.call("pull",t).then(a.from)},t.prototype.push=function(t,e,n){return this.channel.call("push",[t,e,n]).then(a.from)},t.prototype.sync=function(){return this.channel.call("sync").then(a.from)},t.prototype.commit=function(t,e,n){return this.channel.call("commit",[t,e,n]).then(a.from)},t.prototype.detectMimetypes=function(t,e){return this.channel.call("detectMimetypes",[t,e])},t.prototype.show=function(t,e){return this.channel.call("show",[t,e])},t.prototype.getCommitTemplate=function(){return this.channel.call("getCommitTemplate")},t}();e.GitChannelClient=f;var p=function(){function t(t){this.service=t}return t.prototype.call=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];switch(t){case"askpass":return this.service.askpass(e[0],e[1],e[2])}},t}();e.AskpassChannel=p;var m=function(){function t(t){this.channel=t}return t.prototype.askpass=function(t,e,n){return this.channel.call("askpass",t,e,n)},t}();e.AskpassChannelClient=m});