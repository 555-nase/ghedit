define(["require","exports","vs/workbench/parts/git/common/git","vs/base/common/winjs.base","vs/base/common/event"],function(t,e,o,r,n){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";var s=function(){function t(){this._onOutput=new n.Emitter}return Object.defineProperty(t.prototype,"onOutput",{get:function(){return this._onOutput.event},enumerable:!0,configurable:!0}),t.prototype.getVersion=function(){return r.TPromise.as(null)},t.prototype.serviceState=function(){return r.TPromise.as(o.RawServiceState.OK)},t.prototype.statusCount=function(){return r.TPromise.as(0)},t.prototype.status=function(){return r.TPromise.as(t.STATUS)},t.prototype.init=function(){return r.TPromise.as(t.STATUS)},t.prototype.add=function(e){return r.TPromise.as(t.STATUS)},t.prototype.stage=function(e,o){return r.TPromise.as(t.STATUS)},t.prototype.branch=function(e,o){return r.TPromise.as(t.STATUS)},t.prototype.checkout=function(e,o){return r.TPromise.as(t.STATUS)},t.prototype.clean=function(e){return r.TPromise.as(t.STATUS)},t.prototype.undo=function(){return r.TPromise.as(t.STATUS)},t.prototype.reset=function(e,o){return r.TPromise.as(t.STATUS)},t.prototype.revertFiles=function(e,o){return r.TPromise.as(t.STATUS)},t.prototype.fetch=function(){return r.TPromise.as(t.STATUS)},t.prototype.pull=function(e){return r.TPromise.as(t.STATUS)},t.prototype.push=function(){return r.TPromise.as(t.STATUS)},t.prototype.sync=function(){return r.TPromise.as(t.STATUS)},t.prototype.commit=function(e,o,n){return r.TPromise.as(t.STATUS)},t.prototype.detectMimetypes=function(t,e){return r.TPromise.as([])},t.prototype.show=function(t,e){return r.TPromise.as(null)},t.prototype.getCommitTemplate=function(){return r.TPromise.as(null)},t.STATUS={repositoryRoot:null,state:o.ServiceState.NotAWorkspace,status:[],HEAD:null,refs:[],remotes:[]},t}();e.NoOpGitService=s});