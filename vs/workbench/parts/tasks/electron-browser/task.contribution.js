/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __extends=this&&this.__extends||function(e,t){function n(){this.constructor=e}for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)},__decorate=this&&this.__decorate||function(e,t,n,r){var s,i=arguments.length,o=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(o=(i<3?s(o):i>3?s(t,n,o):s(t,n))||o);return i>3&&o&&Object.defineProperty(t,n,o),o},__param=this&&this.__param||function(e,t){return function(n,r){t(n,r,e)}};define(["require","exports","vs/nls","vs/base/common/winjs.base","vs/base/common/severity","vs/base/common/objects","vs/base/common/actions","vs/base/browser/dom","vs/base/common/lifecycle","vs/base/common/eventEmitter","vs/base/browser/builder","vs/base/common/types","vs/base/common/keyCodes","vs/base/common/glob","vs/base/common/platform","vs/base/common/strings","vs/platform/platform","vs/platform/lifecycle/common/lifecycle","vs/platform/actions/common/actions","vs/platform/instantiation/common/extensions","vs/platform/event/common/event","vs/platform/message/common/message","vs/platform/markers/common/markers","vs/platform/telemetry/common/telemetry","vs/platform/configuration/common/configuration","vs/platform/files/common/files","vs/platform/extensions/common/extensions","vs/editor/common/services/modeService","vs/editor/common/services/modelService","vs/platform/jsonschemas/common/jsonContributionRegistry","vs/workbench/common/actionRegistry","vs/workbench/browser/parts/statusbar/statusbar","vs/workbench/browser/quickopen","vs/workbench/services/quickopen/common/quickOpenService","vs/workbench/services/panel/common/panelService","vs/workbench/parts/markers/common/constants","vs/workbench/services/part/common/partService","vs/workbench/services/editor/common/editorService","vs/workbench/services/workspace/common/contextService","vs/workbench/parts/lib/node/configVariables","vs/workbench/parts/files/common/files","vs/workbench/parts/output/common/output","vs/workbench/parts/tasks/common/taskSystem","vs/workbench/parts/tasks/common/taskService","vs/workbench/parts/tasks/common/taskTemplates","vs/workbench/parts/tasks/common/languageServiceTaskSystem","vs/workbench/parts/tasks/node/processRunnerSystem","vs/workbench/parts/tasks/node/processRunnerDetector","vs/css!./media/task.contribution","vs/workbench/parts/tasks/browser/taskQuickOpen"],function(e,t,n,r,s,i,o,a,c,l,u,p,m,h,d,f,v,k,S,g,y,T,b,_,w,C,I,x,E,P,z,R,A,D,$,O,J,M,L,j,W,N,F,X,q,H,B,Q){"use strict";var K=u.$,V=function(e){function t(t,n,r,s,i,o){e.call(this,t,n),this.taskService=r,this.telemetryService=s,this.messageService=i,this.contextService=o}return __extends(t,e),t.prototype.canRun=function(){return!!this.contextService.getWorkspace()||(this.messageService.show(s["default"].Info,n.localize("AbstractTaskAction.noWorkspace","Tasks are only available on a workspace folder.")),!1)},t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(o.Action),U=function(e){function t(t,n,r,s,i,o){e.call(this,t,n,r,s,i,o)}return __extends(t,e),t.prototype.run=function(){return this.canRun()?this.taskService.build():r.TPromise.as(void 0)},t.ID="workbench.action.tasks.build",t.TEXT=n.localize("BuildAction.label","Run Build Task"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(V),G=function(e){function t(t,n,r,s,i,o){e.call(this,t,n,r,s,i,o)}return __extends(t,e),t.prototype.run=function(){return this.canRun()?this.taskService.runTest():r.TPromise.as(void 0)},t.ID="workbench.action.tasks.test",t.TEXT=n.localize("TestAction.label","Run Test Task"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(V),Y=(function(e){function t(t,n,r,s,i,o){e.call(this,t,n,r,s,i,o)}return __extends(t,e),t.prototype.run=function(){return this.canRun()?this.taskService.rebuild():r.TPromise.as(void 0)},t.ID="workbench.action.tasks.rebuild",t.TEXT=n.localize("RebuildAction.label","Run Rebuild Task"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(V),function(e){function t(t,n,r,s,i,o){e.call(this,t,n,r,s,i,o)}return __extends(t,e),t.prototype.run=function(){return this.canRun()?this.taskService.clean():r.TPromise.as(void 0)},t.ID="workbench.action.tasks.clean",t.TEXT=n.localize("CleanAction.label","Run Clean Task"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(V),function(e){function t(t,n,r,s,i,o,a,c,l){e.call(this,t,n),this.configurationService=r,this.editorService=s,this.fileService=i,this.contextService=o,this.outputService=a,this.messageService=c,this.quickOpenService=l}return __extends(t,e),t.prototype.run=function(e){var t=this;if(!this.contextService.getWorkspace())return this.messageService.show(s["default"].Info,n.localize("ConfigureTaskRunnerAction.noWorkspace","Tasks are only available on a workspace folder.")),r.TPromise.as(void 0);var i=!(!e||!e.ctrlKey&&!e.metaKey),o=!1;return this.fileService.resolveFile(this.contextService.toResource(".vscode/tasks.json")).then(function(e){return e},function(e){return t.quickOpenService.pick(q.templates,{placeHolder:n.localize("ConfigureTaskRunnerAction.quickPick.template","Select a Task Runner")}).then(function(e){if(e){var i;if(e.autoDetect){var a=t.outputService.getChannel(ie.OutputChannelId);a.show(),a.append(n.localize("ConfigureTaskRunnerAction.autoDetecting","Auto detecting tasks for {0}",e.id)+"\n");var c=new Q.ProcessRunnerDetector(t.fileService,t.contextService,new j.ConfigVariables(t.configurationService,t.editorService,t.contextService));i=c.detect(!1,e.id).then(function(r){var i=r.config;if(r.stderr&&r.stderr.length>0)return r.stderr.forEach(function(e){a.append(e+"\n")}),t.messageService.show(s["default"].Warning,n.localize("ConfigureTaskRunnerAction.autoDetect","Auto detecting the task system failed. Using default template. Consult the task output for details.")),e.content;if(i){r.stdout&&r.stdout.length>0&&r.stdout.forEach(function(e){return a.append(e+"\n")});var o=JSON.stringify(i,null,"\t");return o=["{","\t// See https://go.microsoft.com/fwlink/?LinkId=733558","\t// for the documentation about the tasks.json format"].join("\n")+o.substr(1)}return e.content})}else i=r.TPromise.as(e.content);return i.then(function(e){var n=t.configurationService.getConfiguration();return n.editor.insertSpaces&&(e=e.replace(/(\n)(\t+)/g,function(e,t,r){return t+f.repeat(" ",r.length*n.editor.tabSize)})),o=!0,t.fileService.createFile(t.contextService.toResource(".vscode/tasks.json"),e)})}})}).then(function(e){if(e)return t.editorService.openEditor({resource:e.resource,options:{forceOpen:!0,pinned:o}},i)},function(e){throw new Error(n.localize("ConfigureTaskRunnerAction.failed","Unable to create the 'tasks.json' file inside the '.vscode' folder. Consult the task output for details."))})},t.ID="workbench.action.tasks.configureTaskRunner",t.TEXT=n.localize("ConfigureTaskRunnerAction.label","Configure Task Runner"),t=__decorate([__param(2,w.IConfigurationService),__param(3,M.IWorkbenchEditorService),__param(4,C.IFileService),__param(5,L.IWorkspaceContextService),__param(6,N.IOutputService),__param(7,T.IMessageService),__param(8,D.IQuickOpenService)],t)}(o.Action)),Z=function(e){function t(){e.call(this,t.ID,t.TEXT)}return __extends(t,e),t.prototype.run=function(){return this.closeFunction&&this.closeFunction(),r.TPromise.as(null)},t.ID="workbench.action.build.closeMessage",t.TEXT=n.localize("CloseMessageAction.label","Close"),t}(o.Action),ee=function(e){function t(t,n,r,s,i,o){e.call(this,t,n,r,s,i,o)}return __extends(t,e),t.prototype.run=function(){var e=this;return this.canRun()?this.taskService.isActive().then(function(t){if(t)return e.taskService.terminate().then(function(e){return e.success?void 0:r.Promise.wrapError(n.localize("TerminateAction.failed","Failed to terminate running task"))})}):r.TPromise.as(void 0)},t.ID="workbench.action.tasks.terminate",t.TEXT=n.localize("TerminateAction.label","Terminate Running Task"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService)],t)}(V),te=function(e){function t(t,n,r,s,i,o,a){e.call(this,t,n,r,s,i,o),this.outputService=a}return __extends(t,e),t.prototype.run=function(){return this.canRun()?this.outputService.getChannel(ie.OutputChannelId).show():r.TPromise.as(void 0)},t.ID="workbench.action.tasks.showLog",t.TEXT=n.localize("ShowLogAction.label","Show Task Log"),t=__decorate([__param(2,X.ITaskService),__param(3,_.ITelemetryService),__param(4,T.IMessageService),__param(5,L.IWorkspaceContextService),__param(6,N.IOutputService)],t)}(V),ne=function(e){function t(t,n,r,s,i,o,a){e.call(this,t,n,s,i,o,a),this.quickOpenService=r}return __extends(t,e),t.prototype.run=function(e){return this.canRun()?(this.quickOpenService.show("task "),r.TPromise.as(null)):r.TPromise.as(void 0)},t.ID="workbench.action.tasks.runTask",t.TEXT=n.localize("RunTaskAction.label","Run Task"),t=__decorate([__param(2,D.IQuickOpenService),__param(3,X.ITaskService),__param(4,_.ITelemetryService),__param(5,T.IMessageService),__param(6,L.IWorkspaceContextService)],t)}(V),re=function(){function e(e,t,n,r,s){this.partService=s,this.panelService=e,this.markerService=t,this.outputService=n,this.taskService=r,this.activeCount=0}return e.prototype.render=function(t){var r=this,s=[],i=document.createElement("div"),o=document.createElement("div"),l=document.createElement("a"),u=document.createElement("div"),p=document.createElement("div"),m=document.createElement("div");a.addClass(i,"task-statusbar-item"),a.addClass(o,"task-statusbar-item-progress"),i.appendChild(o),o.innerHTML=e.progressChars[0],K(o).hide(),a.addClass(l,"task-statusbar-item-label"),i.appendChild(l),a.addClass(u,"task-statusbar-item-label-error"),u.innerHTML="0",l.appendChild(u),a.addClass(p,"task-statusbar-item-label-warning"),p.innerHTML="0",l.appendChild(p),a.addClass(m,"task-statusbar-item-label-info"),l.appendChild(m),K(m).hide(),s.push(a.addDisposableListener(l,"click",function(e){var t=r.panelService.getActivePanel();t&&t.getId()===O["default"].MARKERS_PANEL_ID?r.partService.setPanelHidden(!0):r.panelService.openPanel(O["default"].MARKERS_PANEL_ID,!0)}));var h=function(e,t){return t>0?(e.innerHTML=t.toString(),K(e).show(),!0):(K(e).hide(),!1)},d=n.localize("manyMarkers","99+"),f=function(e){u.innerHTML=e.errors<100?e.errors.toString():d,p.innerHTML=e.warnings<100?e.warnings.toString():d,h(m,e.infos)};return this.markerService.onMarkerChanged(function(e){f(r.markerService.getStatistics())}),s.push(this.taskService.addListener2(X.TaskServiceEvents.Active,function(){if(r.activeCount++,1===r.activeCount){var t=1,n=e.progressChars;o.innerHTML=n[0],r.intervalToken=setInterval(function(){o.innerHTML=n[t],t++,t>=n.length&&(t=0)},50),K(o).show()}})),s.push(this.taskService.addListener2(X.TaskServiceEvents.Inactive,function(e){r.activeCount--,0===r.activeCount&&(K(o).hide(),clearInterval(r.intervalToken),r.intervalToken=null)})),s.push(this.taskService.addListener2(X.TaskServiceEvents.Terminated,function(){0!==r.activeCount&&(K(o).hide(),r.intervalToken&&(clearInterval(r.intervalToken),r.intervalToken=null),r.activeCount=0)})),t.appendChild(i),{dispose:function(){s=c.dispose(s)}}},e.progressChars="|/-\\",e=__decorate([__param(0,$.IPanelService),__param(1,b.IMarkerService),__param(2,N.IOutputService),__param(3,X.ITaskService),__param(4,J.IPartService)],e)}(),se=function(e){function t(){e.apply(this,arguments)}return __extends(t,e),t.prototype.build=function(){return{promise:r.TPromise.as({})}},t.prototype.rebuild=function(){return{promise:r.TPromise.as({})}},t.prototype.clean=function(){return{promise:r.TPromise.as({})}},t.prototype.runTest=function(){return{promise:r.TPromise.as({})}},t.prototype.run=function(e){return{promise:r.TPromise.as({})}},t.prototype.isActive=function(){return r.TPromise.as(!1)},t.prototype.isActiveSync=function(){return!1},t.prototype.canAutoTerminate=function(){return!0},t.prototype.terminate=function(){return r.TPromise.as({success:!0})},t.prototype.tasks=function(){return r.TPromise.as([])},t}(l.EventEmitter),ie=function(e){function t(n,r,s,i,o,a,c,l,u,p,m,h,d,f,v){var k=this;e.call(this),this.modeService=n,this.configurationService=r,this.markerService=s,this.outputService=i,this.messageService=o,this.editorService=a,this.fileService=c,this.contextService=l,this.telemetryService=u,this.textFileService=p,this.eventService=h,this.modelService=d,this.extensionService=f,this.quickOpenService=v,this.taskSystemListeners=[],this.clearTaskSystemPromise=!1,this.outputChannel=this.outputService.getChannel(t.OutputChannelId),this.configurationService.onDidUpdateConfiguration(function(){k.emit(X.TaskServiceEvents.ConfigChanged),k._taskSystem&&k._taskSystem.isActiveSync()?k.clearTaskSystemPromise=!0:(k._taskSystem=null,k._taskSystemPromise=null),k.disposeTaskSystemListeners()}),m.onWillShutdown(function(e){return e.veto(k.beforeShutdown())})}return __extends(t,e),t.prototype.disposeTaskSystemListeners=function(){this.taskSystemListeners=c.dispose(this.taskSystemListeners)},t.prototype.disposeFileChangesListener=function(){this.fileChangesListener&&(this.fileChangesListener.dispose(),this.fileChangesListener=null)},Object.defineProperty(t.prototype,"taskSystemPromise",{get:function(){var e=this;if(!this._taskSystemPromise)if(this.contextService.getWorkspace()){var o=new j.ConfigVariables(this.configurationService,this.editorService,this.contextService),a=!0;this._taskSystemPromise=r.TPromise.as(this.configurationService.getConfiguration("tasks")).then(function(c){var l=c?c.$parseErrors:null;if(l){for(var u=!1,p=0;p<l.length;p++)if(/tasks\.json$/.test(l[p])){u=!0;break}if(u)return e.outputChannel.append(n.localize("TaskSystem.invalidTaskJson","Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.\n")),e.outputChannel.show(!0),r.TPromise.wrapError({})}var m;if(c)if(e.isRunnerConfig(c)&&e.hasDetectorSupport(c)){var h=c;m=new Q.ProcessRunnerDetector(e.fileService,e.contextService,o,h).detect(!0).then(function(t){a=e.printStderr(t.stderr);var n=t.config;if(!n)return c;var r=i.clone(h),s=Object.create(null);return r.tasks?(r.tasks.forEach(function(e){return s[e.taskName]=e}),n.tasks.forEach(function(e){s[e.taskName]||r.tasks.push(e)})):n.tasks&&(r.tasks=n.tasks),r})}else m=r.TPromise.as(c);else m=new Q.ProcessRunnerDetector(e.fileService,e.contextService,o).detect(!0).then(function(t){return a=e.printStderr(t.stderr),t.config});return m.then(function(r){if(!r)throw e._taskSystemPromise=null,new F.TaskError(s["default"].Info,n.localize("TaskSystem.noConfiguration","No task runner configured."),F.TaskErrors.NotConfigured);var i=null;if("service"===r.buildSystem?i=new H.LanguageServiceTaskSystem(r,e.telemetryService,e.modeService):e.isRunnerConfig(r)&&(i=new B.ProcessRunnerSystem(r,o,e.markerService,e.modelService,e.telemetryService,e.outputService,t.OutputChannelId,a)),null===i)throw e._taskSystemPromise=null,new F.TaskError(s["default"].Info,n.localize("TaskSystem.noBuildType","No valid task runner configured. Supported task runners are 'service' and 'program'."),F.TaskErrors.NoValidTaskRunner);return e.taskSystemListeners.push(i.addListener2(F.TaskSystemEvents.Active,function(t){return e.emit(X.TaskServiceEvents.Active,t)})),e.taskSystemListeners.push(i.addListener2(F.TaskSystemEvents.Inactive,function(t){return e.emit(X.TaskServiceEvents.Inactive,t)})),e._taskSystem=i,i},function(t){return e.handleError(t),r.Promise.wrapError(t)})})}else this._taskSystem=new se,this._taskSystemPromise=r.TPromise.as(this._taskSystem);return this._taskSystemPromise},enumerable:!0,configurable:!0}),t.prototype.printStderr=function(e){var t=this,n=!0;return e&&e.length>0&&(e.forEach(function(e){n=!1,t.outputChannel.append(e+"\n")}),this.outputChannel.show(!0)),n},t.prototype.isRunnerConfig=function(e){return!e.buildSystem||"program"===e.buildSystem},t.prototype.hasDetectorSupport=function(e){return!!e.command&&Q.ProcessRunnerDetector.supports(e.command)},t.prototype.configureAction=function(){return new Y(Y.ID,Y.TEXT,this.configurationService,this.editorService,this.fileService,this.contextService,this.outputService,this.messageService,this.quickOpenService)},t.prototype.build=function(){return this.executeTarget(function(e){return e.build()})},t.prototype.rebuild=function(){return this.executeTarget(function(e){return e.rebuild()})},t.prototype.clean=function(){return this.executeTarget(function(e){return e.clean()})},t.prototype.runTest=function(){return this.executeTarget(function(e){return e.runTest()})},t.prototype.run=function(e){return this.executeTarget(function(t){return t.run(e)})},t.prototype.executeTarget=function(e){var t=this;return this.textFileService.saveAll().then(function(r){return t.configurationService.loadConfiguration().then(function(){return t.taskSystemPromise.then(function(t){return t.isActive().then(function(r){if(r)throw new F.TaskError(s["default"].Warning,n.localize("TaskSystem.active","There is an active running task right now. Terminate it first before executing another task."),F.TaskErrors.RunningTask);return e(t)})}).then(function(n){if(n.restartOnFileChanges){var r=n.restartOnFileChanges;t.fileChangesListener=t.eventService.addListener2(C.EventType.FILE_CHANGES,function(n){var s=n.changes.some(function(e){return(e.type===C.FileChangeType.ADDED||e.type===C.FileChangeType.DELETED)&&!!h.match(r,e.resource.fsPath)});s&&t.terminate().done(function(){d.setTimeout(function(){t.executeTarget(e)},2e3)})})}return n.promise.then(function(e){return t.clearTaskSystemPromise&&(t._taskSystemPromise=null,t.clearTaskSystemPromise=!1),e})},function(e){t.handleError(e)})})})},t.prototype.isActive=function(){return this._taskSystemPromise?this.taskSystemPromise.then(function(e){return e.isActive()}):r.TPromise.as(!1)},t.prototype.terminate=function(){var e=this;return this._taskSystemPromise?this.taskSystemPromise.then(function(e){return e.terminate()}).then(function(t){return t.success&&(e.clearTaskSystemPromise&&(e._taskSystemPromise=null,e.clearTaskSystemPromise=!1),e.emit(X.TaskServiceEvents.Terminated,{}),e.disposeFileChangesListener()),t}):r.TPromise.as({success:!0})},t.prototype.tasks=function(){return this.taskSystemPromise.then(function(e){return e.tasks()})},t.prototype.beforeShutdown=function(){var e=this;return!(!this._taskSystem||!this._taskSystem.isActiveSync())&&(!this._taskSystem.canAutoTerminate()&&!this.messageService.confirm({message:n.localize("TaskSystem.runningTask","There is a task running. Do you want to terminate it?"),primaryButton:n.localize({key:"TaskSystem.terminateTask",comment:["&& denotes a mnemonic"]},"&&Terminate Task")})||this._taskSystem.terminate().then(function(t){return!t.success||(e.emit(X.TaskServiceEvents.Terminated,{}),e._taskSystem=null,e.disposeFileChangesListener(),e.disposeTaskSystemListeners(),!1)},function(e){return!0}))},t.prototype.handleError=function(e){var t=!0;if(e instanceof F.TaskError){var r=e,i=r.code===F.TaskErrors.NotConfigured||r.code===F.TaskErrors.NoBuildTask||r.code===F.TaskErrors.NoTestTask,o=r.code===F.TaskErrors.RunningTask;if(i||o){var a=new Z,c=i?this.configureAction():new ee(ee.ID,ee.TEXT,this,this.telemetryService,this.messageService,this.contextService);a.closeFunction=this.messageService.show(r.severity,{message:r.message,actions:[a,c]})}else this.messageService.show(r.severity,r.message)}else if(e instanceof Error){var l=e;this.messageService.show(s["default"].Error,l.message)}else p.isString(e)?this.messageService.show(s["default"].Error,e):this.messageService.show(s["default"].Error,n.localize("TaskSystem.unknownError","An error has occurred while running a task. See task log for details."));t&&this.outputChannel.show(!0)},t.SERVICE_ID="taskService",t.OutputChannelId="tasks",t.OutputChannelLabel=n.localize("tasks","Tasks"),t=__decorate([__param(0,x.IModeService),__param(1,w.IConfigurationService),__param(2,b.IMarkerService),__param(3,N.IOutputService),__param(4,T.IMessageService),__param(5,M.IWorkbenchEditorService),__param(6,C.IFileService),__param(7,L.IWorkspaceContextService),__param(8,_.ITelemetryService),__param(9,W.ITextFileService),__param(10,k.ILifecycleService),__param(11,y.IEventService),__param(12,E.IModelService),__param(13,I.IExtensionService),__param(14,D.IQuickOpenService)],t)}(l.EventEmitter),oe=n.localize("tasksCategory","Tasks"),ae=v.Registry.as(z.Extensions.WorkbenchActions);ae.registerWorkbenchAction(new S.SyncActionDescriptor(Y,Y.ID,Y.TEXT),"Tasks: Configure Task Runner",oe),ae.registerWorkbenchAction(new S.SyncActionDescriptor(U,U.ID,U.TEXT,{primary:m.KeyMod.CtrlCmd|m.KeyMod.Shift|m.KeyCode.KEY_B}),"Tasks: Run Build Task",oe),ae.registerWorkbenchAction(new S.SyncActionDescriptor(G,G.ID,G.TEXT),"Tasks: Run Test Task",oe),ae.registerWorkbenchAction(new S.SyncActionDescriptor(ee,ee.ID,ee.TEXT),"Tasks: Terminate Running Task",oe),ae.registerWorkbenchAction(new S.SyncActionDescriptor(te,te.ID,te.TEXT),"Tasks: Show Task Log",oe),ae.registerWorkbenchAction(new S.SyncActionDescriptor(ne,ne.ID,ne.TEXT),"Tasks: Run Task",oe),g.registerSingleton(X.ITaskService,ie),v.Registry.as(A.Extensions.Quickopen).registerQuickOpenHandler(new A.QuickOpenHandlerDescriptor("vs/workbench/parts/tasks/browser/taskQuickOpen","QuickOpenHandler","task ",n.localize("taskCommands","Run Task")));var ce=v.Registry.as(R.Extensions.Statusbar);ce.registerStatusbarItem(new R.StatusbarItemDescriptor(re,R.StatusbarAlignment.LEFT,50));var le=v.Registry.as(N.Extensions.OutputChannels);le.registerChannel(ie.OutputChannelId,ie.OutputChannelLabel);var ue="vscode://schemas/tasks",pe={id:ue,description:"Task definition file",type:"object","default":{version:"0.1.0",command:"myCommand",isShellCommand:!1,args:[],showOutput:"always",tasks:[{taskName:"build",showOutput:"silent",isBuildCommand:!0,problemMatcher:["$tsc","$lessCompile"]}]},definitions:{showOutputType:{type:"string","enum":["always","silent","never"],"default":"silent"},patternType:{anyOf:[{type:"string","enum":["$tsc","$tsc-watch","$msCompile","$lessCompile","$gulp-tsc","$cpp","$csc","$vb","$jshint","$jshint-stylish","$eslint-compact","$eslint-stylish","$go"]},{$ref:"#/definitions/pattern"},{type:"array",items:{$ref:"#/definitions/pattern"}}]},pattern:{"default":{regexp:"^([^\\\\s].*)\\\\((\\\\d+,\\\\d+)\\\\):\\\\s*(.*)$",file:1,location:2,message:3},additionalProperties:!1,properties:{regexp:{type:"string",description:n.localize("JsonSchema.pattern.regexp","The regular expression to find an error, warning or info in the output.")},file:{type:"integer",description:n.localize("JsonSchema.pattern.file","The match group index of the filename. If omitted 1 is used.")},location:{type:"integer",description:n.localize("JsonSchema.pattern.location","The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted line and column is assumed.")},line:{type:"integer",description:n.localize("JsonSchema.pattern.line","The match group index of the problem's line. Defaults to 2")},column:{type:"integer",description:n.localize("JsonSchema.pattern.column","The match group index of the problem's column. Defaults to 3")},endLine:{type:"integer",description:n.localize("JsonSchema.pattern.endLine","The match group index of the problem's end line. Defaults to undefined")},endColumn:{type:"integer",description:n.localize("JsonSchema.pattern.endColumn","The match group index of the problem's end column. Defaults to undefined")},severity:{type:"integer",description:n.localize("JsonSchema.pattern.severity","The match group index of the problem's severity. Defaults to undefined")},code:{type:"integer",description:n.localize("JsonSchema.pattern.code","The match group index of the problem's code. Defaults to undefined")},message:{type:"integer",description:n.localize("JsonSchema.pattern.message","The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.")},loop:{type:"boolean",description:n.localize("JsonSchema.pattern.loop","In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.")}}},problemMatcherType:{oneOf:[{type:"string","enum":["$tsc","$tsc-watch","$msCompile","$lessCompile","$gulp-tsc","$jshint","$jshint-stylish","$eslint-compact","$eslint-stylish","$go"]},{$ref:"#/definitions/problemMatcher"},{type:"array",items:{anyOf:[{$ref:"#/definitions/problemMatcher"},{type:"string","enum":["$tsc","$tsc-watch","$msCompile","$lessCompile","$gulp-tsc","$jshint","$jshint-stylish","$eslint-compact","$eslint-stylish","$go"]}]}}]},watchingPattern:{type:"object",additionalProperties:!1,properties:{regexp:{type:"string",description:n.localize("JsonSchema.watchingPattern.regexp","The regular expression to detect the begin or end of a watching task.")},file:{type:"integer",description:n.localize("JsonSchema.watchingPattern.file","The match group index of the filename. Can be omitted.")}}},problemMatcher:{type:"object",additionalProperties:!1,properties:{base:{type:"string","enum":["$tsc","$tsc-watch","$msCompile","$lessCompile","$gulp-tsc","$jshint","$jshint-stylish","$eslint-compact","$eslint-stylish","$go"],description:n.localize("JsonSchema.problemMatcher.base","The name of a base problem matcher to use.")},owner:{type:"string",description:n.localize("JsonSchema.problemMatcher.owner","The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.")},severity:{type:"string","enum":["error","warning","info"],description:n.localize("JsonSchema.problemMatcher.severity","The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.")},applyTo:{type:"string","enum":["allDocuments","openDocuments","closedDocuments"],description:n.localize("JsonSchema.problemMatcher.applyTo","Controls if a problem reported on a text document is applied only to open, closed or all documents.")},pattern:{$ref:"#/definitions/patternType",description:n.localize("JsonSchema.problemMatcher.pattern","A problem pattern or the name of a predefined problem pattern. Can be omitted if base is specified.")},fileLocation:{oneOf:[{type:"string","enum":["absolute","relative"]},{type:"array",items:{type:"string"}}],description:n.localize("JsonSchema.problemMatcher.fileLocation","Defines how file names reported in a problem pattern should be interpreted.")},watching:{type:"object",additionalProperties:!1,properties:{activeOnStart:{type:"boolean",description:n.localize("JsonSchema.problemMatcher.watching.activeOnStart","If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern")},beginsPattern:{oneOf:[{type:"string"},{type:"#/definitions/watchingPattern"}],description:n.localize("JsonSchema.problemMatcher.watching.beginsPattern","If matched in the output the start of a watching task is signaled.")},endsPattern:{oneOf:[{type:"string"},{type:"#/definitions/watchingPattern"}],description:n.localize("JsonSchema.problemMatcher.watching.endsPattern","If matched in the output the end of a watching task is signaled.")}}},watchedTaskBeginsRegExp:{type:"string",description:n.localize("JsonSchema.problemMatcher.watchedBegin","A regular expression signaling that a watched tasks begins executing triggered through file watching.")},watchedTaskEndsRegExp:{type:"string",description:n.localize("JsonSchema.problemMatcher.watchedEnd","A regular expression signaling that a watched tasks ends executing.")}}},baseTaskRunnerConfiguration:{type:"object",properties:{command:{type:"string",description:n.localize("JsonSchema.command","The command to be executed. Can be an external program or a shell command.")},isShellCommand:{type:"boolean","default":!0,description:n.localize("JsonSchema.shell","Specifies whether the command is a shell command or an external program. Defaults to false if omitted.")},args:{type:"array",description:n.localize("JsonSchema.args","Additional arguments passed to the command."),items:{type:"string"}},options:{type:"object",description:n.localize("JsonSchema.options","Additional command options"),properties:{cwd:{type:"string",description:n.localize("JsonSchema.options.cwd","The current working directory of the executed program or script. If omitted Code's current workspace root is used.")},env:{type:"object",additionalProperties:{type:"string"},description:n.localize("JsonSchema.options.env","The environment of the executed program or shell. If omitted the parent process' environment is used.")}},additionalProperties:{type:["string","array","object"]}},showOutput:{$ref:"#/definitions/showOutputType",description:n.localize("JsonSchema.showOutput","Controls whether the output of the running task is shown or not. If omitted 'always' is used.")},isWatching:{type:"boolean",description:n.localize("JsonSchema.watching","Whether the executed task is kept alive and is watching the file system."),"default":!0},promptOnClose:{type:"boolean",description:n.localize("JsonSchema.promptOnClose","Whether the user is prompted when VS Code closes with a running background task."),"default":!1},echoCommand:{type:"boolean",description:n.localize("JsonSchema.echoCommand","Controls whether the executed command is echoed to the output. Default is false."),"default":!0},suppressTaskName:{type:"boolean",description:n.localize("JsonSchema.suppressTaskName","Controls whether the task name is added as an argument to the command. Default is false."),"default":!0},taskSelector:{type:"string",description:n.localize("JsonSchema.taskSelector","Prefix to indicate that an argument is task.")},problemMatcher:{$ref:"#/definitions/problemMatcherType",description:n.localize("JsonSchema.matchers","The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.")},tasks:{type:"array",description:n.localize("JsonSchema.tasks","The task configurations. Usually these are enrichments of task already defined in the external task runner."),items:{type:"object",$ref:"#/definitions/taskDescription"}}}},taskDescription:{type:"object",required:["taskName"],additionalProperties:!1,properties:{taskName:{type:"string",description:n.localize("JsonSchema.tasks.taskName","The task's name")},args:{type:"array",description:n.localize("JsonSchema.tasks.args","Additional arguments passed to the command when this task is invoked."),items:{type:"string"}},suppressTaskName:{type:"boolean",description:n.localize("JsonSchema.tasks.suppressTaskName","Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used."),"default":!0},showOutput:{$ref:"#/definitions/showOutputType",description:n.localize("JsonSchema.tasks.showOutput","Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.")},echoCommand:{type:"boolean",description:n.localize("JsonSchema.echoCommand","Controls whether the executed command is echoed to the output. Default is false."),"default":!0},isWatching:{type:"boolean",description:n.localize("JsonSchema.tasks.watching","Whether the executed task is kept alive and is watching the file system."),"default":!0},isBuildCommand:{type:"boolean",description:n.localize("JsonSchema.tasks.build","Maps this task to Code's default build command."),
"default":!0},isTestCommand:{type:"boolean",description:n.localize("JsonSchema.tasks.test","Maps this task to Code's default test command."),"default":!0},problemMatcher:{$ref:"#/definitions/problemMatcherType",description:n.localize("JsonSchema.tasks.matchers","The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.")}},defaultSnippets:[{label:"Empty task",body:{taskName:"{{taskName}}"}}]}},allOf:[{type:"object",required:["version"],properties:{version:{type:"string","enum":["0.1.0"],description:n.localize("JsonSchema.version","The config's version number")},windows:{$ref:"#/definitions/baseTaskRunnerConfiguration",description:n.localize("JsonSchema.windows","Windows specific build configuration")},osx:{$ref:"#/definitions/baseTaskRunnerConfiguration",description:n.localize("JsonSchema.mac","Mac specific build configuration")},linux:{$ref:"#/definitions/baseTaskRunnerConfiguration",description:n.localize("JsonSchema.linux","Linux specific build configuration")}}},{$ref:"#/definitions/baseTaskRunnerConfiguration"}]},me=v.Registry.as(P.Extensions.JSONContribution);me.registerSchema(ue,pe)});