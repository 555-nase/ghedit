var __extends=this&&this.__extends||function(t,e){function s(){this.constructor=t}for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);t.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)};define(["require","exports","vs/nls","vs/base/common/types","vs/base/common/uuid","vs/base/common/parsers","vs/base/common/processes","vs/platform/markers/common/problemMatcher"],function(t,e,s,r,i,a,n,o){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";!function(t){t[t.Always=0]="Always",t[t.Silent=1]="Silent",t[t.Never=2]="Never"}(e.ShowOutput||(e.ShowOutput={}));var l,l=e.ShowOutput;!function(t){function e(e){return e=e.toLowerCase(),"always"===e?t.Always:"silent"===e?t.Silent:"never"===e?t.Never:void 0}t.fromString=e}(l=e.ShowOutput||(e.ShowOutput={}));var u=function(t){function e(e,s,r){void 0===r&&(r=new a.ValidationStatus),t.call(this,s,r),this.resolver=e}return __extends(e,t),e.prototype.parse=function(t,e){var o=this;void 0===e&&(e={globals:null,emptyExecutable:!1,emptyCommand:!1});var u=i.generateUuid(),c=null,h=null,p=null;if(this.is(t.name,r.isString)&&(c=t.name),this.is(t.trigger,r.isString)?h=[t.trigger]:this.is(t.trigger,r.isStringArray)&&(h=t.trigger),null===c&&null===h)return this.status.state=a.ValidationState.Error,this.log(s.localize("TaskParser.nameOrTrigger","A task must either define a name or a trigger.")),null;var m=t.executable?new n.ExecutableParser(this.logger,this.status).parse(t.executable,{emptyCommand:!!e.emptyCommand}):null;if(!m&&e.globals&&(m=e.globals),null===m&&!e.emptyExecutable)return this.status.state=a.ValidationState.Error,this.log(s.localize("TaskParser.noExecutable","A task must must define a valid executable.")),null;var g=!1,v=l.Always,f=!1;this.is(t.isWatching,r.isBoolean)&&(g=t.isWatching);var b=!0;b=this.is(t.promptOnClose,r.isBoolean)?t.promptOnClose:!g,this.is(t.showOutput,r.isString)&&(v=l.fromString(t.showOutput)||l.Always),this.is(t.echoCommand,r.isBoolean)&&(f=t.echoCommand),this.is(t.settings,r.isString)&&(p=t.settings);var y=[];if(r.isArray(t.problemMatcher))t.problemMatcher.forEach(function(t){var e=o.parseProblemMatcher(t);e&&y.push(e)});else{var d=this.parseProblemMatcher(t.problemMatcher);d&&y.push(d)}return{id:u,name:c,trigger:h,executable:m,isWatching:g,promptOnClose:b,showOutput:v,echoCommand:f,settings:p,problemMatcher:y}},e.prototype.parseProblemMatcher=function(t){return r.isString(t)?t.length>0&&"$"===t.charAt(0)?this.resolver.get(t.substr(1)):null:r.isObject(t)?new o.ProblemMatcherParser(this.resolver,this.logger,this.status).parse(t):null},e}(a.Parser);e.TaskParser=u;var c=function(){function t(){this.tasks=Object.create(null)}return t.prototype.add=function(t){this.tasks[t.id]=t},t.prototype.get=function(t){return this.tasks[t]},t.prototype.exists=function(t){return!!this.tasks[t]},t.prototype.remove=function(t){delete this.tasks[t]},t.prototype.all=function(){var t=this;return Object.keys(this.tasks).map(function(e){return t.tasks[e]})},t}();e.TaskRegistry=c});