{"version":3,"sources":["vs/workbench/parts/quickopen/browser/commandsHandler.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/quickopen/browser/commandsHandler.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/commandsHandler';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport nls = require('vs/nls');\nimport arrays = require('vs/base/common/arrays');\nimport types = require('vs/base/common/types');\nimport strings = require('vs/base/common/strings');\nimport {IAction, Action} from 'vs/base/common/actions';\nimport {toErrorMessage} from 'vs/base/common/errors';\nimport {Mode, IContext, IAutoFocus} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {QuickOpenEntryGroup, IHighlight, QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {SyncActionDescriptor, IActionsService} from 'vs/platform/actions/common/actions';\nimport {IWorkbenchActionRegistry, Extensions as ActionExtensions} from 'vs/workbench/common/actionRegistry';\nimport {Registry} from 'vs/platform/platform';\nimport {QuickOpenHandler} from 'vs/workbench/browser/quickopen';\nimport {QuickOpenAction} from 'vs/workbench/browser/actions/quickOpenAction';\nimport {matchesWords, matchesPrefix, matchesContiguousSubString, or} from 'vs/base/common/filters';\nimport {ICommonCodeEditor, IEditorActionDescriptorData} from 'vs/editor/common/editorCommon';\nimport {EditorAction} from 'vs/editor/common/editorAction';\nimport {Behaviour} from 'vs/editor/common/editorActionEnablement';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IMessageService, Severity} from 'vs/platform/message/common/message';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {IQuickOpenService} from 'vs/workbench/services/quickopen/common/quickOpenService';\n\nexport const ALL_COMMANDS_PREFIX = '>';\nexport const EDITOR_COMMANDS_PREFIX = '$';\n\nconst wordFilter = or(matchesPrefix, matchesWords, matchesContiguousSubString);\n\nexport class ShowAllCommandsAction extends QuickOpenAction {\n\n\tpublic static ID = 'workbench.action.showCommands';\n\tpublic static LABEL = nls.localize('showTriggerActions', \"Show All Commands\");\n\n\tconstructor(actionId: string, actionLabel: string, @IQuickOpenService quickOpenService: IQuickOpenService) {\n\t\tsuper(actionId, actionLabel, ALL_COMMANDS_PREFIX, quickOpenService);\n\t}\n}\n\nclass BaseCommandEntry extends QuickOpenEntryGroup {\n\tprivate keyLabel: string;\n\tprivate keyAriaLabel: string;\n\tprivate description: string;\n\n\tconstructor(\n\t\tkeyLabel: string,\n\t\tkeyAriaLabel: string,\n\t\tdescription: string,\n\t\thighlights: IHighlight[],\n\t\t@IMessageService protected messageService: IMessageService,\n\t\t@ITelemetryService private telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\tthis.keyLabel = keyLabel;\n\t\tthis.keyAriaLabel = keyAriaLabel;\n\t\tthis.description = description;\n\t\tthis.setHighlights(highlights);\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.description;\n\t}\n\n\tpublic getAriaLabel(): string {\n\t\tif (this.keyAriaLabel) {\n\t\t\treturn nls.localize('entryAriaLabelWithKey', \"{0}, {1}, commands\", this.getLabel(), this.keyAriaLabel);\n\t\t}\n\n\t\treturn nls.localize('entryAriaLabel', \"{0}, commands\", this.getLabel());\n\t}\n\n\tpublic getGroupLabel(): string {\n\t\treturn this.keyLabel;\n\t}\n\n\tprotected onError(error?: Error): void {\n\t\tlet message = !error ? nls.localize('canNotRun', \"Command '{0}' can not be run from here.\", this.description) : toErrorMessage(error);\n\n\t\tthis.messageService.show(Severity.Error, message);\n\t}\n\n\tprotected runAction(action: IAction): void {\n\n\t\t// Use a timeout to give the quick open widget a chance to close itself first\n\t\tTPromise.timeout(50).done(() => {\n\t\t\tif (action && action.enabled) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: action.id, from: 'quick open' });\n\t\t\t\t\t(action.run() || TPromise.as(null)).done(() => {\n\t\t\t\t\t\taction.dispose();\n\t\t\t\t\t}, (err) => this.onError(err));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.messageService.show(Severity.Info, nls.localize('actionNotEnabled', \"Command '{0}' is not enabled in the current context.\", this.getLabel()));\n\t\t\t}\n\t\t}, (err) => this.onError(err));\n\t}\n}\n\nclass CommandEntry extends BaseCommandEntry {\n\tprivate actionDescriptor: SyncActionDescriptor;\n\n\tconstructor(\n\t\tkeyLabel: string,\n\t\tkeyAriaLabel: string,\n\t\tdescription: string,\n\t\thighlights: IHighlight[],\n\t\tactionDescriptor: SyncActionDescriptor,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tsuper(keyLabel, keyAriaLabel, description, highlights, messageService, telemetryService);\n\n\t\tthis.actionDescriptor = actionDescriptor;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\tlet action = <Action>this.instantiationService.createInstance(this.actionDescriptor.syncDescriptor);\n\t\t\tthis.runAction(action);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nclass EditorActionCommandEntry extends BaseCommandEntry {\n\tprivate action: IAction;\n\n\tconstructor(\n\t\tkeyLabel: string,\n\t\tkeyAriaLabel: string,\n\t\tdescription: string,\n\t\thighlights: IHighlight[],\n\t\taction: IAction,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tsuper(keyLabel, keyAriaLabel, description, highlights, messageService, telemetryService);\n\n\t\tthis.action = action;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\tthis.runAction(this.action);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n\nclass ActionCommandEntry extends BaseCommandEntry {\n\tprivate action: IAction;\n\n\tconstructor(\n\t\tkeyLabel: string,\n\t\tkeyAriaLabel: string,\n\t\tdescription: string,\n\t\thighlights: IHighlight[],\n\t\taction: IAction,\n\t\t@IMessageService messageService: IMessageService,\n\t\t@ITelemetryService telemetryService: ITelemetryService\n\t) {\n\t\tsuper(keyLabel, keyAriaLabel, description, highlights, messageService, telemetryService);\n\n\t\tthis.action = action;\n\t}\n\n\tpublic run(mode: Mode, context: IContext): boolean {\n\t\tif (mode === Mode.OPEN) {\n\t\t\tthis.runAction(this.action);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport class CommandsHandler extends QuickOpenHandler {\n\n\tconstructor(\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IMessageService private messageService: IMessageService,\n\t\t@IKeybindingService private keybindingService: IKeybindingService,\n\t\t@IActionsService private actionsService: IActionsService\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected includeWorkbenchCommands(): boolean {\n\t\treturn true;\n\t}\n\n\tpublic getResults(searchValue: string): TPromise<QuickOpenModel> {\n\t\tsearchValue = searchValue.trim();\n\n\t\t// Workbench Actions (if prefix asks for all commands)\n\t\tlet workbenchEntries: CommandEntry[] = [];\n\t\tif (this.includeWorkbenchCommands()) {\n\t\t\tlet workbenchActions = (<IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions)).getWorkbenchActions();\n\t\t\tworkbenchEntries = this.actionDescriptorsToEntries(workbenchActions, searchValue);\n\t\t}\n\n\t\t// Editor Actions\n\t\tlet activeEditor = this.editorService.getActiveEditor();\n\t\tlet activeEditorControl = <any>(activeEditor ? activeEditor.getControl() : null);\n\n\t\tlet editorActions: IAction[] = [];\n\t\tif (activeEditorControl && types.isFunction(activeEditorControl.getActions)) {\n\t\t\teditorActions = activeEditorControl.getActions();\n\t\t}\n\n\t\tlet editorEntries = this.editorActionsToEntries(editorActions, searchValue);\n\n\t\t// Other Actions\n\t\tlet otherActions = this.actionsService.getActions();\n\t\tlet otherEntries = this.otherActionsToEntries(otherActions, searchValue);\n\n\t\t// Concat\n\t\tlet entries = [...workbenchEntries, ...editorEntries, ...otherEntries];\n\n\t\t// Remove duplicates\n\t\tentries = arrays.distinct(entries, (entry) => entry.getLabel() + entry.getGroupLabel());\n\n\t\t// Sort by name\n\t\tentries = entries.sort((elementA, elementB) => strings.localeCompare(elementA.getLabel().toLowerCase(), elementB.getLabel().toLowerCase()));\n\n\t\treturn TPromise.as(new QuickOpenModel(entries));\n\t}\n\n\tprivate actionDescriptorsToEntries(actionDescriptors: SyncActionDescriptor[], searchValue: string): CommandEntry[] {\n\t\tlet entries: CommandEntry[] = [];\n\t\tlet registry = (<IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions));\n\n\t\tfor (let i = 0; i < actionDescriptors.length; i++) {\n\t\t\tlet actionDescriptor = actionDescriptors[i];\n\t\t\tlet keys = this.keybindingService.lookupKeybindings(actionDescriptor.id);\n\t\t\tlet keyLabel = keys.map(k => this.keybindingService.getLabelFor(k));\n\t\t\tlet keyAriaLabel = keys.map(k => this.keybindingService.getAriaLabelFor(k));\n\n\t\t\tif (actionDescriptor.label) {\n\t\t\t\tlet label = actionDescriptor.label;\n\t\t\t\tlet category = registry.getCategory(actionDescriptor.id);\n\t\t\t\tif (category) {\n\t\t\t\t\tlabel = nls.localize('commandLabel', \"{0}: {1}\", category, label);\n\t\t\t\t}\n\n\t\t\t\tlet highlights = wordFilter(searchValue, label);\n\t\t\t\tif (highlights) {\n\t\t\t\t\tentries.push(this.instantiationService.createInstance(CommandEntry, keyLabel.length > 0 ? keyLabel.join(', ') : '', keyAriaLabel.length > 0 ? keyAriaLabel.join(', ') : '', label, highlights, actionDescriptor));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tprivate editorActionsToEntries(actions: IAction[], searchValue: string): EditorActionCommandEntry[] {\n\t\tlet entries: EditorActionCommandEntry[] = [];\n\n\t\tfor (let i = 0; i < actions.length; i++) {\n\t\t\tlet action = actions[i];\n\n\t\t\tlet editorAction = <EditorAction>action;\n\n\t\t\tif (!editorAction.isSupported()) {\n\t\t\t\tcontinue; // do not show actions that are not supported in this context\n\t\t\t}\n\n\t\t\tlet keys = this.keybindingService.lookupKeybindings(editorAction.id);\n\t\t\tlet keyLabel = keys.map(k => this.keybindingService.getLabelFor(k));\n\t\t\tlet keyAriaLabel = keys.map(k => this.keybindingService.getAriaLabelFor(k));\n\n\t\t\tif (action.label) {\n\t\t\t\tlet highlights = wordFilter(searchValue, action.label);\n\t\t\t\tif (highlights) {\n\t\t\t\t\tentries.push(this.instantiationService.createInstance(EditorActionCommandEntry, keyLabel.length > 0 ? keyLabel.join(', ') : '', keyAriaLabel.length > 0 ? keyAriaLabel.join(', ') : '', action.label, highlights, action));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tprivate otherActionsToEntries(actions: IAction[], searchValue: string): ActionCommandEntry[] {\n\t\tlet entries: ActionCommandEntry[] = [];\n\n\t\tfor (let action of actions) {\n\t\t\tlet keys = this.keybindingService.lookupKeybindings(action.id);\n\t\t\tlet keyLabel = keys.map(k => this.keybindingService.getLabelFor(k));\n\t\t\tlet keyAriaLabel = keys.map(k => this.keybindingService.getAriaLabelFor(k));\n\t\t\tlet highlights = wordFilter(searchValue, action.label);\n\t\t\tif (highlights) {\n\t\t\t\tentries.push(this.instantiationService.createInstance(ActionCommandEntry, keyLabel.join(', '), keyAriaLabel.join(', '), action.label, highlights, action));\n\t\t\t}\n\t\t}\n\n\t\treturn entries;\n\t}\n\n\tpublic getAutoFocus(searchValue: string): IAutoFocus {\n\t\treturn {\n\t\t\tautoFocusFirstEntry: true,\n\t\t\tautoFocusPrefixMatch: searchValue.trim()\n\t\t};\n\t}\n\n\tpublic getClass(): string {\n\t\treturn 'commands-handler';\n\t}\n\n\tpublic getEmptyLabel(searchString: string): string {\n\t\treturn nls.localize('noCommandsMatching', \"No commands matching\");\n\t}\n}\n\nexport class EditorCommandsHandler extends CommandsHandler {\n\n\tprotected includeWorkbenchCommands(): boolean {\n\t\treturn false;\n\t}\n}\n\nexport class QuickCommandsEditorAction extends EditorAction {\n\n\tpublic static ID = 'editor.action.quickCommand';\n\n\tconstructor(\n\t\tdescriptor: IEditorActionDescriptorData,\n\t\teditor: ICommonCodeEditor,\n\t\t@IQuickOpenService private quickOpenService: IQuickOpenService\n\t) {\n\t\tsuper(descriptor, editor, Behaviour.WidgetFocus | Behaviour.ShowInContextMenu);\n\n\t\tthis.label = nls.localize('QuickCommandsAction.label', \"Show Editor Commands\");\n\t}\n\n\tpublic getGroupId(): string {\n\t\treturn '4_tools/1_commands';\n\t}\n\n\tpublic run(): TPromise<any> {\n\n\t\t// Pass focus to editor first before running quick open action\n\t\tthis.editor.focus();\n\n\t\t// Show with prefix\n\t\tthis.quickOpenService.show('$');\n\n\t\treturn super.run();\n\t}\n}"]}