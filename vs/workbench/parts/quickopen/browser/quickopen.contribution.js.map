{"version":3,"sources":["vs/workbench/parts/quickopen/browser/quickopen.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/quickopen/browser/quickopen.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport env = require('vs/base/common/platform');\nimport nls = require('vs/nls');\nimport {QuickOpenHandlerDescriptor, IQuickOpenRegistry, Extensions as QuickOpenExtensions} from 'vs/workbench/browser/quickopen';\nimport {Registry} from 'vs/platform/platform';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {IWorkbenchActionRegistry, Extensions as ActionExtensions} from 'vs/workbench/common/actionRegistry';\nimport {KeyMod, KeyCode} from 'vs/base/common/keyCodes';\nimport {GotoSymbolAction, GOTO_SYMBOL_PREFIX, SCOPE_PREFIX} from 'vs/workbench/parts/quickopen/browser/gotoSymbolHandler';\nimport {ShowAllCommandsAction, ALL_COMMANDS_PREFIX} from 'vs/workbench/parts/quickopen/browser/commandsHandler';\nimport {GotoLineAction, GOTO_LINE_PREFIX} from 'vs/workbench/parts/quickopen/browser/gotoLineHandler';\nimport {HELP_PREFIX} from 'vs/workbench/parts/quickopen/browser/helpHandler';\nimport {GotoMarkerAction} from 'vs/workbench/parts/quickopen/browser/markersHandler';\n\n// Register Actions\nlet registry = <IWorkbenchActionRegistry>Registry.as(ActionExtensions.WorkbenchActions);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(GotoMarkerAction, GotoMarkerAction.Id, GotoMarkerAction.Label, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_M\n}));\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(ShowAllCommandsAction, ShowAllCommandsAction.ID, ShowAllCommandsAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_P,\n\tsecondary: [KeyCode.F1]\n}));\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(GotoLineAction, GotoLineAction.ID, GotoLineAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyCode.KEY_G,\n\tmac: { primary: KeyMod.WinCtrl | KeyCode.KEY_G }\n}));\n\nregistry.registerWorkbenchAction(new SyncActionDescriptor(GotoSymbolAction, GotoSymbolAction.ID, GotoSymbolAction.LABEL, {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_O\n}));\n\n// Register Quick Open Handler\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/quickopen/browser/markersHandler',\n\t\t'MarkersHandler',\n\t\tGotoMarkerAction.Prefix,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: GotoMarkerAction.Prefix,\n\t\t\t\tneedsEditor: false,\n\t\t\t\tdescription: env.isMacintosh ? nls.localize('desc.mac', \"Show Errors or Warnings\") : nls.localize('desc.win', \"Show Errors and Warnings\")\n\t\t\t},\n\t\t]\n\t)\n);\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/quickopen/browser/commandsHandler',\n\t\t'CommandsHandler',\n\t\tALL_COMMANDS_PREFIX,\n\t\tnls.localize('commandsHandlerDescriptionDefault', \"Show and Run Commands\")\n\t)\n);\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/quickopen/browser/gotoLineHandler',\n\t\t'GotoLineHandler',\n\t\tGOTO_LINE_PREFIX,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: GOTO_LINE_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: env.isMacintosh ? nls.localize('gotoLineDescriptionMac', \"Go to Line\") : nls.localize('gotoLineDescriptionWin', \"Go to Line\")\n\t\t\t},\n\t\t]\n\t)\n);\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/quickopen/browser/gotoSymbolHandler',\n\t\t'GotoSymbolHandler',\n\t\tGOTO_SYMBOL_PREFIX,\n\t\t[\n\t\t\t{\n\t\t\t\tprefix: GOTO_SYMBOL_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: env.isMacintosh ? nls.localize('gotoSymbolDescriptionNormalMac', \"Go to Symbol\") : nls.localize('gotoSymbolDescriptionNormalWin', \"Go to Symbol\")\n\t\t\t},\n\t\t\t{\n\t\t\t\tprefix: GOTO_SYMBOL_PREFIX + SCOPE_PREFIX,\n\t\t\t\tneedsEditor: true,\n\t\t\t\tdescription: nls.localize('gotoSymbolDescriptionScoped', \"Go to Symbol by Category\")\n\t\t\t}\n\t\t]\n\t)\n);\n\n(<IQuickOpenRegistry>Registry.as(QuickOpenExtensions.Quickopen)).registerQuickOpenHandler(\n\tnew QuickOpenHandlerDescriptor(\n\t\t'vs/workbench/parts/quickopen/browser/helpHandler',\n\t\t'HelpHandler',\n\t\tHELP_PREFIX,\n\t\tnls.localize('helpDescription', \"Show Help\")\n\t)\n);"]}