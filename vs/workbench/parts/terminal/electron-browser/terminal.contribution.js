/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require","exports","vs/workbench/browser/panel","vs/base/common/platform","vs/nls","vs/platform/configuration/common/configurationRegistry","vs/platform/keybinding/common/keybinding","vs/workbench/parts/terminal/electron-browser/terminal","vs/workbench/common/actionRegistry","vs/base/common/keyCodes","vs/workbench/parts/terminal/electron-browser/terminalActions","vs/platform/platform","vs/platform/actions/common/actions","vs/workbench/parts/terminal/electron-browser/terminalService","vs/platform/instantiation/common/extensions","vs/css!./media/terminal","vs/css!./media/xterm"],function(e,t,i,n,r,o,l,a,s,c,m,d,h,A,g){"use strict";var p=d.Registry.as(o.Extensions.Configuration);p.registerConfiguration({id:"terminal",order:100,title:r.localize("terminalIntegratedConfigurationTitle","Integrated Terminal"),type:"object",properties:{"terminal.integrated.shell.linux":{description:r.localize("terminal.integrated.shell.linux","The path of the shell that the terminal uses on Linux."),type:"string","default":a.TERMINAL_DEFAULT_SHELL_LINUX},"terminal.integrated.shellArgs.linux":{description:r.localize("terminal.integrated.shellArgs.linux","The command line arguments to use when on the Linux terminal."),type:"array",items:{type:"string"},"default":[]},"terminal.integrated.shell.osx":{description:r.localize("terminal.integrated.shell.osx","The path of the shell that the terminal uses on OS X."),type:"string","default":a.TERMINAL_DEFAULT_SHELL_OSX},"terminal.integrated.shellArgs.osx":{description:r.localize("terminal.integrated.shellArgs.osx","The command line arguments to use when on the OS X terminal."),type:"array",items:{type:"string"},"default":[]},"terminal.integrated.shell.windows":{description:r.localize("terminal.integrated.shell.windows","The path of the shell that the terminal uses on Windows. When using shells shipped with Windows (cmd, PowerShell or Bash on Ubuntu), prefer C:\\Windows\\sysnative over C:\\Windows\\System32 to use the 64-bit versions."),type:"string","default":a.TERMINAL_DEFAULT_SHELL_WINDOWS},"terminal.integrated.fontFamily":{description:r.localize("terminal.integrated.fontFamily","Controls the font family of the terminal, this defaults to editor.fontFamily's value."),type:"string"},"terminal.integrated.fontLigatures":{description:r.localize("terminal.integrated.fontLigatures","Controls whether font ligatures are enabled in the terminal."),type:"boolean","default":!1},"terminal.integrated.fontSize":{description:r.localize("terminal.integrated.fontSize","Controls the font size of the terminal, this defaults to editor.fontSize's value."),type:"number","default":0},"terminal.integrated.lineHeight":{description:r.localize("terminal.integrated.lineHeight","Controls the line height of the terminal, this number is multipled by the terminal font size to get the actual line-height in pixels."),type:"number","default":1.2},"terminal.integrated.cursorBlinking":{description:r.localize("terminal.integrated.cursorBlinking","Controls whether the terminal cursor blinks."),type:"boolean","default":!1},"terminal.integrated.setLocaleVariables":{description:r.localize("terminal.integrated.setLocaleVariables","Controls whether locale variables are set at startup of the terminal, this defaults to true on OS X, false on other platforms."),type:"boolean","default":n.isMacintosh}}}),g.registerSingleton(a.ITerminalService,A.TerminalService),d.Registry.as(i.Extensions.Panels).registerPanel(new i.PanelDescriptor("vs/workbench/parts/terminal/electron-browser/terminalPanel","TerminalPanel",a.TERMINAL_PANEL_ID,r.localize("terminal","Terminal"),"terminal"));var u=d.Registry.as(s.Extensions.WorkbenchActions);u.registerWorkbenchAction(new h.SyncActionDescriptor(m.KillTerminalAction,m.KillTerminalAction.ID,m.KillTerminalAction.LABEL),m.KillTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.CopyTerminalSelectionAction,m.CopyTerminalSelectionAction.ID,m.CopyTerminalSelectionAction.LABEL,{primary:c.KeyMod.CtrlCmd|c.KeyMod.Shift|c.KeyCode.KEY_C,mac:{primary:null}},l.KbExpr.and(l.KbExpr.has(a.KEYBINDING_CONTEXT_TERMINAL_FOCUS))),m.CopyTerminalSelectionAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.CreateNewTerminalAction,m.CreateNewTerminalAction.ID,m.CreateNewTerminalAction.LABEL,{primary:c.KeyMod.CtrlCmd|c.KeyMod.Shift|c.KeyCode.US_BACKTICK,mac:{primary:c.KeyMod.WinCtrl|c.KeyMod.Shift|c.KeyCode.US_BACKTICK}}),m.CreateNewTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.FocusTerminalAction,m.FocusTerminalAction.ID,m.FocusTerminalAction.LABEL),m.FocusTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.FocusNextTerminalAction,m.FocusNextTerminalAction.ID,m.FocusNextTerminalAction.LABEL),m.KillTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.FocusPreviousTerminalAction,m.FocusPreviousTerminalAction.ID,m.FocusPreviousTerminalAction.LABEL),m.KillTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.TerminalPasteAction,m.TerminalPasteAction.ID,m.TerminalPasteAction.LABEL,{primary:c.KeyMod.CtrlCmd|c.KeyMod.Shift|c.KeyCode.KEY_V,mac:{primary:null}},l.KbExpr.and(l.KbExpr.has(a.KEYBINDING_CONTEXT_TERMINAL_FOCUS))),m.CopyTerminalSelectionAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.RunSelectedTextInTerminalAction,m.RunSelectedTextInTerminalAction.ID,m.RunSelectedTextInTerminalAction.LABEL),m.RunSelectedTextInTerminalAction.LABEL),u.registerWorkbenchAction(new h.SyncActionDescriptor(m.ToggleTerminalAction,m.ToggleTerminalAction.ID,m.ToggleTerminalAction.LABEL,{primary:c.KeyMod.CtrlCmd|c.KeyCode.US_BACKTICK,mac:{primary:c.KeyMod.WinCtrl|c.KeyCode.US_BACKTICK}}),"View: "+m.ToggleTerminalAction.LABEL,r.localize("viewCategory","View"))});