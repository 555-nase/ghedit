{"version":3,"file":"vs/workbench/parts/files/electron-browser/electronFileTracker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/files/electron-browser/electronFileTracker.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;IAEhG,YAAY,CAAC;IAmCb,uJAAuJ;IACvJ;QAKC,qBACmC,cAAwC,EACnD,YAA2B,EAC5B,WAAyB,EACzB,WAAyB,EACrB,eAAiC,EAC1B,aAAsC,EACxC,oBAA2C,EAC1C,qBAA6C,EAClD,gBAAmC,EACtC,aAA6B;YATnB,mBAAc,GAAd,cAAc,CAA0B;YACnD,iBAAY,GAAZ,YAAY,CAAe;YAC5B,gBAAW,GAAX,WAAW,CAAc;YACzB,gBAAW,GAAX,WAAW,CAAc;YACrB,oBAAe,GAAf,eAAe,CAAkB;YAC1B,kBAAa,GAAb,aAAa,CAAyB;YACxC,yBAAoB,GAApB,oBAAoB,CAAuB;YAC1C,0BAAqB,GAArB,qBAAqB,CAAwB;YAClD,qBAAgB,GAAhB,gBAAgB,CAAmB;YACtC,kBAAa,GAAb,aAAa,CAAgB;YAErD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAExD,wCAAwC;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzC,sBAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,+BAA+B;YAC/G,CAAC;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B,CAAC;QAEO,uCAAiB,GAAzB;YAAA,iBAwCC;YAtCA,0BAA0B;YAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,cAAM,OAAA,KAAI,CAAC,sBAAsB,EAAE,EAA7B,CAA6B,CAAC,CAAC,CAAC;YACjI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,mBAAmB,EAAE,cAAM,OAAA,KAAI,CAAC,oBAAoB,EAAE,EAA3B,CAA2B,CAAC,CAAC,CAAC;YAC7H,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,iBAAa,CAAC,UAAU,EAAE,UAAC,CAAuB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAC;YAClI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,iBAAa,CAAC,UAAU,EAAE,UAAC,CAAuB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAvB,CAAuB,CAAC,CAAC,CAAC;YAClI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,iBAAa,CAAC,eAAe,EAAE,UAAC,CAAuB,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC,CAAC;YAC3I,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,iBAAa,CAAC,aAAa,EAAE,UAAC,CAAuB,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAC,CAAC;YAExI,qDAAqD;YACrD,sBAAG,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,KAAK,EAAE,OAAyB;gBAC3D,IAAI,MAAM,GAAqB,EAAE,CAAC;gBAClC,IAAI,QAAQ,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;gBAElD,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;oBACtC,MAAM,CAAC,IAAI,OAAX,MAAM,EAAS,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC3D,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBACxC,MAAM,CAAC,IAAI,OAAX,MAAM,EAAS,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;gBAC5D,CAAC;gBAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,OAAX,MAAM,EAAS,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;gBAC3D,CAAC;gBAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBACnB,IAAI,MAAM,GAAG,KAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,iCAAmB,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;oBAE7F,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC;oBAClD,MAAM,CAAC,OAAO,EAAE,CAAC;gBAClB,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,uBAAuB;YACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,cAAM,OAAA,KAAI,CAAC,oBAAoB,EAAE,EAA3B,CAA2B,CAAC,CAAC,CAAC;YAE9H,YAAY;YACZ,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC;QAEO,8BAAQ,GAAhB,UAAiB,KAAc,EAAE,KAAc;YAA/C,iBAiBC;YAhBA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;gBACjB,IAAI,KAAK,GAAmB;oBAC3B,QAAQ,EAAE,KAAK,GAAG,KAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,aAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,aAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;iBACnH,CAAC;gBAEF,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,OAAO,GAAG;wBACf,SAAS,EAAE;4BACV,eAAe,EAAE,CAAC,CAAC,UAAU;4BAC7B,WAAW,EAAE,CAAC,CAAC,YAAY;yBAC3B;qBACD,CAAC;gBACH,CAAC;gBAED,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,0CAAoB,GAA5B;YAAA,iBAwBC;YAvBA,IAAI,8BAA8B,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,GAAG,CAAC,UAAC,MAAM;gBACtF,MAAM,CAAC,0BAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,KAAK;gBACf,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;YAC/E,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,KAAK;gBACZ,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;YAEH,sDAAsD;YACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,OAAO,CAAC,UAAC,eAAe;gBACtE,EAAE,CAAC,CAAC,8BAA8B,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjE,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;oBACrD,OAAO,KAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,CAAC;gBAC3D,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,kDAAkD;YAClD,8BAA8B,CAAC,OAAO,CAAC,UAAC,eAAe;gBACtD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBACzD,KAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,aAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;oBAC9D,KAAI,CAAC,4BAA4B,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;gBAC3D,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAEO,0CAAoB,GAA5B;YACC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC;QACF,CAAC;QAEO,4CAAsB,GAA9B;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC;QACF,CAAC;QAEO,qCAAe,GAAvB,UAAwB,CAAuB;YAC9C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,KAAK,oBAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7G,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC,iEAAiE;YAC/F,CAAC;QACF,CAAC;QAEO,qCAAe,GAAvB,UAAwB,CAAuB;YAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC;QACF,CAAC;QAEO,yCAAmB,GAA3B,UAA4B,CAAuB;YAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC;QACF,CAAC;QAEO,wCAAkB,GAA1B,UAA2B,CAAuB;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC7B,CAAC;QACF,CAAC;QAEO,0CAAoB,GAA5B;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzC,IAAI,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;gBACnD,IAAI,CAAC,kBAAkB,GAAG,aAAa,CAAC;gBAExC,sBAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,+BAA+B;YACvH,CAAC;QACF,CAAC;QAEM,2BAAK,GAAZ;YACC,MAAM,CAAC,8BAA8B,CAAC;QACvC,CAAC;QAEM,6BAAO,GAAd;YACC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;YACvB,CAAC;YAED,0BAA0B;YAC1B,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC1C,CAAC;YACD,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QAzKA;uBAAC,yCAAwB;uBACxB,qBAAa;uBACb,0BAAY;uBACZ,oBAAY;uBACZ,wBAAgB;uBAChB,uCAAuB;uBACvB,qCAAqB;uBACrB,8CAAsB;uBACtB,6BAAiB;uBACjB,8BAAc;uBATU;QA0K3B,kBAAC;IAAD,CAAC,AAhLD,IAgLC;IAhLY,mBAAW,cAgLvB,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {IWorkbenchContribution} from 'vs/workbench/common/contributions';\nimport {LocalFileChangeEvent, EventType as FileEventType, ITextFileService, AutoSaveMode} from 'vs/workbench/parts/files/common/files';\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {OpenResourcesAction} from 'vs/workbench/parts/files/browser/fileActions';\nimport plat = require('vs/base/common/platform');\nimport {asFileEditorInput} from 'vs/workbench/common/editor';\nimport errors = require('vs/base/common/errors');\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport URI from 'vs/base/common/uri';\nimport {IWindowService} from 'vs/workbench/services/window/electron-browser/windowService';\nimport {EventType as WorkbenchEventType} from 'vs/workbench/common/events';\nimport {IUntitledEditorService} from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport {IPartService} from 'vs/workbench/services/part/common/partService';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {IResourceInput} from 'vs/platform/editor/common/editor';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {ILifecycleService} from 'vs/platform/lifecycle/common/lifecycle';\n\nimport {ipcRenderer as ipc} from 'electron';\n\nexport interface IPath {\n\tfilePath: string;\n\tlineNumber?: number;\n\tcolumnNumber?: number;\n}\n\nexport interface IOpenFileRequest {\n\tfilesToOpen?: IPath[];\n\tfilesToCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n}\n\n// This extension decorates the window as dirty when auto save is disabled and a file is dirty (mac only) and handles opening of files in the instance.\nexport class FileTracker implements IWorkbenchContribution {\n\tprivate activeOutOfWorkspaceWatchers: { [resource: string]: boolean; };\n\tprivate isDocumentedEdited: boolean;\n\tprivate toUnbind: { (): void; }[];\n\n\tconstructor(\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IEventService private eventService: IEventService,\n\t\t@IPartService private partService: IPartService,\n\t\t@IFileService private fileService: IFileService,\n\t\t@ITextFileService private textFileService: ITextFileService,\n\t\t@IWorkbenchEditorService private editorService: IWorkbenchEditorService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService,\n\t\t@IUntitledEditorService private untitledEditorService: IUntitledEditorService,\n\t\t@ILifecycleService private lifecycleService: ILifecycleService,\n\t\t@IWindowService private windowService: IWindowService\n\t) {\n\t\tthis.toUnbind = [];\n\t\tthis.isDocumentedEdited = false;\n\t\tthis.activeOutOfWorkspaceWatchers = Object.create(null);\n\n\t\t// Make sure to reset any previous state\n\t\tif (plat.platform === plat.Platform.Mac) {\n\t\t\tipc.send('vscode:setDocumentEdited', this.windowService.getWindowId(), false); // handled from browser process\n\t\t}\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Local text file changes\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.UNTITLED_FILE_DELETED, () => this.onUntitledDeletedEvent()));\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.UNTITLED_FILE_DIRTY, () => this.onUntitledDirtyEvent()));\n\t\tthis.toUnbind.push(this.eventService.addListener(FileEventType.FILE_DIRTY, (e: LocalFileChangeEvent) => this.onTextFileDirty(e)));\n\t\tthis.toUnbind.push(this.eventService.addListener(FileEventType.FILE_SAVED, (e: LocalFileChangeEvent) => this.onTextFileSaved(e)));\n\t\tthis.toUnbind.push(this.eventService.addListener(FileEventType.FILE_SAVE_ERROR, (e: LocalFileChangeEvent) => this.onTextFileSaveError(e)));\n\t\tthis.toUnbind.push(this.eventService.addListener(FileEventType.FILE_REVERTED, (e: LocalFileChangeEvent) => this.onTextFileReverted(e)));\n\n\t\t// Support openFiles event for existing and new files\n\t\tipc.on('vscode:openFiles', (event, request: IOpenFileRequest) => {\n\t\t\tlet inputs: IResourceInput[] = [];\n\t\t\tlet diffMode = (request.filesToDiff.length === 2);\n\n\t\t\tif (!diffMode && request.filesToOpen) {\n\t\t\t\tinputs.push(...this.toInputs(request.filesToOpen, false));\n\t\t\t}\n\n\t\t\tif (!diffMode && request.filesToCreate) {\n\t\t\t\tinputs.push(...this.toInputs(request.filesToCreate, true));\n\t\t\t}\n\n\t\t\tif (diffMode) {\n\t\t\t\tinputs.push(...this.toInputs(request.filesToDiff, false));\n\t\t\t}\n\n\t\t\tif (inputs.length) {\n\t\t\t\tlet action = this.instantiationService.createInstance(OpenResourcesAction, inputs, diffMode);\n\n\t\t\t\taction.run().done(null, errors.onUnexpectedError);\n\t\t\t\taction.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Editor input changes\n\t\tthis.toUnbind.push(this.eventService.addListener(WorkbenchEventType.EDITOR_INPUT_CHANGED, () => this.onEditorInputChanged()));\n\n\t\t// Lifecycle\n\t\tthis.lifecycleService.onShutdown(this.dispose, this);\n\t}\n\n\tprivate toInputs(paths: IPath[], isNew: boolean): IResourceInput[] {\n\t\treturn paths.map(p => {\n\t\t\tlet input = <IResourceInput>{\n\t\t\t\tresource: isNew ? this.untitledEditorService.createOrGet(URI.file(p.filePath)).getResource() : URI.file(p.filePath)\n\t\t\t};\n\n\t\t\tif (!isNew && p.lineNumber) {\n\t\t\t\tinput.options = {\n\t\t\t\t\tselection: {\n\t\t\t\t\t\tstartLineNumber: p.lineNumber,\n\t\t\t\t\t\tstartColumn: p.columnNumber\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn input;\n\t\t});\n\t}\n\n\tprivate onEditorInputChanged(): void {\n\t\tlet visibleOutOfWorkspaceResources = this.editorService.getVisibleEditors().map((editor) => {\n\t\t\treturn asFileEditorInput(editor.input, true);\n\t\t}).filter((input) => {\n\t\t\treturn !!input && !this.contextService.isInsideWorkspace(input.getResource());\n\t\t}).map((input) => {\n\t\t\treturn input.getResource().toString();\n\t\t});\n\n\t\t// Handle no longer visible out of workspace resources\n\t\tObject.keys(this.activeOutOfWorkspaceWatchers).forEach((watchedResource) => {\n\t\t\tif (visibleOutOfWorkspaceResources.indexOf(watchedResource) < 0) {\n\t\t\t\tthis.fileService.unwatchFileChanges(watchedResource);\n\t\t\t\tdelete this.activeOutOfWorkspaceWatchers[watchedResource];\n\t\t\t}\n\t\t});\n\n\t\t// Handle newly visible out of workspace resources\n\t\tvisibleOutOfWorkspaceResources.forEach((resourceToWatch) => {\n\t\t\tif (!this.activeOutOfWorkspaceWatchers[resourceToWatch]) {\n\t\t\t\tthis.fileService.watchFileChanges(URI.parse(resourceToWatch));\n\t\t\t\tthis.activeOutOfWorkspaceWatchers[resourceToWatch] = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onUntitledDirtyEvent(): void {\n\t\tif (!this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited();\n\t\t}\n\t}\n\n\tprivate onUntitledDeletedEvent(): void {\n\t\tif (this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited();\n\t\t}\n\t}\n\n\tprivate onTextFileDirty(e: LocalFileChangeEvent): void {\n\t\tif ((this.textFileService.getAutoSaveMode() !== AutoSaveMode.AFTER_SHORT_DELAY) && !this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited(); // no indication needed when auto save is enabled for short delay\n\t\t}\n\t}\n\n\tprivate onTextFileSaved(e: LocalFileChangeEvent): void {\n\t\tif (this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited();\n\t\t}\n\t}\n\n\tprivate onTextFileSaveError(e: LocalFileChangeEvent): void {\n\t\tif (!this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited();\n\t\t}\n\t}\n\n\tprivate onTextFileReverted(e: LocalFileChangeEvent): void {\n\t\tif (this.isDocumentedEdited) {\n\t\t\tthis.updateDocumentEdited();\n\t\t}\n\t}\n\n\tprivate updateDocumentEdited(): void {\n\t\tif (plat.platform === plat.Platform.Mac) {\n\t\t\tlet hasDirtyFiles = this.textFileService.isDirty();\n\t\t\tthis.isDocumentedEdited = hasDirtyFiles;\n\n\t\t\tipc.send('vscode:setDocumentEdited', this.windowService.getWindowId(), hasDirtyFiles); // handled from browser process\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn 'vs.files.electronFileTracker';\n\t}\n\n\tpublic dispose(): void {\n\t\twhile (this.toUnbind.length) {\n\t\t\tthis.toUnbind.pop()();\n\t\t}\n\n\t\t// Dispose watchers if any\n\t\tfor (let key in this.activeOutOfWorkspaceWatchers) {\n\t\t\tthis.fileService.unwatchFileChanges(key);\n\t\t}\n\t\tthis.activeOutOfWorkspaceWatchers = Object.create(null);\n\t}\n}"]}