{"version":3,"file":"vs/workbench/parts/files/browser/explorerViewlet.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/files/browser/explorerViewlet.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport 'vs/css!./media/explorerviewlet';\nimport {IDisposable} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Dimension, Builder} from 'vs/base/browser/builder';\nimport {Scope} from 'vs/workbench/common/memento';\nimport {VIEWLET_ID} from 'vs/workbench/parts/files/common/files';\nimport {CollapsibleViewletView, IViewletView, Viewlet} from 'vs/workbench/browser/viewlet';\nimport {IActionRunner} from 'vs/base/common/actions';\nimport {SplitView} from 'vs/base/browser/ui/splitview/splitview';\nimport {ActionRunner, FileViewletState} from 'vs/workbench/parts/files/browser/views/explorerViewer';\nimport {ExplorerView} from 'vs/workbench/parts/files/browser/views/explorerView';\nimport {EmptyView} from 'vs/workbench/parts/files/browser/views/emptyView';\nimport {WorkingFilesView} from 'vs/workbench/parts/files/browser/views/workingFilesView';\nimport {IStorageService} from 'vs/platform/storage/common/storage';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {StructuredSelection} from 'vs/platform/selection/common/selection';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\n\nexport class ExplorerViewlet extends Viewlet {\n\tprivate viewletContainer: Builder;\n\tprivate splitView: SplitView;\n\tprivate views: IViewletView[];\n\n\tprivate explorerView: ExplorerView;\n\tprivate workingFilesView: WorkingFilesView;\n\tprivate lastFocusedView: ExplorerView | WorkingFilesView | EmptyView;\n\tprivate focusListener: IDisposable;\n\n\tprivate viewletSettings: any;\n\tprivate viewletState: FileViewletState;\n\n\tconstructor(\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IStorageService private storageService: IStorageService,\n\t\t@IInstantiationService private instantiationService: IInstantiationService\n\t) {\n\t\tsuper(VIEWLET_ID, telemetryService);\n\n\t\tthis.views = [];\n\t\tthis.viewletState = new FileViewletState();\n\n\t\tthis.viewletSettings = this.getMemento(storageService, Scope.WORKSPACE);\n\t}\n\n\tpublic create(parent: Builder): TPromise<void> {\n\t\tsuper.create(parent);\n\n\t\tthis.viewletContainer = parent.div().addClass('explorer-viewlet');\n\n\t\tthis.splitView = new SplitView(this.viewletContainer.getHTMLElement());\n\n\t\t// Working files view\n\t\tthis.addWorkingFilesView();\n\n\t\t// Explorer view\n\t\tthis.addExplorerView();\n\n\t\t// Track focus\n\t\tthis.focusListener = this.splitView.onFocus((view: ExplorerView | WorkingFilesView | EmptyView) => {\n\t\t\tthis.lastFocusedView = view;\n\t\t});\n\n\t\treturn TPromise.join(this.views.map((view) => view.create())).then(() => void 0);\n\t}\n\n\tprivate addWorkingFilesView(): void {\n\t\tthis.workingFilesView = this.instantiationService.createInstance(WorkingFilesView, this.getActionRunner(), this.viewletSettings);\n\t\tthis.splitView.addView(this.workingFilesView);\n\n\t\tthis.views.push(this.workingFilesView);\n\t}\n\n\tprivate addExplorerView(): void {\n\t\tlet explorerView: CollapsibleViewletView | EmptyView;\n\n\t\t// With a Workspace\n\t\tif (this.contextService.getWorkspace()) {\n\t\t\tthis.explorerView = explorerView = this.instantiationService.createInstance(ExplorerView, this.viewletState, this.getActionRunner(), this.viewletSettings);\n\t\t}\n\n\t\t// No workspace\n\t\telse {\n\t\t\texplorerView = this.instantiationService.createInstance(EmptyView);\n\t\t}\n\n\t\tthis.splitView.addView(explorerView);\n\t\tthis.views.push(explorerView);\n\t}\n\n\tpublic getExplorerView(): ExplorerView {\n\t\treturn this.explorerView;\n\t}\n\n\tpublic getWorkingFilesView(): WorkingFilesView {\n\t\treturn this.workingFilesView;\n\t}\n\n\tpublic setVisible(visible: boolean): TPromise<void> {\n\t\treturn super.setVisible(visible).then(() => {\n\t\t\treturn TPromise.join(this.views.map((view) => view.setVisible(visible))).then(() => void 0);\n\t\t});\n\t}\n\n\tpublic focus(): void {\n\t\tsuper.focus();\n\n\t\tif (this.lastFocusedView && this.lastFocusedView.isExpanded() && this.hasSelectionOrFocus(this.lastFocusedView)) {\n\t\t\tthis.lastFocusedView.focusBody();\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.hasSelectionOrFocus(this.workingFilesView)) {\n\t\t\treturn this.workingFilesView.focusBody();\n\t\t}\n\n\t\tif (this.hasSelectionOrFocus(this.explorerView)) {\n\t\t\treturn this.explorerView.focusBody();\n\t\t}\n\n\t\tif (this.workingFilesView && this.workingFilesView.isExpanded()) {\n\t\t\treturn this.workingFilesView.focusBody();\n\t\t}\n\n\t\tif (this.explorerView && this.explorerView.isExpanded()) {\n\t\t\treturn this.explorerView.focusBody();\n\t\t}\n\n\t\treturn this.workingFilesView.focus();\n\t}\n\n\tprivate hasSelectionOrFocus(view: ExplorerView | WorkingFilesView | EmptyView): boolean {\n\t\tif (!view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!view.isExpanded()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (view instanceof ExplorerView || view instanceof WorkingFilesView) {\n\t\t\tconst viewer = view.getViewer();\n\t\t\tif (!viewer) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !!viewer.getFocus() || (viewer.getSelection() && viewer.getSelection().length > 0);\n\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic layout(dimension: Dimension): void {\n\t\tthis.splitView.layout(dimension.height);\n\t}\n\n\tpublic getSelection(): StructuredSelection {\n\t\treturn this.explorerView ? this.explorerView.getSelection() : this.workingFilesView.getSelection();\n\t}\n\n\tpublic getActionRunner(): IActionRunner {\n\t\tif (!this.actionRunner) {\n\t\t\tthis.actionRunner = new ActionRunner(this.viewletState);\n\t\t}\n\n\t\treturn this.actionRunner;\n\t}\n\n\tpublic getOptimalWidth(): number {\n\t\tlet additionalMargin = 16;\n\t\tlet workingFilesViewWidth = this.getWorkingFilesView().getOptimalWidth();\n\t\tlet explorerView = this.getExplorerView();\n\t\tlet explorerViewWidth = explorerView ? explorerView.getOptimalWidth() : 0;\n\t\tlet optimalWidth = Math.max(workingFilesViewWidth, explorerViewWidth);\n\t\treturn optimalWidth + additionalMargin;\n\t}\n\n\tpublic shutdown(): void {\n\t\tthis.views.forEach((view) => view.shutdown());\n\n\t\tsuper.shutdown();\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.splitView) {\n\t\t\tthis.splitView.dispose();\n\t\t\tthis.splitView = null;\n\t\t}\n\n\t\tif (this.focusListener) {\n\t\t\tthis.focusListener.dispose();\n\t\t\tthis.focusListener = null;\n\t\t}\n\t}\n}"]}