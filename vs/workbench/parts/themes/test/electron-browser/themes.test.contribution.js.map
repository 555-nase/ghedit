{"version":3,"file":"vs/workbench/parts/themes/test/electron-browser/themes.test.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/themes/test/electron-browser/themes.test.contribution.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as nls from 'vs/nls';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport {SyncActionDescriptor} from 'vs/platform/actions/common/actions';\nimport {Action} from 'vs/base/common/actions';\nimport WorkbenchContributions = require('vs/workbench/common/contributions');\nimport {IWorkspace} from 'vs/platform/workspace/common/workspace';\nimport paths = require('vs/base/common/paths');\nimport URI from 'vs/base/common/uri';\n\nimport Platform = require('vs/platform/platform');\nimport WorkbenchActionRegistry = require('vs/workbench/common/actionRegistry');\nimport {IFileStat} from 'vs/platform/files/common/files';\nimport {TextModelWithTokens} from 'vs/editor/common/model/textModelWithTokens';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport pfs = require('vs/base/node/pfs');\nimport {KeybindingsRegistry} from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport {IInstantiationService, ServicesAccessor} from 'vs/platform/instantiation/common/instantiation';\nimport {IThemeService} from 'vs/workbench/services/themes/common/themeService';\nimport {IWorkbenchEditorService} from 'vs/workbench/services/editor/common/editorService';\nimport {KeyCode, KeyMod} from 'vs/base/common/keyCodes';\nimport {asFileEditorInput} from 'vs/workbench/common/editor';\n\n\ninterface Data {\n\tc: string; // content\n\tt: string; // token\n\tr: { [theme:string]:string}\n}\n\nclass Snapper {\n\n\tconstructor(\n\t\t@IModeService private modeService: IModeService,\n\t\t@IThemeService private themeService: IThemeService\n\t) {\n\t}\n\n\tprivate getTestNode(themeId: string) : Element {\n\t\tlet editorNode = document.createElement('div');\n\t\teditorNode.className = 'monaco-editor ' + themeId;\n\t\tdocument.body.appendChild(editorNode);\n\n\t\tlet element = document.createElement('span');\n\n\t\teditorNode.appendChild(element);\n\n\t\treturn element;\n\t}\n\n\tprivate normalizeType(type: string) : string {\n\t\treturn type.split('.').sort().join('.');\n\t}\n\n\tprivate getStyle(testNode: Element, scope: string) : string {\n\n\t\ttestNode.className = 'token ' + scope.replace(/\\./g, ' ');\n\n\t\tlet cssStyles = window.getComputedStyle(testNode);\n\t\tif (cssStyles) {\n\t\t\treturn cssStyles.color;\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate getMatchedCSSRule(testNode: Element, scope: string) : string {\n\n\t\ttestNode.className = 'token ' + scope.replace(/\\./g, ' ');\n\n\t\tlet rulesList = window.getMatchedCSSRules(testNode);\n\n\t\tif (rulesList) {\n\t\t\tfor (let i = rulesList.length - 1; i >= 0 ; i--) {\n\t\t\t\tlet selectorText = <string> rulesList.item(i)['selectorText'];\n\t\t\t\tif (selectorText && selectorText.match(/\\.monaco-editor\\..+token/) ) {\n\t\t\t\t\treturn selectorText.substr(14);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('no match ' + scope);\n\t\t}\n\n\t\treturn '';\n\t}\n\n\n\tpublic appendThemeInformation(data: Data[]) : TPromise<Data[]> {\n\t\tlet currentTheme = this.themeService.getTheme();\n\n\t\tlet getThemeName = (id: string) => {\n\t\t\tlet part = 'vscode-theme-defaults-themes-';\n\t\t\tlet startIdx = id.indexOf(part);\n\t\t\tif (startIdx !== -1) {\n\t\t\t\treturn id.substring(startIdx + part.length, id.length - 5);\n\t\t\t}\n\t\t\treturn void 0;\n\t\t}\n\n\t\treturn this.themeService.getThemes().then(themeDatas => {\n\t\t\tlet defaultThemes = themeDatas.filter(themeData => !!getThemeName(themeData.id));\n\t\t\treturn TPromise.join(defaultThemes.map(defaultTheme => {\n\t\t\t\tlet themeId = defaultTheme.id;\n\t\t\t\treturn this.themeService.setTheme(themeId, false).then(success => {\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlet testNode = this.getTestNode(themeId);\n\t\t\t\t\t\tlet themeName = getThemeName(themeId);\n\t\t\t\t\t\tdata.forEach(entry => {\n\t\t\t\t\t\t\tentry.r[themeName] = this.getMatchedCSSRule(testNode, entry.t) + ' ' + this.getStyle(testNode, entry.t)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}));\n\t\t}).then(_ => {\n\t\t\treturn this.themeService.setTheme(currentTheme, false).then(_ => {\n\t\t\t\treturn data;\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic captureSyntaxTokens(fileName: string, content: string) : TPromise<Data[]> {\n\t\treturn this.modeService.getOrCreateModeByFilenameOrFirstLine(fileName).then(mode => {\n\t\t\tlet result : Data[] = [];\n\t\t\tlet model = new TextModelWithTokens([], TextModel.toRawText(content, TextModel.DEFAULT_CREATION_OPTIONS), false, mode);\n\t\t\tmodel.tokenIterator({lineNumber: 1, column: 1}, iterator => {\n\t\t\t\twhile (iterator.hasNext()) {\n\t\t\t\t\tlet tokenInfo = iterator.next();\n\t\t\t\t\tlet lineNumber = tokenInfo.lineNumber;\n\t\t\t\t\tlet content = model.getValueInRange({ startLineNumber: lineNumber, endLineNumber: lineNumber, startColumn: tokenInfo.startColumn, endColumn: tokenInfo.endColumn});\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tc: content,\n\t\t\t\t\t\tt: this.normalizeType(tokenInfo.token.type),\n\t\t\t\t\t\tr: {}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn this.appendThemeInformation(result);\n\t\t});\n\t}\n}\n\nKeybindingsRegistry.registerCommandDesc({\n\tid: '_workbench.captureSyntaxTokens',\n\tweight: KeybindingsRegistry.WEIGHT.workbenchContrib(0),\n\thandler(accessor: ServicesAccessor, args: [URI]) {\n\n\t\tlet process = (resource: URI) => {\n\t\t\tlet filePath = resource.fsPath;\n\t\t\tlet fileName = paths.basename(filePath);\n\t\t\tlet snapper = accessor.get(IInstantiationService).createInstance(Snapper);\n\n\t\t\treturn pfs.readFile(filePath).then(content => {\n\t\t\t\treturn snapper.captureSyntaxTokens(fileName, content.toString());\n\t\t\t});\n\t\t}\n\n\n\t\tlet [resource] = args;\n\t\tif (!resource) {\n\t\t\tlet editorService = accessor.get(IWorkbenchEditorService);\n\t\t\tlet fileEditorInput = asFileEditorInput(editorService.getActiveEditorInput());\n\t\t\tif (fileEditorInput) {\n\t\t\t\tprocess(fileEditorInput.getResource()).then(result => {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log('No file editor active');\n\t\t\t}\n\t\t} else {\n\t\t\treturn process(resource);\n\t\t}\n\n\t},\n\tcontext: undefined,\n\tprimary: undefined\n});\n\n"]}