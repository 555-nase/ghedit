{"version":3,"file":"vs/workbench/parts/telemetry/test/node/appInsightsTelemetryAppender.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/telemetry/test/node/appInsightsTelemetryAppender.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {IAIAdapter} from 'vs/base/node/aiAdapter';\nimport { NodeAppInsightsTelemetryAppender } from 'vs/workbench/parts/telemetry/node/nodeAppInsightsTelemetryAppender';\n\ninterface IAppInsightsEvent {\n\teventName: string;\n\tdata: any;\n}\n\nclass AIAdapterMock implements IAIAdapter {\n\n\tpublic events: IAppInsightsEvent[]=[];\n\tpublic IsTrackingPageView: boolean = false;\n\tpublic exceptions: any[] =[];\n\n\tconstructor(private prefix: string, private eventPrefix: string, client?: any) {\n\t}\n\n\tpublic log(eventName: string, data?: any): void {\n\t\tthis.events.push({\n\t\t\teventName: this.prefix+'/'+eventName,\n\t\t\tdata: data\n\t\t});\n\t}\n\n\tpublic logException(exception: any): void {\n\t\tthis.exceptions.push(exception);\n\t}\n\n\tpublic dispose(): void {\n\t}\n}\n\nclass ContextServiceMock {\n\n\tconstructor(private key?: string, private asimovKey?: string) {}\n\n\tgetConfiguration(): any {\n\t\treturn {\n\t\t\tenv: {\n\t\t\t\taiConfig: {\n\t\t\t\t\tkey: this.key,\n\t\t\t\t\tasimovKey: this.asimovKey\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nsuite('Telemetry - AppInsightsTelemetryAppender', () => {\n\tvar appInsightsMock: AIAdapterMock;\n\tvar appender: NodeAppInsightsTelemetryAppender;\n\n\tsetup(() => {\n\t\tappInsightsMock = new AIAdapterMock(NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX);\n\t\tappender = new NodeAppInsightsTelemetryAppender(null,<any> new ContextServiceMock('123'), appInsightsMock);\n\t});\n\n\tteardown(() => {\n\t\tappender.dispose();\n\t});\n\n\ttest('Simple event', () => {\n\t\tappender.log('testEvent');\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\t\tassert.equal(appInsightsMock.events[0].eventName, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX+'/testEvent');\n\t});\n\n\ttest('Event with data', () => {\n\t\tappender.log('testEvent', {\n\t\t\ttitle: 'some title',\n\t\t\twidth: 100,\n\t\t\theight: 200\n\t\t});\n\n\t\tassert.equal(appInsightsMock.events.length, 1);\n\t\tassert.equal(appInsightsMock.events[0].eventName, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX+'/testEvent');\n\n\t\tassert.equal(appInsightsMock.events[0].data['title'], 'some title');\n\t\tassert.equal(appInsightsMock.events[0].data['width'], 100);\n\t\tassert.equal(appInsightsMock.events[0].data['height'], 200);\n\n\t});\n\n\ttest('Test asimov', () => {\n\t\tappender = new NodeAppInsightsTelemetryAppender(null, <any> new ContextServiceMock('123', 'AIF-123'), appInsightsMock);\n\n\t\tappender.log('testEvent');\n\n\t\tassert.equal(appInsightsMock.events.length, 2);\n\t\tassert.equal(appInsightsMock.events[0].eventName, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX+'/testEvent');\n\n\t\t// test vortex\n\t\tassert.equal(appInsightsMock.events[1].eventName, NodeAppInsightsTelemetryAppender.EVENT_NAME_PREFIX+'/testEvent');\n\t});\n});"]}