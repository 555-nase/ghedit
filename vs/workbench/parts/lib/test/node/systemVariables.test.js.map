{"version":3,"file":"vs/workbench/parts/lib/test/node/systemVariables.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/lib/test/node/systemVariables.test.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAQb,KAAK,CAAC,uBAAuB,EAAE;QAC9B,IAAI,CAAC,iCAAiC,EAAE;YACvC,IAAI,eAAe,GAAoB,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,aAAG,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;YACtH,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,qCAAqC,CAAC,CAAC;YAChH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,0BAA0B,CAAC,EAAE,mCAAmC,CAAC,CAAC;YAC9G,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACxC,IAAI,eAAe,GAAoB,IAAI,iCAAe,CAAC,IAAI,EAAE,IAAI,EAAE,aAAG,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;YACtH,EAAE,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,2DAA2D,CAAC,CAAC;YACjJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,uDAAuD,CAAC,CAAC;YAC7I,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport URI from 'vs/base/common/uri';\nimport * as Platform from 'vs/base/common/platform';\n\nimport { SystemVariables } from 'vs/workbench/parts/lib/node/systemVariables';\n\nsuite('SystemVariables tests', () => {\n\ttest('SystemVariables: substitute one', () => {\n\t\tlet systemVariables: SystemVariables = new SystemVariables(null, null, URI.parse('file:///VSCode/workspaceLocation'));\n\t\tif (Platform.isWindows) {\n\t\t\tassert.strictEqual(systemVariables.resolve('abc ${workspaceRoot} xyz'), 'abc \\\\VSCode\\\\workspaceLocation xyz');\n\t\t} else {\n\t\t\tassert.strictEqual(systemVariables.resolve('abc ${workspaceRoot} xyz'), 'abc /VSCode/workspaceLocation xyz');\n\t\t}\n\t});\n\n\ttest('SystemVariables: substitute many', () => {\n\t\tlet systemVariables: SystemVariables = new SystemVariables(null, null, URI.parse('file:///VSCode/workspaceLocation'));\n\t\tif (Platform.isWindows) {\n\t\t\tassert.strictEqual(systemVariables.resolve('${workspaceRoot} - ${workspaceRoot}'), '\\\\VSCode\\\\workspaceLocation - \\\\VSCode\\\\workspaceLocation');\n\t\t} else {\n\t\t\tassert.strictEqual(systemVariables.resolve('${workspaceRoot} - ${workspaceRoot}'), '/VSCode/workspaceLocation - /VSCode/workspaceLocation');\n\t\t}\n\t});\n});"]}