import 'vs/css!./../browser/media/repl';
import { TPromise } from 'vs/base/common/winjs.base';
import actions = require('vs/base/common/actions');
import builder = require('vs/base/browser/builder');
import { IEventService } from 'vs/platform/event/common/event';
import debug = require('vs/workbench/parts/debug/common/debug');
import { Panel } from 'vs/workbench/browser/panel';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IContextViewService, IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IWorkspaceContextService } from 'vs/workbench/services/workspace/common/contextService';
import { IStorageService } from 'vs/platform/storage/common/storage';
export declare class Repl extends Panel {
    private debugService;
    private contextMenuService;
    private contextService;
    private instantiationService;
    private contextViewService;
    private storageService;
    private eventService;
    private static HALF_WIDTH_TYPICAL;
    private static HISTORY;
    private static REFRESH_DELAY;
    private toDispose;
    private tree;
    private renderer;
    private characterWidthSurveyor;
    private treeContainer;
    private replInput;
    private refreshTimeoutHandle;
    private actions;
    constructor(debugService: debug.IDebugService, contextMenuService: IContextMenuService, contextService: IWorkspaceContextService, telemetryService: ITelemetryService, instantiationService: IInstantiationService, contextViewService: IContextViewService, storageService: IStorageService, eventService: IEventService);
    private registerListeners();
    private onReplElementsUpdated();
    create(parent: builder.Builder): TPromise<void>;
    layout(dimension: builder.Dimension): void;
    focus(): void;
    reveal(element: debug.ITreeElement): TPromise<void>;
    getActions(): actions.IAction[];
    shutdown(): void;
    dispose(): void;
}
