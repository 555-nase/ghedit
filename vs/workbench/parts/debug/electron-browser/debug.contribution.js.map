{"version":3,"sources":["vs/workbench/parts/debug/electron-browser/debug.contribution.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/electron-browser/debug.contribution.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport 'vs/css!../browser/media/debug.contribution';\nimport 'vs/css!../browser/media/debugHover';\nimport nls = require('vs/nls');\nimport { KeyMod, KeyCode } from 'vs/base/common/keyCodes';\nimport editorcommon = require('vs/editor/common/editorCommon');\nimport { CommonEditorRegistry, ContextKey, EditorActionDescriptor } from 'vs/editor/common/editorCommonExtensions';\nimport { SyncActionDescriptor } from 'vs/platform/actions/common/actions';\nimport platform = require('vs/platform/platform');\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { KeybindingsRegistry } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { KbExpr, IKeybindings } from 'vs/platform/keybinding/common/keybindingService';\nimport { EditorBrowserRegistry } from 'vs/editor/browser/editorBrowserExtensions';\nimport wbaregistry = require('vs/workbench/common/actionRegistry');\nimport viewlet = require('vs/workbench/browser/viewlet');\nimport panel = require('vs/workbench/browser/panel');\nimport { VariablesView, WatchExpressionsView, CallStackView, BreakpointsView } from 'vs/workbench/parts/debug/browser/debugViews';\nimport wbext = require('vs/workbench/common/contributions');\nimport * as debug from 'vs/workbench/parts/debug/common/debug';\nimport { DebugEditorModelManager } from 'vs/workbench/parts/debug/browser/debugEditorModelManager';\nimport dbgactions = require('vs/workbench/parts/debug/electron-browser/debugActions');\nimport debugwidget = require('vs/workbench/parts/debug/browser/debugActionsWidget');\nimport service = require('vs/workbench/parts/debug/electron-browser/debugService');\nimport { DebugEditorContribution } from 'vs/workbench/parts/debug/browser/debugEditorContribution';\nimport { IViewletService } from 'vs/workbench/services/viewlet/common/viewletService';\nimport { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nimport IDebugService = debug.IDebugService;\n\nclass OpenDebugViewletAction extends viewlet.ToggleViewletAction {\n\tpublic static ID = debug.VIEWLET_ID;\n\tpublic static LABEL = nls.localize('toggleDebugViewlet', \"Show Debug\");\n\n\tconstructor(\n\t\tid: string,\n\t\tlabel: string,\n\t\t@IViewletService viewletService: IViewletService,\n\t\t@IWorkbenchEditorService editorService: IWorkbenchEditorService\n\t) {\n\t\tsuper(id, label, debug.VIEWLET_ID, viewletService, editorService);\n\t}\n}\n\nEditorBrowserRegistry.registerEditorContribution(DebugEditorContribution);\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.ToggleBreakpointAction, dbgactions.ToggleBreakpointAction.ID, nls.localize('toggleBreakpointAction', \"Debug: Toggle Breakpoint\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tprimary: KeyCode.F9\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.ShowDebugHoverAction, dbgactions.ShowDebugHoverAction.ID, nls.localize('showDebugHover', \"Debug: Show Hover\"), {\n\tcontext: ContextKey.EditorTextFocus,\n\tkbExpr: KbExpr.and(KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE), KbExpr.has(editorcommon.KEYBINDING_CONTEXT_EDITOR_TEXT_FOCUS)),\n\tprimary: KeyMod.chord(KeyMod.CtrlCmd | KeyCode.KEY_K, KeyMod.CtrlCmd | KeyCode.KEY_I)\n}));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.EditorConditionalBreakpointAction, dbgactions.EditorConditionalBreakpointAction.ID, nls.localize('conditionalBreakpointEditorAction', \"Debug: Conditional Breakpoint\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.SelectionToReplAction, dbgactions.SelectionToReplAction.ID, nls.localize('debugEvaluate', \"Debug: Evaluate\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.SelectionToWatchExpressionsAction, dbgactions.SelectionToWatchExpressionsAction.ID, nls.localize('addToWatch', \"Debug: Add to Watch\")));\nCommonEditorRegistry.registerEditorAction(new EditorActionDescriptor(dbgactions.RunToCursorAction, dbgactions.RunToCursorAction.ID, nls.localize('runToCursor', \"Debug: Run to Cursor\")));\n\n// register viewlet\n(<viewlet.ViewletRegistry>platform.Registry.as(viewlet.Extensions.Viewlets)).registerViewlet(new viewlet.ViewletDescriptor(\n\t'vs/workbench/parts/debug/browser/debugViewlet',\n\t'DebugViewlet',\n\tdebug.VIEWLET_ID,\n\tnls.localize('debug', \"Debug\"),\n\t'debug',\n\t40\n));\n\nconst openViewletKb: IKeybindings = {\n\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_D\n};\n\n// register repl panel\n(<panel.PanelRegistry>platform.Registry.as(panel.Extensions.Panels)).registerPanel(new panel.PanelDescriptor(\n\t'vs/workbench/parts/debug/browser/repl',\n\t'Repl',\n\tdebug.REPL_ID,\n\tnls.localize('debugConsole', \"Debug Console\"),\n\t'repl'\n));\n(<panel.PanelRegistry>platform.Registry.as(panel.Extensions.Panels)).setDefaultPanelId(debug.REPL_ID);\n\n// Register default debug views\ndebug.DebugViewRegistry.registerDebugView(VariablesView, 10);\ndebug.DebugViewRegistry.registerDebugView(WatchExpressionsView, 20);\ndebug.DebugViewRegistry.registerDebugView(CallStackView, 30);\ndebug.DebugViewRegistry.registerDebugView(BreakpointsView, 40);\n\n// register action to open viewlet\nconst registry = (<wbaregistry.IWorkbenchActionRegistry> platform.Registry.as(wbaregistry.Extensions.WorkbenchActions));\nregistry.registerWorkbenchAction(new SyncActionDescriptor(OpenDebugViewletAction, OpenDebugViewletAction.ID, OpenDebugViewletAction.LABEL, openViewletKb), nls.localize('view', \"View\"));\n\n(<wbext.IWorkbenchContributionsRegistry>platform.Registry.as(wbext.Extensions.Workbench)).registerWorkbenchContribution(DebugEditorModelManager);\n(<wbext.IWorkbenchContributionsRegistry>platform.Registry.as(wbext.Extensions.Workbench)).registerWorkbenchContribution(debugwidget.DebugActionsWidget);\n\nconst debugCategory = nls.localize('debugCategory', \"Debug\");\nregistry.registerWorkbenchAction(new SyncActionDescriptor(\n\tdbgactions.StartDebugAction, dbgactions.StartDebugAction.ID, dbgactions.StartDebugAction.LABEL, { primary: KeyCode.F5 }, KbExpr.not(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.StepOverDebugAction, dbgactions.StepOverDebugAction.ID, dbgactions.StepOverDebugAction.LABEL, { primary: KeyCode.F10 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.StepIntoDebugAction, dbgactions.StepIntoDebugAction.ID, dbgactions.StepIntoDebugAction.LABEL, { primary: KeyCode.F11 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE), KeybindingsRegistry.WEIGHT.workbenchContrib(1)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.StepOutDebugAction, dbgactions.StepOutDebugAction.ID, dbgactions.StepOutDebugAction.LABEL, { primary: KeyMod.Shift | KeyCode.F11 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.RestartDebugAction, dbgactions.RestartDebugAction.ID, dbgactions.RestartDebugAction.LABEL, { primary: KeyMod.Shift | KeyMod.CtrlCmd | KeyCode.F5 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.StopDebugAction, dbgactions.StopDebugAction.ID, dbgactions.StopDebugAction.LABEL, { primary: KeyMod.Shift | KeyCode.F5 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.ContinueAction, dbgactions.ContinueAction.ID, dbgactions.ContinueAction.LABEL, { primary: KeyCode.F5 }, KbExpr.has(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.PauseAction, dbgactions.PauseAction.ID, dbgactions.PauseAction.LABEL), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.ConfigureAction, dbgactions.ConfigureAction.ID, dbgactions.ConfigureAction.LABEL), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.ToggleReplAction, dbgactions.ToggleReplAction.ID, dbgactions.ToggleReplAction.LABEL, { primary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_Y,}), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.AddFunctionBreakpointAction, dbgactions.AddFunctionBreakpointAction.ID, dbgactions.AddFunctionBreakpointAction.LABEL), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.ReapplyBreakpointsAction, dbgactions.ReapplyBreakpointsAction.ID, dbgactions.ReapplyBreakpointsAction.LABEL), debugCategory);\nregistry.registerWorkbenchAction(new SyncActionDescriptor(dbgactions.RunAction, dbgactions.RunAction.ID, dbgactions.RunAction.LABEL, { primary: KeyMod.CtrlCmd | KeyCode.F5 }, KbExpr.not(debug.CONTEXT_IN_DEBUG_MODE)), debugCategory);\n\n// register service\nregisterSingleton(IDebugService, service.DebugService);\n"]}