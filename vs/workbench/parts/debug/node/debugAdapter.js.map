{"version":3,"sources":["vs/workbench/parts/debug/node/debugAdapter.ts"],"names":[],"mappings":"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","file":"vs/workbench/parts/debug/node/debugAdapter.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\nimport paths = require('vs/base/common/paths');\nimport platform = require('vs/base/common/platform');\nimport debug = require('vs/workbench/parts/debug/common/debug');\nimport { SystemVariables } from 'vs/workbench/parts/lib/node/systemVariables';\n\nexport class Adapter {\n\n\tpublic runtime: string;\n\tpublic program: string;\n\tpublic runtimeArgs: string[];\n\tpublic args: string[];\n\tpublic type: string;\n\tprivate _label: string;\n\tprivate configurationAttributes: any;\n\tpublic initialConfigurations: any[];\n\tpublic enableBreakpointsFor: { languageIds: string[] };\n\tpublic aiKey: string;\n\n\tconstructor(rawAdapter: debug.IRawAdapter, systemVariables: SystemVariables, extensionFolderPath: string) {\n\t\tif (rawAdapter.windows) {\n\t\t\trawAdapter.win = rawAdapter.windows;\n\t\t}\n\n\t\tif (platform.isWindows && !process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432') && rawAdapter.winx86) {\n\t\t\tthis.runtime = rawAdapter.winx86.runtime;\n\t\t\tthis.runtimeArgs = rawAdapter.winx86.runtimeArgs;\n\t\t\tthis.program = rawAdapter.winx86.program;\n\t\t\tthis.args = rawAdapter.winx86.args;\n\t\t} else if (platform.isWindows && rawAdapter.win) {\n\t\t\tthis.runtime = rawAdapter.win.runtime;\n\t\t\tthis.runtimeArgs = rawAdapter.win.runtimeArgs;\n\t\t\tthis.program = rawAdapter.win.program;\n\t\t\tthis.args = rawAdapter.win.args;\n\t\t} else if (platform.isMacintosh && rawAdapter.osx) {\n\t\t\tthis.runtime = rawAdapter.osx.runtime;\n\t\t\tthis.runtimeArgs = rawAdapter.osx.runtimeArgs;\n\t\t\tthis.program = rawAdapter.osx.program;\n\t\t\tthis.args = rawAdapter.osx.args;\n\t\t} else if (platform.isLinux && rawAdapter.linux) {\n\t\t\tthis.runtime = rawAdapter.linux.runtime;\n\t\t\tthis.runtimeArgs = rawAdapter.linux.runtimeArgs;\n\t\t\tthis.program = rawAdapter.linux.program;\n\t\t\tthis.args = rawAdapter.linux.args;\n\t\t}\n\n\t\tthis.runtime = this.runtime || rawAdapter.runtime;\n\t\tthis.runtimeArgs = this.runtimeArgs || rawAdapter.runtimeArgs;\n\t\tthis.program = this.program || rawAdapter.program;\n\t\tthis.args = this.args || rawAdapter.args;\n\n\t\tif (this.program) {\n\t\t\tthis.program = systemVariables ? systemVariables.resolve(this.program) : this.program;\n\t\t\tthis.program = paths.join(extensionFolderPath, this.program);\n\t\t}\n\t\tif (this.runtime && this.runtime.indexOf('./') === 0) {\n\t\t\tthis.runtime = systemVariables ? systemVariables.resolve(this.runtime) : this.runtime;\n\t\t\tthis.runtime = paths.join(extensionFolderPath, this.runtime);\n\t\t}\n\n\t\tthis.type = rawAdapter.type;\n\t\tthis.configurationAttributes = rawAdapter.configurationAttributes;\n\t\tthis.initialConfigurations = rawAdapter.initialConfigurations;\n\t\tthis._label = rawAdapter.label;\n\t\tthis.enableBreakpointsFor = rawAdapter.enableBreakpointsFor;\n\t\tthis.aiKey = rawAdapter.aiKey;\n\t}\n\n\tpublic get label() {\n\t\treturn this._label || this.type;\n\t}\n\n\tpublic getSchemaAttributes(): any[] {\n\t\t// fill in the default configuration attributes shared by all adapters.\n\t\tif (this.configurationAttributes) {\n\t\t\treturn Object.keys(this.configurationAttributes).map(request => {\n\t\t\t\tconst attributes = this.configurationAttributes[request];\n\t\t\t\tconst defaultRequired = ['name', 'type', 'request'];\n\t\t\t\tattributes.required = attributes.required && attributes.required.length ? defaultRequired.concat(attributes.required) : defaultRequired;\n\t\t\t\tattributes.additionalProperties = false;\n\t\t\t\tattributes.type = 'object';\n\t\t\t\tif (!attributes.properties) {\n\t\t\t\t\tattributes.properties = { };\n\t\t\t\t}\n\t\t\t\tconst properties = attributes.properties;\n\t\t\t\tproperties.type = {\n\t\t\t\t\tenum: [this.type],\n\t\t\t\t\tdescription: nls.localize('debugType', \"Type of configuration.\")\n\t\t\t\t};\n\t\t\t\tproperties.name = {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdescription: nls.localize('debugName', \"Name of configuration; appears in the launch configuration drop down menu.\"),\n\t\t\t\t\tdefault: 'Launch'\n\t\t\t\t};\n\t\t\t\tproperties.request = {\n\t\t\t\t\tenum: [request],\n\t\t\t\t\tdescription: nls.localize('debugRequest', \"Request type of configuration. Can be \\\"launch\\\" or \\\"attach\\\".\"),\n\t\t\t\t};\n\t\t\t\tproperties.preLaunchTask = {\n\t\t\t\t\ttype: ['string', 'null'],\n\t\t\t\t\tdefault: null,\n\t\t\t\t\tdescription: nls.localize('debugPrelaunchTask', \"Task to run before debug session starts.\")\n\t\t\t\t};\n\t\t\t\tthis.warnRelativePaths(properties.outDir);\n\t\t\t\tthis.warnRelativePaths(properties.program);\n\t\t\t\tthis.warnRelativePaths(properties.cwd);\n\t\t\t\tthis.warnRelativePaths(properties.runtimeExecutable);\n\n\t\t\t\treturn attributes;\n\t\t\t});\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate warnRelativePaths(attribute: any): void {\n\t\tif (attribute) {\n\t\t\tattribute.pattern = '^\\\\${.*}.*|' + paths.isAbsoluteRegex.source;\n\t\t\tattribute.errorMessage = nls.localize('relativePathsNotConverted', \"Relative paths will no longer be automatically converted to absolute ones. Consider using ${workspaceRoot} as a prefix.\");\n\t\t}\n\t}\n}\n"]}