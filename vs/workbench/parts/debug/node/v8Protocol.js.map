{"version":3,"file":"vs/workbench/parts/debug/node/v8Protocol.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/debug/node/v8Protocol.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport stream = require('stream');\nimport uuid = require('vs/base/common/uuid');\nimport ee = require('vs/base/common/eventEmitter');\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport debug = require('vs/workbench/parts/debug/common/debug');\n\nexport abstract class V8Protocol extends ee.EventEmitter {\n\n\tpublic emittedStopped: boolean;\n\tpublic readyForBreakpoints: boolean;\n\tprotected flowEventsCount: number;\n\tprivate static TWO_CRLF = '\\r\\n\\r\\n';\n\n\tprivate outputStream: stream.Writable;\n\tprivate sequence: number;\n\tprivate pendingRequests: { [id: number]: (e: DebugProtocol.Response) => void; };\n\tprivate rawData: Buffer;\n\tprivate id: string;\n\tprivate contentLength: number;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.flowEventsCount = 0;\n\t\tthis.emittedStopped = false;\n\t\tthis.readyForBreakpoints = false;\n\t\tthis.sequence = 1;\n\t\tthis.contentLength = -1;\n\t\tthis.pendingRequests = {};\n\t\tthis.rawData = new Buffer(0);\n\t\tthis.id = uuid.generateUuid();\n\t}\n\n\tpublic emit(eventType: string, data?: any): void {\n\t\tif (eventType === debug.SessionEvents.STOPPED) {\n\t\t\tthis.emittedStopped = true;\n\t\t}\n\t\tif (eventType === debug.SessionEvents.INITIALIZED) {\n\t\t\tthis.readyForBreakpoints = true;\n\t\t}\n\t\tif (eventType === debug.SessionEvents.CONTINUED || eventType === debug.SessionEvents.STOPPED ||\n\t\t\teventType === debug.SessionEvents.DEBUGEE_TERMINATED || eventType === debug.SessionEvents.SERVER_EXIT) {\n\t\t\tthis.flowEventsCount++;\n\t\t}\n\n\t\tif (data) {\n\t\t\tdata.sessionId = this.getId();\n\t\t} else {\n\t\t\tdata = { sessionId: this.getId() };\n\t\t}\n\n\t\tsuper.emit(eventType, data);\n\t}\n\n\tpublic getId(): string {\n\t\treturn this.id;\n\t}\n\n\tprotected connect(readable: stream.Readable, writable: stream.Writable): void {\n\n\t\tthis.outputStream = writable;\n\n\t\treadable.on('data', (data: Buffer) => {\n\t\t\tthis.rawData = Buffer.concat([this.rawData, data]);\n\t\t\tthis.handleData();\n\t\t});\n\t}\n\n\tprotected send(command: string, args: any): TPromise<DebugProtocol.Response> {\n\t\treturn new TPromise((completeDispatch, errorDispatch) => {\n\t\t\tthis.doSend(command, args, (result: DebugProtocol.Response) => {\n\t\t\t\tif (result.success) {\n\t\t\t\t\tcompleteDispatch(result);\n\t\t\t\t} else {\n\t\t\t\t\terrorDispatch(result);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate doSend(command: string, args: any, clb: (result: DebugProtocol.Response) => void): void {\n\n\t\tconst request: DebugProtocol.Request = {\n\t\t\ttype: 'request',\n\t\t\tseq: this.sequence++,\n\t\t\tcommand: command\n\t\t};\n\t\tif (args && Object.keys(args).length > 0) {\n\t\t\trequest.arguments = args;\n\t\t}\n\n\t\t// store callback for this request\n\t\tthis.pendingRequests[request.seq] = clb;\n\n\t\tconst json = JSON.stringify(request);\n\t\tconst length = Buffer.byteLength(json, 'utf8');\n\n\t\tthis.outputStream.write('Content-Length: ' + length.toString() + V8Protocol.TWO_CRLF, 'utf8');\n\t\tthis.outputStream.write(json, 'utf8');\n\t}\n\n\tprivate handleData(): void {\n\t\twhile (true) {\n\t\t\tif (this.contentLength >= 0) {\n\t\t\t\tif (this.rawData.length >= this.contentLength) {\n\t\t\t\t\tconst message = this.rawData.toString('utf8', 0, this.contentLength);\n\t\t\t\t\tthis.rawData = this.rawData.slice(this.contentLength);\n\t\t\t\t\tthis.contentLength = -1;\n\t\t\t\t\tif (message.length > 0) {\n\t\t\t\t\t\tthis.dispatch(message);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\t// there may be more complete messages to process\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst s = this.rawData.toString('utf8', 0, this.rawData.length);\n\t\t\t\tconst idx = s.indexOf(V8Protocol.TWO_CRLF);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tconst match = /Content-Length: (\\d+)/.exec(s);\n\t\t\t\t\tif (match && match[1]) {\n\t\t\t\t\t\tthis.contentLength = Number(match[1]);\n\t\t\t\t\t\tthis.rawData = this.rawData.slice(idx + V8Protocol.TWO_CRLF.length);\n\t\t\t\t\t\tcontinue;\t// try to handle a complete message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tprotected abstract onServerError(err: Error): void;\n\n\tprivate dispatch(body: string): void {\n\t\ttry {\n\t\t\tconst rawData = JSON.parse(body);\n\t\t\tif (typeof rawData.event !== 'undefined') {\n\t\t\t\tconst event = <DebugProtocol.Event> rawData;\n\t\t\t\tthis.emit(event.event, event);\n\t\t\t} else {\n\t\t\t\tconst response = <DebugProtocol.Response> rawData;\n\t\t\t\tconst clb = this.pendingRequests[response.request_seq];\n\t\t\t\tif (clb) {\n\t\t\t\t\tdelete this.pendingRequests[response.request_seq];\n\t\t\t\t\tclb(response);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.onServerError(new Error(e.message || e));\n\t\t}\n\t}\n}\n"]}