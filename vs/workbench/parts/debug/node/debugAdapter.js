/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require","exports","vs/nls","vs/base/common/objects","vs/base/common/paths","vs/base/common/platform"],function(i,t,e,r,n,s){"use strict";var o=function(){function i(i,t,e){this.extensionDescription=e,i.windows&&(i.win=i.windows),s.isWindows&&!process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432")&&i.winx86?(this.runtime=i.winx86.runtime,this.runtimeArgs=i.winx86.runtimeArgs,this.program=i.winx86.program,this.args=i.winx86.args):s.isWindows&&i.win?(this.runtime=i.win.runtime,this.runtimeArgs=i.win.runtimeArgs,this.program=i.win.program,this.args=i.win.args):s.isMacintosh&&i.osx?(this.runtime=i.osx.runtime,this.runtimeArgs=i.osx.runtimeArgs,this.program=i.osx.program,this.args=i.osx.args):s.isLinux&&i.linux&&(this.runtime=i.linux.runtime,this.runtimeArgs=i.linux.runtimeArgs,this.program=i.linux.program,this.args=i.linux.args),this.runtime=this.runtime||i.runtime,this.runtimeArgs=this.runtimeArgs||i.runtimeArgs,this.program=this.program||i.program,this.args=this.args||i.args,this.program&&(this.program=t?t.resolve(this.program):this.program,this.program=n.join(e.extensionFolderPath,this.program)),this.runtime&&0===this.runtime.indexOf("./")&&(this.runtime=t?t.resolve(this.runtime):this.runtime,this.runtime=n.join(e.extensionFolderPath,this.runtime)),this.type=i.type,this.variables=i.variables,this.configurationAttributes=i.configurationAttributes,this.initialConfigurations=i.initialConfigurations,this._label=i.label,this.enableBreakpointsFor=i.enableBreakpointsFor,this.aiKey=i.aiKey}return Object.defineProperty(i.prototype,"label",{get:function(){return this._label||this.type},enumerable:!0,configurable:!0}),i.prototype.getSchemaAttributes=function(){var i=this;return this.configurationAttributes?Object.keys(this.configurationAttributes).map(function(t){var n=i.configurationAttributes[t],s=["name","type","request"];n.required=n.required&&n.required.length?s.concat(n.required):s,n.additionalProperties=!1,n.type="object",n.properties||(n.properties={});var o=n.properties;o.type={"enum":[i.type],description:e.localize("debugType","Type of configuration.")},o.name={type:"string",description:e.localize("debugName","Name of configuration; appears in the launch configuration drop down menu."),"default":"Launch"},o.request={"enum":[t],description:e.localize("debugRequest",'Request type of configuration. Can be "launch" or "attach".')},o.preLaunchTask={type:["string","null"],"default":null,description:e.localize("debugPrelaunchTask","Task to run before debug session starts.")},o.internalConsoleOptions={"enum":["neverOpen","openOnSessionStart","openOnFirstSessionStart"],"default":"openOnFirstSessionStart",description:e.localize("internalConsoleOptions","Controls behavior of the internal debug console.")},i.warnRelativePaths(o.outDir),i.warnRelativePaths(o.program),i.warnRelativePaths(o.cwd),i.warnRelativePaths(o.runtimeExecutable);var a=r.deepClone(o);return o.windows={type:"object",description:e.localize("debugWindowsConfiguration","Windows specific launch configuration attributes."),properties:a},o.osx={type:"object",description:e.localize("debugOSXConfiguration","OS X specific launch configuration attributes."),properties:a},o.linux={type:"object",description:e.localize("debugLinuxConfiguration","Linux specific launch configuration attributes."),properties:a},n}):null},i.prototype.warnRelativePaths=function(i){i&&(i.pattern="^\\${.*}.*|"+n.isAbsoluteRegex.source,i.errorMessage=e.localize("relativePathsNotConverted","Relative paths will no longer be automatically converted to absolute ones. Consider using ${workspaceRoot} as a prefix."))},i}();t.Adapter=o});