import 'vs/css!./media/extensionEditor';
import { TPromise } from 'vs/base/common/winjs.base';
import { Builder } from 'vs/base/browser/builder';
import { BaseEditor } from 'vs/workbench/browser/parts/editor/baseEditor';
import { IViewletService } from 'vs/workbench/services/viewlet/common/viewletService';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IRequestService } from 'vs/platform/request/common/request';
import { IExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionManagement';
import { IThemeService } from 'vs/workbench/services/themes/common/themeService';
import { ExtensionsInput } from './extensionsInput';
import { IExtensionsWorkbenchService } from './extensions';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { EditorOptions } from 'vs/workbench/common/editor';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
export declare class ExtensionEditor extends BaseEditor {
    private galleryService;
    private configurationService;
    private instantiationService;
    private requestService;
    private viewletService;
    private extensionsWorkbenchService;
    private themeService;
    private editorService;
    static ID: string;
    private icon;
    private name;
    private license;
    private publisher;
    private installCount;
    private rating;
    private description;
    private actionBar;
    private body;
    private _highlight;
    private highlightDisposable;
    private transientDisposables;
    private disposables;
    constructor(telemetryService: ITelemetryService, galleryService: IExtensionGalleryService, configurationService: IConfigurationService, instantiationService: IInstantiationService, requestService: IRequestService, viewletService: IViewletService, extensionsWorkbenchService: IExtensionsWorkbenchService, themeService: IThemeService, editorService: IWorkbenchEditorService);
    createEditor(parent: Builder): void;
    setInput(input: ExtensionsInput, options: EditorOptions): TPromise<void>;
    layout(): void;
    private onActiveViewletChange(viewlet);
    dispose(): void;
}
