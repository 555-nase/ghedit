{"version":3,"file":"vs/workbench/parts/extensions/common/extensionsUtil.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/extensions/common/extensionsUtil.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;IAEhG,YAAY,CAAC;IAOb,wBAA+B,SAAqB;QACnD,MAAM,CAAK,SAAS,CAAC,SAAS,SAAM,SAAS,CAAC,IAAO,CAAC;IACvD,CAAC;IAFe,sBAAc,iBAE7B,CAAA;IAED,yBAAgC,GAAe,EAAE,KAAiB;QACjE,MAAM,CAAC,GAAG,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC;IACrE,CAAC;IAFe,uBAAe,kBAE9B,CAAA;IAED,0BAAiC,SAAqB;QACrD,MAAM,CAAC;YACN,EAAE,EAAE,cAAc,CAAC,SAAS,CAAC;YAC7B,IAAI,EAAE,SAAS,CAAC,IAAI;YACpB,SAAS,EAAE,SAAS,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC,EAAE,GAAG,IAAI;YAChF,WAAW,EAAE,SAAS,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC,WAAW,GAAG,IAAI;YAC3F,aAAa,EAAE,SAAS,CAAC,SAAS;YAClC,oBAAoB,EAAE,SAAS,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC,oBAAoB,GAAG,IAAI;SAC7G,CAAC;IACH,CAAC;IATe,wBAAgB,mBAS/B,CAAA;IAED,+BAAsC,QAA0B;QAC/D,IAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,+BAAkB,CAAC,CAAC;QAC3D,IAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,4BAAe,CAAC,CAAC;QAErD,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC,qBAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,CAAC;QAED,MAAM,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAA,SAAS;YACrD,IAAM,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;YAE1C,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,KAAA,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;gBAC/D,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAEnC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,UAAA,SAAS;oBAChC,IAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,EAAjC,CAAiC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9E,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IApBe,6BAAqB,wBAoBpC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtension, IExtensionsService, IGalleryService } from 'vs/workbench/parts/extensions/common/extensions';\nimport { TPromise } from 'vs/base/common/winjs.base';\nimport * as semver from 'semver';\n\nexport function getExtensionId(extension: IExtension): string {\n\treturn `${ extension.publisher }.${ extension.name }`;\n}\n\nexport function extensionEquals(one: IExtension, other: IExtension): boolean {\n\treturn one.publisher === other.publisher && one.name === other.name;\n}\n\nexport function getTelemetryData(extension: IExtension): any {\n\treturn {\n\t\tid: getExtensionId(extension),\n\t\tname: extension.name,\n\t\tgalleryId: extension.galleryInformation ? extension.galleryInformation.id : null,\n\t\tpublisherId: extension.galleryInformation ? extension.galleryInformation.publisherId : null,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.galleryInformation ? extension.galleryInformation.publisherDisplayName : null\n\t};\n}\n\nexport function getOutdatedExtensions(accessor: ServicesAccessor): TPromise<IExtension[]> {\n\tconst extensionsService = accessor.get(IExtensionsService);\n\tconst galleryService = accessor.get(IGalleryService);\n\n\tif (!galleryService.isEnabled()) {\n\t\treturn TPromise.as([]);\n\t}\n\n\treturn extensionsService.getInstalled().then(installed => {\n\t\tconst ids = installed.map(getExtensionId);\n\n\t\treturn galleryService.query({ ids, pageSize: 1000 }).then(result => {\n\t\t\tconst available = result.firstPage;\n\n\t\t\treturn available.filter(extension => {\n\t\t\t\tconst local = installed.filter(local => extensionEquals(local, extension))[0];\n\t\t\t\treturn local && semver.lt(local.version, extension.version);\n\t\t\t});\n\t\t});\n\t});\n}"]}