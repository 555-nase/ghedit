{"version":3,"file":"vs/workbench/parts/snippets/electron-browser/snippetsTracker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/parts/snippets/electron-browser/snippetsTracker.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport workbenchExt = require('vs/workbench/common/contributions');\nimport paths = require('vs/base/common/paths');\nimport async = require('vs/base/common/async');\nimport winjs = require('vs/base/common/winjs.base');\nimport extfs = require('vs/base/node/extfs');\nimport lifecycle = require('vs/base/common/lifecycle');\nimport tmsnippets = require('vs/editor/node/textMate/TMSnippets');\nimport {IFileService} from 'vs/platform/files/common/files';\nimport {ILifecycleService} from 'vs/platform/lifecycle/common/lifecycle';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\n\nimport fs = require('fs');\n\nexport class SnippetsTracker implements workbenchExt.IWorkbenchContribution {\n\tprivate static FILE_WATCH_DELAY = 200;\n\n\tprivate snippetFolder: string;\n\tprivate toDispose: lifecycle.IDisposable[];\n\tprivate watcher: fs.FSWatcher;\n\tprivate fileWatchDelayer:async.ThrottledDelayer<void>;\n\n\tconstructor(\n\t\t@IFileService private fileService: IFileService,\n\t\t@ILifecycleService private lifecycleService: ILifecycleService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService\n\t) {\n\t\tthis.snippetFolder = paths.join(contextService.getConfiguration().env.appSettingsHome, 'snippets');\n\n\t\tthis.toDispose = [];\n\t\tthis.fileWatchDelayer = new async.ThrottledDelayer<void>(SnippetsTracker.FILE_WATCH_DELAY);\n\n\t\tif (!fs.existsSync(this.snippetFolder)) {\n\t\t\tfs.mkdirSync(this.snippetFolder);\n\t\t}\n\n\t\tthis.scanUserSnippets().then(_ => {\n\t\t\tthis.registerListeners();\n\t\t});\n\t}\n\n\tprivate registerListeners(): void {\n\t\tvar scheduler = new async.RunOnceScheduler(() => {\n\t\t\tthis.scanUserSnippets();\n\t\t}, 500);\n\t\tthis.toDispose.push(scheduler);\n\n\t\ttry {\n\t\t\tthis.watcher = fs.watch(this.snippetFolder); // will be persistent but not recursive\n\t\t\tthis.watcher.on('change', (eventType: string) => {\n\t\t\t\tif (eventType === 'delete') {\n\t\t\t\t\tthis.unregisterListener();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscheduler.schedule();\n\t\t\t});\n\t} catch (error) {\n\t\t\t// the path might not exist anymore, ignore this error and return\n\t\t}\n\n\t\tthis.lifecycleService.onShutdown(this.dispose, this);\n\t}\n\n\tprivate scanUserSnippets() : winjs.Promise {\n\t\treturn readFilesInDir(this.snippetFolder, /\\.json$/).then(snippetFiles => {\n\t\t\treturn winjs.TPromise.join(snippetFiles.map(snippetFile => {\n\t\t\t\tvar modeId = snippetFile.replace(/\\.json$/, '').toLowerCase();\n\t\t\t\tvar snippetPath = paths.join(this.snippetFolder, snippetFile);\n\t\t\t\treturn tmsnippets.snippetUpdated(modeId, snippetPath);\n\t\t\t}));\n\t\t});\n\t}\n\n\tprivate unregisterListener(): void {\n\t\tif (this.watcher) {\n\t\t\tthis.watcher.close();\n\t\t\tthis.watcher = null;\n\t\t}\n\t}\n\n\tpublic getId(): string {\n\t\treturn 'vs.snippets.snippetsTracker';\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.unregisterListener();\n\t\tthis.toDispose = lifecycle.dispose(this.toDispose);\n\t}\n}\n\nfunction readDir(path: string): winjs.TPromise<string[]> {\n\treturn new winjs.TPromise<string[]>((c, e, p) => {\n\t\textfs.readdir(path,(err, files) => {\n\t\t\tif (err) {\n\t\t\t\treturn e(err);\n\t\t\t}\n\t\t\tc(files);\n\t\t});\n\t});\n}\n\nfunction fileExists(path: string): winjs.TPromise<boolean> {\n\treturn new winjs.TPromise<boolean>((c, e, p) => {\n\t\tfs.stat(path,(err, stats) => {\n\t\t\tif (err) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\n\t\t\tif (stats.isFile()) {\n\t\t\t\treturn c(true);\n\t\t\t}\n\n\t\t\tc(false);\n\t\t});\n\t});\n}\n\nfunction readFilesInDir(dirPath: string, namePattern:RegExp = null): winjs.TPromise<string[]> {\n\treturn readDir(dirPath).then((children) => {\n\t\treturn winjs.TPromise.join(\n\t\t\tchildren.map((child) => {\n\t\t\t\tif (namePattern && !namePattern.test(child)) {\n\t\t\t\t\treturn winjs.TPromise.as(null);\n\t\t\t\t}\n\t\t\t\treturn fileExists(paths.join(dirPath, child)).then(isFile => {\n\t\t\t\t\treturn isFile ? child : null;\n\t\t\t\t});\n\t\t\t})\n\t\t).then((subdirs) => {\n\t\t\treturn subdirs.filter(subdir => (subdir !== null));\n\t\t});\n\t});\n}"]}