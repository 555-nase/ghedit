/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require","exports","vs/base/common/winjs.base","vs/base/parts/ipc/common/ipc","vs/base/parts/ipc/node/ipc.cp","vs/base/common/uri","vs/platform/files/common/files","vs/workbench/services/files/node/watcher/common","vs/workbench/services/files/node/watcher/unix/watcherIpc"],function(e,t,r,s,i,n,o,a,c){"use strict";var h=function(){function t(e,t,r,s,i,n){this.basePath=e,this.ignored=t,this.eventEmitter=r,this.errorLogger=s,this.verboseLogging=i,this.debugBrkFileWatcherPort=n,this.isDisposed=!1,this.restartCounter=0}return t.prototype.startWatching=function(){var o=this,a=["--type=watcherService"];"number"==typeof this.debugBrkFileWatcherPort&&a.push("--debug-brk="+this.debugBrkFileWatcherPort);var h=new i.Client(n["default"].parse(e.toUrl("bootstrap")).fsPath,{serverName:"Watcher",args:a,env:{AMD_ENTRYPOINT:"vs/workbench/services/files/node/watcher/unix/watcherApp",PIPE_LOGGING:"true",VERBOSE_LOGGING:this.verboseLogging}}),g=s.getNextTickChannel(h.getChannel("watcher")),u=new c.WatcherChannelClient(g);return u.watch({basePath:this.basePath,ignored:this.ignored,verboseLogging:this.verboseLogging}).then(null,function(e){if(!(e instanceof Error&&"Canceled"===e.name&&"Canceled"===e.message))return r.TPromise.wrapError(e)},function(e){return o.onRawFileEvents(e)}).done(function(){o.isDisposed||(o.restartCounter<=t.MAX_RESTARTS?(o.errorLogger("Watcher terminated unexpectedly and is restarted again..."),o.restartCounter++,o.startWatching()):o.errorLogger("Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!"))},this.errorLogger),function(){h.dispose(),o.isDisposed=!0}},t.prototype.onRawFileEvents=function(e){e.length>0&&this.eventEmitter.emit(o.EventType.FILE_CHANGES,a.toFileChangesEvent(e))},t.MAX_RESTARTS=5,t}();t.FileWatcher=h});