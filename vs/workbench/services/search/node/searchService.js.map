{"version":3,"file":"vs/workbench/services/search/node/searchService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/search/node/searchService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {PPromise} from 'vs/base/common/winjs.base';\nimport uri from 'vs/base/common/uri';\nimport glob = require('vs/base/common/glob');\nimport objects = require('vs/base/common/objects');\nimport scorer = require('vs/base/common/scorer');\nimport strings = require('vs/base/common/strings');\nimport {Client} from 'vs/base/node/service.cp';\nimport {IProgress, LineMatch, FileMatch, ISearchComplete, ISearchProgressItem, QueryType, IFileMatch, ISearchQuery, ISearchConfiguration, ISearchService} from 'vs/platform/search/common/search';\nimport {IUntitledEditorService} from 'vs/workbench/services/untitled/common/untitledEditorService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\nimport {IRawSearch, ISerializedSearchComplete, ISerializedSearchProgressItem, IRawSearchService, SearchService as RawSearchService} from 'vs/workbench/services/search/node/rawSearchService';\n\nexport class SearchService implements ISearchService {\n\tpublic serviceId = ISearchService;\n\n\tprivate diskSearch: DiskSearch;\n\n\tconstructor(\n\t\t@IModelService private modelService: IModelService,\n\t\t@IUntitledEditorService private untitledEditorService: IUntitledEditorService,\n\t\t@IWorkspaceContextService private contextService: IWorkspaceContextService,\n\t\t@IConfigurationService private configurationService: IConfigurationService\n\t) {\n\t\tlet config = contextService.getConfiguration();\n\t\tthis.diskSearch = new DiskSearch(!config.env.isBuilt || config.env.verboseLogging);\n\t}\n\n\tpublic search(query: ISearchQuery): PPromise<ISearchComplete, ISearchProgressItem> {\n\t\tconst configuration = this.configurationService.getConfiguration<ISearchConfiguration>();\n\n\t\t// Configuration: Encoding\n\t\tif (!query.fileEncoding) {\n\t\t\tlet fileEncoding = configuration && configuration.files && configuration.files.encoding;\n\t\t\tquery.fileEncoding = fileEncoding;\n\t\t}\n\n\t\t// Configuration: File Excludes\n\t\tlet fileExcludes = configuration && configuration.files && configuration.files.exclude;\n\t\tif (fileExcludes) {\n\t\t\tif (!query.excludePattern) {\n\t\t\t\tquery.excludePattern = fileExcludes;\n\t\t\t} else {\n\t\t\t\tobjects.mixin(query.excludePattern, fileExcludes, false /* no overwrite */);\n\t\t\t}\n\t\t}\n\n\t\tlet rawSearchQuery: PPromise<void, ISearchProgressItem>;\n\t\treturn new PPromise<ISearchComplete, ISearchProgressItem>((onComplete, onError, onProgress) => {\n\n\t\t\t// Get local results from dirty/untitled\n\t\t\tlet localResultsFlushed = false;\n\t\t\tlet localResults = this.getLocalResults(query);\n\n\t\t\tlet flushLocalResultsOnce = function () {\n\t\t\t\tif (!localResultsFlushed) {\n\t\t\t\t\tlocalResultsFlushed = true;\n\t\t\t\t\tObject.keys(localResults).map((key) => localResults[key]).filter((res) => !!res).forEach(onProgress);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Delegate to parent for real file results\n\t\t\trawSearchQuery = this.diskSearch.search(query).then(\n\n\t\t\t\t// on Complete\n\t\t\t\t(complete) => {\n\t\t\t\t\tflushLocalResultsOnce();\n\t\t\t\t\tonComplete({ results: complete.results.filter((match) => typeof localResults[match.resource.toString()] === 'undefined'), limitHit: complete.limitHit }); // dont override local results\n\t\t\t\t},\n\n\t\t\t\t// on Error\n\t\t\t\t(error) => {\n\t\t\t\t\tflushLocalResultsOnce();\n\t\t\t\t\tonError(error);\n\t\t\t\t},\n\n\t\t\t\t// on Progress\n\t\t\t\t(progress) => {\n\t\t\t\t\tflushLocalResultsOnce();\n\n\t\t\t\t\t// Match\n\t\t\t\t\tif (progress.resource) {\n\t\t\t\t\t\tif (typeof localResults[progress.resource.toString()] === 'undefined') { // don't override local results\n\t\t\t\t\t\t\tonProgress(progress);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Progress\n\t\t\t\t\telse {\n\t\t\t\t\t\tonProgress(<IProgress>progress);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, () => rawSearchQuery && rawSearchQuery.cancel());\n\t}\n\n\tprivate getLocalResults(query: ISearchQuery): { [resourcePath: string]: IFileMatch; } {\n\t\tlet localResults: { [resourcePath: string]: IFileMatch; } = Object.create(null);\n\n\t\tif (query.type === QueryType.Text) {\n\t\t\tlet models = this.modelService.getModels();\n\t\t\tmodels.forEach((model) => {\n\t\t\t\tlet resource = model.getAssociatedResource();\n\t\t\t\tif (!resource) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Support untitled files\n\t\t\t\tif (resource.scheme === 'untitled') {\n\t\t\t\t\tif (!this.untitledEditorService.get(resource)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Don't support other resource schemes than files for now\n\t\t\t\telse if (resource.scheme !== 'file') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!this.matches(resource, query.filePattern, query.includePattern, query.excludePattern)) {\n\t\t\t\t\treturn; // respect user filters\n\t\t\t\t}\n\n\t\t\t\t// Use editor API to find matches\n\t\t\t\tlet ranges = model.findMatches(query.contentPattern.pattern, false, query.contentPattern.isRegExp, query.contentPattern.isCaseSensitive, query.contentPattern.isWordMatch);\n\t\t\t\tif (ranges.length) {\n\t\t\t\t\tlet fileMatch = new FileMatch(resource);\n\t\t\t\t\tlocalResults[resource.toString()] = fileMatch;\n\n\t\t\t\t\tranges.forEach((range) => {\n\t\t\t\t\t\tfileMatch.lineMatches.push(new LineMatch(model.getLineContent(range.startLineNumber), range.startLineNumber - 1, [[range.startColumn - 1, range.endColumn - range.startColumn]]));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlocalResults[resource.toString()] = false; // flag as empty result\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn localResults;\n\t}\n\n\tprivate matches(resource: uri, filePattern: string, includePattern: glob.IExpression, excludePattern: glob.IExpression): boolean {\n\t\tlet workspaceRelativePath = this.contextService.toWorkspaceRelativePath(resource);\n\n\t\t// file pattern\n\t\tif (filePattern) {\n\t\t\tif (resource.scheme !== 'file') {\n\t\t\t\treturn false; // if we match on file pattern, we have to ignore non file resources\n\t\t\t}\n\n\t\t\tif (!scorer.matches(resource.fsPath, strings.stripWildcards(filePattern).toLowerCase())) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// includes\n\t\tif (includePattern) {\n\t\t\tif (resource.scheme !== 'file') {\n\t\t\t\treturn false; // if we match on file patterns, we have to ignore non file resources\n\t\t\t}\n\n\t\t\tif (!glob.match(includePattern, workspaceRelativePath || resource.fsPath)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// excludes\n\t\tif (excludePattern) {\n\t\t\tif (resource.scheme !== 'file') {\n\t\t\t\treturn true; // e.g. untitled files can never be excluded with file patterns\n\t\t\t}\n\n\t\t\tif (glob.match(excludePattern, workspaceRelativePath || resource.fsPath)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nclass DiskSearch {\n\n\tprivate raw: IRawSearchService;\n\n\tconstructor(verboseLogging: boolean) {\n\t\tconst client = new Client(\n\t\t\turi.parse(require.toUrl('bootstrap')).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'Search',\n\t\t\t\ttimeout: 60 * 1000,\n\t\t\t\targs: ['--type=searchService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/search/node/searchApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: verboseLogging\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.raw = client.getService<IRawSearchService>('SearchService', RawSearchService);\n\t}\n\n\tpublic search(query: ISearchQuery): PPromise<ISearchComplete, ISearchProgressItem> {\n\t\tlet result: IFileMatch[] = [];\n\t\tlet request: PPromise<ISerializedSearchComplete, ISerializedSearchProgressItem>;\n\n\t\tlet rawSearch: IRawSearch = {\n\t\t\trootFolders: query.folderResources ? query.folderResources.map(r => r.fsPath) : [],\n\t\t\textraFiles: query.extraFileResources ? query.extraFileResources.map(r => r.fsPath) : [],\n\t\t\tfilePattern: query.filePattern,\n\t\t\texcludePattern: query.excludePattern,\n\t\t\tincludePattern: query.includePattern,\n\t\t\tmaxResults: query.maxResults\n\t\t};\n\n\t\tif (query.type === QueryType.Text) {\n\t\t\trawSearch.contentPattern = query.contentPattern;\n\t\t\trawSearch.fileEncoding = query.fileEncoding;\n\t\t}\n\n\t\tif (query.type === QueryType.File) {\n\t\t\trequest = this.raw.fileSearch(rawSearch);\n\t\t} else {\n\t\t\trequest = this.raw.textSearch(rawSearch);\n\t\t}\n\n\t\treturn new PPromise<ISearchComplete, ISearchProgressItem>((c, e, p) => {\n\t\t\trequest.done((complete) => {\n\t\t\t\tc({\n\t\t\t\t\tlimitHit: complete.limitHit,\n\t\t\t\t\tresults: result\n\t\t\t\t});\n\t\t\t}, e, (data) => {\n\n\t\t\t\t// Match\n\t\t\t\tif (data.path) {\n\t\t\t\t\tlet fileMatch = new FileMatch(uri.file(data.path));\n\t\t\t\t\tresult.push(fileMatch);\n\n\t\t\t\t\tif (data.lineMatches) {\n\t\t\t\t\t\tfor (let j = 0; j < data.lineMatches.length; j++) {\n\t\t\t\t\t\t\tfileMatch.lineMatches.push(new LineMatch(data.lineMatches[j].preview, data.lineMatches[j].lineNumber, data.lineMatches[j].offsetAndLengths));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tp(fileMatch);\n\t\t\t\t}\n\n\t\t\t\t// Progress\n\t\t\t\telse {\n\t\t\t\t\tp(<IProgress>data);\n\t\t\t\t}\n\t\t\t});\n\t\t}, () => request.cancel());\n\t}\n}"]}