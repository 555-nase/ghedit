{"version":3,"file":"vs/workbench/services/contextview/electron-browser/contextmenuService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/contextview/electron-browser/contextmenuService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport severity from 'vs/base/common/severity';\nimport {IAction} from 'vs/base/common/actions';\nimport {Separator} from 'vs/base/browser/ui/actionbar/actionbar';\nimport dom = require('vs/base/browser/dom');\nimport {$} from 'vs/base/browser/builder';\nimport {IContextMenuService, IContextMenuDelegate} from 'vs/platform/contextview/browser/contextView';\nimport {ITelemetryService} from 'vs/platform/telemetry/common/telemetry';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\n\nimport {remote, webFrame} from 'electron';\n\nexport class ContextMenuService implements IContextMenuService {\n\n\tpublic serviceId = IContextMenuService;\n\n\tprivate telemetryService: ITelemetryService;\n\tprivate messageService: IMessageService;\n\tprivate keybindingService: IKeybindingService;\n\n\tconstructor(messageService: IMessageService, telemetryService: ITelemetryService, keybindingService: IKeybindingService) {\n\t\tthis.messageService = messageService;\n\t\tthis.telemetryService = telemetryService;\n\t\tthis.keybindingService = keybindingService;\n\t}\n\n\tpublic showContextMenu(delegate: IContextMenuDelegate): void {\n\t\tdelegate.getActions().then(actions => {\n\t\t\tif (!actions.length) {\n\t\t\t\treturn TPromise.as(null);\n\t\t\t}\n\n\t\t\treturn TPromise.timeout(0).then(() => { // https://github.com/Microsoft/vscode/issues/3638\n\t\t\t\tlet menu = new remote.Menu();\n\n\t\t\t\tactions.forEach(a => {\n\t\t\t\t\tif (a instanceof Separator) {\n\t\t\t\t\t\tmenu.append(new remote.MenuItem({ type: 'separator' }));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst keybinding = !!delegate.getKeyBinding ? delegate.getKeyBinding(a) : undefined;\n\t\t\t\t\t\tconst accelerator = keybinding && this.keybindingService.getElectronAcceleratorFor(keybinding);\n\n\t\t\t\t\t\tconst item = new remote.MenuItem({\n\t\t\t\t\t\t\tlabel: a.label,\n\t\t\t\t\t\t\tchecked: a.checked,\n\t\t\t\t\t\t\taccelerator,\n\t\t\t\t\t\t\tenabled: a.enabled,\n\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\tthis.runAction(a, delegate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmenu.append(item);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tconst anchor = delegate.getAnchor();\n\t\t\t\tlet x: number, y: number;\n\n\t\t\t\tif (dom.isHTMLElement(anchor)) {\n\t\t\t\t\tconst $anchor = $(<HTMLElement>anchor);\n\t\t\t\t\tconst elementPosition = $anchor.getPosition();\n\t\t\t\t\tconst elementSize = $anchor.getTotalSize();\n\n\t\t\t\t\tx = elementPosition.left;\n\t\t\t\t\ty = elementPosition.top + elementSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tconst pos = <{ x: number; y: number; }>anchor;\n\t\t\t\t\tx = pos.x;\n\t\t\t\t\ty = pos.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet zoom = webFrame.getZoomFactor();\n\t\t\t\tx *= zoom;\n\t\t\t\ty *= zoom;\n\n\t\t\t\tmenu.popup(remote.getCurrentWindow(), Math.floor(x), Math.floor(y));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate runAction(actionToRun: IAction, delegate: IContextMenuDelegate): void {\n\t\tif (delegate.onHide) {\n\t\t\tdelegate.onHide(false);\n\t\t}\n\n\t\tthis.telemetryService.publicLog('workbenchActionExecuted', { id: actionToRun.id, from: 'contextMenu' });\n\n\t\tconst context = delegate.getActionsContext ? delegate.getActionsContext() : null;\n\t\tconst res = actionToRun.run(context) || TPromise.as(null);\n\n\t\tres.done(null, e => this.messageService.show(severity.Error, e));\n\t}\n}\n"]}