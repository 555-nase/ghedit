var __extends=this&&this.__extends||function(e,n){function t(){this.constructor=e}for(var i in n)n.hasOwnProperty(i)&&(e[i]=n[i]);e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)},__decorate=this&&this.__decorate||function(e,n,t,i){var o,r=arguments.length,s=r<3?n:null===i?i=Object.getOwnPropertyDescriptor(n,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,i);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(s=(r<3?o(s):r>3?o(n,t,s):o(n,t))||s);return r>3&&s&&Object.defineProperty(n,t,s),s},__param=this&&this.__param||function(e,n){return function(t,i){n(t,i,e)}};define(["require","exports","vs/nls","vs/base/common/platform","vs/platform/event/common/event","vs/platform/extensions/common/extensionsRegistry","vs/platform/jsonschemas/common/jsonContributionRegistry","vs/platform/keybinding/browser/keybindingServiceImpl","vs/platform/statusbar/common/statusbar","vs/platform/keybinding/common/keybindingResolver","vs/platform/commands/common/commands","vs/platform/keybinding/common/keybindingsRegistry","vs/platform/platform","vs/platform/telemetry/common/telemetry","vs/platform/configuration/common/configuration","vs/platform/workspace/common/workspace","vs/workbench/common/events","vs/workbench/services/keybinding/electron-browser/nativeKeymap","vs/platform/message/common/message"],function(e,n,t,i,o,r,s,a,c,p,y,l,g,d,m,u,b,f,v){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";function h(e){return Array.isArray(e)}function k(e,n){return e?"string"!=typeof e.command?(n.push(t.localize("requirestring","property `{0}` is mandatory and must be of type `string`","command")),!1):"string"!=typeof e.key?(n.push(t.localize("requirestring","property `{0}` is mandatory and must be of type `string`","key")),!1):e.when&&"string"!=typeof e.when?(n.push(t.localize("optstring","property `{0}` can be omitted or must be of type `string`","when")),!1):e.mac&&"string"!=typeof e.mac?(n.push(t.localize("optstring","property `{0}` can be omitted or must be of type `string`","mac")),!1):e.linux&&"string"!=typeof e.linux?(n.push(t.localize("optstring","property `{0}` can be omitted or must be of type `string`","linux")),!1):!e.win||"string"==typeof e.win||(n.push(t.localize("optstring","property `{0}` can be omitted or must be of type `string`","win")),!1):(n.push(t.localize("nonempty","expected non-empty value.")),!1)}var _={type:"object","default":{command:"",key:""},properties:{command:{description:t.localize("vscode.extension.contributes.keybindings.command","Identifier of the command to run when keybinding is triggered."),type:"string"},key:{description:t.localize("vscode.extension.contributes.keybindings.key","Key or key sequence (separate keys with plus-sign and sequences with space, e.g Ctrl+O and Ctrl+L L for a chord"),type:"string"},mac:{description:t.localize("vscode.extension.contributes.keybindings.mac","Mac specific key or key sequence."),type:"string"},linux:{description:t.localize("vscode.extension.contributes.keybindings.linux","Linux specific key or key sequence."),type:"string"},win:{description:t.localize("vscode.extension.contributes.keybindings.win","Windows specific key or key sequence."),type:"string"},when:{description:t.localize("vscode.extension.contributes.keybindings.when","Condition when the key is active."),type:"string"}}},S=r.ExtensionsRegistry.registerExtensionPoint("keybindings",{description:t.localize("vscode.extension.contributes.keybindings","Contributes keybindings."),oneOf:[_,{type:"array",items:_}]}),x=function(e){function n(n,t,i,o,r,s,a,c){var p=this;e.call(this,t,i,a,c),this.contextService=o,this.eventService=r,this.telemetryService=s,this.toDispose=this.eventService.addListener2(b.EventType.WORKBENCH_OPTIONS_CHANGED,function(e){return p.onOptionsChanged(e)}),S.setHandler(function(e){for(var n=!1,t=0,i=e;t<i.length;t++){var o=i[t];n=p._handleKeybindingsExtensionPointUser(o.description.isBuiltin,o.value,o.collector)||n}n&&p.updateResolver()}),this._beginListening(n)}return __extends(n,e),n.prototype.customKeybindingsCount=function(){var e=this.contextService.getOptions();return e.globalSettings&&e.globalSettings.keybindings&&Array.isArray(e.globalSettings.keybindings)?e.globalSettings.keybindings.length:0},n.prototype._getExtraKeybindings=function(e){var n=[],t=this.contextService.getOptions();if(t.globalSettings&&t.globalSettings.keybindings){if(!e){var i=0;Array.isArray(t.globalSettings.keybindings)&&(i=t.globalSettings.keybindings.length),this.telemetryService.publicLog("customKeybindingsChanged",{keyCount:i})}Array.isArray(t.globalSettings.keybindings)&&(n=t.globalSettings.keybindings)}return n.map(function(e,n){return p.IOSupport.readKeybindingItem(e,n)})},n.prototype.onOptionsChanged=function(e){"globalSettings"===e.key&&this.updateResolver()},n.prototype.dispose=function(){this.toDispose.dispose()},n.prototype.getLabelFor=function(e){return e.toCustomLabel(f.getNativeLabelProvider())},n.prototype.getHTMLLabelFor=function(e){return e.toCustomHTMLLabel(f.getNativeLabelProvider())},n.prototype.getAriaLabelFor=function(e){return e.toCustomLabel(f.getNativeAriaLabelProvider())},n.prototype.getElectronAcceleratorFor=function(n){if(i.isWindows)return e.prototype.getElectronAcceleratorFor.call(this,n);var t=n._toUSLabel(),o=this.getLabelFor(n);return t!==o?null:e.prototype.getElectronAcceleratorFor.call(this,n)},n.prototype._handleKeybindingsExtensionPointUser=function(e,n,t){if(h(n)){for(var i=!1,o=0,r=n.length;o<r;o++)i=this._handleKeybinding(e,o+1,n[o],t)||i;return i}return this._handleKeybinding(e,1,n,t)},n.prototype._handleKeybinding=function(e,n,i,o){var r=[],s=!1;if(k(i,r)){var a=this._asCommandRule(e,n++,i);a&&(l.KeybindingsRegistry.registerCommandRule(a),s=!0)}return r.length>0&&o.error(t.localize("invalid.keybindings","Invalid `contributes.{0}`: {1}",S.name,r.join("\n"))),s},n.prototype._asCommandRule=function(e,n,t){var i,o=t.command,r=t.when,s=t.key,a=t.mac,c=t.linux,y=t.win;i=e?l.KeybindingsRegistry.WEIGHT.builtinExtension(n):l.KeybindingsRegistry.WEIGHT.externalExtension(n);var g={id:o,when:p.IOSupport.readKeybindingWhen(r),weight:i,primary:p.IOSupport.readKeybinding(s),mac:a&&{primary:p.IOSupport.readKeybinding(a)},linux:c&&{primary:p.IOSupport.readKeybinding(c)},win:y&&{primary:p.IOSupport.readKeybinding(y)}};if(g.primary||g.mac||g.linux||g.win)return g},n=__decorate([__param(1,y.ICommandService),__param(2,m.IConfigurationService),__param(3,u.IWorkspaceContextService),__param(4,o.IEventService),__param(5,d.ITelemetryService),__param(6,v.IMessageService),__param(7,c.IStatusbarService)],n)}(a.KeybindingService);n.WorkbenchKeybindingService=x;var w="vscode://schemas/keybindings",K={id:w,type:"array",title:t.localize("keybindings.json.title","Keybindings configuration"),items:{required:["key"],type:"object",defaultSnippets:[{body:{key:"{{_}}",command:"{{_}}",when:"{{_}}"}}],properties:{key:{type:"string",description:t.localize("keybindings.json.key","Key or key sequence (separated by space)")},command:{description:t.localize("keybindings.json.command","Name of the command to execute")},when:{type:"string",description:t.localize("keybindings.json.when","Condition when the key is active.")}}}},C=g.Registry.as(s.Extensions.JSONContribution);C.registerSchema(w,K)});