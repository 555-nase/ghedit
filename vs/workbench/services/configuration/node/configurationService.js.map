{"version":3,"file":"vs/workbench/services/configuration/node/configurationService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/services/configuration/node/configurationService.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport uri from 'vs/base/common/uri';\nimport strings = require('vs/base/common/strings');\nimport platform = require('vs/base/common/platform');\nimport paths = require('vs/base/common/paths');\nimport extfs = require('vs/base/node/extfs');\nimport {IConfigFile} from 'vs/platform/configuration/common/model';\nimport objects = require('vs/base/common/objects');\nimport {IStat, IContent, ConfigurationService as CommonConfigurationService} from 'vs/platform/configuration/common/configurationService';\nimport {IWorkspaceContextService} from 'vs/workbench/services/workspace/common/contextService';\nimport {OptionsChangeEvent, EventType} from 'vs/workbench/common/events';\nimport {IEventService} from 'vs/platform/event/common/event';\nimport {IConfigurationService} from 'vs/platform/configuration/common/configuration';\n\nimport fs = require('fs');\n\nexport class ConfigurationService extends CommonConfigurationService {\n\n\tpublic serviceId = IConfigurationService;\n\n\tprotected contextService: IWorkspaceContextService;\n\tprivate toDispose: Function;\n\n\tconstructor(contextService: IWorkspaceContextService, eventService: IEventService) {\n\t\tsuper(contextService, eventService);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected registerListeners(): void {\n\t\tsuper.registerListeners();\n\n\t\tthis.toDispose = this.eventService.addListener(EventType.WORKBENCH_OPTIONS_CHANGED, (e) => this.onOptionsChanged(e));\n\t}\n\n\tprivate onOptionsChanged(e: OptionsChangeEvent): void {\n\t\tif (e.key === 'globalSettings') {\n\t\t\tthis.handleConfigurationChange();\n\t\t}\n\t}\n\n\tprotected resolveContents(resources: uri[]): TPromise<IContent[]> {\n\t\tlet contents: IContent[] = [];\n\n\t\treturn TPromise.join(resources.map((resource) => {\n\t\t\treturn this.resolveContent(resource).then((content) => {\n\t\t\t\tcontents.push(content);\n\t\t\t});\n\t\t})).then(() => contents);\n\t}\n\n\tprotected resolveContent(resource: uri): TPromise<IContent> {\n\t\treturn new TPromise<IContent>((c, e) => {\n\t\t\tfs.readFile(resource.fsPath, (error, contents) => {\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc({\n\t\t\t\t\t\tresource: resource,\n\t\t\t\t\t\tvalue: contents.toString()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected resolveStat(resource: uri): TPromise<IStat> {\n\t\treturn new TPromise<IStat>((c, e) => {\n\t\t\textfs.readdir(resource.fsPath, (error, children) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif ((<any>error).code === 'ENOTDIR') {\n\t\t\t\t\t\tc({\n\t\t\t\t\t\t\tresource: resource,\n\t\t\t\t\t\t\tisDirectory: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\te(error);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc({\n\t\t\t\t\t\tresource: resource,\n\t\t\t\t\t\tisDirectory: true,\n\t\t\t\t\t\tchildren: children.map((child) => {\n\t\t\t\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\t\t\t\tchild = strings.normalizeNFC(child); // Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tresource: uri.file(paths.join(resource.fsPath, child))\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprotected loadWorkspaceConfiguration(section?: string): TPromise<{ [relativeWorkspacePath: string]: IConfigFile }> {\n\n\t\t// Return early if we don't have a workspace\n\t\tif (!this.contextService.getWorkspace()) {\n\t\t\treturn TPromise.as({});\n\t\t}\n\n\t\treturn super.loadWorkspaceConfiguration(section);\n\t}\n\n\tprotected loadGlobalConfiguration(): { contents: any; parseErrors?: string[]; } {\n\t\tconst defaults = super.loadGlobalConfiguration();\n\t\tconst globalSettings = this.contextService.getOptions().globalSettings;\n\n\t\treturn {\n\t\t\tcontents: objects.mixin(\n\t\t\t\tobjects.clone(defaults.contents),\t// target: default values (but don't modify!)\n\t\t\t\tglobalSettings.settings,\t\t\t// source: global configured values\n\t\t\t\ttrue\t\t\t\t\t\t\t\t// overwrite\n\t\t\t),\n\t\t\tparseErrors: globalSettings.settingsParseErrors\n\t\t};\n\t}\n\n\tpublic dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.toDispose();\n\t}\n}"]}