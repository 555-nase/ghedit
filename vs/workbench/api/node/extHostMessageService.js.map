{"version":3,"sources":["vs/workbench/api/node/extHostMessageService.ts"],"names":[],"mappings":"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","file":"vs/workbench/api/node/extHostMessageService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport {Remotable, IThreadService} from 'vs/platform/thread/common/thread';\nimport {IMessageService} from 'vs/platform/message/common/message';\nimport Severity from 'vs/base/common/severity';\nimport {Action} from 'vs/base/common/actions';\nimport {TPromise as Promise} from 'vs/base/common/winjs.base';\nimport vscode = require('vscode');\n\nexport class ExtHostMessageService {\n\n\tprivate _proxy: MainThreadMessageService;\n\tprivate _commands: typeof vscode.commands;\n\n\tconstructor(@IThreadService threadService: IThreadService, commands: typeof vscode.commands) {\n\t\tthis._proxy = threadService.getRemotable(MainThreadMessageService);\n\t\tthis._commands = commands;\n\t}\n\n\tshowMessage(severity: Severity, message: string, commands: (string|vscode.MessageItem)[]): Thenable<string|vscode.MessageItem> {\n\n\t\tconst items: { title: string; handle: number; }[] = [];\n\n\t\tfor (let handle = 0; handle < commands.length; handle++) {\n\t\t\tlet command = commands[handle];\n\t\t\tif (typeof command === 'string') {\n\t\t\t\titems.push({ title: command, handle });\n\t\t\t} else {\n\t\t\t\titems.push({ title: command.title, handle });\n\t\t\t}\n\t\t}\n\n\t\treturn this._proxy.showMessage(severity, message, items).then(handle => {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\treturn commands[handle];\n\t\t\t}\n\t\t});\n\t}\n}\n\n@Remotable.MainContext('MainThreadMessageService')\nexport class MainThreadMessageService {\n\n\tprivate _messageService: IMessageService;\n\n\tconstructor(@IMessageService messageService:IMessageService) {\n\t\tthis._messageService = messageService;\n\t}\n\n\tshowMessage(severity: Severity, message: string, commands: { title: string; handle: number;}[]): Thenable<number> {\n\n\t\tlet hide: (handle?: number) => void;\n\t\tlet actions: Action[] = [];\n\n\t\tactions.push(new Action('__close', nls.localize('close', \"Close\"), undefined, true, () => {\n\t\t\thide();\n\t\t\treturn Promise.as(undefined);\n\t\t}));\n\n\t\tcommands.forEach(command => {\n\t\t\tactions.push(new Action('_extension_message_handle_' + command.handle, command.title, undefined, true, () => {\n\t\t\t\thide(command.handle);\n\t\t\t\treturn Promise.as(undefined);\n\t\t\t}));\n\t\t});\n\n\t\treturn new Promise<number>((c) => {\n\t\t\tlet messageHide: Function;\n\n\t\t\thide = (handle?: number) => {\n\t\t\t\tmessageHide();\n\t\t\t\tc(handle);\n\t\t\t};\n\n\t\t\tmessageHide = this._messageService.show(severity, {\n\t\t\t\tmessage,\n\t\t\t\tactions\n\t\t\t});\n\t\t});\n\t}\n}\n"]}