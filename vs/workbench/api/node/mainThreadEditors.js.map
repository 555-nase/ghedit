{"version":3,"file":"vs/workbench/api/node/mainThreadEditors.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/api/node/mainThreadEditors.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Event, {Emitter} from 'vs/base/common/event';\nimport {IEditor} from 'vs/platform/editor/common/editor';\nimport {ICodeEditorService} from 'vs/editor/common/services/codeEditorService';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\nimport {RunOnceScheduler} from 'vs/base/common/async';\nimport {Range} from 'vs/editor/common/core/range';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {EndOfLine} from 'vs/workbench/api/node/extHostTypes';\n\nexport interface ITextEditorConfigurationUpdate {\n\ttabSize?: number | string;\n\tinsertSpaces?: boolean | string;\n\tcursorStyle?: EditorCommon.TextEditorCursorStyle;\n}\nexport interface IResolvedTextEditorConfiguration {\n\ttabSize: number;\n\tinsertSpaces: boolean;\n\tcursorStyle: EditorCommon.TextEditorCursorStyle;\n}\n\nfunction configurationsEqual(a:IResolvedTextEditorConfiguration, b:IResolvedTextEditorConfiguration) {\n\tif (a && !b || !a && b) {\n\t\treturn false;\n\t}\n\tif (!a && !b) {\n\t\treturn true;\n\t}\n\treturn (\n\t\ta.tabSize === b.tabSize\n\t\t&& a.insertSpaces === b.insertSpaces\n\t);\n}\n\nexport interface IFocusTracker {\n\tonGainedFocus(): void;\n\tonLostFocus(): void;\n}\n\nexport enum TextEditorRevealType {\n\tDefault,\n\tInCenter,\n\tInCenterIfOutsideViewport\n}\n\n/**\n * Text Editor that is permanently bound to the same model.\n * It can be bound or not to a CodeEditor.\n */\nexport class MainThreadTextEditor {\n\n\tprivate _id: string;\n\tprivate _model: EditorCommon.IModel;\n\tprivate _modelService: IModelService;\n\tprivate _modelListeners: IDisposable[];\n\tprivate _codeEditor: EditorCommon.ICommonCodeEditor;\n\tprivate _focusTracker: IFocusTracker;\n\tprivate _codeEditorListeners: IDisposable[];\n\n\tprivate _lastSelection: EditorCommon.IEditorSelection[];\n\tprivate _configuration: IResolvedTextEditorConfiguration;\n\n\tprivate _onSelectionChanged: Emitter<EditorCommon.IEditorSelection[]>;\n\tprivate _onConfigurationChanged: Emitter<IResolvedTextEditorConfiguration>;\n\n\tconstructor(\n\t\tid: string,\n\t\tmodel:EditorCommon.IModel,\n\t\tcodeEditor:EditorCommon.ICommonCodeEditor,\n\t\tfocusTracker:IFocusTracker,\n\t\tmodelService: IModelService\n\t) {\n\t\tthis._id = id;\n\t\tthis._model = model;\n\t\tthis._codeEditor = null;\n\t\tthis._focusTracker = focusTracker;\n\t\tthis._modelService = modelService;\n\t\tthis._codeEditorListeners = [];\n\n\t\tthis._onSelectionChanged = new Emitter<EditorCommon.IEditorSelection[]>();\n\t\tthis._onConfigurationChanged = new Emitter<IResolvedTextEditorConfiguration>();\n\n\t\tthis._lastSelection = [ new Selection(1,1,1,1) ];\n\t\tthis._setConfiguration(this._readConfiguration(this._model, this._codeEditor));\n\t\tthis._modelListeners = [];\n\t\tthis._modelListeners.push(this._model.addListener2(EditorCommon.EventType.ModelOptionsChanged, (e) => {\n\t\t\tthis._setConfiguration(this._readConfiguration(this._model, this._codeEditor));\n\t\t}));\n\n\t\tthis.setCodeEditor(codeEditor);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._model = null;\n\t\tthis._modelListeners = dispose(this._modelListeners);\n\t\tthis._codeEditor = null;\n\t\tthis._codeEditorListeners = dispose(this._codeEditorListeners);\n\t}\n\n\tpublic getId(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic getModel(): EditorCommon.IModel {\n\t\treturn this._model;\n\t}\n\n\tpublic hasCodeEditor(codeEditor:EditorCommon.ICommonCodeEditor): boolean {\n\t\treturn (this._codeEditor === codeEditor);\n\t}\n\n\tpublic setCodeEditor(codeEditor:EditorCommon.ICommonCodeEditor): void {\n\t\tif (this.hasCodeEditor(codeEditor)) {\n\t\t\t// Nothing to do...\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditorListeners = dispose(this._codeEditorListeners);\n\n\t\tthis._codeEditor = codeEditor;\n\t\tif (this._codeEditor) {\n\n\t\t\tlet forwardSelection = () => {\n\t\t\t\tthis._lastSelection = this._codeEditor.getSelections();\n\t\t\t\tthis._onSelectionChanged.fire(this._lastSelection);\n\t\t\t};\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.CursorSelectionChanged, forwardSelection));\n\t\t\tif (!Selection.selectionsArrEqual(this._lastSelection, this._codeEditor.getSelections())) {\n\t\t\t\tforwardSelection();\n\t\t\t}\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorFocus, () => {\n\t\t\t\tthis._focusTracker.onGainedFocus();\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.EditorBlur, () => {\n\t\t\t\tthis._focusTracker.onLostFocus();\n\t\t\t}));\n\t\t\tthis._codeEditorListeners.push(this._codeEditor.addListener2(EditorCommon.EventType.ConfigurationChanged, () => {\n\t\t\t\tthis._setConfiguration(this._readConfiguration(this._model, this._codeEditor));\n\t\t\t}));\n\t\t\tthis._setConfiguration(this._readConfiguration(this._model, this._codeEditor));\n\t\t}\n\t}\n\n\tpublic isVisible(): boolean {\n\t\treturn !!this._codeEditor;\n\t}\n\n\tpublic get onSelectionChanged(): Event<EditorCommon.IEditorSelection[]> {\n\t\treturn this._onSelectionChanged.event;\n\t}\n\n\tpublic get onConfigurationChanged(): Event<IResolvedTextEditorConfiguration> {\n\t\treturn this._onConfigurationChanged.event;\n\t}\n\n\tpublic getSelections(): EditorCommon.IEditorSelection[] {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.getSelections();\n\t\t}\n\t\treturn this._lastSelection;\n\t}\n\n\tpublic setSelections(selections:EditorCommon.ISelection[]): void {\n\t\tif (this._codeEditor) {\n\t\t\tthis._codeEditor.setSelections(selections);\n\t\t\treturn;\n\t\t}\n\t\tthis._lastSelection = selections.map(Selection.liftSelection);\n\t\tconsole.warn('setSelections on invisble editor');\n\t}\n\n\tpublic getConfiguration(): IResolvedTextEditorConfiguration {\n\t\treturn this._configuration;\n\t}\n\n\tprivate _setIndentConfiguration(newConfiguration:ITextEditorConfigurationUpdate): void {\n\t\tif (newConfiguration.tabSize === 'auto' || newConfiguration.insertSpaces === 'auto') {\n\t\t\t// one of the options was set to 'auto' => detect indentation\n\n\t\t\tlet creationOpts = this._modelService.getCreationOptions();\n\t\t\tlet insertSpaces = creationOpts.insertSpaces;\n\t\t\tlet tabSize = creationOpts.tabSize;\n\n\t\t\tif (newConfiguration.insertSpaces !== 'auto') {\n\t\t\t\tif (typeof newConfiguration.insertSpaces !== 'undefined') {\n\t\t\t\t\tinsertSpaces = (newConfiguration.insertSpaces === 'false' ? false : Boolean(newConfiguration.insertSpaces));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newConfiguration.tabSize !== 'auto') {\n\t\t\t\tif (typeof newConfiguration.tabSize !== 'undefined') {\n\t\t\t\t\tlet parsedTabSize = parseInt(<string>newConfiguration.tabSize, 10);\n\t\t\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\t\t\ttabSize = parsedTabSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._model.detectIndentation(insertSpaces, tabSize);\n\t\t\treturn;\n\t\t}\n\n\t\tlet newOpts: EditorCommon.ITextModelUpdateOptions = {};\n\t\tif (typeof newConfiguration.insertSpaces !== 'undefined') {\n\t\t\tnewOpts.insertSpaces = (newConfiguration.insertSpaces === 'false' ? false : Boolean(newConfiguration.insertSpaces));\n\t\t}\n\t\tif (typeof newConfiguration.tabSize !== 'undefined') {\n\t\t\tlet parsedTabSize = parseInt(<string>newConfiguration.tabSize, 10);\n\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\tnewOpts.tabSize = parsedTabSize;\n\t\t\t}\n\t\t}\n\t\tthis._model.updateOptions(newOpts);\n\t}\n\n\tpublic setConfiguration(newConfiguration:ITextEditorConfigurationUpdate): void {\n\t\tthis._setIndentConfiguration(newConfiguration);\n\n\t\tif (newConfiguration.cursorStyle) {\n\t\t\tlet newCursorStyle = EditorCommon.cursorStyleToString(newConfiguration.cursorStyle);\n\n\t\t\tif (!this._codeEditor) {\n\t\t\t\tconsole.warn('setConfiguration on invisible editor');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._codeEditor.updateOptions({\n\t\t\t\tcursorStyle: newCursorStyle\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setDecorations(key: string, ranges:EditorCommon.IRangeWithMessage[]): void {\n\t\tif (!this._codeEditor) {\n\t\t\tconsole.warn('setDecorations on invisible editor');\n\t\t\treturn;\n\t\t}\n\t\tthis._codeEditor.setDecorations(key, ranges);\n\t}\n\n\tpublic revealRange(range:EditorCommon.IRange, revealType:TextEditorRevealType): void {\n\t\tif (!this._codeEditor) {\n\t\t\tconsole.warn('revealRange on invisible editor');\n\t\t\treturn;\n\t\t}\n\t\tif (revealType === TextEditorRevealType.Default) {\n\t\t\tthis._codeEditor.revealRange(range);\n\t\t} else if (revealType === TextEditorRevealType.InCenter) {\n\t\t\tthis._codeEditor.revealRangeInCenter(range);\n\t\t} else if (revealType === TextEditorRevealType.InCenterIfOutsideViewport) {\n\t\t\tthis._codeEditor.revealRangeInCenterIfOutsideViewport(range);\n\t\t} else {\n\t\t\tconsole.warn('Unknown revealType');\n\t\t}\n\t}\n\n\tprivate _readConfiguration(model:EditorCommon.IModel, codeEditor:EditorCommon.ICommonCodeEditor): IResolvedTextEditorConfiguration {\n\t\tif (model.isDisposed()) {\n\t\t\t// shutdown time\n\t\t\treturn this._configuration;\n\t\t}\n\t\tlet cursorStyle = this._configuration ? this._configuration.cursorStyle : EditorCommon.TextEditorCursorStyle.Line;\n\t\tif (codeEditor) {\n\t\t\tlet codeEditorOpts = codeEditor.getConfiguration();\n\t\t\tcursorStyle = codeEditorOpts.cursorStyle;\n\t\t}\n\n\t\tlet indent = model.getOptions();\n\t\treturn {\n\t\t\tinsertSpaces: indent.insertSpaces,\n\t\t\ttabSize: indent.tabSize,\n\t\t\tcursorStyle: cursorStyle\n\t\t};\n\t}\n\n\tprivate _setConfiguration(newConfiguration:IResolvedTextEditorConfiguration): void {\n\t\tif (configurationsEqual(this._configuration, newConfiguration)) {\n\t\t\treturn;\n\t\t}\n\t\tthis._configuration = newConfiguration;\n\t\tthis._onConfigurationChanged.fire(this._configuration);\n\t}\n\n\tpublic isFocused(): boolean {\n\t\tif (this._codeEditor) {\n\t\t\treturn this._codeEditor.isFocused();\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic matches(editor: IEditor): boolean {\n\t\treturn editor.getControl() === this._codeEditor;\n\t}\n\n\tpublic applyEdits(versionIdCheck:number, edits:EditorCommon.ISingleEditOperation[], setEndOfLine:EndOfLine): boolean {\n\t\tif (this._model.getVersionId() !== versionIdCheck) {\n\t\t\tconsole.warn('Model has changed in the meantime!');\n\t\t\t// throw new Error('Model has changed in the meantime!');\n\t\t\t// model changed in the meantime\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._codeEditor) {\n\t\t\tif (setEndOfLine === EndOfLine.CRLF) {\n\t\t\t\tthis._model.setEOL(EditorCommon.EndOfLineSequence.CRLF);\n\t\t\t} else if (setEndOfLine === EndOfLine.LF) {\n\t\t\t\tthis._model.setEOL(EditorCommon.EndOfLineSequence.LF);\n\t\t\t}\n\n\t\t\tlet transformedEdits = edits.map((edit): EditorCommon.IIdentifiedSingleEditOperation => {\n\t\t\t\treturn {\n\t\t\t\t\tidentifier: null,\n\t\t\t\t\trange: Range.lift(edit.range),\n\t\t\t\t\ttext: edit.text,\n\t\t\t\t\tforceMoveMarkers: edit.forceMoveMarkers\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn this._codeEditor.executeEdits('MainThreadTextEditor', transformedEdits) || true;\n\t\t}\n\n\t\tconsole.warn('applyEdits on invisible editor');\n\t\treturn false;\n\t}\n}\n\n/**\n * Keeps track of what goes on in the main thread and maps models => text editors\n */\nexport class MainThreadEditorsTracker {\n\n\tprivate static _LAST_TEXT_EDITOR_ID = 0;\n\tprivate _nextId(): string {\n\t\treturn String(++MainThreadEditorsTracker._LAST_TEXT_EDITOR_ID);\n\t}\n\n\tprivate _toDispose: IDisposable[];\n\tprivate _codeEditorService: ICodeEditorService;\n\tprivate _modelService: IModelService;\n\tprivate _updateMapping: RunOnceScheduler;\n\tprivate _editorModelChangeListeners: {[editorId:string]:IDisposable;};\n\n\tprivate _model2TextEditors: {\n\t\t[modelUri:string]: MainThreadTextEditor[];\n\t};\n\tprivate _focusedTextEditorId: string;\n\tprivate _visibleTextEditorIds: string[];\n\tprivate _onTextEditorAdd: Emitter<MainThreadTextEditor>;\n\tprivate _onTextEditorRemove: Emitter<MainThreadTextEditor>;\n\tprivate _onDidChangeFocusedTextEditor: Emitter<string>;\n\tprivate _onDidUpdateTextEditors: Emitter<void>;\n\n\tprivate _focusTracker: IFocusTracker;\n\n\tconstructor(\n\t\teditorService:ICodeEditorService,\n\t\tmodelService:IModelService\n\t) {\n\t\tthis._codeEditorService = editorService;\n\t\tthis._modelService = modelService;\n\t\tthis._toDispose = [];\n\t\tthis._focusedTextEditorId = null;\n\t\tthis._visibleTextEditorIds = [];\n\t\tthis._editorModelChangeListeners = Object.create(null);\n\t\tthis._model2TextEditors = Object.create(null);\n\t\tthis._onTextEditorAdd = new Emitter<MainThreadTextEditor>();\n\t\tthis._onTextEditorRemove = new Emitter<MainThreadTextEditor>();\n\t\tthis._onDidUpdateTextEditors = new Emitter<void>();\n\t\tthis._onDidChangeFocusedTextEditor = new Emitter<string>();\n\t\tthis._focusTracker = {\n\t\t\tonGainedFocus: () => this._updateFocusedTextEditor(),\n\t\t\tonLostFocus: () => this._updateFocusedTextEditor()\n\t\t};\n\n\t\tthis._modelService.onModelAdded(this._onModelAdded, this, this._toDispose);\n\t\tthis._modelService.onModelRemoved(this._onModelRemoved, this, this._toDispose);\n\n\t\tthis._codeEditorService.onCodeEditorAdd(this._onCodeEditorAdd, this, this._toDispose);\n\t\tthis._codeEditorService.onCodeEditorRemove(this._onCodeEditorRemove, this, this._toDispose);\n\n\t\tthis._updateMapping = new RunOnceScheduler(() => this._doUpdateMapping(), 0);\n\t\tthis._toDispose.push(this._updateMapping);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._toDispose = dispose(this._toDispose);\n\t}\n\n\tprivate _onModelAdded(model: EditorCommon.IModel): void {\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onModelRemoved(model: EditorCommon.IModel): void {\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onCodeEditorAdd(codeEditor: EditorCommon.ICommonCodeEditor): void {\n\t\tthis._editorModelChangeListeners[codeEditor.getId()] = codeEditor.addListener2(EditorCommon.EventType.ModelChanged, _ => this._updateMapping.schedule());\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _onCodeEditorRemove(codeEditor: EditorCommon.ICommonCodeEditor): void {\n\t\tthis._editorModelChangeListeners[codeEditor.getId()].dispose();\n\t\tdelete this._editorModelChangeListeners[codeEditor.getId()];\n\t\tthis._updateMapping.schedule();\n\t}\n\n\tprivate _doUpdateMapping(): void {\n\t\tlet allModels = this._modelService.getModels();\n\t\t// Same filter as in extHostDocuments\n\t\tallModels = allModels.filter((model) => !model.isTooLargeForHavingARichMode());\n\t\tlet allModelsMap: { [modelUri:string]: EditorCommon.IModel; } = Object.create(null);\n\t\tallModels.forEach((model) => {\n\t\t\tallModelsMap[model.getAssociatedResource().toString()] = model;\n\t\t});\n\n\t\t// Remove text editors for models that no longer exist\n\t\tObject.keys(this._model2TextEditors).forEach((modelUri) => {\n\t\t\tif (allModelsMap[modelUri]) {\n\t\t\t\t// model still exists, will be updated below\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet textEditorsToRemove = this._model2TextEditors[modelUri];\n\t\t\tdelete this._model2TextEditors[modelUri];\n\n\t\t\tfor (let i = 0; i < textEditorsToRemove.length; i++) {\n\t\t\t\tthis._onTextEditorRemove.fire(textEditorsToRemove[i]);\n\t\t\t\ttextEditorsToRemove[i].dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Handle all visible models\n\t\tlet visibleModels = this._getVisibleModels();\n\t\tObject.keys(visibleModels).forEach((modelUri) => {\n\t\t\tlet model = visibleModels[modelUri].model;\n\t\t\tlet codeEditors = visibleModels[modelUri].codeEditors;\n\n\t\t\tif (!this._model2TextEditors[modelUri]) {\n\t\t\t\tthis._model2TextEditors[modelUri] = [];\n\t\t\t}\n\t\t\tlet existingTextEditors = this._model2TextEditors[modelUri];\n\n\t\t\t// Remove text editors if more exist\n\t\t\twhile (existingTextEditors.length > codeEditors.length) {\n\t\t\t\tlet removedTextEditor = existingTextEditors.pop();\n\t\t\t\tthis._onTextEditorRemove.fire(removedTextEditor);\n\t\t\t\tremovedTextEditor.dispose();\n\t\t\t}\n\n\t\t\t// Adjust remaining text editors\n\t\t\tfor (let i = 0; i < existingTextEditors.length; i++) {\n\t\t\t\texistingTextEditors[i].setCodeEditor(codeEditors[i]);\n\t\t\t}\n\n\t\t\t// Create new editors as needed\n\t\t\tfor (let i = existingTextEditors.length; i < codeEditors.length; i++) {\n\t\t\t\tlet newTextEditor = new MainThreadTextEditor(this._nextId(), model, codeEditors[i], this._focusTracker, this._modelService);\n\t\t\t\texistingTextEditors.push(newTextEditor);\n\t\t\t\tthis._onTextEditorAdd.fire(newTextEditor);\n\t\t\t}\n\t\t});\n\n\t\t// Handle all not visible models\n\t\tallModels.forEach((model) => {\n\t\t\tlet modelUri = model.getAssociatedResource().toString();\n\n\t\t\tif (visibleModels[modelUri]) {\n\t\t\t\t// model is visible, already handled above\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._model2TextEditors[modelUri]) {\n\t\t\t\tthis._model2TextEditors[modelUri] = [];\n\t\t\t}\n\t\t\tlet existingTextEditors = this._model2TextEditors[modelUri];\n\n\t\t\t// Remove extra text editors\n\t\t\twhile (existingTextEditors.length > 1) {\n\t\t\t\tlet removedTextEditor = existingTextEditors.pop();\n\t\t\t\tthis._onTextEditorRemove.fire(removedTextEditor);\n\t\t\t\tremovedTextEditor.dispose();\n\t\t\t}\n\n\t\t\t// Create new editor if needed or adjust it\n\t\t\tif (existingTextEditors.length === 0) {\n\t\t\t\tlet newTextEditor = new MainThreadTextEditor(this._nextId(), model, null, this._focusTracker, this._modelService);\n\t\t\t\texistingTextEditors.push(newTextEditor);\n\t\t\t\tthis._onTextEditorAdd.fire(newTextEditor);\n\t\t\t} else {\n\t\t\t\texistingTextEditors[0].setCodeEditor(null);\n\t\t\t}\n\t\t});\n\n\t\tthis._printState();\n\n\t\tthis._visibleTextEditorIds = this._findVisibleTextEditorIds();\n\n\t\tthis._updateFocusedTextEditor();\n\n\t\t// this is a sync event\n\t\tthis._onDidUpdateTextEditors.fire(undefined);\n\t}\n\n\tprivate _updateFocusedTextEditor(): void {\n\t\tthis._setFocusedTextEditorId(this._findFocusedTextEditorId());\n\t}\n\n\tprivate _findFocusedTextEditorId(): string {\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].isFocused()) {\n\t\t\t\t\treturn editors[j].getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findVisibleTextEditorIds(): string[] {\n\t\tlet result = [];\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].isVisible()) {\n\t\t\t\t\tresult.push(editors[j].getId());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tresult.sort();\n\t\treturn result;\n\t}\n\n\tprivate _setFocusedTextEditorId(focusedTextEditorId:string): void {\n\t\tif (this._focusedTextEditorId === focusedTextEditorId) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\n\t\tthis._focusedTextEditorId = focusedTextEditorId;\n\t\tthis._printState();\n\t\tthis._onDidChangeFocusedTextEditor.fire(this._focusedTextEditorId);\n\t}\n\n\n\tprivate _printState(): void {\n\t\t// console.log('----------------------');\n\t\t// Object.keys(this._model2TextEditors).forEach((modelUri) => {\n\t\t// \tlet editors = this._model2TextEditors[modelUri];\n\n\t\t// \tconsole.log(editors.map((e) => {\n\t\t// \t\treturn e.getId() + \" (\" + (e.getId() === this._focusedTextEditorId ? 'FOCUSED, ': '') + modelUri + \")\";\n\t\t// \t}).join('\\n'));\n\t\t// });\n\t}\n\n\tprivate _getVisibleModels(): IVisibleModels {\n\t\tlet r: IVisibleModels = {};\n\n\t\tlet allCodeEditors = this._codeEditorService.listCodeEditors();\n\n\t\t// Maintain a certain sorting such that the mapping doesn't change too much all the time\n\t\tallCodeEditors.sort((a, b) => strcmp(a.getId(), b.getId()));\n\n\t\tallCodeEditors.forEach((codeEditor) => {\n\t\t\tlet model = codeEditor.getModel();\n\t\t\tif (!model || model.isTooLargeForHavingARichMode()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet modelUri = model.getAssociatedResource().toString();\n\t\t\tr[modelUri] = r[modelUri] || {\n\t\t\t\tmodel: model,\n\t\t\t\tcodeEditors: []\n\t\t\t};\n\t\t\tr[modelUri].codeEditors.push(codeEditor);\n\t\t});\n\n\t\treturn r;\n\t}\n\n\tpublic getFocusedTextEditorId(): string {\n\t\treturn this._focusedTextEditorId;\n\t}\n\n\tpublic getVisibleTextEditorIds(): string[] {\n\t\treturn this._visibleTextEditorIds;\n\t}\n\n\tpublic get onTextEditorAdd(): Event<MainThreadTextEditor> {\n\t\treturn this._onTextEditorAdd.event;\n\t}\n\n\tpublic get onTextEditorRemove(): Event<MainThreadTextEditor> {\n\t\treturn this._onTextEditorRemove.event;\n\t}\n\n\tpublic get onDidUpdateTextEditors(): Event<void> {\n\t\treturn this._onDidUpdateTextEditors.event;\n\t}\n\n\tpublic get onChangedFocusedTextEditor(): Event<string> {\n\t\treturn this._onDidChangeFocusedTextEditor.event;\n\t}\n\n\tpublic findTextEditorIdFor(codeEditor:EditorCommon.ICommonCodeEditor): string {\n\t\tlet modelUris = Object.keys(this._model2TextEditors);\n\t\tfor (let i = 0, len = modelUris.length; i < len; i++) {\n\t\t\tlet editors = this._model2TextEditors[modelUris[i]];\n\t\t\tfor (let j = 0, lenJ = editors.length; j < lenJ; j++) {\n\t\t\t\tif (editors[j].hasCodeEditor(codeEditor)) {\n\t\t\t\t\treturn editors[j].getId();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic registerTextEditorDecorationType(key:string, options: EditorCommon.IDecorationRenderOptions): void {\n\t\tthis._codeEditorService.registerDecorationType(key, options);\n\t}\n\n\tpublic removeTextEditorDecorationType(key:string): void {\n\t\tthis._codeEditorService.removeDecorationType(key);\n\t}\n}\n\ninterface IVisibleModels {\n\t[modelUri:string]: {\n\t\tmodel: EditorCommon.IModel;\n\t\tcodeEditors: EditorCommon.ICommonCodeEditor[];\n\t};\n}\n\nfunction strcmp(a:string, b:string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t}\n\tif (a > b) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n"]}