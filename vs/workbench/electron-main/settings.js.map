{"version":3,"file":"vs/workbench/electron-main/settings.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/workbench/electron-main/settings.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;IAEhG,YAAY,CAAC;IAOb;QAAqC,mCAAY;QAEhD;YAFD,iBAoBC;YAjBC,kBAAM,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAEnD,cAAG,CAAC,EAAE,CAAC,WAAW,EAAE;gBACnB,KAAI,CAAC,OAAO,EAAE,CAAC;YAChB,CAAC,CAAC,CAAC;QACJ,CAAC;QAEM,kCAAQ,GAAf;YACC,IAAM,eAAe,GAAG,gBAAK,CAAC,QAAQ,WAAE,CAAC;YAEzC,sFAAsF;YACtF,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAClE,CAAC;YAED,MAAM,CAAC,eAAe,CAAC;QACxB,CAAC;QACF,sBAAC;IAAD,CAAC,AApBD,CAAqC,2BAAY,GAoBhD;IApBY,uBAAe,kBAoB3B,CAAA;IAEY,eAAO,GAAG,IAAI,eAAe,EAAE,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {app} from 'electron';\n\nimport env = require('vs/workbench/electron-main/env');\nimport {UserSettings} from 'vs/workbench/node/userSettings';\n\nexport class SettingsManager extends UserSettings {\n\n\tconstructor() {\n\t\tsuper(env.appSettingsPath, env.appKeybindingsPath);\n\n\t\tapp.on('will-quit', () => {\n\t\t\tthis.dispose();\n\t\t});\n\t}\n\n\tpublic loadSync(): boolean {\n\t\tconst settingsChanged = super.loadSync();\n\n\t\t// Store into global so that any renderer can access the value with remote.getGlobal()\n\t\tif (settingsChanged) {\n\t\t\tglobal.globalSettingsValue = JSON.stringify(this.globalSettings);\n\t\t}\n\n\t\treturn settingsChanged;\n\t}\n}\n\nexport const manager = new SettingsManager();"]}