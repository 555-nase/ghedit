var __decorate=this&&this.__decorate||function(e,t,r,o){var n,i=arguments.length,s=i<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(n=e[a])&&(s=(i<3?n(s):i>3?n(t,r,s):n(t,r))||s);return i>3&&s&&Object.defineProperty(t,r,s),s},__param=this&&this.__param||function(e,t){return function(r,o){t(r,o,e)}};define(["require","exports","vs/nls","vs/base/common/json","vs/base/node/pfs","vs/editor/common/services/modeService","vs/editor/common/modes/languageConfigurationRegistry","vs/platform/jsonschemas/common/jsonContributionRegistry","vs/platform/platform"],function(e,t,r,o,n,i,s,a,c){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";var l=function(){function e(e){var t=this;this._modeService=e,this._handleModes(this._modeService.getRegisteredModes()),this._modeService.onDidAddModes(function(e){return t._handleModes(e)})}return e.prototype._handleModes=function(e){var t=this;e.forEach(function(e){return t._handleMode(e)})},e.prototype._handleMode=function(e){var t=this,r=this._modeService.onDidCreateMode(function(o){if(o.getId()===e){var n=t._modeService.getConfigurationFiles(e);n.forEach(function(r){return t._handleConfigFile(e,r)}),r.dispose()}})},e.prototype._handleConfigFile=function(e,t){var i=this;n.readFile(t).then(function(n){var s=[],a=o.parse(n.toString(),s);s.length&&console.error(r.localize("parseErrors","Errors parsing {0}: {1}",t,s.join("\n"))),i._handleConfig(e,a)},function(e){console.error(e)})},e.prototype._handleConfig=function(e,t){var r={};t.comments&&(r.comments=t.comments),t.brackets&&(r.brackets=t.brackets),t.autoClosingPairs&&(r.autoClosingPairs=this._mapCharacterPairs(t.autoClosingPairs)),t.surroundingPairs&&(r.surroundingPairs=this._mapCharacterPairs(t.surroundingPairs)),s.LanguageConfigurationRegistry.register(e,r)},e.prototype._mapCharacterPairs=function(e){return e.map(function(e){return Array.isArray(e)?{open:e[0],close:e[1]}:e})},e=__decorate([__param(0,i.IModeService)],e)}();t.LanguageConfigurationFileHandler=l;var m="vscode://schemas/language-configuration",d={"default":{comments:{blockComment:["/*","*/"],lineComment:"//"},brackets:[["(",")"],["[","]"],["{","}"]],autoClosingPairs:[["(",")"],["[","]"],["{","}"]],surroundingPairs:[["(",")"],["[","]"],["{","}"]]},definitions:{openBracket:{type:"string",description:r.localize("schema.openBracket","The opening bracket character or string sequence.")},closeBracket:{type:"string",description:r.localize("schema.closeBracket","The closing bracket character or string sequence.")},bracketPair:{type:"array",items:[{$ref:"#definitions/openBracket"},{$ref:"#definitions/closeBracket"}]}},properties:{comments:{"default":{comments:{blockComment:["/*","*/"],lineComment:"//"}},description:r.localize("schema.comments","Defines the comment symbols"),type:"object",properties:{blockComment:{type:"array",description:r.localize("schema.blockComments","Defines how block comments are marked."),items:[{type:"string",description:r.localize("schema.blockComment.begin","The character sequence that starts a block comment.")},{type:"string",description:r.localize("schema.blockComment.end","The character sequence that ends a block comment.")}]},lineComment:{type:"string",description:r.localize("schema.lineComment","The character sequence that starts a line comment.")}}},brackets:{"default":{brackets:[["(",")"],["[","]"],["{","}"]]},description:r.localize("schema.brackets","Defines the bracket symbols that increase or decrease the indentation."),type:"array",items:{$ref:"#definitions/bracketPair"}},autoClosingPairs:{"default":{autoClosingPairs:[["(",")"],["[","]"],["{","}"]]},description:r.localize("schema.autoClosingPairs","Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically."),type:"array",items:{oneOf:[{$ref:"#definitions/bracketPair"},{type:"object",properties:{open:{$ref:"#definitions/openBracket"},close:{$ref:"#definitions/closeBracket"},notIn:{type:"array",description:r.localize("schema.autoClosingPairs.notIn","Defines a list of scopes where the auto pairs are disabled."),items:{"enum":["string","comment"]}}}}]}},surroundingPairs:{"default":{surroundingPairs:[["(",")"],["[","]"],["{","}"]]},description:r.localize("schema.surroundingPairs","Defines the bracket pairs that can be used to surround a selected string."),type:"array",items:{oneOf:[{$ref:"#definitions/bracketPair"},{type:"object",properties:{open:{$ref:"#definitions/openBracket"},close:{$ref:"#definitions/closeBracket"}}}]}}}},u=c.Registry.as(a.Extensions.JSONContribution);u.registerSchema(m,d)});