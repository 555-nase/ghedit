{"version":3,"file":"vs/editor/standalone-languages/bat.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/standalone-languages/bat.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {ILanguage} from './types';\n\nexport var language = <ILanguage> {\n\tdisplayName:    'Batch',\n\tname:           'bat',\n\tdefaultToken: '',\n\tignoreCase: true,\n\n\tlineComment: 'REM',\n\n\tautoClosingPairs: [\t['{','}' ], \t['[',']' ],\t['(',')' ],\t['\"','\"' ]], // Exclude '\n\n\tbrackets: [\n\t\t{ token: 'punctuation.bracket', open: '{', close: '}' },\n\t\t{ token: 'punctuation.parenthesis', open: '(', close: ')' },\n\t\t{ token: 'punctuation.square', open: '[', close: ']' }\n\t],\n\n\t// enhancedBrackets: [\n\t// \t\t{\n\t// \t\t\topenTrigger: 'l',\n\t// \t\t\topen: /setlocal$/i,\n\t// \t\t\tcloseComplete: 'endlocal',\n\t// \t\t\tmatchCase: true,\n\t// \t\t\tcloseTrigger: 'l',\n\t// \t\t\tclose: /endlocal$/i,\n\t// \t\t\ttokenType: 'keyword.tag-setlocal'\n\t// \t\t}\n\t// \t],\n\n\tkeywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,\n\n\t// we include these common regular expressions\n\tsymbols:  /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n\tescapes:  /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n\n\t// The main tokenizer for our languages\n\ttokenizer: {\n\t\troot: [\n\n\t\t\t[/^(\\s*)(rem(?:\\s.*|))$/, ['','comment']],\n\n\t\t\t[/(\\@?)(@keywords)(?!\\w)/, [{token:'support.function'}, {token:'support.function.$2'}]],\n\n\t\t\t// whitespace\n\t\t\t[/[ \\t\\r\\n]+/, ''],\n\n\t\t\t// blocks\n\t\t\t[/setlocal(?!\\w)/, { token: 'support.function.tag-setlocal', bracket: '@open' }],\n\t\t\t[/endlocal(?!\\w)/, { token: 'support.function.tag-setlocal', bracket: '@close' }],\n\n\t\t\t// words\n\t\t\t[/[a-zA-Z_]\\w*/, ''],\n\n\t\t\t// labels\n\t\t\t[/:\\w*/, 'metatag'],\n\n\t\t\t// variables\n\t\t\t[/%[^%]+%/, 'variable'],\n\t\t\t[/%%[\\w]+(?!\\w)/, 'variable'],\n\n\t\t\t// punctuations\n\t\t\t[/[{}()\\[\\]]/, '@brackets'],\n\t\t\t[/@symbols/, 'punctuation'],\n\n\t\t\t// numbers\n\t\t\t[/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'constant.numeric.float'],\n\t\t\t[/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'constant.numeric.hex'],\n\t\t\t[/\\d+/, 'constant.numeric'],\n\n\t\t\t// punctuation: after number because of .\\d floats\n\t\t\t[/[;,.]/, 'punctuation'],\n\n\t\t\t// strings:\n\t\t\t[/\"/,  'string', '@string.\"' ],\n\t\t\t[/'/, 'string', '@string.\\''],\n\t\t],\n\n\t\tstring: [\n\t\t\t[/[^\\\\\"'%]+/, { cases: { '@eos': {token:'string', next:'@popall'}, '@default': 'string' }}],\n\t\t\t[/@escapes/, 'string.escape'],\n\t\t\t[/\\\\./, 'string.escape.invalid'],\n\t\t\t[/%[\\w ]+%/, 'variable'],\n\t\t\t[/%%[\\w]+(?!\\w)/, 'variable'],\n\t\t\t[/[\"']/,     { cases: { '$#==$S2' : { token: 'string', next: '@pop' },\n\t\t\t\t\t\t\t'@default': 'string' }} ],\n\t\t\t[/$/, 'string', '@popall']\n\t\t],\n\n\t}\n};"]}