{"version":3,"file":"vs/editor/contrib/quickOpen/browser/quickOpenEditorWidget.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/quickOpen/browser/quickOpenEditorWidget.ts"],"names":[],"mappings":";IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAYb;QASC,+BAAY,UAAsB,EAAE,IAAa,EAAE,QAAiB,EAAE,MAA2B,EAAE,aAA2C;YAC7I,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;QACpD,CAAC;QAEO,sCAAM,GAAd,UAAe,IAAa,EAAE,QAAiB,EAAE,MAA2B,EAAE,aAA2C;YACxH,IAAI,CAAC,OAAO,GAAG,WAAC,EAAE,CAAC,GAAG,EAAE,CAAC,cAAc,EAAE,CAAC;YAE1C,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CACzC,IAAI,CAAC,OAAO,EACZ;gBACC,IAAI,EAAC,IAAI;gBACT,QAAQ,EAAC,QAAQ;gBACjB,MAAM,EAAC,MAAM;aACb,EAAE;gBACF,gBAAgB,EAAE,IAAI;gBACtB,cAAc,EAAE,aAAa,CAAC,cAAc;aAC5C,EACD,IAAI,CACJ,CAAC;YAEF,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QAEM,wCAAQ,GAAf,UAAgB,KAAoB,EAAE,KAAgB;YACrD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC;QAEM,qCAAK,GAAZ;YACC,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC;QACjC,CAAC;QAEM,0CAAU,GAAjB;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEM,uCAAO,GAAd;YACC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAChC,CAAC;QAEM,yCAAS,GAAhB;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QAEM,oCAAI,GAAX,UAAY,KAAY;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YAEpB,IAAI,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;YACnD,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,mBAAS,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;YACrF,CAAC;YAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QAEM,oCAAI,GAAX;YACC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC;QAEM,2CAAW,GAAlB;YACC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC;oBACN,UAAU,EAAE,+CAA+B,CAAC,UAAU;iBACtD,CAAC;YACH,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAhFc,wBAAE,GAAG,sCAAsC,CAAC;QAiF5D,4BAAC;IAAD,CAAC,AAnFD,IAmFC;IAnFY,6BAAqB,wBAmFjC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {$, Dimension} from 'vs/base/browser/builder';\nimport {QuickOpenModel} from 'vs/base/parts/quickopen/browser/quickOpenModel';\nimport {QuickOpenWidget} from 'vs/base/parts/quickopen/browser/quickOpenWidget';\nimport {IAutoFocus} from 'vs/base/parts/quickopen/common/quickOpen';\nimport {ICodeEditor, IOverlayWidget, IOverlayWidgetPosition, OverlayWidgetPositionPreference} from 'vs/editor/browser/editorBrowser';\n\nexport interface IQuickOpenEditorWidgetOptions {\n\tinputAriaLabel: string;\n}\n\nexport class QuickOpenEditorWidget implements IOverlayWidget {\n\n\tprivate static ID = 'editor.contrib.quickOpenEditorWidget';\n\n\tprivate codeEditor:ICodeEditor;\n\tprivate visible:boolean;\n\tprivate quickOpenWidget:QuickOpenWidget;\n\tprivate domNode:HTMLElement;\n\n\tconstructor(codeEditor:ICodeEditor, onOk:()=>void, onCancel:()=>void, onType:(value:string)=>void, configuration:IQuickOpenEditorWidgetOptions) {\n\t\tthis.codeEditor = codeEditor;\n\n\t\tthis.create(onOk, onCancel, onType, configuration);\n\t}\n\n\tprivate create(onOk:()=>void, onCancel:()=>void, onType:(value:string)=>void, configuration:IQuickOpenEditorWidgetOptions):void {\n\t\tthis.domNode = $().div().getHTMLElement();\n\n\t\tthis.quickOpenWidget = new QuickOpenWidget(\n\t\t\tthis.domNode,\n\t\t\t{\n\t\t\t\tonOk:onOk,\n\t\t\t\tonCancel:onCancel,\n\t\t\t\tonType:onType\n\t\t\t}, {\n\t\t\t\tinputPlaceHolder: null,\n\t\t\t\tinputAriaLabel: configuration.inputAriaLabel\n\t\t\t},\n\t\t\tnull\n\t\t);\n\n\t\tthis.quickOpenWidget.create();\n\t\tthis.codeEditor.addOverlayWidget(this);\n\t}\n\n\tpublic setInput(model:QuickOpenModel, focus:IAutoFocus):void {\n\t\tthis.quickOpenWidget.setInput(model, focus);\n\t}\n\n\tpublic getId(): string {\n\t\treturn QuickOpenEditorWidget.ID;\n\t}\n\n\tpublic getDomNode():HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tpublic destroy():void {\n\t\tthis.codeEditor.removeOverlayWidget(this);\n\t\tthis.quickOpenWidget.dispose();\n\t}\n\n\tpublic isVisible():boolean {\n\t\treturn this.visible;\n\t}\n\n\tpublic show(value:string):void {\n\t\tthis.visible = true;\n\n\t\tvar editorLayout = this.codeEditor.getLayoutInfo();\n\t\tif (editorLayout) {\n\t\t\tthis.quickOpenWidget.layout(new Dimension(editorLayout.width, editorLayout.height));\n\t\t}\n\n\t\tthis.quickOpenWidget.show(value);\n\t\tthis.codeEditor.layoutOverlayWidget(this);\n\t}\n\n\tpublic hide():void {\n\t\tthis.visible = false;\n\t\tthis.quickOpenWidget.hide();\n\t\tthis.codeEditor.layoutOverlayWidget(this);\n\t}\n\n\tpublic getPosition(): IOverlayWidgetPosition {\n\t\tif (this.visible) {\n\t\t\treturn {\n\t\t\t\tpreference: OverlayWidgetPositionPreference.TOP_CENTER\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n}"]}