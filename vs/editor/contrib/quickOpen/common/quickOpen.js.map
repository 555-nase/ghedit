{"version":3,"file":"vs/editor/contrib/quickOpen/common/quickOpen.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/quickOpen/common/quickOpen.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport {illegalArgument, onUnexpectedError} from 'vs/base/common/errors';\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {Range} from 'vs/editor/common/core/range';\nimport {IModel} from 'vs/editor/common/editorCommon';\nimport {CommonEditorRegistry} from 'vs/editor/common/editorCommonExtensions';\nimport {IOutlineEntry, OutlineRegistry} from 'vs/editor/common/modes';\nimport {IModelService} from 'vs/editor/common/services/modelService';\n\nexport interface IOutline {\n\tentries: IOutlineEntry[];\n\toutlineGroupLabel: { [n: string]: string; };\n}\n\nexport function getOutlineEntries(model: IModel): TPromise<IOutline> {\n\n\tlet groupLabels: { [n: string]: string } = Object.create(null);\n\tlet entries: IOutlineEntry[] = [];\n\n\tlet promises = OutlineRegistry.all(model).map(support => {\n\n\t\tif (support.outlineGroupLabel) {\n\t\t\tlet keys = Object.keys(support.outlineGroupLabel);\n\t\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\t\tlet key = keys[i];\n\t\t\t\tgroupLabels[key] = support.outlineGroupLabel[key];\n\t\t\t}\n\t\t}\n\n\t\treturn support.getOutline(model.getAssociatedResource()).then(result => {\n\t\t\tif (Array.isArray(result)) {\n\t\t\t\tentries.push(...result);\n\t\t\t}\n\t\t}, err => {\n\t\t\tonUnexpectedError(err);\n\t\t});\n\t});\n\n\treturn TPromise.join(promises).then(() => {\n\t\tlet flatEntries: IOutlineEntry[] = [];\n\t\tflatten(flatEntries, entries, '');\n\t\tflatEntries.sort(compareEntriesUsingStart);\n\n\t\treturn {\n\t\t\tentries: flatEntries,\n\t\t\toutlineGroupLabel: groupLabels\n\t\t};\n\t});\n}\n\nfunction compareEntriesUsingStart(a: IOutlineEntry, b: IOutlineEntry): number{\n\treturn Range.compareRangesUsingStarts(Range.lift(a.range), Range.lift(b.range));\n}\n\nfunction flatten(bucket: IOutlineEntry[], entries: IOutlineEntry[], overrideContainerLabel: string): void {\n\tfor (let entry of entries) {\n\t\tbucket.push({\n\t\t\ttype: entry.type,\n\t\t\trange: entry.range,\n\t\t\tlabel: entry.label,\n\t\t\ticon: entry.icon,\n\t\t\tcontainerLabel: entry.containerLabel || overrideContainerLabel\n\t\t});\n\t\tif (entry.children) {\n\t\t\tflatten(bucket, entry.children, entry.label);\n\t\t}\n\t}\n}\n\n\nCommonEditorRegistry.registerLanguageCommand('_executeDocumentSymbolProvider', function(accessor, args) {\n\tconst {resource} = args;\n\tif (!(resource instanceof URI)) {\n\t\tthrow illegalArgument('resource');\n\t}\n\tconst model = accessor.get(IModelService).getModel(resource);\n\tif (!model) {\n\t\tthrow illegalArgument('resource');\n\t}\n\treturn getOutlineEntries(model);\n});"]}