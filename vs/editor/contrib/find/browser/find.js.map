{"version":3,"file":"vs/editor/contrib/find/browser/find.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/contrib/find/browser/find.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IASb;QAA6B,kCAAoB;QAIhD,wBAAY,MAAkB,EAAuB,kBAAuC,EAAsB,iBAAqC;YACtJ,kBAAM,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAEjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,uBAAU,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,kBAAkB,EAAE,iBAAiB,CAAC,CAAC,CAAC;QACjH,CAAC;QAES,+BAAM,GAAhB,UAAiB,IAAsB;YACtC,gBAAK,CAAC,MAAM,YAAC,IAAI,CAAC,CAAC;YAEnB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,qCAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACjE,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,qCAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;gBACrE,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;YAC/B,CAAC;QACF,CAAC;QAd+B;uBAAC,iCAAmB;uBAA2C,sCAAkB;0BAA7D;QAerD,qBAAC;IAAD,CAAC,AAnBD,CAA6B,qCAAoB,GAmBhD;IAED,+CAAqB,CAAC,0BAA0B,CAAC,cAAc,CAAC,CAAC;IACjE,+CAAqB,CAAC,0BAA0B,CAAC,qCAAoB,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport {IContextViewService} from 'vs/platform/contextview/browser/contextView';\nimport {IKeybindingService} from 'vs/platform/keybinding/common/keybindingService';\nimport {ICodeEditor} from 'vs/editor/browser/editorBrowser';\nimport {EditorBrowserRegistry} from 'vs/editor/browser/editorBrowserExtensions';\nimport {FindWidget, IFindController} from 'vs/editor/contrib/find/browser/findWidget';\nimport {CommonFindController, FindStartFocusAction, IFindStartOptions, SelectionHighlighter} from 'vs/editor/contrib/find/common/findController';\n\nclass FindController extends CommonFindController implements IFindController {\n\n\tprivate _widget: FindWidget;\n\n\tconstructor(editor:ICodeEditor, @IContextViewService contextViewService: IContextViewService, @IKeybindingService keybindingService: IKeybindingService) {\n\t\tsuper(editor, keybindingService);\n\n\t\tthis._widget = this._register(new FindWidget(editor, this, this._state, contextViewService, keybindingService));\n\t}\n\n\tprotected _start(opts:IFindStartOptions): void {\n\t\tsuper._start(opts);\n\n\t\tif (opts.shouldFocus === FindStartFocusAction.FocusReplaceInput) {\n\t\t\tthis._widget.focusReplaceInput();\n\t\t} else if (opts.shouldFocus === FindStartFocusAction.FocusFindInput) {\n\t\t\tthis._widget.focusFindInput();\n\t\t}\n\t}\n}\n\nEditorBrowserRegistry.registerEditorContribution(FindController);\nEditorBrowserRegistry.registerEditorContribution(SelectionHighlighter);\n"]}