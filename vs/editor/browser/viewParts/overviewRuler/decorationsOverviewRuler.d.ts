import * as editorCommon from 'vs/editor/common/editorCommon';
import { ViewPart } from 'vs/editor/browser/view/viewPart';
import { ViewContext } from 'vs/editor/common/view/viewContext';
import { IRenderingContext, IRestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';
export declare class DecorationsOverviewRuler extends ViewPart {
    static DECORATION_HEIGHT: number;
    private static _CURSOR_COLOR;
    private static _CURSOR_COLOR_DARK;
    private _overviewRuler;
    private _shouldUpdateDecorations;
    private _shouldUpdateCursorPosition;
    private _hideCursor;
    private _cursorPositions;
    private _zonesFromDecorations;
    private _zonesFromCursors;
    constructor(context: ViewContext, scrollHeight: number, getVerticalOffsetForLine: (lineNumber: number) => number);
    dispose(): void;
    onCursorPositionChanged(e: editorCommon.IViewCursorPositionChangedEvent): boolean;
    onConfigurationChanged(e: editorCommon.IConfigurationChangedEvent): boolean;
    onLayoutChanged(layoutInfo: editorCommon.EditorLayoutInfo): boolean;
    onZonesChanged(): boolean;
    onModelFlushed(): boolean;
    onModelDecorationsChanged(e: editorCommon.IViewDecorationsChangedEvent): boolean;
    onScrollChanged(e: editorCommon.IScrollEvent): boolean;
    getDomNode(): HTMLElement;
    private _createZonesFromDecorations();
    private _createZonesFromCursors();
    prepareRender(ctx: IRenderingContext): void;
    render(ctx: IRestrictedRenderingContext): void;
}
