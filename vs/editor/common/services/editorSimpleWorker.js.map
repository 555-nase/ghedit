{"version":3,"file":"vs/editor/common/services/editorSimpleWorker.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/common/services/editorSimpleWorker.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport {TPromise} from 'vs/base/common/winjs.base';\nimport {IRequestHandler} from 'vs/base/common/worker/simpleWorker';\nimport {Range} from 'vs/editor/common/core/range';\nimport {fuzzyContiguousFilter} from 'vs/base/common/filters';\nimport {DiffComputer} from 'vs/editor/common/diff/diffComputer';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {MirrorModel2} from 'vs/editor/common/model/mirrorModel2';\nimport {WordHelper} from 'vs/editor/common/model/textModelWithTokensHelpers';\nimport {IInplaceReplaceSupportResult, ILink, ISuggestResult, ISuggestion} from 'vs/editor/common/modes';\nimport {computeLinks} from 'vs/editor/common/modes/linkComputer';\nimport {BasicInplaceReplace} from 'vs/editor/common/modes/supports/inplaceReplaceSupport';\nimport {EditorSimpleWorker, IRawModelData} from 'vs/editor/common/services/editorSimpleWorkerCommon';\n\nclass MirrorModel extends MirrorModel2 {\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber:number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position:editorCommon.IPosition, wordDefinition:RegExp): Range {\n\n\t\tlet wordAtText = WordHelper._getWordAtText(\n\t\t\tposition.column,\n\t\t\tWordHelper.ensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: editorCommon.IPosition, wordDefinition:RegExp): editorCommon.IWordAtPosition {\n\t\tvar wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\tprivate _getAllWords(wordDefinition:RegExp): string[] {\n\t\tvar result:string[] = [];\n\t\tthis._lines.forEach((line) => {\n\t\t\tthis._wordenize(line, wordDefinition).forEach((info) => {\n\t\t\t\tresult.push(line.substring(info.start, info.end));\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tpublic getAllUniqueWords(wordDefinition:RegExp, skipWordOnce?:string) : string[] {\n\t\tvar foundSkipWord = false;\n\t\tvar uniqueWords = {};\n\t\treturn this._getAllWords(wordDefinition).filter((word) => {\n\t\t\tif (skipWordOnce && !foundSkipWord && skipWordOnce === word) {\n\t\t\t\tfoundSkipWord = true;\n\t\t\t\treturn false;\n\t\t\t} else if (uniqueWords[word]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tuniqueWords[word] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}\n\n//\t// TODO@Joh, TODO@Alex - remove these and make sure the super-things work\n\tprivate _wordenize(content:string, wordDefinition:RegExp): editorCommon.IWordRange[] {\n\t\tvar result:editorCommon.IWordRange[] = [];\n\t\tvar match:RegExpExecArray;\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range:editorCommon.IRange): string {\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tvar lineEnding = this._eol,\n\t\t\tstartLineIndex = range.startLineNumber - 1,\n\t\t\tendLineIndex = range.endLineNumber - 1,\n\t\t\tresultLines:string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (var i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n}\n\nexport class EditorSimpleWorkerImpl extends EditorSimpleWorker implements IRequestHandler {\n\t_requestHandlerTrait: any;\n\n\tprivate _models:{[uri:string]:MirrorModel;};\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic acceptNewModel(data:IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.value.lines, data.value.EOL, data.versionId);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, events: editorCommon.IModelContentChangedEvent2[]): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tlet model = this._models[strURL];\n\t\tmodel.onEvents(events);\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic computeDiff(originalUrl:string, modifiedUrl:string, ignoreTrimWhitespace:boolean): TPromise<editorCommon.ILineChange[]> {\n\t\tlet original = this._models[originalUrl];\n\t\tlet modified = this._models[modifiedUrl];\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldPostProcessCharChanges: true,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldConsiderTrimWhitespaceInEmptyCase: true\n\t\t});\n\t\treturn TPromise.as(diffComputer.computeDiff());\n\t}\n\n\tpublic computeDirtyDiff(originalUrl:string, modifiedUrl:string, ignoreTrimWhitespace:boolean):TPromise<editorCommon.IChange[]> {\n\t\tlet original = this._models[originalUrl];\n\t\tlet modified = this._models[modifiedUrl];\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet originalLines = original.getLinesContent();\n\t\tlet modifiedLines = modified.getLinesContent();\n\t\tlet diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\tshouldPostProcessCharChanges: false,\n\t\t\tshouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n\t\t\tshouldConsiderTrimWhitespaceInEmptyCase: false\n\t\t});\n\t\treturn TPromise.as(diffComputer.computeDiff());\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\tpublic computeLinks(modelUrl:string):TPromise<ILink[]> {\n\t\tlet model = this._models[modelUrl];\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TPromise.as(computeLinks(model));\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tpublic textualSuggest(modelUrl:string, position: editorCommon.IPosition, wordDef:string, wordDefFlags:string): TPromise<ISuggestResult[]> {\n\t\tlet model = this._models[modelUrl];\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn TPromise.as(this._suggestFiltered(model, position, new RegExp(wordDef, wordDefFlags)));\n\t}\n\n\tprivate _suggestFiltered(model:MirrorModel, position: editorCommon.IPosition, wordDefRegExp: RegExp): ISuggestResult[] {\n\t\tlet value = this._suggestUnfiltered(model, position, wordDefRegExp);\n\n\t\t// filter suggestions\n\t\treturn [{\n\t\t\tcurrentWord: value.currentWord,\n\t\t\tsuggestions: value.suggestions.filter((element) => !!fuzzyContiguousFilter(value.currentWord, element.label)),\n\t\t\tincomplete: value.incomplete\n\t\t}];\n\t}\n\n\tprivate _suggestUnfiltered(model:MirrorModel, position:editorCommon.IPosition, wordDefRegExp: RegExp): ISuggestResult {\n\t\tlet currentWord = model.getWordUntilPosition(position, wordDefRegExp).word;\n\t\tlet allWords = model.getAllUniqueWords(wordDefRegExp, currentWord);\n\n\t\tlet suggestions = allWords.filter((word) => {\n\t\t\treturn !(/^-?\\d*\\.?\\d/.test(word)); // filter out numbers\n\t\t}).map((word) => {\n\t\t\treturn <ISuggestion> {\n\t\t\t\ttype: 'text',\n\t\t\t\tlabel: word,\n\t\t\t\tcodeSnippet: word,\n\t\t\t\tnoAutoAccept: true\n\t\t\t};\n\t\t});\n\n\t\treturn {\n\t\t\tcurrentWord: currentWord,\n\t\t\tsuggestions: suggestions\n\t\t};\n\t}\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\tpublic navigateValueSet(modelUrl:string, range:editorCommon.IRange, up:boolean, wordDef:string, wordDefFlags:string): TPromise<IInplaceReplaceSupportResult> {\n\t\tlet model = this._models[modelUrl];\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange.endColumn += 1;\n\t\t}\n\n\t\tlet selectionText = model.getValueInRange(range);\n\n\t\tlet\twordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tlet word: string = null;\n\t\tif (wordRange !== null) {\n\t\t\tword = model.getValueInRange(wordRange);\n\t\t}\n\n\t\tlet result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn TPromise.as(result);\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(): IRequestHandler {\n\treturn new EditorSimpleWorkerImpl();\n}\n"]}