define(["require","exports","vs/editor/common/editorCommon"],function(e,n,o){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";var t=function(){function e(){this._shouldRender=!0}return e.prototype.shouldRender=function(){return this._shouldRender},e.prototype.setShouldRender=function(){this._shouldRender=!0},e.prototype.onDidRender=function(){this._shouldRender=!1},e.prototype.onLineMappingChanged=function(){return!1},e.prototype.onModelFlushed=function(){return!1},e.prototype.onModelDecorationsChanged=function(e){return!1},e.prototype.onModelLinesDeleted=function(e){return!1},e.prototype.onModelLineChanged=function(e){return!1},e.prototype.onModelLinesInserted=function(e){return!1},e.prototype.onModelTokensChanged=function(e){return!1},e.prototype.onCursorPositionChanged=function(e){return!1},e.prototype.onCursorSelectionChanged=function(e){return!1},e.prototype.onCursorRevealRange=function(e){return!1},e.prototype.onCursorScrollRequest=function(e){return!1},e.prototype.onConfigurationChanged=function(e){return!1},e.prototype.onLayoutChanged=function(e){return!1},e.prototype.onScrollChanged=function(e){return!1},e.prototype.onZonesChanged=function(){return!1},e.prototype.onViewFocusChanged=function(e){return!1},e.prototype.handleEvents=function(e){for(var n=!1,t=0,r=e.length;t<r;t++){var i=e[t],s=i.getData();switch(i.getType()){case o.ViewEventNames.LineMappingChangedEvent:this.onLineMappingChanged()&&(n=!0);break;case o.ViewEventNames.ModelFlushedEvent:this.onModelFlushed()&&(n=!0);break;case o.ViewEventNames.LinesDeletedEvent:this.onModelLinesDeleted(s)&&(n=!0);break;case o.ViewEventNames.LinesInsertedEvent:this.onModelLinesInserted(s)&&(n=!0);break;case o.ViewEventNames.LineChangedEvent:this.onModelLineChanged(s)&&(n=!0);break;case o.ViewEventNames.TokensChangedEvent:this.onModelTokensChanged(s)&&(n=!0);break;case o.ViewEventNames.DecorationsChangedEvent:this.onModelDecorationsChanged(s)&&(n=!0);break;case o.ViewEventNames.CursorPositionChangedEvent:this.onCursorPositionChanged(s)&&(n=!0);break;case o.ViewEventNames.CursorSelectionChangedEvent:this.onCursorSelectionChanged(s)&&(n=!0);break;case o.ViewEventNames.RevealRangeEvent:this.onCursorRevealRange(s)&&(n=!0);break;case o.ViewEventNames.ScrollRequestEvent:this.onCursorScrollRequest(s)&&(n=!0);break;case o.EventType.ConfigurationChanged:this.onConfigurationChanged(s)&&(n=!0);break;case o.EventType.ViewLayoutChanged:this.onLayoutChanged(s)&&(n=!0);break;case o.EventType.ViewScrollChanged:this.onScrollChanged(s)&&(n=!0);break;case o.EventType.ViewZonesChanged:this.onZonesChanged()&&(n=!0);break;case o.EventType.ViewFocusChanged:this.onViewFocusChanged(s)&&(n=!0);break;default:console.info("View received unknown event: "),console.info(i)}}n&&(this._shouldRender=!0)},e}();n.ViewEventHandler=t});