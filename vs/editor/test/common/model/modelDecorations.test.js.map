{"version":3,"file":"vs/editor/test/common/model/modelDecorations.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/model/modelDecorations.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {EditOperation} from 'vs/editor/common/core/editOperation';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {EventType, IModelDeltaDecoration, IRange, TrackedRangeStickiness} from 'vs/editor/common/editorCommon';\nimport {Model} from 'vs/editor/common/model/model';\n\n// --------- utils\n\nfunction modelHasDecorations(model, decorations) {\n\tvar modelDecorations = [];\n\tvar actualDecorations = model.getAllDecorations();\n\tfor (var i = 0, len = actualDecorations.length; i < len; i++) {\n\t\tmodelDecorations.push({\n\t\t\trange: actualDecorations[i].range,\n\t\t\tclassName: actualDecorations[i].options.className\n\t\t});\n\t}\n\tassert.deepEqual(modelDecorations, decorations, 'Model decorations');\n}\n\nfunction modelHasDecoration(model, startLineNumber, startColumn, endLineNumber, endColumn, className) {\n\tmodelHasDecorations(model, [{\n\t\trange: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n\t\tclassName: className\n\t}]);\n}\n\nfunction modelHasNoDecorations(model) {\n\tassert.equal(model.getAllDecorations().length, 0, 'Model has no decoration');\n}\n\nfunction addDecoration(model, startLineNumber, startColumn, endLineNumber, endColumn, className) {\n\treturn model.changeDecorations((changeAccessor) => {\n\t\treturn changeAccessor.addDecoration(new Range(startLineNumber, startColumn, endLineNumber, endColumn), {\n\t\t\tclassName: className\n\t\t});\n\t});\n}\n\nfunction lineHasDecorations(model, lineNumber, decorations) {\n\tvar lineDecorations = [];\n\tvar decs = model.getLineDecorations(lineNumber);\n\tfor (var i = 0, len = decs.length; i < len; i++) {\n\t\tlineDecorations.push({\n\t\t\tstart: decs[i].range.startColumn,\n\t\t\tend: decs[i].range.endColumn,\n\t\t\tclassName: decs[i].options.className\n\t\t});\n\t}\n\tassert.deepEqual(lineDecorations, decorations, 'Line decorations');\n}\n\nfunction lineHasNoDecorations(model, lineNumber) {\n\tlineHasDecorations(model, lineNumber, []);\n}\n\nfunction lineHasDecoration(model, lineNumber, start, end, className) {\n\tlineHasDecorations(model, lineNumber, [{\n\t\tstart: start,\n\t\tend: end,\n\t\tclassName: className\n\t}]);\n}\n\nsuite('Editor Model - Model Decorations', () => {\n\tvar LINE1 = 'My First Line';\n\tvar LINE2 = '\\t\\tMy Second Line';\n\tvar LINE3 = '    Third Line';\n\tvar LINE4 = '';\n\tvar LINE5 = '1';\n\n\t// --------- Model Decorations\n\n\tvar thisModel:Model;\n\n\tsetup(() => {\n\t\tvar text =\n\t\t\tLINE1 + '\\r\\n' +\n\t\t\tLINE2 + '\\n' +\n\t\t\tLINE3 + '\\n' +\n\t\t\tLINE4 + '\\r\\n' +\n\t\t\tLINE5;\n\t\tthisModel = new Model(text, Model.DEFAULT_CREATION_OPTIONS, null);\n\t});\n\n\tteardown(() => {\n\t\tthisModel.dispose();\n\t\tthisModel = null;\n\t});\n\n\ttest('single character decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 1, 2, 'myType');\n\t\tlineHasDecoration(thisModel, 1, 1, 2, 'myType');\n\t\tlineHasNoDecorations(thisModel, 2);\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('line decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 1, 14, 'myType');\n\t\tlineHasDecoration(thisModel, 1, 1, 14, 'myType');\n\t\tlineHasNoDecorations(thisModel, 2);\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('full line decoration', () => {\n\t\taddDecoration(thisModel, 1, 1, 2, 1, 'myType');\n\n\t\tvar line1Decorations = thisModel.getLineDecorations(1);\n\t\tassert.equal(line1Decorations.length, 1);\n\t\tassert.equal(line1Decorations[0].options.className, 'myType');\n\n\t\tvar line2Decorations = thisModel.getLineDecorations(1);\n\t\tassert.equal(line2Decorations.length, 1);\n\t\tassert.equal(line2Decorations[0].options.className, 'myType');\n\n\t\tlineHasNoDecorations(thisModel, 3);\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\ttest('multiple line decoration', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\n\t\tvar line1Decorations = thisModel.getLineDecorations(1);\n\t\tassert.equal(line1Decorations.length, 1);\n\t\tassert.equal(line1Decorations[0].options.className, 'myType');\n\n\t\tvar line2Decorations = thisModel.getLineDecorations(1);\n\t\tassert.equal(line2Decorations.length, 1);\n\t\tassert.equal(line2Decorations[0].options.className, 'myType');\n\n\t\tvar line3Decorations = thisModel.getLineDecorations(1);\n\t\tassert.equal(line3Decorations.length, 1);\n\t\tassert.equal(line3Decorations[0].options.className, 'myType');\n\n\t\tlineHasNoDecorations(thisModel, 4);\n\t\tlineHasNoDecorations(thisModel, 5);\n\t});\n\n\t// --------- removing, changing decorations\n\n\ttest('decoration gets removed', () => {\n\t\tvar decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId);\n\t\t});\n\t\tmodelHasNoDecorations(thisModel);\n\t});\n\n\ttest('decorations get removed', () => {\n\t\tvar decId1 = addDecoration(thisModel, 1, 2, 3, 2, 'myType1');\n\t\tvar decId2 = addDecoration(thisModel, 1, 2, 3, 1, 'myType2');\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 2),\n\t\t\t\tclassName: 'myType1'\n\t\t\t},\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 1),\n\t\t\t\tclassName: 'myType2'\n\t\t\t}\n\t\t]);\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId1);\n\t\t});\n\t\tmodelHasDecorations(thisModel, [\n\t\t\t{\n\t\t\t\trange: new Range(1, 2, 3, 1),\n\t\t\t\tclassName: 'myType2'\n\t\t\t}\n\t\t]);\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId2);\n\t\t});\n\t\tmodelHasNoDecorations(thisModel);\n\t});\n\n\ttest('decoration range can be changed', () => {\n\t\tvar decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.changeDecoration(decId, new Range(1, 1, 1, 2));\n\t\t});\n\t\tmodelHasDecoration(thisModel, 1, 1, 1, 2, 'myType');\n\t});\n\n\t// --------- eventing\n\n\ttest('decorations emit event on add', () => {\n\t\tvar listenerCalled = 0;\n\t\tthisModel.addListener(EventType.ModelDecorationsChanged, (e) => {\n\t\t\tlistenerCalled++;\n\t\t\tassert.equal(e.ids.length, 1);\n\t\t\tassert.equal(e.addedOrChangedDecorations.length, 1);\n\t\t\tassert.ok(Range.equalsRange(e.addedOrChangedDecorations[0].range, {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendLineNumber: 3,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.equal(e.removedDecorations.length, 0);\n\t\t});\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tassert.equal(listenerCalled, 1, 'listener called');\n\t});\n\n\ttest('decorations emit event on change', () => {\n\t\tvar listenerCalled = 0;\n\t\tvar decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.addListener(EventType.ModelDecorationsChanged, (e) => {\n\t\t\tlistenerCalled++;\n\t\t\tassert.equal(e.ids.length, 1);\n\t\t\tassert.equal(e.addedOrChangedDecorations.length, 1);\n\t\t\tassert.ok(Range.equalsRange(e.addedOrChangedDecorations[0].range, {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 1,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.ok(Range.equalsRange(e.oldRanges[decId], {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendLineNumber: 3,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.equal(e.removedDecorations.length, 0);\n\t\t});\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.changeDecoration(decId, new Range(1, 1, 1, 2));\n\t\t});\n\t\tassert.equal(listenerCalled, 1, 'listener called');\n\t});\n\n\ttest('decorations emit event on remove', () => {\n\t\tvar listenerCalled = 0;\n\t\tvar decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.addListener(EventType.ModelDecorationsChanged, (e) => {\n\t\t\tlistenerCalled++;\n\t\t\tassert.equal(e.ids.length, 1);\n\t\t\tassert.equal(e.addedOrChangedDecorations.length, 0);\n\t\t\tassert.ok(Range.equalsRange(e.oldRanges[decId], {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendLineNumber: 3,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.equal(e.removedDecorations.length, 1);\n\t\t\tassert.equal(e.removedDecorations[0], decId);\n\t\t});\n\t\tthisModel.changeDecorations((changeAccessor) => {\n\t\t\tchangeAccessor.removeDecoration(decId);\n\t\t});\n\t\tassert.equal(listenerCalled, 1, 'listener called');\n\t});\n\n\ttest('decorations emit event when inserting one line text before it', () => {\n\t\tvar listenerCalled = 0;\n\t\tvar decId = addDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\n\t\tthisModel.addListener(EventType.ModelDecorationsChanged, (e) => {\n\t\t\tlistenerCalled++;\n\t\t\tassert.equal(e.ids.length, 1);\n\t\t\tassert.equal(e.addedOrChangedDecorations.length, 1);\n\t\t\tassert.ok(Range.equalsRange(e.addedOrChangedDecorations[0].range, {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 8,\n\t\t\t\tendLineNumber: 3,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.ok(Range.equalsRange(e.oldRanges[decId], {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 2,\n\t\t\t\tendLineNumber: 3,\n\t\t\t\tendColumn: 2\n\t\t\t}));\n\t\t\tassert.equal(e.removedDecorations.length, 0);\n\t\t});\n\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo ')]);\n\t\tassert.equal(listenerCalled, 1, 'listener called');\n\t});\n\n\t// --------- editing text & effects on decorations\n\n\ttest('decorations are updated when inserting one line text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 8, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting one line text before it 2', () => {\n\t\taddDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.replace(new Range(1, 1, 1, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting multiple lines text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 1), 'Hallo\\nI\\'m inserting multiple\\nlines')]);\n\t\tmodelHasDecoration(thisModel, 3, 7, 5, 2, 'myType');\n\t});\n\n\ttest('decorations change when inserting text after them', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(3, 2), 'Hallo')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 7, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside 2', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(3, 1), 'Hallo ')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 8, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting text inside 3', () => {\n\t\taddDecoration(thisModel, 1, 1, 2, 16, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 1, 2, 16, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(2, 2), '\\n')]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 15, 'myType');\n\t});\n\n\ttest('decorations are updated when inserting multiple lines text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.insert(new Position(1, 3), 'Hallo\\nI\\'m inserting multiple\\nlines')]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 5, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting one line text before it', () => {\n\t\taddDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 1, 2))]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 3, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text before it', () => {\n\t\taddDecoration(thisModel, 2, 2, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 2, 2, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 2, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 2, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text before it 2', () => {\n\t\taddDecoration(thisModel, 2, 3, 3, 2, 'myType');\n\t\tmodelHasDecoration(thisModel, 2, 3, 3, 2, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 2, 2))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 2, 2, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting text inside', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 3, 2, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 2, 3, 1, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting text inside 2', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([\n\t\t\tEditOperation.delete(new Range(1, 1, 1, 2)),\n\t\t\tEditOperation.delete(new Range(4, 1, 4, 1))\n\t\t]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 4, 1, 'myType');\n\t});\n\n\ttest('decorations are updated when deleting multiple lines text', () => {\n\t\taddDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tmodelHasDecoration(thisModel, 1, 2, 4, 1, 'myType');\n\t\tthisModel.applyEdits([EditOperation.delete(new Range(1, 1, 3, 1))]);\n\t\tmodelHasDecoration(thisModel, 1, 1, 2, 1, 'myType');\n\t});\n});\n\nexport interface ILightWeightDecoration {\n\tid: string;\n\trange: IRange;\n}\n\nsuite('deltaDecorations', () => {\n\n\tfunction decoration(id:string, startLineNumber:number, startColumn:number, endLineNumber:number, endColum:number): ILightWeightDecoration {\n\t\treturn {\n\t\t\tid: id,\n\t\t\trange: {\n\t\t\t\tstartLineNumber: startLineNumber,\n\t\t\t\tstartColumn: startColumn,\n\t\t\t\tendLineNumber: endLineNumber,\n\t\t\t\tendColumn: endColum\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction toModelDeltaDecoration(dec:ILightWeightDecoration): IModelDeltaDecoration {\n\t\treturn {\n\t\t\trange: dec.range,\n\t\t\toptions: {\n\t\t\t\tclassName: dec.id\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction strcmp(a:string, b:string): number {\n\t\tif (a === b) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (a < b) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 1;\n\t}\n\n\tfunction readModelDecorations(model:Model, ids:string[]): ILightWeightDecoration[] {\n\t\treturn ids.map((id) => {\n\t\t\treturn {\n\t\t\t\trange: model.getDecorationRange(id),\n\t\t\t\tid: model.getDecorationOptions(id).className\n\t\t\t};\n\t\t});\n\t}\n\n\tfunction testDeltaDecorations(text:string[], decorations:ILightWeightDecoration[], newDecorations:ILightWeightDecoration[]): void {\n\n\t\tvar model = new Model(text.join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\n\t\t// Add initial decorations & assert they are added\n\t\tvar initialIds = model.deltaDecorations([], decorations.map(toModelDeltaDecoration));\n\t\tvar actualDecorations = readModelDecorations(model, initialIds);\n\n\t\tassert.equal(initialIds.length, decorations.length, 'returns expected cnt of ids');\n\t\tassert.equal(initialIds.length, model.getAllDecorations().length, 'does not leak decorations');\n\t\tassert.equal(initialIds.length, model._getTrackedRangesCount(), 'does not leak tracked ranges');\n\t\tassert.equal(2 * initialIds.length, model._getMarkersCount(), 'does not leak markers');\n\t\tactualDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tdecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tassert.deepEqual(actualDecorations, decorations);\n\n\t\tvar newIds = model.deltaDecorations(initialIds, newDecorations.map(toModelDeltaDecoration));\n\t\tvar actualNewDecorations = readModelDecorations(model, newIds);\n\n\t\tassert.equal(newIds.length, newDecorations.length, 'returns expected cnt of ids');\n\t\tassert.equal(newIds.length, model.getAllDecorations().length, 'does not leak decorations');\n\t\tassert.equal(newIds.length, model._getTrackedRangesCount(), 'does not leak tracked ranges');\n\t\tassert.equal(2 * newIds.length, model._getMarkersCount(), 'does not leak markers');\n\t\tactualNewDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tnewDecorations.sort((a, b) => strcmp(a.id, b.id));\n\t\tassert.deepEqual(actualDecorations, decorations);\n\n\t\tmodel.dispose();\n\t}\n\n\tfunction range(startLineNumber:number, startColumn:number, endLineNumber:number, endColumn:number): Range {\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\ttest('result respects input', () => {\n\t\tvar model = new Model([\n\t\t\t'Hello world,',\n\t\t\t'How are you?'\n\t\t].join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\n\t\tvar ids = model.deltaDecorations([], [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepEqual(model.getDecorationRange(ids[0]), range(1,1,1,12));\n\t\tassert.deepEqual(model.getDecorationRange(ids[1]), range(2,1,2,13));\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('deltaDecorations 1', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 1, 1, 15),\n\t\t\t\tdecoration('c', 1, 1, 2, 1),\n\t\t\t\tdecoration('d', 1, 1, 2, 24),\n\t\t\t\tdecoration('e', 2, 1, 2, 24),\n\t\t\t\tdecoration('f', 2, 1, 4, 16)\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('x', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 1, 1, 15),\n\t\t\t\tdecoration('c', 1, 1, 2, 1),\n\t\t\t\tdecoration('d', 1, 1, 2, 24),\n\t\t\t\tdecoration('e', 2, 1, 2, 21),\n\t\t\t\tdecoration('f', 2, 17, 4, 16)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('deltaDecorations 2', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 2, 1, 3),\n\t\t\t\tdecoration('c', 1, 3, 1, 4),\n\t\t\t\tdecoration('d', 1, 4, 1, 5),\n\t\t\t\tdecoration('e', 1, 5, 1, 6)\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 2, 1, 3),\n\t\t\t\tdecoration('b', 1, 3, 1, 4),\n\t\t\t\tdecoration('c', 1, 4, 1, 5),\n\t\t\t\tdecoration('d', 1, 5, 1, 6)\n\t\t\t]\n\t\t);\n\t});\n\n\ttest('deltaDecorations 3', () => {\n\t\ttestDeltaDecorations(\n\t\t\t[\n\t\t\t\t'This is a text',\n\t\t\t\t'That has multiple lines',\n\t\t\t\t'And is very friendly',\n\t\t\t\t'Towards testing'\n\t\t\t],\n\t\t\t[\n\t\t\t\tdecoration('a', 1, 1, 1, 2),\n\t\t\t\tdecoration('b', 1, 2, 1, 3),\n\t\t\t\tdecoration('c', 1, 3, 1, 4),\n\t\t\t\tdecoration('d', 1, 4, 1, 5),\n\t\t\t\tdecoration('e', 1, 5, 1, 6)\n\t\t\t],\n\t\t\t[]\n\t\t);\n\t});\n\n\ttest('issue #4317: editor.setDecorations doesn\\'t update the hover message', () => {\n\n\t\tlet model = new Model('Hello world!', Model.DEFAULT_CREATION_OPTIONS, null);\n\n\t\tlet ids = model.deltaDecorations([], [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 100,\n\t\t\t\tendColumn: 1\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\thtmlMessage: [{\n\t\t\t\t\tmarkdown: 'hello1'\n\t\t\t\t}]\n\t\t\t}\n\t\t}]);\n\n\t\tids = model.deltaDecorations(ids, [{\n\t\t\trange: {\n\t\t\t\tstartLineNumber: 1,\n\t\t\t\tstartColumn: 1,\n\t\t\t\tendLineNumber: 100,\n\t\t\t\tendColumn: 1\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\thtmlMessage: [{\n\t\t\t\t\tmarkdown: 'hello2'\n\t\t\t\t}]\n\t\t\t}\n\t\t}]);\n\n\t\tlet actualDecoration = model.getDecorationOptions(ids[0]);\n\n\t\tassert.equal(actualDecoration.htmlMessage[0].markdown, 'hello2');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('model doesn\\'t get confused with individual tracked ranges', () => {\n\t\tvar model = new Model([\n\t\t\t'Hello world,',\n\t\t\t'How are you?'\n\t\t].join('\\n'), Model.DEFAULT_CREATION_OPTIONS, null);\n\n\t\tvar trackedRangeId = model.addTrackedRange({\n\t\t\tstartLineNumber: 1,\n\t\t\tstartColumn: 1,\n\t\t\tendLineNumber: 1,\n\t\t\tendColumn: 1\n\t\t}, TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges);\n\t\tmodel.removeTrackedRange(trackedRangeId);\n\n\t\tvar ids = model.deltaDecorations([], [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepEqual(model.getDecorationRange(ids[0]), range(1,1,1,12));\n\t\tassert.deepEqual(model.getDecorationRange(ids[1]), range(2,1,2,13));\n\n\t\tids = model.deltaDecorations(ids, [\n\t\t\ttoModelDeltaDecoration(decoration('a', 1, 1, 1, 12)),\n\t\t\ttoModelDeltaDecoration(decoration('b', 2, 1, 2, 13))\n\t\t]);\n\n\t\tassert.deepEqual(model.getDecorationRange(ids[0]), range(1,1,1,12));\n\t\tassert.deepEqual(model.getDecorationRange(ids[1]), range(2,1,2,13));\n\n\t\tmodel.dispose();\n\t});\n});\n"]}