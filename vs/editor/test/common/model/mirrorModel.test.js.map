{"version":3,"file":"vs/editor/test/common/model/mirrorModel.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/model/mirrorModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport {IMirrorModelEvents, MirrorModel, createTestMirrorModelFromString} from 'vs/editor/common/model/mirrorModel';\n\nfunction equalRange(left, right) {\n\tif(left.startLineNumber !== right.startLineNumber) {\n\t\tassert.ok(false, 'startLineNumber: actual:' + left.startLineNumber + ' expected:' + right.startLineNumber);\n\t} else if(left.endLineNumber !== right.endLineNumber){\n\t\tassert.ok(false, 'endLineNumber: actual:' + left.endLineNumber + ' expected:' + right.endLineNumber);\n\t} else if(left.startColumn !== right.startColumn) {\n\t\tassert.ok(false, 'startColumn: actual:' + left.startColumn + ' expected:' + right.startColumn);\n\t} else if(left.endColumn !== right.endColumn){\n\t\tassert.ok(false, 'endColumn: actual:' + left.endColumn + ' expected:' + right.endColumn);\n\t}\n\tassert.ok(true, 'ranges');\n};\n\nfunction contentChangedFlushEvent(detail: editorCommon.IRawText): editorCommon.IModelContentChangedFlushEvent {\n\treturn {\n\t\tchangeType: editorCommon.EventType.ModelContentChangedFlush,\n\t\tisRedoing: false,\n\t\tisUndoing: false,\n\t\tversionId: 0,\n\t\tdetail: detail\n\t};\n}\n\nfunction contentChangedLinesDeletedEvent(fromLineNumber: number, toLineNumber: number): editorCommon.IModelContentChangedLinesDeletedEvent {\n\treturn {\n\t\tchangeType: editorCommon.EventType.ModelContentChangedLinesDeleted,\n\t\tisRedoing: false,\n\t\tisUndoing: false,\n\t\tversionId: 0,\n\t\tfromLineNumber: fromLineNumber,\n\t\ttoLineNumber: toLineNumber\n\t};\n}\n\nfunction contentChangedLinesInsertedEvent(fromLineNumber: number, toLineNumber: number, detail: string): editorCommon.IModelContentChangedLinesInsertedEvent {\n\treturn {\n\t\tchangeType: editorCommon.EventType.ModelContentChangedLinesInserted,\n\t\tisRedoing: false,\n\t\tisUndoing: false,\n\t\tversionId: 0,\n\t\tfromLineNumber: fromLineNumber,\n\t\ttoLineNumber: toLineNumber,\n\t\tdetail: detail\n\t};\n}\n\nfunction contentChangedLineChanged(lineNumber: number, detail: string): editorCommon.IModelContentChangedLineChangedEvent {\n\treturn {\n\t\tchangeType: editorCommon.EventType.ModelContentChangedLineChanged,\n\t\tisRedoing: false,\n\t\tisUndoing: false,\n\t\tversionId: 0,\n\t\tlineNumber: lineNumber,\n\t\tdetail: detail\n\t};\n}\n\nfunction mirrorModelEvents(contentChanged:editorCommon.IModelContentChangedEvent[]): IMirrorModelEvents {\n\treturn {\n\t\tcontentChanged: contentChanged\n\t};\n}\n\nsuite('Editor Model - MirrorModel', () => {\n\n\tvar mirrorModel:MirrorModel;\n\n\tsetup(() => {\n\t\tmirrorModel = createTestMirrorModelFromString('line1\\nline2\\nline3\\nline4');\n\t});\n\n\tteardown(() => {\n\t\tmirrorModel.dispose();\n\t\tmirrorModel = null;\n\t});\n\n\ttest('get line start ', () => {\n\t\tassert.equal(mirrorModel.getLineStart(1), 0);\n\t\tassert.equal(mirrorModel.getLineStart(2), 6);\n\t\tassert.equal(mirrorModel.getLineStart(3), 12);\n\t\tassert.equal(mirrorModel.getLineStart(4), 18);\n\t\tassert.equal(mirrorModel.getLineStart(1000), mirrorModel.getLineStart(mirrorModel.getLineCount()));\n\t});\n\n\ttest('get line start /flush event/', () => {\n\t\tassert.equal(mirrorModel.getLineStart(2), 6);\n\t\tassert.equal(mirrorModel.getLineStart(3), 12);\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedFlushEvent({\n\t\t\tlength: -1,\n\t\t\tlines: [\n\t\t\t\t'foo',\n\t\t\t\t'bar'\n\t\t\t],\n\t\t\tBOM: '',\n\t\t\tEOL: '\\n',\n\t\t\toptions: {\n\t\t\t\ttabSize: 4,\n\t\t\t\tinsertSpaces: true,\n\t\t\t\tdefaultEOL: editorCommon.DefaultEndOfLine.LF\n\t\t\t}\n\t\t})]));\n\n\t\tassert.equal(mirrorModel.getLineStart(1), 0);\n\t\tassert.equal(mirrorModel.getLineStart(2), 4);\n\t});\n\n\ttest('get offset', () => {\n\t\tassert.equal(mirrorModel.getOffsetFromPosition({lineNumber: 1, column: 1}), 0);\n\t\tassert.equal(mirrorModel.getOffsetFromPosition({lineNumber: 1, column: 3}), 2);\n\t\tassert.equal(mirrorModel.getOffsetFromPosition({lineNumber: 2, column: 1}), 6);\n\t\tassert.equal(mirrorModel.getOffsetFromPosition({lineNumber: 4, column: 7}), 24);\n\t});\n\n\ttest('get position from offset', () => {\n\t\tassert.deepEqual(mirrorModel.getPositionFromOffset(0), {lineNumber: 1, column: 1});\n\t\tassert.deepEqual(mirrorModel.getPositionFromOffset(2), {lineNumber: 1, column: 3});\n\t\tassert.deepEqual(mirrorModel.getPositionFromOffset(6), {lineNumber: 2, column: 1});\n\t\tassert.deepEqual(mirrorModel.getPositionFromOffset(24), {lineNumber: 4, column: 7});\n\t});\n\n\ttest('get (all/unique) words', () => {\n\t\tvar model = createTestMirrorModelFromString('foo bar foo bar');\n\t\tvar words = model.getAllWords();\n\t\tvar uniqueWords = model.getAllUniqueWords();\n\t\tassert.equal(words.length, 4);\n\t\tassert.equal(words[0], 'foo');\n\t\tassert.equal(words[1], 'bar');\n\t\tassert.equal(words[2], 'foo');\n\t\tassert.equal(words[3], 'bar');\n\t\tassert.equal(uniqueWords.length, 2);\n\t\tassert.equal(uniqueWords[0], 'foo');\n\t\tassert.equal(uniqueWords[1], 'bar');\n\n\t\tmodel = createTestMirrorModelFromString('foo bar\\nfoo\\nbar');\n\t\twords = model.getAllWords();\n\t\tuniqueWords = model.getAllUniqueWords();\n\t\tassert.equal(words.length, 4);\n\t\tassert.equal(words[0], 'foo');\n\t\tassert.equal(words[1], 'bar');\n\t\tassert.equal(words[2], 'foo');\n\t\tassert.equal(words[3], 'bar');\n\t\tassert.equal(uniqueWords.length, 2);\n\t\tassert.equal(uniqueWords[0], 'foo');\n\t\tassert.equal(uniqueWords[1], 'bar');\n\t});\n\n\ttest('word at/until pos', () => {\n\t\tvar pos = { lineNumber: 1, column: 3 };\n\t\tassert.equal(mirrorModel.getWordAtPosition(pos).word, 'line1');\n\n\t\tvar model = createTestMirrorModelFromString('foo bar 1234 :\";\\'');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 1}).word, 'foo');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 2}).word, 'foo');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 3}).word, 'foo');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 4}).word, 'foo');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 5}).word, 'bar');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 6}).word, 'bar');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 7}).word, 'bar');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 8}).word, 'bar');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 9}).word, '1234');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 10}).word, '1234');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 11}).word, '1234');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 12}).word, '1234');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 13}).word, '1234');\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 14}), null);\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 15}), null);\n\t\tassert.equal(model.getWordAtPosition({lineNumber: 1, column: 16}), null);\n\n\t\tassert.equal(mirrorModel.getWordUntilPosition(pos).word, 'li');\n\n\t});\n\n\ttest('words with ranges', () => {\n\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 4);\n\t\tassert.equal(wordsWithRanges[0].text, 'line1');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 6 });\n\t\tassert.equal(wordsWithRanges[1].text, 'line2');\n\t\tequalRange(wordsWithRanges[1].range, { startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 6 });\n\t\tassert.equal(wordsWithRanges[2].text, 'line3');\n\t\tequalRange(wordsWithRanges[2].range, { startLineNumber: 3, startColumn: 1, endLineNumber: 3, endColumn: 6 });\n\t\tassert.equal(wordsWithRanges[3].text, 'line4');\n\t\tequalRange(wordsWithRanges[3].range, { startLineNumber: 4, startColumn: 1, endLineNumber: 4, endColumn: 6 });\n\n\t\tvar model = createTestMirrorModelFromString('foo bar\\nfoo\\nbar');\n\t\twordsWithRanges = model.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 4);\n\t\tassert.equal(wordsWithRanges[0].text, 'foo');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 4 });\n\t\tassert.equal(wordsWithRanges[1].text, 'bar');\n\t\tequalRange(wordsWithRanges[1].range, { startLineNumber: 1, startColumn: 5, endLineNumber: 1, endColumn: 8 });\n\t\tassert.equal(wordsWithRanges[2].text, 'foo');\n\t\tequalRange(wordsWithRanges[2].range, { startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 4 });\n\t\tassert.equal(wordsWithRanges[3].text, 'bar');\n\t\tequalRange(wordsWithRanges[3].range, { startLineNumber: 3, startColumn: 1, endLineNumber: 3, endColumn: 4 });\n\t});\n});\n\nsuite('Editor Model - MirrorModel Eventing', () => {\n\n\tvar mirrorModel:MirrorModel;\n\n\tsetup(() => {\n\t\tmirrorModel = createTestMirrorModelFromString('line one\\nline two\\nline three\\nline four');\n\t});\n\n\tteardown(() => {\n\t\tmirrorModel.dispose();\n\t\tmirrorModel = null;\n\t});\n\n\ttest('delete single line', () => {\n\t\tassert.equal(mirrorModel.getLineContent(3), 'line three');\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLinesDeletedEvent(3, 3)]));\n\n\t\tassert.equal(mirrorModel.getLineContent(3), 'line four');\n\t\tvar words = mirrorModel.getAllWords();\n\t\tassert.equal(words.length, 6);\n\t\tassert.equal(words[0], 'line');\n\t\tassert.equal(words[1], 'one');\n\t\tassert.equal(words[2], 'line');\n\t\tassert.equal(words[3], 'two');\n\t\tassert.equal(words[4], 'line');\n\t\tassert.equal(words[5], 'four');\n\t});\n\n\ttest('delete multiple lines', () => {\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLinesDeletedEvent(1, 2)]));\n\n\t\tassert.equal(mirrorModel.getLineContent(1), 'line three');\n\t\tassert.equal(mirrorModel.getLineContent(2), 'line four');\n\t\tvar words = mirrorModel.getAllWords();\n\t\tassert.equal(words.length, 4);\n\t\tassert.equal(words[0], 'line');\n\t\tassert.equal(words[1], 'three');\n\t\tassert.equal(words[2], 'line');\n\t\tassert.equal(words[3], 'four');\n\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 4);\n\t\tassert.equal(wordsWithRanges[0].text, 'line');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 5 });\n\t\tassert.equal(wordsWithRanges[1].text, 'three');\n\t\tequalRange(wordsWithRanges[1].range, { startLineNumber: 1, startColumn: 6, endLineNumber: 1, endColumn: 11 });\n\t\tassert.equal(wordsWithRanges[2].text, 'line');\n\t\tequalRange(wordsWithRanges[2].range, { startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 5 });\n\t\tassert.equal(wordsWithRanges[3].text, 'four');\n\t\tequalRange(wordsWithRanges[3].range, { startLineNumber: 2, startColumn: 6, endLineNumber: 2, endColumn: 10 });\n\t});\n\n\ttest('delete all lines', () => {\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLinesDeletedEvent(1, 4)]));\n\n\t\tvar words = mirrorModel.getAllWords();\n\t\tassert.equal(words.length, 0);\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 0);\n\t});\n\n\ttest('add single lines', () => {\n\t\tassert.equal(mirrorModel.getLineContent(1), 'line one');\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLinesInsertedEvent(1, 1, 'foo bar\\nbar foo')]));\n\n\t\tassert.equal(mirrorModel.getLineContent(1), 'foo bar');\n\t\tassert.equal(mirrorModel.getLineContent(2), 'line one');\n\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 10);\n\t\tassert.equal(wordsWithRanges[0].text, 'foo');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 4 });\n\t\tassert.equal(wordsWithRanges[1].text, 'bar');\n\t\tequalRange(wordsWithRanges[1].range, { startLineNumber: 1, startColumn: 5, endLineNumber: 1, endColumn: 8 });\n\t});\n\n\n\ttest('add multiple lines', () => {\n\t\tassert.equal(mirrorModel.getLineContent(1), 'line one');\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLinesInsertedEvent(1, 2, 'foo bar\\nbar foo')]));\n\n\t\tassert.equal(mirrorModel.getLineContent(1), 'foo bar');\n\t\tassert.equal(mirrorModel.getLineContent(2), 'bar foo');\n\t\tassert.equal(mirrorModel.getLineContent(3), 'line one');\n\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 12);\n\t\tassert.equal(wordsWithRanges[0].text, 'foo');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 4 });\n\t\tassert.equal(wordsWithRanges[1].text, 'bar');\n\t\tequalRange(wordsWithRanges[1].range, { startLineNumber: 1, startColumn: 5, endLineNumber: 1, endColumn: 8 });\n\t\tassert.equal(wordsWithRanges[2].text, 'bar');\n\t\tequalRange(wordsWithRanges[2].range, { startLineNumber: 2, startColumn: 1, endLineNumber: 2, endColumn: 4 });\n\t\tassert.equal(wordsWithRanges[3].text, 'foo');\n\t\tequalRange(wordsWithRanges[3].range, { startLineNumber: 2, startColumn: 5, endLineNumber: 2, endColumn: 8 });\n\t});\n\n\ttest('change line', () => {\n\t\tassert.equal(mirrorModel.getLineContent(1), 'line one');\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 8);\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedLineChanged(1, 'foobar')]));\n\n\t\tassert.equal(mirrorModel.getLineContent(1), 'foobar');\n\t\twordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 7);\n\t\tassert.equal(wordsWithRanges[0].text, 'foobar');\n\t\tequalRange(wordsWithRanges[0].range, { startLineNumber: 1, startColumn: 1, endLineNumber: 1, endColumn: 7 });\n\t});\n\n\ttest('flush model', () => {\n\t\tassert.equal(mirrorModel.getLineContent(1), 'line one');\n\t\tassert.equal(mirrorModel.getLineContent(2), 'line two');\n\n\t\tmirrorModel.onEvents(mirrorModelEvents([contentChangedFlushEvent({\n\t\t\tlength: -1,\n\t\t\tlines: [\n\t\t\t\t'foo',\n\t\t\t\t'bar'\n\t\t\t],\n\t\t\tBOM: '',\n\t\t\tEOL: '\\n',\n\t\t\toptions: {\n\t\t\t\ttabSize: 4,\n\t\t\t\tinsertSpaces: true,\n\t\t\t\tdefaultEOL: editorCommon.DefaultEndOfLine.LF\n\t\t\t}\n\t\t})]));\n\n\t\tassert.equal(mirrorModel.getLineContent(1), 'foo');\n\t\tassert.equal(mirrorModel.getLineContent(2), 'bar');\n\t\tvar wordsWithRanges = mirrorModel.getAllWordsWithRange();\n\t\tassert.equal(wordsWithRanges.length, 2);\n\t});\n\n});\n"]}