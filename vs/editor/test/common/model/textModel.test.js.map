{"version":3,"file":"vs/editor/test/common/model/textModel.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/model/textModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {Position} from 'vs/editor/common/core/position';\nimport {Range} from 'vs/editor/common/core/range';\nimport {TextModel} from 'vs/editor/common/model/textModel';\nimport {DefaultEndOfLine} from 'vs/editor/common/editorCommon';\n\nfunction testGuessIndentation(defaultInsertSpaces:boolean, defaultTabSize:number, expectedInsertSpaces:boolean, expectedTabSize:number, text:string[], msg?:string): void {\n\tvar m = new TextModel([], TextModel.toRawText(text.join('\\n'), {\n\t\ttabSize: defaultTabSize,\n\t\tinsertSpaces: defaultInsertSpaces,\n\t\tdetectIndentation: true,\n\t\tdefaultEOL: DefaultEndOfLine.LF\n\t}));\n\tvar r = m.getOptions();\n\tm.dispose();\n\n\tassert.equal(r.insertSpaces, expectedInsertSpaces, msg);\n\tassert.equal(r.tabSize, expectedTabSize, msg);\n}\n\nfunction assertGuess(expectedInsertSpaces:boolean, expectedTabSize:number, text:string[], msg?:string): void {\n\tif (typeof expectedInsertSpaces === 'undefined') {\n\t\t// cannot guess insertSpaces\n\t\tif (typeof expectedTabSize === 'undefined') {\n\t\t\t// cannot guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, true, 13370, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, false, 13371, text, msg);\n\t\t} else {\n\t\t\t// can guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, true, expectedTabSize, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, false, expectedTabSize, text, msg);\n\t\t}\n\t} else {\n\t\t// can guess insertSpaces\n\t\tif (typeof expectedTabSize === 'undefined') {\n\t\t\t// cannot guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, 13370, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, 13371, text, msg);\n\t\t} else {\n\t\t\t// can guess tabSize\n\t\t\ttestGuessIndentation(true, 13370, expectedInsertSpaces, expectedTabSize, text, msg);\n\t\t\ttestGuessIndentation(false, 13371, expectedInsertSpaces, expectedTabSize, text, msg);\n\t\t}\n\t}\n}\n\nsuite('Editor Model - TextModel', () => {\n\n\ttest('getValueLengthInRange', () => {\n\n\t\tvar m = new TextModel([], TextModel.toRawText('My First Line\\r\\nMy Second Line\\r\\nMy Third Line', TextModel.DEFAULT_CREATION_OPTIONS));\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\r\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 1)), 'y First Line\\r\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 2)), 'y First Line\\r\\nM'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 1000)), 'y First Line\\r\\nMy Second Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 3, 1)), 'y First Line\\r\\nMy Second Line\\r\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 3, 1000)), 'y First Line\\r\\nMy Second Line\\r\\nMy Third Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1000, 1000)), 'My First Line\\r\\nMy Second Line\\r\\nMy Third Line'.length);\n\n\t\tm = new TextModel([], TextModel.toRawText('My First Line\\nMy Second Line\\nMy Third Line', TextModel.DEFAULT_CREATION_OPTIONS));\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 1)), ''.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 2)), 'M'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 1, 3)), 'y'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1, 14)), 'My First Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 2, 1)), 'My First Line\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 1)), 'y First Line\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 2)), 'y First Line\\nM'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 2, 1000)), 'y First Line\\nMy Second Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 3, 1)), 'y First Line\\nMy Second Line\\n'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 2, 3, 1000)), 'y First Line\\nMy Second Line\\nMy Third Line'.length);\n\t\tassert.equal(m.getValueLengthInRange(new Range(1, 1, 1000, 1000)), 'My First Line\\nMy Second Line\\nMy Third Line'.length);\n\t});\n\n\ttest('guess indentation 1', () => {\n\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], 'no clues');\n\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], 'no spaces, 1xTAB');\n\n\t\tassertGuess(true, 2, [\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'x'\n\t\t], '1x2');\n\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'\\tx'\n\t\t], '7xTAB');\n\n\t\tassertGuess(undefined, 2, [\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '4x2, 4xTAB');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x',\n\t\t\t'\\tx',\n\t\t\t' x'\n\t\t], '4x1, 4xTAB');\n\t\tassertGuess(false, 2, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '4x2, 5xTAB');\n\t\tassertGuess(false, 2, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t], '1x2, 5xTAB');\n\t\tassertGuess(false, 4, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'    x',\n\t\t], '1x4, 5xTAB');\n\t\tassertGuess(false, 2, [\n\t\t\t'\\tx',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'x',\n\t\t\t'\\tx',\n\t\t\t'  x',\n\t\t\t'\\tx',\n\t\t\t'    x',\n\t\t], '1x2, 1x4, 5xTAB');\n\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x'\n\t\t], '7x1 - 1 space is never guessed as an indentation');\n\t\tassertGuess(true, undefined, [\n\t\t\t'x',\n\t\t\t'          x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x'\n\t\t], '1x10, 6x1');\n\t\tassertGuess(undefined, undefined, [\n\t\t\t'',\n\t\t\t'  ',\n\t\t\t'    ',\n\t\t\t'      ',\n\t\t\t'        ',\n\t\t\t'          ',\n\t\t\t'            ',\n\t\t\t'              ',\n\t\t], 'whitespace lines don\\'t count');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t], 'odd number is not allowed: 6x3, 3x4');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'     x',\n\t\t\t'     x',\n\t\t\t'    x',\n\t\t], 'odd number is not allowed: 6x5, 3x4');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'       x',\n\t\t\t'       x',\n\t\t\t'    x',\n\t\t], 'odd number is not allowed: 6x7, 3x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t], '8x2');\n\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t], '8x2');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t], '4x2, 4x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t], '6x2, 3x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '4x2, 4x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '2x2, 4x4');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '8x4');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t], '2x2, 4x4, 2x6');\n\t\tassertGuess(true, 2, [\n\t\t\t'x',\n\t\t\t'  x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'      x',\n\t\t\t'      x',\n\t\t\t'        x',\n\t\t], '1x2, 2x4, 2x6, 1x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t], '6x4, 2x5, 2x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t], '3x4, 1x5, 2x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t\t'x',\n\t\t\t'x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t\t'     x',\n\t\t\t'        x',\n\t\t\t'        x',\n\t\t], '6x4, 2x5, 4x8');\n\t\tassertGuess(true, 4, [\n\t\t\t'x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t' x',\n\t\t\t'x',\n\t\t\t'   x',\n\t\t\t'    x',\n\t\t\t'    x',\n\t\t], '5x1, 2x0, 1x3, 2x4');\n\t\tassertGuess(false, undefined, [\n\t\t\t'\\t x',\n\t\t\t' \\t x',\n\t\t\t'\\tx'\n\t\t], 'mixed whitespace 1');\n\t\tassertGuess(false, 4, [\n\t\t\t'\\tx',\n\t\t\t'\\t    x'\n\t\t], 'mixed whitespace 2');\n\t});\n\n\ttest('modifyPosition', () => {\n\n\t\tvar m = new TextModel([], TextModel.toRawText('line one\\nline two', TextModel.DEFAULT_CREATION_OPTIONS));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,1), 0), new Position(1, 1));\n\t\tassert.deepEqual(m.modifyPosition(new Position(0,0), 0), new Position(1, 1));\n\t\tassert.deepEqual(m.modifyPosition(new Position(30, 1), 0), new Position(2, 1));\n\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,1), 17), new Position(2, 9));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,1), 1), new Position(1, 2));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,1), 3), new Position(1, 4));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1, 2), 10), new Position(2, 3));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1, 5), 13), new Position(2, 9));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1, 2), 16), new Position(2, 9));\n\n\t\tassert.deepEqual(m.modifyPosition(new Position(2, 9), -17), new Position(1, 1));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,2), -1), new Position(1, 1));\n\t\tassert.deepEqual(m.modifyPosition(new Position(1,4), -3), new Position(1, 1));\n\t\tassert.deepEqual(m.modifyPosition(new Position(2, 3), -10), new Position(1, 2));\n\t\tassert.deepEqual(m.modifyPosition(new Position(2, 9), -13), new Position(1, 5));\n\t\tassert.deepEqual(m.modifyPosition(new Position(2, 9), -16), new Position(1, 2));\n\n\t\tassert.throws(() => m.modifyPosition(new Position(1, 2), 17));\n\t\tassert.throws(() => m.modifyPosition(new Position(1, 2), 100));\n\n\t\tassert.throws(() => m.modifyPosition(new Position(1, 2), -2));\n\t\tassert.throws(() => m.modifyPosition(new Position(1, 2), -100));\n\t\tassert.throws(() => m.modifyPosition(new Position(2, 2), -100));\n\t\tassert.throws(() => m.modifyPosition(new Position(2, 9), -18));\n\t});\n\n\ttest('normalizeIndentation 1', () => {\n\t\tlet model = new TextModel([], {\n\t\t\tlength: 0,\n\t\t\tlines: [],\n\t\t\tBOM: '',\n\t\t\tEOL: '\\n',\n\t\t\toptions: {\n\t\t\t\ttabSize: 4,\n\t\t\t\tinsertSpaces: false,\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF\n\t\t\t}\n\t\t});\n\n\t\tassert.equal(model.normalizeIndentation('\\t'), '\\t');\n\t\tassert.equal(model.normalizeIndentation('    '), '\\t');\n\t\tassert.equal(model.normalizeIndentation('   '), '   ');\n\t\tassert.equal(model.normalizeIndentation('  '), '  ');\n\t\tassert.equal(model.normalizeIndentation(' '), ' ');\n\t\tassert.equal(model.normalizeIndentation(''), '');\n\t\tassert.equal(model.normalizeIndentation(' \\t   '), '\\t\\t');\n\t\tassert.equal(model.normalizeIndentation(' \\t  '), '\\t   ');\n\t\tassert.equal(model.normalizeIndentation(' \\t '), '\\t  ');\n\t\tassert.equal(model.normalizeIndentation(' \\t'), '\\t ');\n\n\t\tassert.equal(model.normalizeIndentation('\\ta'), '\\ta');\n\t\tassert.equal(model.normalizeIndentation('    a'), '\\ta');\n\t\tassert.equal(model.normalizeIndentation('   a'), '   a');\n\t\tassert.equal(model.normalizeIndentation('  a'), '  a');\n\t\tassert.equal(model.normalizeIndentation(' a'), ' a');\n\t\tassert.equal(model.normalizeIndentation('a'), 'a');\n\t\tassert.equal(model.normalizeIndentation(' \\t   a'), '\\t\\ta');\n\t\tassert.equal(model.normalizeIndentation(' \\t  a'), '\\t   a');\n\t\tassert.equal(model.normalizeIndentation(' \\t a'), '\\t  a');\n\t\tassert.equal(model.normalizeIndentation(' \\ta'), '\\t a');\n\n\t\tmodel.dispose();\n\t});\n\n\ttest('normalizeIndentation 2', () => {\n\t\tlet model = new TextModel([], {\n\t\t\tlength: 0,\n\t\t\tlines: [],\n\t\t\tBOM: '',\n\t\t\tEOL: '\\n',\n\t\t\toptions: {\n\t\t\t\ttabSize: 4,\n\t\t\t\tinsertSpaces: true,\n\t\t\t\tdefaultEOL: DefaultEndOfLine.LF\n\t\t\t}\n\t\t});\n\n\t\tassert.equal(model.normalizeIndentation('\\ta'), '    a');\n\t\tassert.equal(model.normalizeIndentation('    a'), '    a');\n\t\tassert.equal(model.normalizeIndentation('   a'), '   a');\n\t\tassert.equal(model.normalizeIndentation('  a'), '  a');\n\t\tassert.equal(model.normalizeIndentation(' a'), ' a');\n\t\tassert.equal(model.normalizeIndentation('a'), 'a');\n\t\tassert.equal(model.normalizeIndentation(' \\t   a'), '        a');\n\t\tassert.equal(model.normalizeIndentation(' \\t  a'), '       a');\n\t\tassert.equal(model.normalizeIndentation(' \\t a'), '      a');\n\t\tassert.equal(model.normalizeIndentation(' \\ta'), '     a');\n\n\t\tmodel.dispose();\n\t});\n});\n"]}