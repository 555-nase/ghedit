{"version":3,"file":"vs/editor/test/common/commands/shiftCommand.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/commands/shiftCommand.test.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAYb,0BAA0B,KAAe,EAAE,SAAoB,EAAE,aAAuB,EAAE,iBAA4B;QACrH,8BAAW,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,UAAC,GAAG,IAAK,OAAA,IAAI,2BAAY,CAAC,GAAG,EAAE;YAClE,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,IAAI;SACf,CAAC,EAJ2C,CAI3C,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED,4BAA4B,KAAe,EAAE,SAAoB,EAAE,aAAuB,EAAE,iBAA4B;QACvH,8BAAW,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,UAAC,GAAG,IAAK,OAAA,IAAI,2BAAY,CAAC,GAAG,EAAE;YAClE,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,IAAI;SACf,CAAC,EAJ2C,CAI3C,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED;QAAkC,uCAAQ;QAIzC;YACC,iBAAO,CAAC;YACR,IAAI,CAAC,eAAe,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE;gBAC9D,QAAQ,EAAE;oBACT,CAAC,GAAG,EAAE,GAAG,CAAC;oBACV,CAAC,GAAG,EAAE,GAAG,CAAC;oBACV,CAAC,GAAG,EAAE,GAAG,CAAC;iBACV;gBAED,YAAY,EAAE;oBACb;wBACC,gBAAgB;wBAChB,UAAU,EAAE,oCAAoC;wBAChD,SAAS,EAAE,WAAW;wBACtB,MAAM,EAAE,EAAE,YAAY,EAAE,oBAAY,CAAC,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE;qBACvE;oBACD;wBACC,gBAAgB;wBAChB,UAAU,EAAE,oCAAoC;wBAChD,MAAM,EAAE,EAAE,YAAY,EAAE,oBAAY,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;qBAC9D;oBACD;wBACC,eAAe;wBACf,UAAU,EAAE,0CAA0C;wBACtD,MAAM,EAAE,EAAE,YAAY,EAAE,oBAAY,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE;qBAC7D;oBACD;wBACC,YAAY;wBACZ,UAAU,EAAE,yBAAyB;wBACrC,MAAM,EAAE,EAAE,YAAY,EAAE,oBAAY,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE;qBAC1D;iBACD;aACD,CAAC,CAAC;QACJ,CAAC;QACF,0BAAC;IAAD,CAAC,AAtCD,CAAkC,mBAAQ,GAsCzC;IAED,+CAA+C,KAAe,EAAE,SAAoB,EAAE,aAAuB,EAAE,iBAA4B;QAC1I,8BAAW,CAAC,KAAK,EAAE,IAAI,mBAAmB,EAAE,EAAE,SAAS,EAAE,UAAC,GAAG,IAAK,OAAA,IAAI,2BAAY,CAAC,GAAG,EAAE;YACvF,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,IAAI;SACf,CAAC,EAJgE,CAIhE,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED,iDAAiD,KAAe,EAAE,SAAoB,EAAE,aAAuB,EAAE,iBAA4B;QAC5I,8BAAW,CAAC,KAAK,EAAE,IAAI,mBAAmB,EAAE,EAAE,SAAS,EAAE,UAAC,GAAG,IAAK,OAAA,IAAI,2BAAY,CAAC,GAAG,EAAE;YACvF,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,CAAC;YACV,SAAS,EAAE,IAAI;SACf,CAAC,EAJgE,CAIhE,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,gCAAgC,EAAE;QAEvC,kBAAkB;QAElB,IAAI,CAAC,0CAA0C,EAAE;YAChD,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACxC,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kCAAkC,EAAE;YACxC,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,EAAE;YACpB,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gCAAgC,EAAE;YACtC,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;YAEF,gBAAgB,CACf;gBACC,iBAAiB;gBACjB,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,EAAE;YAC7B,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,6BAA6B,EAAE;YACnC,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yBAAyB,EAAE;YAC/B,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,OAAO;aACP,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,yEAAyE,EAAE;YAC/E,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,OAAO;aACP,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;YAEF,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,IAAI;gBACJ,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,oBAAoB;QAEpB,IAAI,CAAC,oCAAoC,EAAE;YAC1C,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oCAAoC,EAAE;YAC1C,gBAAgB,CACf;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,sBAAsB;gBACtB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,EAAE;YACtB,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE;YACjC,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,kBAAkB;gBAClB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,EAAE;YACjC,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,kBAAkB;gBAClB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mCAAmC,EAAE;YACzC,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,EAAE;YAClC,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,kBAAkB;gBAClB,YAAY;gBACZ,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;YAEF,kBAAkB,CACjB;gBACC,eAAe;gBACf,kBAAkB;gBAClB,YAAY;gBACZ,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,gBAAgB;gBAChB,YAAY;gBACZ,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;YAEF,gBAAgB,CACf;gBACC,eAAe;gBACf,gBAAgB;gBAChB,YAAY;gBACZ,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,iBAAiB;gBACjB,kBAAkB;gBAClB,cAAc;gBACd,EAAE;gBACF,OAAO;aACP,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mDAAmD,EAAE;YACzD,kBAAkB,CACjB;gBACC,eAAe;gBACf,oBAAoB;gBACpB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzB;gBACC,eAAe;gBACf,kBAAkB;gBAClB,gBAAgB;gBAChB,EAAE;gBACF,KAAK;aACL,EACD,IAAI,qBAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iDAAiD,EAAE;YACvD,qCAAqC,CACpC;gBACC,EAAE;gBACF,KAAK;gBACL,kBAAkB;gBAClB,KAAK;gBACL,qBAAqB;aACrB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACvB;gBACC,EAAE;gBACF,OAAO;gBACP,oBAAoB;gBACpB,OAAO;gBACP,uBAAuB;aACvB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACvB,CAAC;YAEF,uCAAuC,CACtC;gBACC,EAAE;gBACF,KAAK;gBACL,kBAAkB;gBAClB,KAAK;gBACL,qBAAqB;aACrB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACvB;gBACC,EAAE;gBACF,KAAK;gBACL,kBAAkB;gBAClB,KAAK;gBACL,qBAAqB;aACrB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACvB,CAAC;YAEF,uCAAuC,CACtC;gBACC,IAAI;gBACJ,OAAO;gBACP,oBAAoB;gBACpB,OAAO;gBACP,uBAAuB;aACvB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACvB;gBACC,EAAE;gBACF,KAAK;gBACL,kBAAkB;gBAClB,KAAK;gBACL,qBAAqB;aACrB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACvB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE;YACxD,qCAAqC,CACpC;gBACC,EAAE;gBACF,KAAK;gBACL,SAAS;gBACT,IAAI;gBACJ,mBAAmB;gBACnB,KAAK;gBACL,cAAc;aACd,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,EACvB;gBACC,EAAE;gBACF,OAAO;gBACP,WAAW;gBACX,MAAM;gBACN,qBAAqB;gBACrB,OAAO;gBACP,gBAAgB;aAChB,EACD,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CACvB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kDAAkD,EAAE;YAExD,IAAI,SAAS,GAAG,UAAC,GAAU,EAAE,GAAU;gBACtC,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC9B,CAAC,IAAI,GAAG,CAAC;gBACV,CAAC;gBACD,MAAM,CAAC,CAAC,CAAC;YACV,CAAC,CAAC;YAEF,IAAI,WAAW,GAAG,UAAC,OAAe,EAAE,SAAiB,EAAE,QAAe,EAAE,eAAsB;gBAC7F,IAAI,cAAc,GAAG,SAAS,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;gBAC3D,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzB,qBAAqB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,qCAAkB,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnI,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,qBAAqB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;gBACnE,CAAC;YACF,CAAC,CAAC;YAEF,IAAI,UAAU,GAAG,UAAC,OAAe,EAAE,SAAiB,EAAE,QAAe,EAAE,eAAsB;gBAC5F,IAAI,cAAc,GAAG,SAAS,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;gBAC3D,mBAAmB,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC,EAAE,CAAC,qCAAkB,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACjI,CAAC,CAAC;YAEF,IAAI,eAAe,GAAG,UAAC,OAAe,EAAE,QAAe,EAAE,iBAAwB,EAAE,gBAAuB;gBACzG,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC;oBAClC,WAAW,IAAI,GAAG,CAAC;gBACpB,CAAC;gBAED,WAAW,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC;gBAC/D,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC;gBAExD,UAAU,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;gBAC7D,UAAU,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,gBAAgB,CAAC,CAAC;YACvD,CAAC,CAAC;YAEF,qBAAqB;YACrB,SAAS;YACT,eAAe,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAE7B,SAAS;YACT,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,eAAe,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9B,eAAe,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,eAAe,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEjC,SAAS;YACT,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,eAAe,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACvC,eAAe,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACnC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,eAAe,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,eAAe,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACtC,eAAe,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAErC,SAAS;YACT,eAAe,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvC,CAAC,CAAC,CAAC;QAEH,+BAA+B,OAAc,EAAE,SAAgB,EAAE,IAAa,EAAE,QAAyC;YACxH,MAAM,CAAC,iCAAe,CAAC,IAAI,EAAE,UAAC,KAAK;gBAClC,IAAI,EAAE,GAAG,IAAI,2BAAY,CAAC,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC,CAAC,CAAC,EAAE;oBAC7D,SAAS,EAAE,IAAI;oBACf,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE,SAAS;iBACpB,CAAC,CAAC;gBACH,IAAI,MAAM,GAAG,mCAAgB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,6BAA6B,OAAc,EAAE,SAAgB,EAAE,IAAa,EAAE,QAAyC;YACtH,MAAM,CAAC,iCAAe,CAAC,IAAI,EAAE,UAAC,KAAK;gBAClC,IAAI,EAAE,GAAG,IAAI,2BAAY,CAAC,IAAI,qBAAS,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,MAAM,GAAC,CAAC,EAAC,CAAC,CAAC,EAAE;oBAC7D,SAAS,EAAE,KAAK;oBAChB,OAAO,EAAE,OAAO;oBAChB,SAAS,EAAE,SAAS;iBACpB,CAAC,CAAC;gBACH,IAAI,MAAM,GAAG,mCAAgB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACzC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC,CAAC,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport {ShiftCommand} from 'vs/editor/common/commands/shiftCommand';\nimport {Selection} from 'vs/editor/common/core/selection';\nimport {IIdentifiedSingleEditOperation} from 'vs/editor/common/editorCommon';\nimport {IRichEditSupport, IndentAction} from 'vs/editor/common/modes';\nimport {RichEditSupport} from 'vs/editor/common/modes/supports/richEditSupport';\nimport {createSingleEditOp, getEditOperation, testCommand} from 'vs/editor/test/common/commands/commandTestUtils';\nimport {withEditorModel} from 'vs/editor/test/common/editorTestUtils';\nimport {MockMode} from 'vs/editor/test/common/mocks/mockMode';\n\nfunction testShiftCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (sel) => new ShiftCommand(sel, {\n\t\tisUnshift: false,\n\t\ttabSize: 4,\n\t\toneIndent: '\\t'\n\t}), expectedLines, expectedSelection);\n}\n\nfunction testUnshiftCommand(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, null, selection, (sel) => new ShiftCommand(sel, {\n\t\tisUnshift: true,\n\t\ttabSize: 4,\n\t\toneIndent: '\\t'\n\t}), expectedLines, expectedSelection);\n}\n\nclass DocBlockCommentMode extends MockMode {\n\n\tpublic richEditSupport: IRichEditSupport;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.richEditSupport = new RichEditSupport(this.getId(), null, {\n\t\t\tbrackets: [\n\t\t\t\t['(', ')'],\n\t\t\t\t['{', '}'],\n\t\t\t\t['[', ']']\n\t\t\t],\n\n\t\t\tonEnterRules: [\n\t\t\t\t{\n\t\t\t\t\t// e.g. /** | */\n\t\t\t\t\tbeforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n\t\t\t\t\tafterText: /^\\s*\\*\\/$/,\n\t\t\t\t\taction: { indentAction: IndentAction.IndentOutdent, appendText: ' * ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// e.g. /** ...|\n\t\t\t\t\tbeforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, appendText: ' * ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// e.g.  * ...|\n\t\t\t\t\tbeforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, appendText: '* ' }\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t// e.g.  */|\n\t\t\t\t\tbeforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\n\t\t\t\t\taction: { indentAction: IndentAction.None, removeText: 1 }\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}\n}\n\nfunction testShiftCommandInDocBlockCommentMode(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, new DocBlockCommentMode(), selection, (sel) => new ShiftCommand(sel, {\n\t\tisUnshift: false,\n\t\ttabSize: 4,\n\t\toneIndent: '\\t'\n\t}), expectedLines, expectedSelection);\n}\n\nfunction testUnshiftCommandInDocBlockCommentMode(lines: string[], selection: Selection, expectedLines: string[], expectedSelection: Selection): void {\n\ttestCommand(lines, new DocBlockCommentMode(), selection, (sel) => new ShiftCommand(sel, {\n\t\tisUnshift: true,\n\t\ttabSize: 4,\n\t\toneIndent: '\\t'\n\t}), expectedLines, expectedSelection);\n}\n\nsuite('Editor Commands - ShiftCommand', () => {\n\n\t// --------- shift\n\n\ttest('Bug 9503: Shifting without any selection', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 1, 1),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 1, 2)\n\t\t);\n\t});\n\n\ttest('shift on single line selection 1', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 1, 1),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 4, 1, 2)\n\t\t);\n\t});\n\n\ttest('shift on single line selection 2', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 1, 3),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 1, 4)\n\t\t);\n\t});\n\n\ttest('simple shift', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 2, 1),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 2, 1)\n\t\t);\n\t});\n\n\ttest('shifting on two separate lines', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 2, 1),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 2, 1)\n\t\t);\n\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 3, 1),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 3, 1)\n\t\t);\n\t});\n\n\ttest('shifting on two lines', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 2, 2),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 3, 2, 2)\n\t\t);\n\t});\n\n\ttest('shifting on two lines again', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 2, 1, 2),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 2, 1, 3)\n\t\t);\n\t});\n\n\ttest('shifting at end of file', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(4, 1, 5, 2),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'\\t123'\n\t\t\t],\n\t\t\tnew Selection(4, 1, 5, 3)\n\t\t);\n\t});\n\n\ttest('issue #1120 TAB should not indent empty lines in a multi-line selection', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 2),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'\\t\\tThird Line',\n\t\t\t\t'',\n\t\t\t\t'\\t123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 5, 3)\n\t\t);\n\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(4, 1, 5, 1),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'\\t',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(4, 2, 5, 1)\n\t\t);\n\t});\n\n\t// --------- unshift\n\n\ttest('unshift on single line selection 1', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 1),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 1)\n\t\t);\n\t});\n\n\ttest('unshift on single line selection 2', () => {\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 2, 3),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 2, 3)\n\t\t);\n\t});\n\n\ttest('simple unshift', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 2, 1),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 2, 1)\n\t\t);\n\t});\n\n\ttest('unshifting on two lines 1', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 2, 2),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 2, 2)\n\t\t);\n\t});\n\n\ttest('unshifting on two lines 2', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 3, 2, 1),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 2, 2, 1)\n\t\t);\n\t});\n\n\ttest('unshifting at the end of the file', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(4, 1, 5, 2),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(4, 1, 5, 2)\n\t\t);\n\t});\n\n\ttest('unshift many times + shift', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 4),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 4)\n\t\t);\n\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 4),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'My Second Line',\n\t\t\t\t'Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 4)\n\t\t);\n\n\t\ttestShiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'My Second Line',\n\t\t\t\t'Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(1, 1, 5, 4),\n\t\t\t[\n\t\t\t\t'\\tMy First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'\\tThird Line',\n\t\t\t\t'',\n\t\t\t\t'\\t123'\n\t\t\t],\n\t\t\tnew Selection(1, 2, 5, 5)\n\t\t);\n\t});\n\n\ttest('Bug 9119: Unshift from first column doesn\\'t work', () => {\n\t\ttestUnshiftCommand(\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\t\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 2, 1),\n\t\t\t[\n\t\t\t\t'My First Line',\n\t\t\t\t'\\tMy Second Line',\n\t\t\t\t'    Third Line',\n\t\t\t\t'',\n\t\t\t\t'123'\n\t\t\t],\n\t\t\tnew Selection(2, 1, 2, 1)\n\t\t);\n\t});\n\n\ttest('issue #348: indenting around doc block comments', () => {\n\t\ttestShiftCommandInDocBlockCommentMode(\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'/**',\n\t\t\t\t' * a doc comment',\n\t\t\t\t' */',\n\t\t\t\t'function hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,20),\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'\\t/**',\n\t\t\t\t'\\t * a doc comment',\n\t\t\t\t'\\t */',\n\t\t\t\t'\\tfunction hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,21)\n\t\t);\n\n\t\ttestUnshiftCommandInDocBlockCommentMode(\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'/**',\n\t\t\t\t' * a doc comment',\n\t\t\t\t' */',\n\t\t\t\t'function hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,20),\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'/**',\n\t\t\t\t' * a doc comment',\n\t\t\t\t' */',\n\t\t\t\t'function hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,20)\n\t\t);\n\n\t\ttestUnshiftCommandInDocBlockCommentMode(\n\t\t\t[\n\t\t\t\t'\\t',\n\t\t\t\t'\\t/**',\n\t\t\t\t'\\t * a doc comment',\n\t\t\t\t'\\t */',\n\t\t\t\t'\\tfunction hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,21),\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'/**',\n\t\t\t\t' * a doc comment',\n\t\t\t\t' */',\n\t\t\t\t'function hello() {}'\n\t\t\t],\n\t\t\tnew Selection(1,1,5,20)\n\t\t);\n\t});\n\n\ttest('issue #1609: Wrong indentation of block comments', () => {\n\t\ttestShiftCommandInDocBlockCommentMode(\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'/**',\n\t\t\t\t' * test',\n\t\t\t\t' *',\n\t\t\t\t' * @type {number}',\n\t\t\t\t' */',\n\t\t\t\t'var foo = 0;'\n\t\t\t],\n\t\t\tnew Selection(1,1,7,13),\n\t\t\t[\n\t\t\t\t'',\n\t\t\t\t'\\t/**',\n\t\t\t\t'\\t * test',\n\t\t\t\t'\\t *',\n\t\t\t\t'\\t * @type {number}',\n\t\t\t\t'\\t */',\n\t\t\t\t'\\tvar foo = 0;'\n\t\t\t],\n\t\t\tnew Selection(1,1,7,14)\n\t\t);\n\t});\n\n\ttest('bug #16815:Shift+Tab doesn\\'t go back to tabstop', () => {\n\n\t\tvar repeatStr = (str:string, cnt:number): string => {\n\t\t\tvar r = '';\n\t\t\tfor (var i = 0; i < cnt; i++) {\n\t\t\t\tr += str;\n\t\t\t}\n\t\t\treturn r;\n\t\t};\n\n\t\tvar testOutdent = (tabSize: number, oneIndent: string, lineText:string, expectedIndents:number) => {\n\t\t\tvar expectedIndent = repeatStr(oneIndent, expectedIndents);\n\t\t\tif (lineText.length > 0) {\n\t\t\t\t_assertUnshiftCommand(tabSize, oneIndent, [lineText + 'aaa'], [createSingleEditOp(expectedIndent, 1, 1, 1, lineText.length + 1)]);\n\t\t\t} else {\n\t\t\t\t_assertUnshiftCommand(tabSize, oneIndent, [lineText + 'aaa'], []);\n\t\t\t}\n\t\t};\n\n\t\tvar testIndent = (tabSize: number, oneIndent: string, lineText:string, expectedIndents:number) => {\n\t\t\tvar expectedIndent = repeatStr(oneIndent, expectedIndents);\n\t\t\t_assertShiftCommand(tabSize, oneIndent, [lineText + 'aaa'], [createSingleEditOp(expectedIndent, 1, 1, 1, lineText.length + 1)]);\n\t\t};\n\n\t\tvar testIndentation = (tabSize: number, lineText:string, expectedOnOutdent:number, expectedOnIndent:number) => {\n\t\t\tvar spaceIndent = '';\n\t\t\tfor (var i = 0; i < tabSize; i++) {\n\t\t\t\tspaceIndent += ' ';\n\t\t\t}\n\n\t\t\ttestOutdent(tabSize, spaceIndent, lineText, expectedOnOutdent);\n\t\t\ttestOutdent(tabSize, '\\t', lineText, expectedOnOutdent);\n\n\t\t\ttestIndent(tabSize, spaceIndent, lineText, expectedOnIndent);\n\t\t\ttestIndent(tabSize, '\\t', lineText, expectedOnIndent);\n\t\t};\n\n\t\t// insertSpaces: true\n\t\t// 0 => 0\n\t\ttestIndentation(4, '', 0, 1);\n\n\t\t// 1 => 0\n\t\ttestIndentation(4, '\\t', 0, 2);\n\t\ttestIndentation(4, ' ', 0, 1);\n\t\ttestIndentation(4, ' \\t', 0, 2);\n\t\ttestIndentation(4, '  ', 0, 1);\n\t\ttestIndentation(4, '  \\t', 0, 2);\n\t\ttestIndentation(4, '   ', 0, 1);\n\t\ttestIndentation(4, '   \\t', 0, 2);\n\t\ttestIndentation(4, '    ', 0, 2);\n\n\t\t// 2 => 1\n\t\ttestIndentation(4, '\\t\\t', 1, 3);\n\t\ttestIndentation(4, '\\t ', 1, 2);\n\t\ttestIndentation(4, '\\t \\t', 1, 3);\n\t\ttestIndentation(4, '\\t  ', 1, 2);\n\t\ttestIndentation(4, '\\t  \\t', 1, 3);\n\t\ttestIndentation(4, '\\t   ', 1, 2);\n\t\ttestIndentation(4, '\\t   \\t', 1, 3);\n\t\ttestIndentation(4, '\\t    ', 1, 3);\n\t\ttestIndentation(4, ' \\t\\t', 1, 3);\n\t\ttestIndentation(4, ' \\t ', 1, 2);\n\t\ttestIndentation(4, ' \\t \\t', 1, 3);\n\t\ttestIndentation(4, ' \\t  ', 1, 2);\n\t\ttestIndentation(4, ' \\t  \\t', 1, 3);\n\t\ttestIndentation(4, ' \\t   ', 1, 2);\n\t\ttestIndentation(4, ' \\t   \\t', 1, 3);\n\t\ttestIndentation(4, ' \\t    ', 1, 3);\n\t\ttestIndentation(4, '  \\t\\t', 1, 3);\n\t\ttestIndentation(4, '  \\t ', 1, 2);\n\t\ttestIndentation(4, '  \\t \\t', 1, 3);\n\t\ttestIndentation(4, '  \\t  ', 1, 2);\n\t\ttestIndentation(4, '  \\t  \\t', 1, 3);\n\t\ttestIndentation(4, '  \\t   ', 1, 2);\n\t\ttestIndentation(4, '  \\t   \\t', 1, 3);\n\t\ttestIndentation(4, '  \\t    ', 1, 3);\n\t\ttestIndentation(4, '   \\t\\t', 1, 3);\n\t\ttestIndentation(4, '   \\t ', 1, 2);\n\t\ttestIndentation(4, '   \\t \\t', 1, 3);\n\t\ttestIndentation(4, '   \\t  ', 1, 2);\n\t\ttestIndentation(4, '   \\t  \\t', 1, 3);\n\t\ttestIndentation(4, '   \\t   ', 1, 2);\n\t\ttestIndentation(4, '   \\t   \\t', 1, 3);\n\t\ttestIndentation(4, '   \\t    ', 1, 3);\n\t\ttestIndentation(4, '    \\t', 1, 3);\n\t\ttestIndentation(4, '     ', 1, 2);\n\t\ttestIndentation(4, '     \\t', 1, 3);\n\t\ttestIndentation(4, '      ', 1, 2);\n\t\ttestIndentation(4, '      \\t', 1, 3);\n\t\ttestIndentation(4, '       ', 1, 2);\n\t\ttestIndentation(4, '       \\t', 1, 3);\n\t\ttestIndentation(4, '        ', 1, 3);\n\n\t\t// 3 => 2\n\t\ttestIndentation(4, '         ', 2, 3);\n\n\t});\n\n\tfunction _assertUnshiftCommand(tabSize:number, oneIndent:string, text:string[], expected:IIdentifiedSingleEditOperation[]): void {\n\t\treturn withEditorModel(text, (model) => {\n\t\t\tvar op = new ShiftCommand(new Selection(1,1,text.length+1,1), {\n\t\t\t\tisUnshift: true,\n\t\t\t\ttabSize: tabSize,\n\t\t\t\toneIndent: oneIndent\n\t\t\t});\n\t\t\tvar actual = getEditOperation(model, op);\n\t\t\tassert.deepEqual(actual, expected);\n\t\t});\n\t}\n\n\tfunction _assertShiftCommand(tabSize:number, oneIndent:string, text:string[], expected:IIdentifiedSingleEditOperation[]): void {\n\t\treturn withEditorModel(text, (model) => {\n\t\t\tvar op = new ShiftCommand(new Selection(1,1,text.length+1,1), {\n\t\t\t\tisUnshift: false,\n\t\t\t\ttabSize: tabSize,\n\t\t\t\toneIndent: oneIndent\n\t\t\t});\n\t\t\tvar actual = getEditOperation(model, op);\n\t\t\tassert.deepEqual(actual, expected);\n\t\t});\n\t}\n});\n"]}