{"version":3,"file":"vs/editor/test/common/mocks/mockExtensionService.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/editor/test/common/mocks/mockExtensionService.ts"],"names":[],"mappings":";;;;;;IAAA;;;oGAGgG;IAChG,YAAY,CAAC;IAKb;QAA0C,wCAA4C;QACrF;YACC,kBAAM,IAAI,CAAC,CAAC;QACb,CAAC;QAES,2CAAY,GAAtB,UAAuB,QAAkB,EAAE,GAAW;YACrD,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,KAAK,kBAAQ,CAAC,KAAK;oBAClB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,KAAK,CAAC;gBACP,KAAK,kBAAQ,CAAC,OAAO;oBACpB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAK,CAAC;gBACP,KAAK,kBAAQ,CAAC,IAAI;oBACjB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAK,CAAC;gBACP;oBACC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACF,CAAC;QAES,qDAAsB,GAAhC;YACC,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QAES,uDAAwB,GAAlC,UAAmC,oBAAoB;YACtD,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACpC,CAAC;QACF,2BAAC;IAAD,CAAC,AA5BD,CAA0C,mDAAwB,GA4BjE;IA5BY,4BAAoB,uBA4BhC,CAAA","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Severity from 'vs/base/common/severity';\nimport {AbstractExtensionService, ActivatedExtension} from 'vs/platform/extensions/common/abstractExtensionService';\n\nexport class MockExtensionService extends AbstractExtensionService<ActivatedExtension> {\n\tconstructor() {\n\t\tsuper(true);\n\t}\n\n\tprotected _showMessage(severity: Severity, msg: string): void {\n\t\tswitch (severity) {\n\t\t\tcase Severity.Error:\n\t\t\t\tconsole.error(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Warning:\n\t\t\t\tconsole.warn(msg);\n\t\t\t\tbreak;\n\t\t\tcase Severity.Info:\n\t\t\t\tconsole.info(msg);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\tprotected _createFailedExtension(): any {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprotected _actualActivateExtension(extensionDescription): any {\n\t\tthrow new Error('not implemented');\n\t}\n}\n"]}