{"version":3,"file":"service.cp.js","sourceRoot":"","sources":["../../../../src/vs/base/node/service.cp.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport cp = require('child_process');\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { Promise} from 'vs/base/common/winjs.base';\nimport { Delayer } from 'vs/base/common/async';\nimport { clone, assign } from 'vs/base/common/objects';\nimport { IServiceCtor, Server as IPCServer, Client as IPCClient, IServiceMap } from 'vs/base/common/service';\n\nexport class Server extends IPCServer {\n\tconstructor() {\n\t\tsuper({\n\t\t\tsend: r => { try { process.send(r); } catch (e) { /* not much to do */ } },\n\t\t\tonMessage: cb => process.on('message', cb)\n\t\t});\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IServiceOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the service process. The next request after killing will start it again.\n\t */\n\ttimeout?:number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?:string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the service.\n\t */\n\tenv?:any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?:number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?:number;\n}\n\nexport class Client implements IDisposable {\n\n\tprivate disposeDelayer: Delayer<void>;\n\tprivate activeRequests: Promise[];\n\tprivate child: cp.ChildProcess;\n\tprivate _client: IPCClient;\n\tprivate services: IServiceMap;\n\n\tconstructor(private modulePath: string, private options: IServiceOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : Number.MAX_VALUE;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.activeRequests = [];\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t\tthis.services = Object.create(null);\n\t}\n\n\tgetService<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>): TService {\n\t\treturn <TService>Object.keys(serviceCtor.prototype)\n\t\t\t.filter(key => key !== 'constructor')\n\t\t\t.reduce((service, key) => assign(service, { [key]: (...args) => this.request(serviceName, serviceCtor, key, ...args) }), {});\n\t}\n\n\tprotected request<TService>(serviceName: string, serviceCtor: IServiceCtor<TService>, name: string, ...args: any[]): Promise {\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet service = this.services[serviceName];\n\n\t\tif (!service) {\n\t\t\tservice = this.services[serviceName] = this.client.getService(serviceName, serviceCtor);\n\t\t}\n\n\t\tconst request: Promise = service[name].apply(service, args);\n\n\t\t// Progress doesn't propagate across 'then', we need to create a promise wrapper\n\t\tconst result = new Promise((c, e, p) => {\n\t\t\trequest.then(c, e, p).done(() => {\n\t\t\t\tthis.activeRequests.splice(this.activeRequests.indexOf(result), 1);\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t});\n\t\t}, () => request.cancel());\n\n\t\tthis.activeRequests.push(result);\n\t\treturn result;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tlet forkOpts:any = undefined;\n\n\t\t\tif (this.options) {\n\t\t\t\tforkOpts = Object.create(null);\n\n\t\t\t\tif (this.options.env) {\n\t\t\t\t\tforkOpts.env = assign(clone(process.env), this.options.env);\n\t\t\t\t}\n\n\t\t\t\tif (typeof this.options.debug === 'number') {\n\t\t\t\t\tforkOpts.execArgv = ['--nolazy', '--debug=' + this.options.debug];\n\t\t\t\t}\n\n\t\t\t\tif (typeof this.options.debugBrk === 'number') {\n\t\t\t\t\tforkOpts.execArgv = ['--nolazy', '--debug-brk=' + this.options.debugBrk];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.child = cp.fork(this.modulePath, args, forkOpts);\n\t\t\tthis._client = new IPCClient({\n\t\t\t\tsend: r => this.child && this.child.connected && this.child.send(r),\n\t\t\t\tonMessage: cb => {\n\t\t\t\t\tthis.child.on('message', (msg) => {\n\n\t\t\t\t\t\t// Handle console logs specially\n\t\t\t\t\t\tif (msg && msg.type === '__$console') {\n\t\t\t\t\t\t\tlet args = ['%c[Service Library: ' + this.options.serverName + ']', 'color: darkgreen'];\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst parsed = JSON.parse(msg.arguments);\n\t\t\t\t\t\t\t\targs = args.concat(Object.getOwnPropertyNames(parsed).map(o => parsed[o]));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\targs.push(msg.arguments);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconsole[msg.severity].apply(console, args);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Anything else goes to the outside\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcb(msg);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('Service \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit', onExit);\n\n\t\t\t\tif (this.activeRequests) {\n\t\t\t\t\tthis.activeRequests.forEach(req => req.cancel());\n\t\t\t\t\tthis.activeRequests = [];\n\t\t\t\t}\n\n\t\t\t\tif (code && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('Service \"' + this.options.serverName + '\" crashed with exit code ' + code);\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t\tthis.disposeClient();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tthis.child.kill();\n\t\t\tthis.child = null;\n\t\t\tthis._client = null;\n\t\t\tthis.services = Object.create(null);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.disposeDelayer.cancel();\n\t\tthis.disposeDelayer = null;\n\t\tthis.disposeClient();\n\t\tthis.activeRequests = null;\n\t}\n}"]}