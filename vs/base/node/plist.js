define(["require","exports","sax"],function(e,a,r){/*---------------------------------------------------------------------------------------------
     *  Copyright (c) Microsoft Corporation. All rights reserved.
     *  Licensed under the MIT License. See License.txt in the project root for license information.
     *--------------------------------------------------------------------------------------------*/
"use strict";function s(e){var a=[],s=null,n=null,t=null,i=r.parser(!1,{lowercase:!0});return i.onerror=function(e){a.push(e.message)},i.ontext=function(e){t=e},i.onopentag=function(e){switch(e.name){case"dict":s={parent:s,value:{}};break;case"array":s={parent:s,value:[]};break;case"key":s&&(s.lastKey=null)}t=""},i.onclosetag=function(e){var r;switch(e){case"key":return!s||Array.isArray(s.value)?void a.push("key can only be used inside an open dict element"):void(s.lastKey=t);case"dict":case"array":if(!s)return void a.push(e+" closing tag found, without opening tag");r=s.value,s=s.parent;break;case"string":case"data":r=t;break;case"date":r=new Date(t);break;case"integer":if(r=parseInt(t),isNaN(r))return void a.push(t+" is not a integer");break;case"real":if(r=parseFloat(t),isNaN(r))return void a.push(t+" is not a float");break;case"true":r=!0;break;case"false":r=!1;break;case"plist":return;default:return void a.push("Invalid tag name: "+e)}s?Array.isArray(s.value)?s.value.push(r):s.lastKey?s.value[s.lastKey]=r:a.push("Dictionary key missing for value "+r):n=r},i.write(e),{errors:a,value:n}}a.parse=s});