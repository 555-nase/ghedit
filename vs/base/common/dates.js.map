{"version":3,"sources":["vs/base/common/dates.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;IAIhG,eAAsB,IAAU;QAC/B,IAAI,OAAO,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;QAC7D,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAAU,CAAC,CAAC;QACzD,CAAC;QAED,IAAI,OAAO,GAAG,OAAO,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAqB,EAAE,IAAc,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAsB,EAAE,IAAiB,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACvK,CAAC;QAED,IAAI,KAAK,GAAG,OAAO,GAAG,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAAY,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAoB,EAAE,IAAe,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3J,CAAC;QAED,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAqB,EAAE,IAAW,CAAC,CAAC;QACzD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAAY,CAAC,CAAC;QACrD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAiB,EAAE,IAAa,CAAC,CAAC;QACvD,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAmB,EAAE,IAAc,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E,CAAC;IA9Be,aAAK,QA8BpB,CAAA","file":"vs/base/common/dates.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport nls = require('vs/nls');\n\nexport function since(date: Date): string {\n\tvar seconds = (new Date().getTime() - date.getTime()) / 1000;\n\tif (seconds < 60) {\n\t\treturn nls.localize('diff.seconds.verbose', \"just now\");\n\t}\n\n\tvar minutes = seconds / 60;\n\tif (minutes < 60) {\n\t\treturn Math.floor(minutes) === 1 ? nls.localize('diff.minute.verbose', \"1 minute ago\") : nls.localize('diff.minutes.verbose', \"{0} minutes ago\", Math.floor(minutes));\n\t}\n\n\tvar hours = minutes / 60;\n\tif (hours < 24) {\n\t\treturn Math.floor(hours) === 1 ? nls.localize('diff.hour.verbose', \"1 hour ago\") : nls.localize('diff.hours.verbose', \"{0} hours ago\", Math.floor(hours));\n\t}\n\n\tvar days = hours / 24;\n\tif (Math.floor(days) === 1) {\n\t\treturn nls.localize('diff.days.yesterday', \"yesterday\");\n\t}\n\n\tif (days > 6 && days < 8) {\n\t\treturn nls.localize('diff.days.week', \"a week ago\");\n\t}\n\n\tif (days > 30 && days < 40) {\n\t\treturn nls.localize('diff.days.month', \"a month ago\");\n\t}\n\n\treturn nls.localize('diff.days.verbose', \"{0} days ago\", Math.floor(days));\n}"]}