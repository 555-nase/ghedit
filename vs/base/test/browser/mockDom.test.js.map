{"version":3,"file":"vs/base/test/browser/mockDom.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/browser/mockDom.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport MockDom = require('vs/base/test/browser/mockDom');\n\nsuite('MockDom', () => {\n\ttest('Create Element', () => {\n\t\tvar doc = new MockDom.MockDocument();\n\t\tvar div = doc.createElement('div');\n\t\tdiv.textContent = 'test';\n\t\tassert.strictEqual(div.textContent, 'test');\n\t\tassert.strictEqual(div.tagName, 'div');\n\t});\n\n\ttest('Events', () => {\n\t\tvar doc = new MockDom.MockDocument();\n\t\tvar div = doc.createElement('div');\n\t\tvar fakeEvent = <Event>{ type: 'test'};\n\t\tvar count = 0;\n\t\tvar callback = function(event:any) {\n\t\t\tassert.strictEqual(event, fakeEvent);\n\t\t\tcount++;\n\t\t};\n\t\tdiv.addEventListener('test', callback);\n\t\tdiv.dispatchEvent(fakeEvent);\n\t\tassert.strictEqual(count, 1);\n\t\tdiv.removeEventListener('test', callback);\n\t\tdiv.dispatchEvent(fakeEvent);\n\t\tassert.strictEqual(count, 1);\n\t});\n\n\ttest('Create elements via innerHTML', () => {\n\t\tvar doc = new MockDom.MockDocument();\n\t\tvar div = doc.createElement('div');\n\t\tdiv.innerHTML = '<div id=\"testId\"><span class=\"testClass\">test</span></div>';\n\t\tassert.strictEqual(div.children.length, 1);\n\t\tassert.strictEqual(div.childNodes[0], div.children[0]);\n\t\tassert.strictEqual(div.children[0], div.firstElementChild);\n\t\tassert.strictEqual(div.firstElementChild, div.firstChild);\n\t\tvar child = <HTMLElement> div.children[0];\n\n\t\tassert.strictEqual(child.id, 'testId');\n\t\tassert.strictEqual(child.getAttribute('id'), 'testId');\n\t\tassert.strictEqual(child.childElementCount, 1);\n\n\t\tvar grandchild = <HTMLElement> child.firstElementChild;\n\t\tassert.strictEqual(grandchild.tagName, 'span');\n\t\tassert.strictEqual(grandchild.className, 'testClass');\n\n\t\tassert.strictEqual(grandchild.textContent, 'test');\n\t});\n\n\ttest('Convert elements to innerHTML', () => {\n\t\tvar doc = new MockDom.MockDocument();\n\t\tvar div = doc.createElement('div');\n\n\t\tvar child = doc.createElement('div');\n\t\tchild.id = 'testId';\n\n\t\tvar grandchild = doc.createElement('span');\n\t\tgrandchild.className = 'testClass';\n\t\tgrandchild.textContent = 'test';\n\t\tchild.appendChild(grandchild);\n\t\tdiv.appendChild(child);\n\n\t\tassert.strictEqual(div.innerHTML, '<div id=\"testId\"><span class=\"testClass\">test</span></div>');\n\t\tassert.strictEqual(div.outerHTML, '<div><div id=\"testId\"><span class=\"testClass\">test</span></div></div>');\n\t});\n});"]}