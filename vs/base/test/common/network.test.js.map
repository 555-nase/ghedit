{"version":3,"file":"vs/base/test/common/network.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/network.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as assert from 'assert';\nimport URI from 'vs/base/common/uri';\n\nfunction assertUrl(raw:string, scheme:string, domain:string, port:string, path:string, queryString:string, fragmentId:string): void {\n\t// check for equivalent behaviour\n\tvar uri = URI.parse(raw);\n\tassert.equal(uri.scheme, scheme);\n\tassert.equal(uri.authority, port ? domain + ':' + port : domain);\n\tassert.equal(uri.path, path);\n\tassert.equal(uri.query, queryString);\n\tassert.equal(uri.fragment, fragmentId);\n}\n\nsuite('Network', () => {\n\ttest('urls', () => {\n\t\tassertUrl('http://www.test.com:8000/this/that/theother.html?query=foo#hash',\n\t\t\t'http', 'www.test.com', '8000', '/this/that/theother.html', 'query=foo', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000/this/that/theother.html?query=foo',\n\t\t\t'http', 'www.test.com', '8000', '/this/that/theother.html', 'query=foo', ''\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000/this/that/theother.html#hash',\n\t\t\t'http', 'www.test.com', '8000', '/this/that/theother.html', '', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000/#hash',\n\t\t\t'http', 'www.test.com', '8000', '/', '', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000#hash',\n\t\t\t'http', 'www.test.com', '8000', '', '', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com/#hash',\n\t\t\t'http', 'www.test.com', '', '/', '', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com#hash',\n\t\t\t'http', 'www.test.com', '', '', '', 'hash'\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000/this/that/theother.html',\n\t\t\t'http', 'www.test.com', '8000', '/this/that/theother.html', '', ''\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000/',\n\t\t\t'http', 'www.test.com', '8000', '/', '', ''\n\t\t);\n\n\t\tassertUrl('http://www.test.com:8000',\n\t\t\t'http', 'www.test.com', '8000', '', '', ''\n\t\t);\n\n\t\tassertUrl('http://www.test.com/',\n\t\t\t'http', 'www.test.com', '', '/', '', ''\n\t\t);\n\n\t\tassertUrl('//www.test.com/',\n\t\t\t'', 'www.test.com', '', '/', '', ''\n\t\t);\n\n\t\tassertUrl('//www.test.com:8000/this/that/theother.html?query=foo#hash',\n\t\t\t'', 'www.test.com', '8000', '/this/that/theother.html', 'query=foo', 'hash'\n\t\t);\n\n\t\tassertUrl('//www.test.com/this/that/theother.html?query=foo#hash',\n\t\t\t'', 'www.test.com', '', '/this/that/theother.html', 'query=foo', 'hash'\n\t\t);\n\n\t\tassertUrl('https://www.test.com:8000/this/that/theother.html?query=foo#hash',\n\t\t\t'https', 'www.test.com', '8000', '/this/that/theother.html', 'query=foo', 'hash'\n\t\t);\n\n\t\tassertUrl('f12://www.test.com:8000/this/that/theother.html?query=foo#hash',\n\t\t\t'f12', 'www.test.com', '8000', '/this/that/theother.html', 'query=foo', 'hash'\n\t\t);\n\n\t\tassertUrl('inmemory://model/0',\n\t\t\t'inmemory', 'model', '', '/0', '', ''\n\t\t);\n\n\t\tassertUrl('file:///c/far/boo/file.cs', 'file', '', '', '/c/far/boo/file.cs', '', '');\n\t});\n});\n"]}