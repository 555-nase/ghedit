{"version":3,"file":"vs/base/test/common/paging.test.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/test/common/paging.test.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport * as assert from 'assert';\nimport { IPager, PagedModel } from 'vs/base/common/paging';\nimport { TPromise } from 'vs/base/common/winjs.base';\n\nsuite('PagedModel', () => {\n\n\tlet model: PagedModel<number>;\n\n\tsetup(() => {\n\t\tconst pager: IPager<number> = {\n\t\t\tfirstPage: [0, 1, 2, 3, 4],\n\t\t\tpageSize: 5,\n\t\t\ttotal: 100,\n\t\t\tgetPage: pageIndex => TPromise.as([0, 1, 2, 3, 4].map(i => i + (pageIndex * 5)))\n\t\t};\n\n\t\tmodel = new PagedModel(pager);\n\t});\n\n\ttest('isResolved', () => {\n\t\tassert(model.isResolved(0));\n\t\tassert(model.isResolved(1));\n\t\tassert(model.isResolved(2));\n\t\tassert(model.isResolved(3));\n\t\tassert(model.isResolved(4));\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\t\tassert(!model.isResolved(99));\n\t});\n\n\ttest('resolve single', () => {\n\t\tassert(!model.isResolved(5));\n\n\t\treturn model.resolve(5).then(() => {\n\t\t\tassert(model.isResolved(5));\n\t\t});\n\t});\n\n\ttest('resolve page', () => {\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\n\t\treturn model.resolve(5).then(() => {\n\t\t\tassert(model.isResolved(5));\n\t\t\tassert(model.isResolved(6));\n\t\t\tassert(model.isResolved(7));\n\t\t\tassert(model.isResolved(8));\n\t\t\tassert(model.isResolved(9));\n\t\t\tassert(!model.isResolved(10));\n\t\t});\n\t});\n\n\ttest('resolve page 2', () => {\n\t\tassert(!model.isResolved(5));\n\t\tassert(!model.isResolved(6));\n\t\tassert(!model.isResolved(7));\n\t\tassert(!model.isResolved(8));\n\t\tassert(!model.isResolved(9));\n\t\tassert(!model.isResolved(10));\n\n\t\treturn model.resolve(10).then(() => {\n\t\t\tassert(!model.isResolved(5));\n\t\t\tassert(!model.isResolved(6));\n\t\t\tassert(!model.isResolved(7));\n\t\t\tassert(!model.isResolved(8));\n\t\t\tassert(!model.isResolved(9));\n\t\t\tassert(model.isResolved(10));\n\t\t});\n\t});\n});"]}