{"version":3,"file":"vs/base/parts/quickopen/common/quickOpenPaging.js","sourceRoot":"file:///Users/darrin/src/vscode/src","sources":["vs/base/parts/quickopen/common/quickOpenPaging.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { PagedModel } from 'vs/base/common/paging';\nimport { Mode, IModel, IDataSource, IRenderer, IRunner, IContext } from 'vs/base/parts/quickopen/common/quickOpen';\n\ninterface IStubTemplateData<T> {\n\tdata: T;\n\tdisposable: IDisposable;\n}\n\nexport interface IStub {\n\tindex: number;\n}\n\nclass PagedRenderer<T> implements IRenderer<IStub> {\n\n\tconstructor(\n\t\tprivate model: PagedModel<T>,\n\t\tprivate renderer: IPagedRenderer<T>\n\t) {}\n\n\tgetHeight(stub: IStub): number {\n\t\treturn this.renderer.getHeight(null);\n\t}\n\n\tgetTemplateId(stub: IStub): string {\n\t\treturn this.renderer.getTemplateId(null);\n\t}\n\n\trenderTemplate(templateId: string, container: HTMLElement): IStubTemplateData<T> {\n\t\tconst data = this.renderer.renderTemplate(templateId, container);\n\t\treturn { data, disposable: { dispose: () => {} } };\n\t}\n\n\trenderElement({ index }: IStub, templateId: string, data: IStubTemplateData<T>): void {\n\t\tdata.disposable.dispose();\n\n\t\tif (this.model.isResolved(index)) {\n\t\t\treturn this.renderer.renderElement(this.model.get(index), templateId, data.data);\n\t\t}\n\n\t\tconst promise = this.model.resolve(index);\n\t\tdata.disposable = { dispose: () => promise.cancel() };\n\n\t\tthis.renderer.renderPlaceholder(index, templateId, data.data);\n\t\tpromise.done(entry => this.renderer.renderElement(entry, templateId, data.data));\n\t}\n\n\tdisposeTemplate(templateId: string, data: IStubTemplateData<T>): void {\n\t\tdata.disposable.dispose();\n\t\tdata.disposable = null;\n\t\tthis.renderer.disposeTemplate(templateId, data.data);\n\t}\n}\n\nclass PagedDataSource<T> implements IDataSource<IStub> {\n\n\tconstructor(\n\t\tprivate model: PagedModel<T>,\n\t\tprivate dataSource: IDataSource<T>\n\t) {}\n\n\tgetId({ index }: IStub): string {\n\t\treturn `paged-${ index }`;\n\t}\n\n\tgetLabel({ index }: IStub): string {\n\t\treturn this.model.isResolved(index) ? this.dataSource.getLabel(this.model.get(index)) : '';\n\t}\n}\n\nclass PagedRunner<T> implements IRunner<IStub> {\n\n\tconstructor(\n\t\tprivate model: PagedModel<T>,\n\t\tprivate runner: IRunner<T>\n\t) {}\n\n\trun({ index }: IStub, mode: Mode, context: IContext): boolean {\n\t\tif (this.model.isResolved(index)) {\n\t\t\treturn this.runner.run(this.model.get(index), mode, context);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\nexport interface IPagedRenderer<T> extends IRenderer<T> {\n\trenderPlaceholder(index: number, templateId: string, data: any): void;\n}\n\nexport class QuickOpenPagedModel<T> implements IModel<any> {\n\n\tpublic dataSource: IDataSource<IStub>;\n\tpublic renderer: IRenderer<IStub>;\n\tpublic runner: IRunner<IStub>;\n\t// public filter: IFilter<IStub>;\n\t// public accessibilityProvider: IAccessiblityProvider<IStub>;\n\tpublic entries: IStub[];\n\n\tconstructor(\n\t\tmodel: PagedModel<T>,\n\t\tdataSource: IDataSource<T>,\n\t\trenderer: IPagedRenderer<T>,\n\t\trunner: IRunner<T>\n\t\t// filter?: IFilter<T>,\n\t\t// accessibilityProvider?: IAccessiblityProvider<T>\n\t) {\n\t\tthis.dataSource = new PagedDataSource(model, dataSource);\n\t\tthis.renderer = new PagedRenderer(model, renderer);\n\t\tthis.runner = new PagedRunner(model, runner);\n\t\t// this.filter = new PagedFilter(model, filter);\n\t\t// this.accessibilityProvider = new PagedAccessibilityProvider(model, accessibilityProvider);\n\n\t\tthis.entries = [];\n\t\tfor (let index = 0, len = model.length; index < len; index++) {\n\t\t\tthis.entries.push({ index });\n\t\t}\n\t}\n}"]}