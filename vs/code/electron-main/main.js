/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
define(["require","exports","vs/nls","original-fs","electron","vs/base/common/objects","vs/base/common/platform","vs/code/electron-main/env","vs/code/electron-main/windows","vs/code/electron-main/lifecycle","vs/code/electron-main/menus","vs/code/electron-main/settings","vs/code/electron-main/update-manager","vs/base/parts/ipc/node/ipc.net","vs/base/common/winjs.base","vs/workbench/parts/git/common/gitIpc","vs/workbench/parts/git/electron-main/askpassService","vs/code/electron-main/sharedProcess","./launch","vs/platform/instantiation/common/instantiation","vs/platform/instantiation/common/instantiationService","vs/platform/instantiation/common/serviceCollection","vs/platform/instantiation/common/descriptors","vs/code/electron-main/log","vs/code/electron-main/storage","child_process","vs/base/common/uuid"],function(e,n,r,o,t,i,s,c,a,l,p,u,v,g,d,S,m,f,w,h,E,_,O,A,I,N,C){"use strict";function L(e,n){var r=e.get(A.ILogService),o=0;"string"==typeof n?r.log(n):(o=1,n.stack?console.error(n.stack):console.error("Startup error: "+n.toString())),process.exit(o)}function T(n,o,i){function g(){o&&(o.dispose(),o=null),R.dispose(),L&&L.release()}var d=n.get(h.IInstantiationService),E=n.get(A.ILogService),_=n.get(c.IEnvironmentService),O=n.get(a.IWindowsService),I=n.get(l.ILifecycleService),N=n.get(v.IUpdateService),C=n.get(u.ISettingsService);process.on("uncaughtException",function(e){if(e){var n={message:e.message,stack:e.stack};O.sendToFocused("vscode:reportError",JSON.stringify(n))}console.error("[uncaught exception in main]: "+e),e.stack&&console.error(e.stack)}),E.log("### VSCode main.js ###"),E.log(_.appRoot,_.cliArgs);var L=null;try{var T=e.__$__nodeRequire("windows-mutex").Mutex;L=new T(_.product.win32MutexName)}catch(y){}var P=d.createInstance(w.LaunchService),D=new w.LaunchChannel(P);o.registerChannel("launch",D);var k=new m.GitAskpassService,M=new S.AskpassChannel(k);o.registerChannel("askpass",M),process.env.VSCODE_PID=""+process.pid,process.env.VSCODE_IPC_HOOK=_.mainIPCHandle,process.env.VSCODE_SHARED_IPC_HOOK=_.sharedIPCHandle;var R=f.spawnSharedProcess({allowOutput:!_.isBuilt||_.cliArgs.verboseLogging,debugPort:_.isBuilt?null:5871});s.isWindows&&_.product.win32AppUserModelId&&t.app.setAppUserModelId(_.product.win32AppUserModelId),global.programStart=_.cliArgs.programStart,t.app.on("will-quit",function(){E.log("App#will-quit: disposing resources"),g()}),t.ipcMain.on("vscode:exit",function(e,n){E.log("IPC#vscode:exit",n),g(),process.exit(n)}),I.ready(),C.loadSync(),O.ready(i);var b=d.createInstance(p.VSCodeMenu);b.ready(),s.isWindows&&_.isBuilt&&t.app.setUserTasks([{title:r.localize("newWindow","New Window"),program:process.execPath,arguments:"-n",iconPath:process.execPath,iconIndex:0}]),N.initialize(),_.cliArgs.openNewWindow&&0===_.cliArgs.pathArguments.length?O.open({cli:_.cliArgs,forceNewWindow:!0,forceEmpty:!0}):!global.macOpenFiles||!global.macOpenFiles.length||_.cliArgs.pathArguments&&_.cliArgs.pathArguments.length?O.open({cli:_.cliArgs,forceNewWindow:_.cliArgs.openNewWindow,diffMode:_.cliArgs.diffMode}):O.open({cli:_.cliArgs,pathsToOpen:global.macOpenFiles})}function y(e){function n(e){return g.serve(i.mainIPCHandle).then(function(e){return s.isMacintosh&&t.app.dock.show(),e},function(c){return"EADDRINUSE"!==c.code?d.TPromise.wrapError(c):(s.isMacintosh&&t.app.dock.hide(),g.connect(i.mainIPCHandle).then(function(e){if(i.isTestingFromCli){var n="Running extension tests from the command line is currently only supported if no other instance of Code is running.";return console.error(n),e.dispose(),d.TPromise.wrapError(n)}r.log("Sending env to running instance...");var o=e.getChannel("launch"),t=new w.LaunchChannelClient(o);return t.start(i.cliArgs,process.env).then(function(){return e.dispose()}).then(function(){return d.TPromise.wrapError("Sent env to running instance. Terminating...")})},function(t){if(!e||s.isWindows||"ECONNREFUSED"!==t.code)return d.TPromise.wrapError(t);try{o.unlinkSync(i.mainIPCHandle)}catch(c){return r.log("Fatal error deleting obsolete instance handle",c),d.TPromise.wrapError(c)}return n(!1)}))})}var r=e.get(A.ILogService),i=e.get(c.IEnvironmentService);return n(!0)}function P(){var e=new d.TPromise(function(e,n){var r=process.env.ATOM_SHELL_INTERNAL_RUN_AS_NODE,o=process.env.ELECTRON_NO_ATTACH_CONSOLE,t=C.generateUuid().replace(/-/g,"").substr(0,12),s=new RegExp(t+"(.*)"+t),c=i.assign({},process.env,{ATOM_SHELL_INTERNAL_RUN_AS_NODE:"1",ELECTRON_NO_ATTACH_CONSOLE:"1"}),a="'"+process.execPath+"' -p '\""+t+'" + JSON.stringify(process.env) + "'+t+"\"'",l=N.spawn(process.env.SHELL,["-ilc",a],{detached:!0,stdio:["ignore","pipe",process.stderr],env:c}),p=[];l.on("error",function(){return e({})}),l.stdout.on("data",function(e){return p.push(e)}),l.on("close",function(t,i){if(0!==t)return n(new Error("Failed to get environment"));var c=Buffer.concat(p).toString("utf8"),a=s.exec(c),l=a?a[1]:"{}";try{var u=JSON.parse(l);r?u.ATOM_SHELL_INTERNAL_RUN_AS_NODE=r:delete u.ATOM_SHELL_INTERNAL_RUN_AS_NODE,o?u.ELECTRON_NO_ATTACH_CONSOLE=o:delete u.ELECTRON_NO_ATTACH_CONSOLE,e(u)}catch(v){n(v)}})});return e.then(null,function(){return{}})}function D(){return s.isWindows?d.TPromise.as({}):P()}var k=new _.ServiceCollection;k.set(c.IEnvironmentService,new O.SyncDescriptor(c.EnvService)),k.set(A.ILogService,new O.SyncDescriptor(A.MainLogService)),k.set(a.IWindowsService,new O.SyncDescriptor(a.WindowsManager)),k.set(l.ILifecycleService,new O.SyncDescriptor(l.LifecycleService)),k.set(I.IStorageService,new O.SyncDescriptor(I.StorageService)),k.set(v.IUpdateService,new O.SyncDescriptor(v.UpdateManager)),k.set(u.ISettingsService,new O.SyncDescriptor(u.SettingsManager));var M=new E.InstantiationService(k);D().then(function(e){return"1"!==process.env.VSCODE_CLI&&i.assign(process.env,e),e.VSCODE_NLS_CONFIG=process.env.VSCODE_NLS_CONFIG,M.invokeFunction(function(e){return e.get(c.IEnvironmentService).createPaths()}).then(function(){return M.invokeFunction(y)}).then(function(n){return M.invokeFunction(T,n,e)})}).done(null,function(e){return M.invokeFunction(L,e)})});